import { Contract, BigNumberish } from 'ethers';
export interface MetaTransaction {
    to: string;
    value: BigNumberish;
    data: string;
    operation: number;
}
export interface WalletTransaction extends MetaTransaction {
    targetTxGas: string | number;
    baseGas: string | number;
    gasPrice: string | number;
    gasToken: string;
    refundReceiver: string;
    nonce: number;
}
export declare const buildContractCall: (contract: Contract, method: string, params: any[], nonce: number, delegateCall?: boolean, overrides?: Partial<WalletTransaction>) => WalletTransaction;
export declare const buildSmartAccountTransaction: (template: {
    to: string;
    value?: BigNumberish;
    data?: string;
    operation?: number;
    targetTxGas?: number | string;
    baseGas?: number | string;
    gasPrice?: number | string;
    gasToken?: string;
    refundReceiver?: string;
    nonce: number;
}) => WalletTransaction;
export declare const encodeMultiSend: (txs: MetaTransaction[]) => string;
export declare const buildMultiSendSmartAccountTx: (multiSend: Contract, txs: MetaTransaction[], nonce: number, overrides?: Partial<WalletTransaction>) => WalletTransaction;
