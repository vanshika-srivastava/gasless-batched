"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const ethers_lib_1 = require("@biconomy/ethers-lib");
const hardhat_1 = __importDefault(require("hardhat"));
const utils_1 = require("ethers/lib/utils");
const DeterministicDeployer_1 = require("../src/DeterministicDeployer");
const ethers_1 = require("ethers");
const deployer = DeterministicDeployer_1.DeterministicDeployer.instance;
describe('#deterministicDeployer', () => {
    const ethnode = {};
    before(async () => {
        var _a;
        // Provider from hardhat without a server instance
        ethnode.provider = new ethers_1.ethers.providers.Web3Provider(hardhat_1.default.network.provider.send);
        ethnode.signer = (_a = ethnode.provider) === null || _a === void 0 ? void 0 : _a.getSigner();
        ethnode.chainId = 1337;
    });
    it('deploy deployer', async () => {
        (0, chai_1.expect)(await deployer.isDeployerDeployed()).to.equal(false);
        await deployer.deployDeployer();
        (0, chai_1.expect)(await deployer.isDeployerDeployed()).to.equal(true);
    });
    it('should ignore deploy again of deployer', async () => {
        await deployer.deployDeployer();
    });
    it('should deploy at given address', async () => {
        const baseWallet = '0x548c6B8acf4f1396E915ffdC521F37D152DFB5A4';
        const ctr = (0, utils_1.hexValue)(new ethers_lib_1.SmartWalletFactoryV100().getDeployTransaction(baseWallet).data);
        const addr = await DeterministicDeployer_1.DeterministicDeployer.getAddress(ctr);
        (0, chai_1.expect)(await deployer.isContractDeployed(addr)).to.equal(false);
        await DeterministicDeployer_1.DeterministicDeployer.deploy(ctr);
        (0, chai_1.expect)(await deployer.isContractDeployed(addr)).to.equal(true);
    });
});
//# sourceMappingURL=0-deterministicDeployer.test.js.map