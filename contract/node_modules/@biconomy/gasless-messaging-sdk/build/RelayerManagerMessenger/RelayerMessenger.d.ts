import { CentClient } from 'cent.js';
import Centrifuge from 'centrifuge';
import TransactionNotifier, { ITransactionNotifierOptions } from './TransactionNotifier';
export default class RelayerMessenger {
    socketAdmin: CentClient;
    socketClient: Centrifuge;
    channel: any;
    queueName: string;
    relayerAddress: string;
    private subscribedTransactions;
    sendTransactionHashGenerated(transactionId: string, transactionHash: string, networkId: number, options?: ITransactionNotifierOptions): Promise<TransactionNotifier>;
    sendTransactionHashChanged(transactionId: string, transactionHash: string, networkId: number, options?: ITransactionNotifierOptions): Promise<TransactionNotifier>;
    sendErrorMessage(transactionId: string, errorMessage: string): Promise<void>;
    constructor(relayerAddress: string, socketClient: Centrifuge, socketAdmin: CentClient, channel: any, queueName: string);
}
//# sourceMappingURL=RelayerMessenger.d.ts.map