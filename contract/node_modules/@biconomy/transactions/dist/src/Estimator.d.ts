import NodeClient from '@biconomy/node-client';
import ContractUtils from './ContractUtils';
import { EstimateSmartAccountDeploymentDto, IWalletTransaction, SmartAccountState } from '@biconomy/core-types';
import { GetFeeQuotesForBatchDto, GetFeeQuotesDto } from './Types';
export declare class Estimator {
    nodeClient: NodeClient;
    contractUtils: ContractUtils;
    constructor(nodeClient: NodeClient, contractUtils: ContractUtils);
    estimateTransaction(prepareTransactionDto: GetFeeQuotesDto, createdTransaction: IWalletTransaction, smartAccountState: SmartAccountState): Promise<number>;
    estimateTransactionBatch(getFeeQuotesForBatchDto: GetFeeQuotesForBatchDto, createdTransaction: IWalletTransaction, smartAccountState: SmartAccountState): Promise<number>;
    estimateGasUsed(target: string, data: string, chainId: number): Promise<number>;
    estimateSmartAccountDeployment(estimateSmartAccountDeploymentDto: EstimateSmartAccountDeploymentDto): Promise<number>;
}
