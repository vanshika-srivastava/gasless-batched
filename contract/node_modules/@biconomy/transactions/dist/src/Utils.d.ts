import { BigNumberish, Contract } from 'ethers';
import { IMetaTransaction, IWalletTransaction, Transaction } from '@biconomy/core-types';
export declare class Utils {
    constructor();
    buildSmartAccountTransaction: (template: {
        to: string;
        value?: BigNumberish;
        data?: string;
        operation?: number;
        targetTxGas?: number | string;
        baseGas?: number | string;
        gasPrice?: number | string;
        tokenGasPriceFactor?: number | string;
        gasToken?: string;
        refundReceiver?: string;
        nonce: number;
    }) => IWalletTransaction;
    buildSmartAccountTransactions: (transactions: Transaction[]) => IMetaTransaction[];
    buildMultiSendSmartAccountTx: (multiSend: Contract, txs: IMetaTransaction[], nonce: number, overrides?: Partial<IWalletTransaction>) => IWalletTransaction;
    buildMultiSendTx: (multiSend: Contract, txs: IMetaTransaction[], nonce: number, delegateCall?: boolean) => IMetaTransaction;
    encodeMultiSend: (txs: IMetaTransaction[]) => string;
    encodeMetaTransaction: (tx: IMetaTransaction) => string;
    buildContractCall: (contract: Contract, method: string, params: any[], nonce: number, delegateCall?: boolean, overrides?: Partial<IWalletTransaction>) => IWalletTransaction;
}
