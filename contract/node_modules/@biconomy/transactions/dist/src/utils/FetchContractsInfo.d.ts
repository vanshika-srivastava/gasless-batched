import { ChainConfig } from '@biconomy/node-client';
import { ChainId } from '@biconomy/core-types';
import { SmartWalletContract, SmartWalletFactoryContract, MultiSendContract, MultiSendCallOnlyContract, SmartAccountVersion, FallbackGasTankContract } from '@biconomy/core-types';
import EthersAdapter from '@biconomy/ethers-lib';
export declare function getSmartWalletFactoryContract(smartAccountVersion: SmartAccountVersion, ethAdapter: EthersAdapter, address: string): SmartWalletFactoryContract;
export declare function getMultiSendContract(smartAccountVersion: SmartAccountVersion, ethAdapter: EthersAdapter, address: string): MultiSendContract;
export declare function getMultiSendCallOnlyContract(smartAccountVersion: SmartAccountVersion, ethAdapter: EthersAdapter, address: string): MultiSendCallOnlyContract;
export declare function getSmartWalletContract(smartAccountVersion: SmartAccountVersion, ethAdapter: EthersAdapter, address: string): SmartWalletContract;
export declare function getFallbackGasTankContract(smartAccountVersion: SmartAccountVersion, ethAdapter: EthersAdapter, address: string): FallbackGasTankContract;
export declare function getDefaultCallbackHandlerContract(smartAccountVersion: SmartAccountVersion, ethAdapter: EthersAdapter, address: string): FallbackGasTankContract;
export declare function findChainById(chainId: ChainId, chainConfig: ChainConfig[]): ChainConfig;
export declare function findContractAddressesByVersion(smartAccountVersion: string, chainId: ChainId, chainConfig: ChainConfig[]): {
    walletAddress: string | undefined;
    walletFactoryAddress: string | undefined;
    multiSendAddress: string | undefined;
    multiSendCallAddress: string | undefined;
    entryPointAddress: string | undefined;
    fallBackHandlerAddress: string | undefined;
};
