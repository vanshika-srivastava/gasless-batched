import { EntryPointContract, UserOperation, ITransactionResult } from '@biconomy/core-types';
import { EntryPointContractV100 as EntryPointContract_TypeChain } from '../../../../typechain/src/ethers-v5/v1.0.0/EntryPointContractV100';
import { Contract } from '@ethersproject/contracts';
import { BytesLike } from 'ethers';
declare class EntryPointEthersContract implements EntryPointContract {
    contract: EntryPointContract_TypeChain;
    constructor(contract: EntryPointContract_TypeChain);
    getAddress(): string;
    getSenderAddress(initCode: BytesLike): Promise<ITransactionResult>;
    getContract(): Contract;
    simulateValidation(userOperation: UserOperation): Promise<ITransactionResult>;
    getUserOpHash(userOperation: UserOperation): Promise<string>;
    handleOps(userOperations: UserOperation[], beneficiary: string): Promise<ITransactionResult>;
}
export default EntryPointEthersContract;
