"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultiSendContractV100__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes",
                name: "transactions",
                type: "bytes",
            },
        ],
        name: "multiSend",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b503060805260805161027961002f6000396000605c01526102796000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80638d80ff0a14610030575b600080fd5b61004361003e366004610192565b610045565b005b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036100f45760405162461bcd60e51b815260206004820152603060248201527f4d756c746953656e642073686f756c64206f6e6c792062652063616c6c65642060448201527f7669612064656c656761746563616c6c00000000000000000000000000000000606482015260840160405180910390fd5b805160205b81811015610177578083015160f81c6001820184015160601c60158301850151603584018601516055850187016000856000811461013e576001811461014e57610159565b6000808585888a5af19150610159565b6000808585895af491505b508061016457600080fd5b50508060550185019450505050506100f9565b505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156101a457600080fd5b813567ffffffffffffffff808211156101bc57600080fd5b818401915084601f8301126101d057600080fd5b8135818111156101e2576101e261017c565b604051601f8201601f19908116603f0116810190838211818310171561020a5761020a61017c565b8160405282815287602084870101111561022357600080fd5b82602086016020830137600092810160200192909252509594505050505056fea2646970667358221220e7de57142c74be7ac43b03d3f5c380fb16ed147daff64b7f340af44dc997e49964736f6c63430008110033";
const isSuperArgs = (xs) => xs.length > 1;
class MultiSendContractV100__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
        this.contractName = "MultiSendContractV100";
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MultiSendContractV100__factory = MultiSendContractV100__factory;
MultiSendContractV100__factory.bytecode = _bytecode;
MultiSendContractV100__factory.abi = _abi;
//# sourceMappingURL=MultiSendContractV100__factory.js.map