{"version":3,"file":"1.js","mappings":"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","sources":["webpack://Ganache/../../chains/ethereum/address/lib/index.js","webpack://Ganache/../../chains/ethereum/block/lib/index.js","webpack://Ganache/../../chains/ethereum/block/lib/src/block-params.js","webpack://Ganache/../../chains/ethereum/block/lib/src/block.js","webpack://Ganache/../../chains/ethereum/block/lib/src/runtime-block.js","webpack://Ganache/../../chains/ethereum/block/lib/src/serialize.js","webpack://Ganache/../../chains/ethereum/block/lib/src/snapshots.js","webpack://Ganache/../../chains/ethereum/console.log/lib/index.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/handlers.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/maybe-get-logs.js","webpack://Ganache/../../chains/ethereum/console.log/lib/src/signatures.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/index.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/api-types.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/api.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/blockchain.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/connector.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/account-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/block-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/blocklog-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/transaction-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/data-managers/transaction-receipt-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/database.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/cache.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/deferred.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/fork.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/base-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/http-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/provider-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/handlers/ws-handler.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/lexicographic-key-codec.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/ancestry.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/helpers.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/persistent-cache.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/persistent-cache/tree.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/rate-limiter/limit-counter.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/rate-limiter/rate-limiter.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/state-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/forking/trie.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/hdkey.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/assert-arg-length.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/bufferify.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/common-helpers.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/filter-parsing.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/gas-estimator.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/precompiles.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/run-call.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/storage-range-at.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/helpers/trie.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/miner/miner.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/miner/replace-from-heap.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/provider-events.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/provider.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/state-manager.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/transaction-pool.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/trie-db.js","webpack://Ganache/../../chains/ethereum/ethereum/lib/src/wallet.js","webpack://Ganache/../../chains/ethereum/options/lib/index.js","webpack://Ganache/../../chains/ethereum/options/lib/src/chain-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/database-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/fork-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/helpers.js","webpack://Ganache/../../chains/ethereum/options/lib/src/index.js","webpack://Ganache/../../chains/ethereum/options/lib/src/logging-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/miner-options.js","webpack://Ganache/../../chains/ethereum/options/lib/src/wallet-options.js","webpack://Ganache/../../chains/ethereum/transaction/lib/index.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/access-lists.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/base-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/eip1559-fee-market-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/eip2930-access-list-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/hardfork.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/legacy-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/params.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/raw.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/rpc-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/runtime-transaction.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/signing.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-factory.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-receipt.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/transaction-types.js","webpack://Ganache/../../chains/ethereum/transaction/lib/src/vm-transaction.js","webpack://Ganache/../../chains/ethereum/utils/lib/index.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/abort-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/call-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/coded-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/errors.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/errors/runtime-error.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/index.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/account.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/blocklogs.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/tags.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/trace-data.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/things/trace-storage-map.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/account-proof.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/debug-storage.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/extract-values-from-types.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/fee-history.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/filters.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/hex-datatypes.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/shh.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/subscriptions.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/trace-transaction.js","webpack://Ganache/../../chains/ethereum/utils/lib/src/types/tuple-from-union.js","webpack://Ganache/../../chains/filecoin/options/lib/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/chain-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/database-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/helpers.js","webpack://Ganache/../../chains/filecoin/options/lib/src/index.js","webpack://Ganache/../../chains/filecoin/options/lib/src/logging-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/miner-options.js","webpack://Ganache/../../chains/filecoin/options/lib/src/wallet-options.js","webpack://Ganache/../colors/lib/index.js","webpack://Ganache/../colors/lib/src/index.js","webpack://Ganache/../core/lib/index.js","webpack://Ganache/../core/lib/src/connector-loader.js","webpack://Ganache/../core/lib/src/options/index.js","webpack://Ganache/../core/lib/src/options/server-options.js","webpack://Ganache/../core/lib/src/server.js","webpack://Ganache/../core/lib/src/servers/http-server.js","webpack://Ganache/../core/lib/src/servers/utils/content-types.js","webpack://Ganache/../core/lib/src/servers/utils/fragment-generator.js","webpack://Ganache/../core/lib/src/servers/utils/http-response-codes.js","webpack://Ganache/../core/lib/src/servers/utils/websocket-close-codes.js","webpack://Ganache/../core/lib/src/servers/ws-server.js","webpack://Ganache/../flavors/lib/index.js","webpack://Ganache/../flavors/lib|sync","webpack://Ganache/./webpack/polyfills/debug.ts","webpack://Ganache/../options/lib/index.js","webpack://Ganache/../options/lib/src/base.js","webpack://Ganache/../options/lib/src/constants.js","webpack://Ganache/../options/lib/src/create.js","webpack://Ganache/../options/lib/src/definition.js","webpack://Ganache/../options/lib/src/exclusive.js","webpack://Ganache/../promise-queue/lib/index.js","webpack://Ganache/../promise-queue/lib/src/entry.js","webpack://Ganache/../rlp/lib/index.js","webpack://Ganache/../secp256k1/lib/index.js","webpack://Ganache/../utils/lib/index.js","webpack://Ganache/../utils/lib/src/common.js","webpack://Ganache/../utils/lib/src/things/json-rpc/index.js","webpack://Ganache/../utils/lib/src/things/json-rpc/input-parsers.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-base-types.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-data.js","webpack://Ganache/../utils/lib/src/things/json-rpc/json-rpc-quantity.js","webpack://Ganache/../utils/lib/src/things/jsonrpc.js","webpack://Ganache/../utils/lib/src/things/promievent.js","webpack://Ganache/../utils/lib/src/things/subscription.js","webpack://Ganache/../utils/lib/src/types/api.js","webpack://Ganache/../utils/lib/src/types/connector.js","webpack://Ganache/../utils/lib/src/types/index.js","webpack://Ganache/../utils/lib/src/types/provider.js","webpack://Ganache/../utils/lib/src/utils/bigint-to-buffer.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-bigint.js","webpack://Ganache/../utils/lib/src/utils/buffer-to-key.js","webpack://Ganache/../utils/lib/src/utils/constants.js","webpack://Ganache/../utils/lib/src/utils/executor.js","webpack://Ganache/../utils/lib/src/utils/find-insert-position.js","webpack://Ganache/../utils/lib/src/utils/has-own.js","webpack://Ganache/../utils/lib/src/utils/heap.js","webpack://Ganache/../utils/lib/src/utils/index.js","webpack://Ganache/../utils/lib/src/utils/keccak.js","webpack://Ganache/../utils/lib/src/utils/min-max.js","webpack://Ganache/../utils/lib/src/utils/random-number-generator.js","webpack://Ganache/../utils/lib/src/utils/request-coordinator.js","webpack://Ganache/../utils/lib/src/utils/signature.js","webpack://Ganache/../utils/lib/src/utils/uint-to-buffer.js","webpack://Ganache/../utils/lib/src/utils/unref.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Address = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@ganache/utils\");\nclass Address extends util_1.Address {\n    constructor(value) {\n        super(value);\n    }\n    static from(value) {\n        return new Address(utils_1.Data.toBuffer(value, Address.ByteLength));\n    }\n    static toBuffer(value) {\n        return Address.from(value).toBuffer();\n    }\n    static toString(value) {\n        return Address.from(value).toString();\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\nexports.Address = Address;\nAddress.ByteLength = 20;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/block\"), exports);\n__exportStar(require(\"./src/runtime-block\"), exports);\n__exportStar(require(\"./src/snapshots\"), exports);\n__exportStar(require(\"./src/serialize\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockParams = void 0;\nexports.BlockParams = {\n    /**\n     *  Base fee per gas for blocks without a parent containing a base fee per gas.\n     */\n    INITIAL_BASE_FEE_PER_GAS: 1000000000n,\n    /**\n     * Divisor used to set a block's target gas usage.\n     */\n    ELASTICITY: 2n,\n    /**\n     * Divisor used to limit the amount the base fee per gas can change from one block to another.\n     */\n    BASE_FEE_MAX_CHANGE_DENOMINATOR: 8n\n};\n//# sourceMappingURL=block-params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Block = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_block_1 = require(\"./runtime-block\");\nconst utils_2 = require(\"@ganache/utils\");\nconst serialize_1 = require(\"./serialize\");\nconst block_params_1 = require(\"./block-params\");\nclass Block {\n    constructor(serialized, common) {\n        this._common = common;\n        if (serialized) {\n            const deserialized = (0, rlp_1.decode)(serialized);\n            this._raw = deserialized[0];\n            this._rawTransactions = deserialized[1] || [];\n            // TODO: support actual uncle data (needed for forking!)\n            // Issue: https://github.com/trufflesuite/ganache/issues/786\n            // const uncles = deserialized[2];\n            let totalDifficulty;\n            // if there are 7 serialized fields we are after shanghai\n            // as in shanghai we added `withdrawals` to the block data\n            if (deserialized.length === 7) {\n                this._rawWithdrawals = deserialized[3] || []; // added in Shanghai\n                totalDifficulty = deserialized[4];\n                this._rawTransactionMetaData = deserialized[5] || [];\n                this._size = utils_1.Quantity.toNumber(deserialized[6]);\n            }\n            else {\n                this._rawWithdrawals = null;\n                totalDifficulty = deserialized[3];\n                this._rawTransactionMetaData = (deserialized[4] || []);\n                this._size = utils_1.Quantity.toNumber(deserialized[5]);\n            }\n            this.header = (0, runtime_block_1.makeHeader)(this._raw, totalDifficulty);\n        }\n    }\n    /**\n     * Migrates a serialized Block to the latest version. This should only be\n     * called on serialized data from blocks created before v7.8.0.\n     *\n     * This migration updates the `size` value of the block to the correct value\n     * by re-serializing the block for storage in the db.\n     * @param serialized\n     * @returns\n     */\n    static migrate(serialized) {\n        const deserialized = (0, rlp_1.decode)(serialized);\n        const start = deserialized.slice(0, 3);\n        start[1] = start[1].map((oldRawTx) => {\n            if (oldRawTx.length === 9) {\n                return oldRawTx; // legacy transactions are fine\n            }\n            else {\n                // `type` is always `< 0x7F`, so we can yank the first byte from the\n                // Buffer without having to think about conversion.\n                // https://eips.ethereum.org/EIPS/eip-2718#transactiontype-only-goes-up-to-0x7f\n                const type = oldRawTx[0][0];\n                const raw = oldRawTx.slice(1);\n                // type 1 and 2 transactions were encoded within the block as:\n                // `[type, ...rawTx]` when they should have been `[type, encode(rawTx)]`\n                return (0, ethereum_transaction_1.encodeWithPrefix)(type, raw);\n            }\n        });\n        return (0, serialize_1.serialize)(start, deserialized.slice(3, 5)).serialized;\n    }\n    hash() {\n        return (this._hash || (this._hash = utils_1.Data.from((0, utils_2.keccak)((0, rlp_1.encode)(this._raw)), 32)));\n    }\n    getTransactions() {\n        const common = this._common;\n        const blockHash = this.hash().toBuffer();\n        const number = this.header.number.toBuffer();\n        return this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                blockHash,\n                number,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            return (0, serialize_1.blockTransactionFromRaw)(raw, common, extra);\n        });\n    }\n    toJSON(includeFullTransactions) {\n        const hash = this.hash();\n        const txFn = this.getTxFn(includeFullTransactions);\n        const hashBuffer = hash.toBuffer();\n        const header = this.header;\n        const number = header.number.toBuffer();\n        const common = this._common;\n        const transactions = this._rawTransactions.map((raw, index) => {\n            const [from, hash] = this._rawTransactionMetaData[index];\n            const extra = [\n                from,\n                hash,\n                hashBuffer,\n                number,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            const tx = (0, serialize_1.blockTransactionFromRaw)(raw, common, extra);\n            // we could either parse the raw data to check if the tx is type 2,\n            // get the maxFeePerGas and maxPriorityFeePerGas, use those to calculate\n            // the effectiveGasPrice and add it to `extra` above, or we can just\n            // leave it out of extra and update the effectiveGasPrice after like this\n            tx.updateEffectiveGasPrice(header.baseFeePerGas?.toBigInt());\n            return txFn(tx);\n        });\n        return {\n            hash,\n            ...header,\n            size: utils_1.Quantity.from(this._size),\n            transactions,\n            uncles: [],\n            // if `this._rawWithdrawals` is not set we should not include it in the\n            // JSON response (`undefined` gets stripped when JSON.stringify is called).\n            withdrawals: this._rawWithdrawals?.map(serialize_1.convertRawWithdrawals)\n        };\n    }\n    getTxFn(include = false) {\n        if (include) {\n            return (tx) => tx.toJSON(this._common);\n        }\n        else {\n            return (tx) => tx.hash;\n        }\n    }\n    static calcNextBaseFeeBigInt(parentHeader) {\n        let nextBaseFee;\n        const header = parentHeader;\n        const parentGasTarget = header.gasLimit.toBigInt() / block_params_1.BlockParams.ELASTICITY;\n        const parentGasUsed = header.gasUsed.toBigInt();\n        const baseFeePerGas = header.baseFeePerGas\n            ? header.baseFeePerGas.toBigInt()\n            : block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n        if (parentGasTarget === parentGasUsed) {\n            // If the parent gasUsed is the same as the target, the baseFee remains unchanged.\n            nextBaseFee = baseFeePerGas;\n        }\n        else if (parentGasUsed > parentGasTarget) {\n            // If the parent block used more gas than its target, the baseFee should increase.\n            const gasUsedDelta = parentGasUsed - parentGasTarget;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            if (adjustedFeeDelta > 1n) {\n                nextBaseFee = baseFeePerGas + adjustedFeeDelta;\n            }\n            else {\n                nextBaseFee = baseFeePerGas + 1n;\n            }\n        }\n        else {\n            // Otherwise if the parent block used less gas than its target, the baseFee should decrease.\n            const gasUsedDelta = parentGasTarget - parentGasUsed;\n            const adjustedFeeDelta = (baseFeePerGas * gasUsedDelta) /\n                parentGasTarget /\n                block_params_1.BlockParams.BASE_FEE_MAX_CHANGE_DENOMINATOR;\n            nextBaseFee = baseFeePerGas - adjustedFeeDelta;\n        }\n        return nextBaseFee;\n    }\n    static calcNBlocksMaxBaseFee(blocks, parentHeader) {\n        const { BASE_FEE_MAX_CHANGE_DENOMINATOR } = block_params_1.BlockParams;\n        let maxPossibleBaseFee = this.calcNextBaseFeeBigInt(parentHeader);\n        // we must calculate each future block's max base fee individually because\n        // each block's base fee must be appropriately \"floored\" (Math.floor) before\n        // the following block's base fee is calculated. If we don't do this we'll\n        // end up with compounding rounding errors.\n        // FYI: the more performant, but rounding error-prone, way is:\n        // return lastMaxBlockBaseFee + (lastMaxBlockBaseFee * ((BASE_FEE_MAX_CHANGE_DENOMINATOR-1)**(blocks-1)) / ((BASE_FEE_MAX_CHANGE_DENOMINATOR)**(blocks-1)))\n        while (--blocks) {\n            maxPossibleBaseFee +=\n                maxPossibleBaseFee / BASE_FEE_MAX_CHANGE_DENOMINATOR;\n        }\n        return maxPossibleBaseFee;\n    }\n    static calcNextBaseFee(parentBlock) {\n        const header = parentBlock.header;\n        if (header.baseFeePerGas === undefined) {\n            return undefined;\n        }\n        else {\n            return this.calcNextBaseFeeBigInt(header);\n        }\n    }\n}\nexports.Block = Block;\n/**\n *  Base fee per gas for blocks without a parent containing a base fee per gas.\n */\nBlock.INITIAL_BASE_FEE_PER_GAS = block_params_1.BlockParams.INITIAL_BASE_FEE_PER_GAS;\n//# sourceMappingURL=block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeBlock = exports.makeHeader = exports.getBlockSize = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst serialize_1 = require(\"./serialize\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst block_1 = require(\"./block\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\n/**\n * Returns the size of the serialized data as it would have been calculated had\n * we stored things geth does, i.e., `totalDifficulty` is not usually stored in\n * the block header.\n *\n * @param serialized -\n * @param totalDifficulty -\n */\nfunction getBlockSize(serialized, totalDifficulty) {\n    return serialized.length - totalDifficulty.length;\n}\nexports.getBlockSize = getBlockSize;\nfunction makeHeader(raw, totalDifficulty) {\n    return {\n        parentHash: utils_1.Data.from(raw[0], 32),\n        sha3Uncles: utils_1.Data.from(raw[1], 32),\n        miner: utils_1.Data.from(raw[2], 20),\n        stateRoot: utils_1.Data.from(raw[3], 32),\n        transactionsRoot: utils_1.Data.from(raw[4], 32),\n        receiptsRoot: utils_1.Data.from(raw[5], 32),\n        logsBloom: utils_1.Data.from(raw[6], 256),\n        difficulty: utils_1.Quantity.from(raw[7], false),\n        number: utils_1.Quantity.from(raw[8], false),\n        gasLimit: utils_1.Quantity.from(raw[9], false),\n        gasUsed: utils_1.Quantity.from(raw[10], false),\n        timestamp: utils_1.Quantity.from(raw[11], false),\n        extraData: utils_1.Data.from(raw[12]),\n        mixHash: utils_1.Data.from(raw[13], 32),\n        nonce: utils_1.Data.from(raw[14], 8),\n        totalDifficulty: utils_1.Quantity.from(totalDifficulty, false),\n        baseFeePerGas: raw[15] === undefined ? undefined : utils_1.Quantity.from(raw[15], false),\n        withdrawalsRoot: raw[16] === undefined ? undefined : utils_1.Data.from(raw[16], 32)\n    };\n}\nexports.makeHeader = makeHeader;\n/**\n * A minimal block that can be used by the EVM to run transactions.\n */\nclass RuntimeBlock {\n    constructor(common, number, parentHash, coinbase, gasLimit, gasUsed, timestamp, difficulty, previousBlockTotalDifficulty, mixHash, baseFeePerGas, withdrawalsRoot) {\n        this._common = common;\n        const coinbaseBuffer = coinbase.toBuffer();\n        this.header = {\n            parentHash: parentHash.toBuffer(),\n            coinbase: new ethereum_address_1.Address(coinbaseBuffer),\n            number: number.toBigInt(),\n            difficulty: difficulty.toBigInt(),\n            totalDifficulty: utils_1.Quantity.toBuffer(previousBlockTotalDifficulty.toBigInt() + difficulty.toBigInt()),\n            gasLimit: gasLimit.toBigInt(),\n            gasUsed: gasUsed.toBigInt(),\n            timestamp: timestamp.toBigInt(),\n            baseFeePerGas,\n            mixHash,\n            prevRandao: mixHash,\n            withdrawalsRoot\n        };\n    }\n    /**\n     * Returns the serialization of all block data, the hash of the block header,\n     * and a map of the hashed and raw storage keys\n     */\n    finalize(transactionsTrie, receiptTrie, bloom, stateRoot, gasUsed, extraData, transactions, storageKeys) {\n        const { header } = this;\n        const rawHeader = [\n            header.parentHash,\n            util_1.KECCAK256_RLP_ARRAY,\n            header.coinbase.buf,\n            stateRoot,\n            transactionsTrie,\n            receiptTrie,\n            bloom,\n            utils_1.Quantity.toBuffer(header.difficulty),\n            utils_1.Quantity.toBuffer(header.number),\n            utils_1.Quantity.toBuffer(header.gasLimit),\n            gasUsed === 0n ? utils_1.BUFFER_EMPTY : utils_1.Quantity.toBuffer(gasUsed),\n            utils_1.Quantity.toBuffer(header.timestamp),\n            extraData.toBuffer(),\n            header.mixHash,\n            utils_1.BUFFER_8_ZERO // nonce\n        ];\n        const isEip4895 = this._common.isActivatedEIP(4895);\n        // baseFeePerGas was added in London\n        if (header.baseFeePerGas !== undefined) {\n            rawHeader[15] = utils_1.Quantity.toBuffer(header.baseFeePerGas, false);\n            // withdrawalsRoot was added in Shanghai\n            if (isEip4895)\n                rawHeader[16] = utils_1.Data.toBuffer(header.withdrawalsRoot);\n        }\n        const { totalDifficulty } = header;\n        const txs = Array(transactions.length);\n        const extraTxs = Array(transactions.length);\n        for (let i = 0; i < transactions.length; i++) {\n            const tx = transactions[i];\n            txs[i] =\n                tx.raw.length === 9\n                    ? tx.raw // legacy transactions don't have their own encoding\n                    : tx.serialized ?? (0, ethereum_transaction_1.encodeWithPrefix)(tx.type.toNumber(), tx.raw);\n            extraTxs[i] = [tx.from.toBuffer(), tx.hash.toBuffer()];\n        }\n        const rawBlock = isEip4895\n            ? [rawHeader, txs, [], []]\n            : [rawHeader, txs, []];\n        const { serialized, size } = (0, serialize_1.serialize)(rawBlock, [\n            totalDifficulty,\n            extraTxs\n        ]);\n        // make a new block, but pass `null` so it doesn't do the extra\n        // deserialization work since we already have everything in a deserialized\n        // state here. We'll just set it ourselves by reaching into the \"_private\"\n        // fields.\n        const block = new block_1.Block(null, this._common);\n        block._raw = rawHeader;\n        block._rawTransactions = txs;\n        block.header = makeHeader(rawHeader, totalDifficulty);\n        block._rawWithdrawals = [];\n        block._rawTransactionMetaData = extraTxs;\n        block._size = size;\n        return {\n            block: block,\n            serialized,\n            storageKeys,\n            transactions\n        };\n    }\n}\nexports.RuntimeBlock = RuntimeBlock;\n//# sourceMappingURL=runtime-block.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.convertRawWithdrawals = exports.blockTransactionFromRaw = exports.serialize = void 0;\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * Serializes a block to compute its size and store it in the database.\n * @param start\n * @param end\n * @returns\n */\nfunction serialize(start, end) {\n    const serializedStart = (0, rlp_1.encodeRange)(start, 0, start.length);\n    const serializedLength = serializedStart.length;\n    const ethereumRawBlockSize = (0, rlp_1.encodeLength)(serializedLength, 192).length;\n    const size = ethereumRawBlockSize + serializedLength;\n    const middle = (0, rlp_1.encodeRange)(end, 0, 2);\n    const ending = (0, rlp_1.encode)((0, utils_1.uintToBuffer)(size));\n    return {\n        serialized: (0, rlp_1.digest)([serializedStart.output, middle.output, [ending]], serializedLength + middle.length + ending.length),\n        size\n    };\n}\nexports.serialize = serialize;\nfunction isLegacyRawTransaction(raw) {\n    return raw.length === 9;\n}\n/**\n * Converts a raw transaction encoded for use in a raw block into a `Transaction`\n *\n * @param raw the raw transaction data after the block has been rlp decoded.\n * @param common\n * @param extra\n * @returns\n */\nfunction blockTransactionFromRaw(raw, common, extra) {\n    let txData;\n    let type;\n    if (isLegacyRawTransaction(raw)) {\n        // legacy txs\n        type = 0;\n        txData = raw;\n    }\n    else {\n        // type 1 and 2 txs\n        type = raw[0];\n        txData = (0, rlp_1.decode)(raw.subarray(1));\n    }\n    return ethereum_transaction_1.TransactionFactory.fromSafeTypeAndTxData(type, txData, common, extra);\n}\nexports.blockTransactionFromRaw = blockTransactionFromRaw;\nfunction convertRawWithdrawals([index, validatorIndex, address, amount]) {\n    return {\n        index: utils_1.Quantity.from(index),\n        validatorIndex: utils_1.Quantity.from(validatorIndex),\n        address: ethereum_address_1.Address.from(address),\n        amount: utils_1.Quantity.from(amount)\n    };\n}\nexports.convertRawWithdrawals = convertRawWithdrawals;\n//# sourceMappingURL=serialize.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=snapshots.js.map","\"use strict\";\n/*!\n * @ganache/console.log\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeGetLogs = void 0;\nvar maybe_get_logs_1 = require(\"./src/maybe-get-logs\");\nObject.defineProperty(exports, \"maybeGetLogs\", { enumerable: true, get: function () { return maybe_get_logs_1.maybeGetLogs; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Handlers = exports.bytes = exports.address = exports.bool = exports.string = exports.uint256 = exports.int256 = exports.fixedBytes = exports.WORD_SIZE = void 0;\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * EVM word size for abi encoded data\n */\nexports.WORD_SIZE = 32; // bytes\n/**\n * Used to convert _from_ twos compliment\n * This is calculated via:\n * ~((1n << (8n * BigInt(WORD_SIZE))) - 1n)\n */\nconst OR_WITH_TWOS_COMPLEMENT = -0x10000000000000000000000000000000000000000000000000000000000000000n;\n/**\n * For dynamic-length types, like `bytes` and `string`, returns the starting\n * position of the value in `memory`, and the `end` position of the value.\n *\n * Calling this function when the type is not dynamic will not work. You have\n * been warned.\n *\n * @param memory\n * @param offset The offset into the given memory from which to start parsing.\n * @returns The starting position of the value in `memory`, and the `end` position of the value.\n */\nfunction getDynamicDataMarkers(memory, offset) {\n    // A Buffer's length maxes out at UInt32 max, 4294967295, (2**(8 * 4)) - 1) so\n    // it is safe to decode the `start` and `length` values as UInt32s.\n    //\n    // If we had a start position \"word\" of:\n    //   00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 60\n    // we know we really only need to read the last 4 bytes, since we know that\n    // a Buffer's length can't be greater than UInt32 (which can be represented by\n    // up to 4 bytes). So we only need to look at:\n    // 00 00 00 60\n    // `offset + WORD_SIZE - UINT32_BYTE_LENGTH` effectively tells `readUInt32BE`\n    // to read only these last 4 bytes of the word that represent the `start`\n    // value.\n    // We add WORD_SIZE to this value because we are skipping over the location of\n    // the length and referencing the start of the location of the data itself.\n    const UINT32_BYTE_LENGTH = 4;\n    const nextWordOffset = offset + exports.WORD_SIZE;\n    const startUint32MemoryPosition = nextWordOffset - UINT32_BYTE_LENGTH;\n    const start = memory.readUInt32BE(startUint32MemoryPosition) + exports.WORD_SIZE;\n    // the same optimization is applied here.\n    // The word that immediately precedes the data itself is the data's `length`:\n    const end = start + memory.readUInt32BE(start - UINT32_BYTE_LENGTH);\n    return { start, end };\n}\n/**\n * Ganerates a handler function for solidity's bytes1-bytes32 types\n * @param length From 1 to 32.\n * @returns A function that accepts a memory Buffer and an offset.\n */\nfunction fixedBytes(length) {\n    return (memory, offset) => handleBytes(memory, offset, offset + length);\n}\nexports.fixedBytes = fixedBytes;\n/**\n * Returns the hex representation of the bytes in `memory`.\n *\n * @param memory\n * @param start The start of the data in the given memory.\n * @param end The end of the data in the given memory (not inclusive).\n * @returns\n */\nfunction handleBytes(memory, start, end) {\n    return `0x${memory.toString(\"hex\", start, end)}`;\n}\nconst int256 = (memory, offset) => {\n    // convert from two's compliment to signed BigInt\n    const twosComplementBuffer = memory.subarray(offset, offset + exports.WORD_SIZE);\n    const twosComplementBigInt = (0, utils_1.bufferToBigInt)(twosComplementBuffer);\n    if (twosComplementBuffer[0] & 128) {\n        // if the first bit is `1` we need to convert from two's compliment\n        return twosComplementBigInt | OR_WITH_TWOS_COMPLEMENT;\n    }\n    else {\n        // if the first bit is not `1` we can treat it as unsigned\n        return twosComplementBigInt;\n    }\n};\nexports.int256 = int256;\n/**\n * Handle decoding of solidity's `uint256` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst uint256 = (memory, offset) => (0, utils_1.bufferToBigInt)(memory.subarray(offset, offset + exports.WORD_SIZE));\nexports.uint256 = uint256;\n/**\n * Handle decoding of solidity's dynamic `string` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst string = (memory, offset) => {\n    const { start, end } = getDynamicDataMarkers(memory, offset);\n    return memory.toString(\"utf8\", start, end);\n};\nexports.string = string;\n/**\n * Handle decoding of solidity's `bool` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst bool = (memory, offset) => memory[offset + exports.WORD_SIZE - 1] !== 0;\nexports.bool = bool;\n/**\n * Handle decoding of solidity's `address` type from EVM memory.\n * @param memory\n * @param offset\n * @returns A 20 byte hex encoded string, prefixed with 0x.\n */\nconst address = (memory, offset) => `0x${memory.toString(\"hex\", offset + 12, offset + exports.WORD_SIZE)}`;\nexports.address = address;\n/**\n * Handle decoding of solidity's dynamic `bytes` type from EVM memory\n * @param memory\n * @param offset\n * @returns\n */\nconst bytes = (memory, offset) => {\n    const { start, end } = getDynamicDataMarkers(memory, offset);\n    return handleBytes(memory, start, end);\n};\nexports.bytes = bytes;\nexports.Handlers = {\n    address: exports.address,\n    bool: exports.bool,\n    bytes: exports.bytes,\n    int256: exports.int256,\n    string: exports.string,\n    uint256: exports.uint256\n};\n//# sourceMappingURL=handlers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maybeGetLogs = void 0;\nconst handlers_1 = require(\"./handlers\");\nconst signatures_1 = require(\"./signatures\");\nconst CONSOLE_ADDRESS = 0x636f6e736f6c652e6c6f67n;\n/**\n * Returns arguments passed to console.sol's `console.log` if the given\n * `@ethereumjs/vm` step event's `opcode`, `stack`, and `memory` fields contain\n * valid `console.log` data.\n *\n * The event's `opcode.name` field must be `\"STATICCALL\"` and the `toAddress` on\n * the `stack` must be the `console.log` address:\n * `0x000000000000000000636f6e736f6c652e6c6f67`.\n *\n * @param event - `@ethereumjs/vm` step event\n * @returns\n */\nconst maybeGetLogs = (event) => {\n    if (event.opcode.name !== \"STATICCALL\")\n        return null;\n    // STATICCALL, which is the OPCODE that is used to initiate a console.log, has\n    // 6 params, but we only care about these 3:\n    const stack = event.stack;\n    const [memoryLength, memoryOffset, toAddress] = stack.slice(-4, -1);\n    // only if the toAddress is our console address we should try parsing\n    if (toAddress !== CONSOLE_ADDRESS)\n        return null;\n    // STATICCALL allows for passing in invalid pointers and lengths so we need to\n    // guard against failures with a try/catch\n    try {\n        const memoryStart = Number(memoryOffset);\n        const memoryEnd = memoryStart + Number(memoryLength);\n        const memory = event.memory.subarray(memoryStart, memoryEnd);\n        const method = memory.readUInt32BE(0); // 4 bytes wide\n        const handlers = signatures_1.signatureMap.get(method);\n        if (!handlers)\n            return null;\n        // we skip the first 4 bytes, as that is our signature\n        const values = memory.subarray(4);\n        return handlers.map((handler, index) => {\n            const offset = index * handlers_1.WORD_SIZE;\n            return handler(values, offset);\n        });\n    }\n    catch {\n        return null;\n    }\n};\nexports.maybeGetLogs = maybeGetLogs;\n//# sourceMappingURL=maybe-get-logs.js.map","\"use strict\";\n/*\n * This file was automatically generated by `./src/chains/ethereum/console.log/scripts/generate.ts`; do not edit. */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.signatureMap = void 0;\nconst handlers_1 = require(\"./handlers\");\nexports.signatureMap = new Map([\n    // log()\n    [1368866505, []],\n    // log(address)\n    [741264322, [handlers_1.address]],\n    // log(bool)\n    [843419373, [handlers_1.bool]],\n    // log(string)\n    [1093685164, [handlers_1.string]],\n    // log(uint256)\n    [4163653873, [handlers_1.uint256]],\n    // log(uint)\n    [4122065833, [handlers_1.uint256]],\n    // log(bytes)\n    [199720790, [handlers_1.bytes]],\n    // log(int256)\n    [760966329, [handlers_1.int256]],\n    // log(int)\n    [1309416733, [handlers_1.int256]],\n    // log(bytes1)\n    [1847107880, [(0, handlers_1.fixedBytes)(1)]],\n    // log(bytes2)\n    [3921027734, [(0, handlers_1.fixedBytes)(2)]],\n    // log(bytes3)\n    [763578662, [(0, handlers_1.fixedBytes)(3)]],\n    // log(bytes4)\n    [3764340945, [(0, handlers_1.fixedBytes)(4)]],\n    // log(bytes5)\n    [2793701517, [(0, handlers_1.fixedBytes)(5)]],\n    // log(bytes6)\n    [2927928721, [(0, handlers_1.fixedBytes)(6)]],\n    // log(bytes7)\n    [1322614312, [(0, handlers_1.fixedBytes)(7)]],\n    // log(bytes8)\n    [1334060334, [(0, handlers_1.fixedBytes)(8)]],\n    // log(bytes9)\n    [2428341456, [(0, handlers_1.fixedBytes)(9)]],\n    // log(bytes10)\n    [20780939, [(0, handlers_1.fixedBytes)(10)]],\n    // log(bytes11)\n    [67127854, [(0, handlers_1.fixedBytes)(11)]],\n    // log(bytes12)\n    [2258660029, [(0, handlers_1.fixedBytes)(12)]],\n    // log(bytes13)\n    [2488442420, [(0, handlers_1.fixedBytes)(13)]],\n    // log(bytes14)\n    [2456219775, [(0, handlers_1.fixedBytes)(14)]],\n    // log(bytes15)\n    [3667227872, [(0, handlers_1.fixedBytes)(15)]],\n    // log(bytes16)\n    [1717330180, [(0, handlers_1.fixedBytes)(16)]],\n    // log(bytes17)\n    [866084666, [(0, handlers_1.fixedBytes)(17)]],\n    // log(bytes18)\n    [3302112666, [(0, handlers_1.fixedBytes)(18)]],\n    // log(bytes19)\n    [1584093747, [(0, handlers_1.fixedBytes)(19)]],\n    // log(bytes20)\n    [1367925737, [(0, handlers_1.fixedBytes)(20)]],\n    // log(bytes21)\n    [3923391840, [(0, handlers_1.fixedBytes)(21)]],\n    // log(bytes22)\n    [3589990556, [(0, handlers_1.fixedBytes)(22)]],\n    // log(bytes23)\n    [2879508237, [(0, handlers_1.fixedBytes)(23)]],\n    // log(bytes24)\n    [4055063348, [(0, handlers_1.fixedBytes)(24)]],\n    // log(bytes25)\n    [193248344, [(0, handlers_1.fixedBytes)(25)]],\n    // log(bytes26)\n    [4172368369, [(0, handlers_1.fixedBytes)(26)]],\n    // log(bytes27)\n    [976705501, [(0, handlers_1.fixedBytes)(27)]],\n    // log(bytes28)\n    [3358255854, [(0, handlers_1.fixedBytes)(28)]],\n    // log(bytes29)\n    [1265222613, [(0, handlers_1.fixedBytes)(29)]],\n    // log(bytes30)\n    [3994207469, [(0, handlers_1.fixedBytes)(30)]],\n    // log(bytes31)\n    [3263516050, [(0, handlers_1.fixedBytes)(31)]],\n    // log(bytes32)\n    [666357637, [(0, handlers_1.fixedBytes)(32)]],\n    // log(address,address)\n    [3673216170, [handlers_1.address, handlers_1.address]],\n    // log(address,bool)\n    [1974863315, [handlers_1.address, handlers_1.bool]],\n    // log(address,string)\n    [1973388987, [handlers_1.address, handlers_1.string]],\n    // log(address,uint256)\n    [2198464680, [handlers_1.address, handlers_1.uint256]],\n    // log(address,uint)\n    [574869411, [handlers_1.address, handlers_1.uint256]],\n    // log(bool,address)\n    [2235320393, [handlers_1.bool, handlers_1.address]],\n    // log(bool,bool)\n    [705760899, [handlers_1.bool, handlers_1.bool]],\n    // log(bool,string)\n    [2414527781, [handlers_1.bool, handlers_1.string]],\n    // log(bool,uint256)\n    [965833939, [handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint)\n    [910912146, [handlers_1.bool, handlers_1.uint256]],\n    // log(string,address)\n    [832238387, [handlers_1.string, handlers_1.address]],\n    // log(string,bool)\n    [3283441205, [handlers_1.string, handlers_1.bool]],\n    // log(string,string)\n    [1264337527, [handlers_1.string, handlers_1.string]],\n    // log(string,uint256)\n    [3054400204, [handlers_1.string, handlers_1.uint256]],\n    // log(string,uint)\n    [2534451664, [handlers_1.string, handlers_1.uint256]],\n    // log(uint256,address)\n    [1764191366, [handlers_1.uint256, handlers_1.address]],\n    // log(uint,address)\n    [1491830284, [handlers_1.uint256, handlers_1.address]],\n    // log(uint256,bool)\n    [480083635, [handlers_1.uint256, handlers_1.bool]],\n    // log(uint,bool)\n    [510514412, [handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,string)\n    [1681903839, [handlers_1.uint256, handlers_1.string]],\n    // log(uint,string)\n    [262402885, [handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256)\n    [4133908826, [handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint)\n    [1812949376, [handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,address)\n    [25986242, [handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(address,address,bool)\n    [4070990470, [handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(address,address,string)\n    [7426238, [handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(address,address,uint256)\n    [402547077, [handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,uint)\n    [1815506290, [handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,address)\n    [4044790253, [handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(address,bool,bool)\n    [3951234194, [handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(address,bool,string)\n    [555898316, [handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(address,bool,uint256)\n    [2622462459, [handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,uint)\n    [742821141, [handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,address)\n    [4035396840, [handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(address,string,bool)\n    [3473018801, [handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(address,string,string)\n    [4218888805, [handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(address,string,uint256)\n    [1742565361, [handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,uint)\n    [484110986, [handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint256,address)\n    [2076235848, [handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint,address)\n    [2548867988, [handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint256,bool)\n    [1736575400, [handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint,bool)\n    [3846889796, [handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint256,string)\n    [2717051050, [handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint,string)\n    [3136907337, [handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint256,uint256)\n    [3063663350, [handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint,uint)\n    [2273710942, [handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,address)\n    [3530962535, [handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(bool,address,bool)\n    [415876934, [handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(bool,address,string)\n    [3734671984, [handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(bool,address,uint256)\n    [1601936123, [handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,uint)\n    [3950005167, [handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,address)\n    [276362893, [handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(bool,bool,bool)\n    [1349555864, [handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(bool,bool,string)\n    [626391622, [handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(bool,bool,uint256)\n    [317855234, [handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,uint)\n    [2954061243, [handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,address)\n    [2509355347, [handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(bool,string,bool)\n    [3686056519, [handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(bool,string,string)\n    [2960557183, [handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(bool,string,uint256)\n    [278130193, [handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,uint)\n    [3224906412, [handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint256,address)\n    [143587794, [handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint,address)\n    [3302110471, [handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint256,bool)\n    [3906927529, [handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint,bool)\n    [464374251, [handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint256,string)\n    [3288086896, [handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint,string)\n    [3359211184, [handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint256,uint256)\n    [923808615, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint,uint)\n    [995886048, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,address)\n    [4243355104, [handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(string,address,bool)\n    [3374145236, [handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(string,address,string)\n    [3773410639, [handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(string,address,uint256)\n    [220641573, [handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,uint)\n    [130552343, [handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,address)\n    [2469116728, [handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(string,bool,bool)\n    [2232122070, [handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(string,bool,string)\n    [3801674877, [handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(string,bool,uint256)\n    [3378075862, [handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,uint)\n    [689682896, [handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,address)\n    [2515337621, [handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(string,string,bool)\n    [2967534005, [handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(string,string,string)\n    [753761519, [handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(string,string,uint256)\n    [1478619041, [handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,uint)\n    [4083337817, [handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint256,address)\n    [478069832, [handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint,address)\n    [3817119609, [handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint256,bool)\n    [3396809649, [handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint,bool)\n    [4043501061, [handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint256,string)\n    [1500569737, [handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint,string)\n    [2750793529, [handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint256,uint256)\n    [3393701099, [handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint,uint)\n    [2526862595, [handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,address,address)\n    [3170737120, [handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint,address,address)\n    [2104993307, [handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint256,address,bool)\n    [2607726658, [handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint,address,bool)\n    [2060456590, [handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint256,address,string)\n    [1674265081, [handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint,address,string)\n    [3464692859, [handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint256,address,uint256)\n    [1520131797, [handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint,address,uint)\n    [2286109610, [handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,bool,address)\n    [889741179, [handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint,bool,address)\n    [1112473535, [handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint256,bool,bool)\n    [544310864, [handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint,bool,bool)\n    [3587091680, [handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,bool,string)\n    [2239189025, [handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint,bool,string)\n    [2332955902, [handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint256,bool,uint256)\n    [537493524, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,bool,uint)\n    [1515034914, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,string,address)\n    [2063255897, [handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint,string,address)\n    [529592906, [handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint256,string,bool)\n    [1290643290, [handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint,string,bool)\n    [1185403086, [handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint256,string,string)\n    [2970968351, [handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint,string,string)\n    [1062716053, [handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint256,string,uint256)\n    [933920076, [handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint,string,uint)\n    [1533929535, [handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,uint256,address)\n    [1553380145, [handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint,uint,address)\n    [3191032091, [handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,uint256,bool)\n    [1197922930, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,uint,bool)\n    [1733758967, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,uint256,string)\n    [1909476082, [handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint,uint,string)\n    [2104037094, [handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256,uint256)\n    [3522001468, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint,uint)\n    [3884059252, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,address,address)\n    [1717301556, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(address,address,address,bool)\n    [238520724, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(address,address,address,string)\n    [4161329696, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(address,address,address,uint256)\n    [2485456247, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,address,uint)\n    [3982404743, [handlers_1.address, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(address,address,bool,address)\n    [2669396846, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(address,address,bool,bool)\n    [752096074, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(address,address,bool,string)\n    [2858762440, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(address,address,bool,uint256)\n    [963766156, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,address,bool,uint)\n    [2513854225, [handlers_1.address, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(address,address,string,address)\n    [2406706454, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(address,address,string,bool)\n    [1863997774, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(address,address,string,string)\n    [566079269, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(address,address,string,uint256)\n    [4011651047, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,address,string,uint)\n    [69767936, [handlers_1.address, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(address,address,uint256,address)\n    [2376523509, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,address,uint,address)\n    [3603321462, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(address,address,uint256,bool)\n    [2604815586, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,address,uint,bool)\n    [3270936812, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(address,address,uint256,string)\n    [4256496016, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,address,uint,string)\n    [2647731885, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(address,address,uint256,uint256)\n    [3193255041, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,address,uint,uint)\n    [1425929188, [handlers_1.address, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,bool,address,address)\n    [1711502813, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(address,bool,address,bool)\n    [2801077007, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(address,bool,address,string)\n    [769095910, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(address,bool,address,uint256)\n    [2807847390, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,address,uint)\n    [3698398930, [handlers_1.address, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(address,bool,bool,address)\n    [3476636805, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(address,bool,bool,bool)\n    [3401856121, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(address,bool,bool,string)\n    [3754205928, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(address,bool,bool,uint256)\n    [2353946086, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,bool,uint)\n    [3484780374, [handlers_1.address, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(address,bool,string,address)\n    [436029782, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(address,bool,string,bool)\n    [1353532957, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(address,bool,string,string)\n    [1197235251, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(address,bool,string,uint256)\n    [2162598411, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(address,bool,string,uint)\n    [2652011374, [handlers_1.address, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(address,bool,uint256,address)\n    [3438776481, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(address,bool,uint,address)\n    [227337758, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(address,bool,uint256,bool)\n    [3294903840, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(address,bool,uint,bool)\n    [2244855215, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(address,bool,uint256,string)\n    [178704301, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(address,bool,uint,string)\n    [2606272204, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(address,bool,uint256,uint256)\n    [946861556, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,bool,uint,uint)\n    [3255869470, [handlers_1.address, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,string,address,address)\n    [221706784, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(address,string,address,bool)\n    [233909110, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(address,string,address,string)\n    [4158874181, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(address,string,address,uint256)\n    [1166009295, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(address,string,address,uint)\n    [2350461865, [handlers_1.address, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(address,string,bool,address)\n    [542667202, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(address,string,bool,bool)\n    [1595759775, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(address,string,bool,string)\n    [3154862590, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(address,string,bool,uint256)\n    [1365129398, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,bool,uint)\n    [3877655068, [handlers_1.address, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(address,string,string,address)\n    [2689478535, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(address,string,string,bool)\n    [900007711, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(address,string,string,string)\n    [1560462603, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(address,string,string,uint256)\n    [362776871, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,string,uint)\n    [2706362425, [handlers_1.address, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(address,string,uint256,address)\n    [1662531192, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(address,string,uint,address)\n    [3755464715, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(address,string,uint256,bool)\n    [251125840, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(address,string,uint,bool)\n    [2116357467, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(address,string,uint256,string)\n    [1149776040, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(address,string,uint,string)\n    [1561552329, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(address,string,uint256,uint256)\n    [499704248, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,string,uint,uint)\n    [2764647008, [handlers_1.address, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint256,address,address)\n    [1200430178, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(address,uint,address,address)\n    [3961816175, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(address,uint256,address,bool)\n    [2713504179, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(address,uint,address,bool)\n    [4051804649, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(address,uint256,address,string)\n    [497649386, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(address,uint,address,string)\n    [1567749022, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(address,uint256,address,uint256)\n    [269444366, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(address,uint,address,uint)\n    [2782496616, [handlers_1.address, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(address,uint256,bool,address)\n    [2736520652, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(address,uint,bool,address)\n    [602229106, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(address,uint256,bool,bool)\n    [1005970743, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(address,uint,bool,bool)\n    [4272018778, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(address,uint256,bool,string)\n    [3316483577, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(address,uint,bool,string)\n    [2391690869, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(address,uint256,bool,uint256)\n    [586594713, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(address,uint,bool,uint)\n    [1770996626, [handlers_1.address, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(address,uint256,string,address)\n    [1547898183, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(address,uint,string,address)\n    [3698927108, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(address,uint256,string,bool)\n    [3474460764, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(address,uint,string,bool)\n    [2751614737, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(address,uint256,string,string)\n    [2292761606, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(address,uint,string,string)\n    [2119616147, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(address,uint256,string,uint256)\n    [3204577425, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint,string,uint)\n    [4111650715, [handlers_1.address, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(address,uint256,uint256,address)\n    [551786573, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint,uint,address)\n    [519451700, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(address,uint256,uint256,bool)\n    [1727118439, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint,uint,bool)\n    [3964381346, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(address,uint256,uint256,string)\n    [1244184599, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint,uint,string)\n    [2301889963, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(address,uint256,uint256,uint256)\n    [888202806, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(address,uint,uint,uint)\n    [1024368100, [handlers_1.address, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,address,address)\n    [487903233, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(bool,address,address,bool)\n    [1180699616, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(bool,address,address,string)\n    [3625099623, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(bool,address,address,uint256)\n    [208064958, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,address,uint)\n    [1384430956, [handlers_1.bool, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(bool,address,bool,address)\n    [474063670, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(bool,address,bool,bool)\n    [1788626827, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(bool,address,bool,string)\n    [1248250676, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(bool,address,bool,uint256)\n    [126031106, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,address,bool,uint)\n    [1287000017, [handlers_1.bool, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,address,string,address)\n    [1870422078, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(bool,address,string,bool)\n    [3804222987, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(bool,address,string,string)\n    [2805734838, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(bool,address,string,uint256)\n    [3256837319, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(bool,address,string,uint)\n    [194640930, [handlers_1.bool, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(bool,address,uint256,address)\n    [325780957, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(bool,address,uint,address)\n    [1760647349, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(bool,address,uint256,bool)\n    [3590430492, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,address,uint,bool)\n    [4002252402, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,address,uint256,string)\n    [1374724088, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(bool,address,uint,string)\n    [2691192883, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(bool,address,uint256,uint256)\n    [2079424929, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,address,uint,uint)\n    [2617143996, [handlers_1.bool, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,bool,address,address)\n    [4102557348, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(bool,bool,address,bool)\n    [3231908568, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(bool,bool,address,string)\n    [2695133539, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(bool,bool,address,uint256)\n    [1276263767, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,address,uint)\n    [1620281063, [handlers_1.bool, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(bool,bool,bool,address)\n    [2352126746, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(bool,bool,bool,bool)\n    [992632032, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(bool,bool,bool,string)\n    [719587540, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(bool,bool,bool,uint256)\n    [1836074433, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,bool,uint)\n    [3259532109, [handlers_1.bool, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,bool,string,address)\n    [4188875657, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(bool,bool,string,bool)\n    [3092715066, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(bool,bool,string,string)\n    [1830717265, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(bool,bool,string,uint256)\n    [3819555375, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,bool,string,uint)\n    [395003525, [handlers_1.bool, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(bool,bool,uint256,address)\n    [1420274080, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,bool,uint,address)\n    [201299213, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(bool,bool,uint256,bool)\n    [1637764366, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,bool,uint,bool)\n    [2874982852, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,bool,uint256,string)\n    [2111099104, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,bool,uint,string)\n    [1348569399, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(bool,bool,uint256,uint256)\n    [196087467, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,bool,uint,uint)\n    [1181212302, [handlers_1.bool, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,string,address,address)\n    [724244700, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(bool,string,address,bool)\n    [1842623690, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(bool,string,address,string)\n    [316065672, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(bool,string,address,uint256)\n    [2781534868, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(bool,string,address,uint)\n    [453743963, [handlers_1.bool, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(bool,string,bool,address)\n    [1401816747, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(bool,string,bool,bool)\n    [3697185627, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(bool,string,bool,string)\n    [1211958294, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(bool,string,bool,uint256)\n    [369533843, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,bool,uint)\n    [2372902053, [handlers_1.bool, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,string,string,address)\n    [2547225816, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(bool,string,string,bool)\n    [508266469, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(bool,string,string,string)\n    [392356650, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(bool,string,string,uint256)\n    [2078327787, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,string,uint)\n    [1574643090, [handlers_1.bool, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(bool,string,uint256,address)\n    [362193358, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(bool,string,uint,address)\n    [1529002296, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(bool,string,uint256,bool)\n    [1796103507, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,string,uint,bool)\n    [549177775, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,string,uint256,string)\n    [450457062, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(bool,string,uint,string)\n    [2007084013, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(bool,string,uint256,uint256)\n    [679886795, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,string,uint,uint)\n    [2387273838, [handlers_1.bool, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint256,address,address)\n    [653615272, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(bool,uint,address,address)\n    [2318373034, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(bool,uint256,address,bool)\n    [3032683775, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(bool,uint,address,bool)\n    [1705899016, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(bool,uint256,address,string)\n    [464760986, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(bool,uint,address,string)\n    [403247937, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(bool,uint256,address,uint256)\n    [355982471, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(bool,uint,address,uint)\n    [3399820138, [handlers_1.bool, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(bool,uint256,bool,address)\n    [2597139990, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(bool,uint,bool,address)\n    [1114097656, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(bool,uint256,bool,bool)\n    [3468031191, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(bool,uint,bool,bool)\n    [2650928961, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(bool,uint256,bool,string)\n    [2437143473, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(bool,uint,bool,string)\n    [3067439572, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(bool,uint256,bool,uint256)\n    [2140912802, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint,bool,uint)\n    [3554563475, [handlers_1.bool, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(bool,uint256,string,address)\n    [4275904511, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(bool,uint,string,address)\n    [2781285673, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(bool,uint256,string,bool)\n    [3857124139, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(bool,uint,string,bool)\n    [2446522387, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(bool,uint256,string,string)\n    [4122747465, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(bool,uint,string,string)\n    [3542771016, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(bool,uint256,string,uint256)\n    [1779538402, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint,string,uint)\n    [1098907931, [handlers_1.bool, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(bool,uint256,uint256,address)\n    [14518201, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint,uint,address)\n    [4049711649, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(bool,uint256,uint256,bool)\n    [3197649747, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint,uint,bool)\n    [2753397214, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(bool,uint256,uint256,string)\n    [2389310301, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint,uint,string)\n    [3657852616, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(bool,uint256,uint256,uint256)\n    [927708338, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(bool,uint,uint,uint)\n    [853517604, [handlers_1.bool, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,address,address)\n    [3985582326, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(string,address,address,bool)\n    [3047013728, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(string,address,address,string)\n    [2148146279, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(string,address,address,uint256)\n    [2398352281, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,address,uint)\n    [1857524797, [handlers_1.string, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(string,address,bool,address)\n    [573965245, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(string,address,bool,bool)\n    [2038975531, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(string,address,bool,string)\n    [72663161, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(string,address,bool,uint256)\n    [1050642026, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(string,address,bool,uint)\n    [3318856587, [handlers_1.string, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(string,address,string,address)\n    [2864486961, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(string,address,string,bool)\n    [1595265676, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(string,address,string,string)\n    [609847026, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(string,address,string,uint256)\n    [2446397742, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(string,address,string,uint)\n    [2405583849, [handlers_1.string, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(string,address,uint256,address)\n    [1677429701, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(string,address,uint,address)\n    [2741431424, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(string,address,uint256,bool)\n    [4232594928, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(string,address,uint,bool)\n    [1522647356, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(string,address,uint256,string)\n    [1514632754, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(string,address,uint,string)\n    [1280700980, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(string,address,uint256,uint256)\n    [4176812830, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,address,uint,uint)\n    [3668153533, [handlers_1.string, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,bool,address,address)\n    [870964509, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(string,bool,address,bool)\n    [2508990662, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(string,bool,address,string)\n    [764294052, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(string,bool,address,uint256)\n    [1560853253, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,address,uint)\n    [685723286, [handlers_1.string, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(string,bool,bool,address)\n    [1905304873, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(string,bool,bool,bool)\n    [2304440517, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(string,bool,bool,string)\n    [2636305885, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(string,bool,bool,uint256)\n    [2386524329, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,bool,uint)\n    [2155164136, [handlers_1.string, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(string,bool,string,address)\n    [3764542249, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(string,bool,string,bool)\n    [1066037277, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(string,bool,string,string)\n    [2821114603, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(string,bool,string,uint256)\n    [620303461, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(string,bool,string,uint)\n    [885731469, [handlers_1.string, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(string,bool,uint256,address)\n    [2472413631, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(string,bool,uint,address)\n    [1909687565, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(string,bool,uint256,bool)\n    [2331496330, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(string,bool,uint,bool)\n    [1019590099, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(string,bool,uint256,string)\n    [1949134567, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(string,bool,uint,string)\n    [1119461927, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(string,bool,uint256,uint256)\n    [1689631591, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,bool,uint,uint)\n    [1572859960, [handlers_1.string, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,string,address,address)\n    [1134328815, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(string,string,address,bool)\n    [1556958775, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(string,string,address,string)\n    [3944480640, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(string,string,address,uint256)\n    [2093204999, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,string,address,uint)\n    [1250010474, [handlers_1.string, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(string,string,bool,address)\n    [3279013851, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(string,string,bool,bool)\n    [1081628777, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(string,string,bool,string)\n    [1585754346, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(string,string,bool,uint256)\n    [3601791698, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,bool,uint)\n    [2256636538, [handlers_1.string, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(string,string,string,address)\n    [1834430276, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(string,string,string,bool)\n    [739726573, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(string,string,string,string)\n    [3731419658, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(string,string,string,uint256)\n    [2393878571, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,string,uint)\n    [2681211381, [handlers_1.string, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(string,string,uint256,address)\n    [270792626, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,string,uint,address)\n    [1565476480, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(string,string,uint256,bool)\n    [3282609748, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,string,uint,bool)\n    [3864418506, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(string,string,uint256,string)\n    [1562023706, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,string,uint,string)\n    [2366909661, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(string,string,uint256,uint256)\n    [4099767596, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,string,uint,uint)\n    [3587119056, [handlers_1.string, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint256,address,address)\n    [1587722158, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(string,uint,address,address)\n    [3939013249, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(string,uint256,address,bool)\n    [2182163010, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(string,uint,address,bool)\n    [285649143, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(string,uint256,address,string)\n    [2684039059, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(string,uint,address,string)\n    [844415720, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(string,uint256,address,uint256)\n    [1325727174, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(string,uint,address,uint)\n    [1481210622, [handlers_1.string, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(string,uint256,bool,address)\n    [3773389720, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(string,uint,bool,address)\n    [3847527825, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(string,uint256,bool,bool)\n    [894187222, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(string,uint,bool,bool)\n    [3816813520, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(string,uint256,bool,string)\n    [2885106328, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(string,uint,bool,string)\n    [1993105508, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(string,uint256,bool,uint256)\n    [3827003247, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(string,uint,bool,uint)\n    [1427009269, [handlers_1.string, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(string,uint256,string,address)\n    [2084975268, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(string,uint,string,address)\n    [3144824297, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(string,uint256,string,bool)\n    [2099530013, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(string,uint,string,bool)\n    [3919545039, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(string,uint256,string,string)\n    [1522028063, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(string,uint,string,string)\n    [1821956834, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(string,uint256,string,uint256)\n    [3330189777, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint,string,uint)\n    [2697245221, [handlers_1.string, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(string,uint256,uint256,address)\n    [3793609336, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint,uint,address)\n    [3201771711, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(string,uint256,uint256,bool)\n    [1982258066, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint,uint,bool)\n    [4147936829, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(string,uint256,uint256,string)\n    [2236298390, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint,uint,string)\n    [2773406909, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(string,uint256,uint256,uint256)\n    [2812835923, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(string,uint,uint,uint)\n    [149837414, [handlers_1.string, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,address,address,address)\n    [612938772, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(uint,address,address,address)\n    [1430734329, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.address]],\n    // log(uint256,address,address,bool)\n    [153090805, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(uint,address,address,bool)\n    [22350596, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.bool]],\n    // log(uint256,address,address,string)\n    [52195187, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(uint,address,address,string)\n    [2034490470, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.string]],\n    // log(uint256,address,address,uint256)\n    [1936653238, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(uint,address,address,uint)\n    [2587672470, [handlers_1.uint256, handlers_1.address, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,address,bool,address)\n    [4017276179, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(uint,address,bool,address)\n    [3056677012, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.address]],\n    // log(uint256,address,bool,bool)\n    [3813741583, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(uint,address,bool,bool)\n    [2116501773, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,address,bool,string)\n    [2432370346, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(uint,address,bool,string)\n    [1676730946, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.string]],\n    // log(uint256,address,bool,uint256)\n    [1522374954, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,address,bool,uint)\n    [2064181483, [handlers_1.uint256, handlers_1.address, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,address,string,address)\n    [2629472255, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(uint,address,string,address)\n    [3420819197, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.address]],\n    // log(uint256,address,string,bool)\n    [3425872647, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(uint,address,string,bool)\n    [581204390, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.bool]],\n    // log(uint256,address,string,string)\n    [1041403043, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(uint,address,string,string)\n    [2373420580, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.string]],\n    // log(uint256,address,string,uint256)\n    [1182952285, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(uint,address,string,uint)\n    [2697204968, [handlers_1.uint256, handlers_1.address, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,address,uint256,address)\n    [364980149, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(uint,address,uint,address)\n    [4256361684, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,address,uint256,bool)\n    [1601452668, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,address,uint,bool)\n    [435581801, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,address,uint256,string)\n    [3719324961, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(uint,address,uint,string)\n    [1054063912, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,address,uint256,uint256)\n    [211605953, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,address,uint,uint)\n    [3399106228, [handlers_1.uint256, handlers_1.address, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,bool,address,address)\n    [2716814523, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(uint,bool,address,address)\n    [2263728396, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.address]],\n    // log(uint256,bool,address,bool)\n    [1162695845, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(uint,bool,address,bool)\n    [2449150530, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.bool]],\n    // log(uint256,bool,address,string)\n    [2917159623, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(uint,bool,address,string)\n    [2721084958, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.string]],\n    // log(uint256,bool,address,uint256)\n    [125994997, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(uint,bool,address,uint)\n    [1102442299, [handlers_1.uint256, handlers_1.bool, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,bool,bool,address)\n    [1768164185, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(uint,bool,bool,address)\n    [1392910941, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.address]],\n    // log(uint256,bool,bool,bool)\n    [3069540257, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(uint,bool,bool,bool)\n    [1315722005, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,bool,bool,string)\n    [3722155361, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(uint,bool,bool,string)\n    [831186331, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.string]],\n    // log(uint256,bool,bool,uint256)\n    [1952763427, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,bool,bool,uint)\n    [3173363033, [handlers_1.uint256, handlers_1.bool, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,bool,string,address)\n    [4015165464, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(uint,bool,string,address)\n    [1231956916, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.address]],\n    // log(uint256,bool,string,bool)\n    [3952250239, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(uint,bool,string,bool)\n    [879671495, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.bool]],\n    // log(uint256,bool,string,string)\n    [1757984957, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(uint,bool,string,string)\n    [2754870525, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.string]],\n    // log(uint256,bool,string,uint256)\n    [740099910, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(uint,bool,string,uint)\n    [2438978344, [handlers_1.uint256, handlers_1.bool, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,bool,uint256,address)\n    [2295029825, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(uint,bool,uint,address)\n    [1329595790, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,bool,uint256,bool)\n    [2443193898, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,bool,uint,bool)\n    [3534472445, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,bool,uint256,string)\n    [3724797812, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(uint,bool,uint,string)\n    [3906845782, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,bool,uint256,uint256)\n    [3333212072, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,bool,uint,uint)\n    [1451396516, [handlers_1.uint256, handlers_1.bool, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,string,address,address)\n    [1634266465, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(uint,string,address,address)\n    [2141537675, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.address]],\n    // log(uint256,string,address,bool)\n    [2428701270, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(uint,string,address,bool)\n    [4181720887, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.bool]],\n    // log(uint256,string,address,string)\n    [2621104033, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(uint,string,address,string)\n    [4170733439, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.string]],\n    // log(uint256,string,address,uint256)\n    [3906142605, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(uint,string,address,uint)\n    [2565338099, [handlers_1.uint256, handlers_1.string, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,string,bool,address)\n    [2922300801, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(uint,string,bool,address)\n    [2037328032, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.address]],\n    // log(uint256,string,bool,bool)\n    [3126025628, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(uint,string,bool,bool)\n    [1371286465, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,string,bool,string)\n    [3537118157, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(uint,string,bool,string)\n    [2370346144, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.string]],\n    // log(uint256,string,bool,uint256)\n    [3472922752, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,string,bool,uint)\n    [2763295359, [handlers_1.uint256, handlers_1.string, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,string,string,address)\n    [3582182914, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(uint,string,string,address)\n    [3432549024, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.address]],\n    // log(uint256,string,string,bool)\n    [3014047421, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(uint,string,string,bool)\n    [310782872, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.bool]],\n    // log(uint256,string,string,string)\n    [564987523, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(uint,string,string,string)\n    [1474103825, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.string]],\n    // log(uint256,string,string,uint256)\n    [2955463101, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(uint,string,string,uint)\n    [1995203422, [handlers_1.uint256, handlers_1.string, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,string,uint256,address)\n    [992115124, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(uint,string,uint,address)\n    [2877020669, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,string,uint256,bool)\n    [1763348340, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,string,uint,bool)\n    [2270850606, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,string,uint256,string)\n    [3082360010, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(uint,string,uint,string)\n    [2730232985, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,string,uint256,uint256)\n    [2193775476, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,string,uint,uint)\n    [3221501959, [handlers_1.uint256, handlers_1.string, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint256,uint256,address,address)\n    [1453707697, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint,uint,address,address)\n    [3398671136, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.address]],\n    // log(uint256,uint256,address,bool)\n    [365610102, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint,uint,address,bool)\n    [2833785006, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.bool]],\n    // log(uint256,uint256,address,string)\n    [1826504888, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint,uint,address,string)\n    [3600994782, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.string]],\n    // log(uint256,uint256,address,uint256)\n    [2297881778, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint,uint,address,uint)\n    [1628154048, [handlers_1.uint256, handlers_1.uint256, handlers_1.address, handlers_1.uint256]],\n    // log(uint256,uint256,bool,address)\n    [2592172675, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint,uint,bool,address)\n    [3776410703, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.address]],\n    // log(uint256,uint256,bool,bool)\n    [2869451494, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint,uint,bool,bool)\n    [2495495089, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.bool]],\n    // log(uint256,uint256,bool,string)\n    [2780101785, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint,uint,bool,string)\n    [4024028142, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.string]],\n    // log(uint256,uint256,bool,uint256)\n    [3950997458, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint,uint,bool,uint)\n    [1818524812, [handlers_1.uint256, handlers_1.uint256, handlers_1.bool, handlers_1.uint256]],\n    // log(uint256,uint256,string,address)\n    [1121066423, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint,uint,string,address)\n    [1127384482, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.address]],\n    // log(uint256,uint256,string,bool)\n    [2062986021, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint,uint,string,bool)\n    [2989403910, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.bool]],\n    // log(uint256,uint256,string,string)\n    [668512210, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint,uint,string,string)\n    [2080582194, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.string]],\n    // log(uint256,uint256,string,uint256)\n    [1570936811, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint,uint,string,uint)\n    [949229117, [handlers_1.uint256, handlers_1.uint256, handlers_1.string, handlers_1.uint256]],\n    // log(uint256,uint256,uint256,address)\n    [4202792367, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint,uint,uint,address)\n    [3766828905, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.address]],\n    // log(uint256,uint256,uint256,bool)\n    [3315126661, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint,uint,uint,bool)\n    [1683143115, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.bool]],\n    // log(uint256,uint256,uint256,string)\n    [1506790371, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint,uint,uint,string)\n    [2024634892, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.string]],\n    // log(uint256,uint256,uint256,uint256)\n    [423606272, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]],\n    // log(uint,uint,uint,uint)\n    [1554033982, [handlers_1.uint256, handlers_1.uint256, handlers_1.uint256, handlers_1.uint256]]\n]);\n//# sourceMappingURL=signatures.js.map","\"use strict\";\n/*!\n * @ganache/ethereum\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/connector\"), exports);\n__exportStar(require(\"./src/api-types\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=api-types.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumApi_getId, _EthereumApi_filters, _EthereumApi_subscriptions, _EthereumApi_options, _EthereumApi_blockchain, _EthereumApi_wallet;\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#region Imports\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst eth_sig_util_1 = require(\"eth-sig-util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst gas_estimator_1 = __importDefault(require(\"./helpers/gas-estimator\"));\nconst assert_arg_length_1 = require(\"./helpers/assert-arg-length\");\nconst filter_parsing_1 = require(\"./helpers/filter-parsing\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst miner_1 = require(\"./miner/miner\");\nasync function autofillDefaultTransactionValues(tx, eth_estimateGas, eth_maxPriorityFeePerGas, transaction, blockchain, options) {\n    if (tx.gas.isNull()) {\n        const defaultLimit = options.miner.defaultTransactionGasLimit;\n        if (defaultLimit === utils_1.Quantity.Empty) {\n            // if the default limit is `Quantity.Empty` use a gas estimate\n            tx.gas = await eth_estimateGas(transaction, ethereum_utils_1.Tag.latest);\n        }\n        else {\n            tx.gas = defaultLimit;\n        }\n    }\n    if (\"gasPrice\" in tx && tx.gasPrice.isNull()) {\n        tx.gasPrice = options.miner.defaultGasPrice;\n    }\n    if (\"maxFeePerGas\" in tx && tx.maxFeePerGas.isNull()) {\n        const block = blockchain.blocks.latest;\n        tx.maxFeePerGas = utils_1.Quantity.from(ethereum_block_1.Block.calcNBlocksMaxBaseFee(3, block.header));\n    }\n    if (\"maxPriorityFeePerGas\" in tx && tx.maxPriorityFeePerGas.isNull()) {\n        tx.maxPriorityFeePerGas = await eth_maxPriorityFeePerGas();\n    }\n}\nconst version = process.env.VERSION || \"DEV\";\n//#endregion\n//#region Constants\nconst CLIENT_VERSION = `Ganache/v${version}/EthereumJS TestRPC/v${version}/ethereum-js`;\nconst PROTOCOL_VERSION = utils_1.Data.from(\"0x3f\");\nconst RPC_MODULES = {\n    eth: \"1.0\",\n    net: \"1.0\",\n    rpc: \"1.0\",\n    web3: \"1.0\",\n    evm: \"1.0\",\n    personal: \"1.0\"\n};\n//#endregion\n//#region helpers\n/**\n * Combines RuntimeErrors for a list of rejected or reverted transactions.\n * @param transactions Array of transactions with errors to assert.\n */\nfunction assertExceptionalTransactions(transactions) {\n    let baseError = null;\n    let errors;\n    const data = {};\n    transactions.forEach(transaction => {\n        if (transaction.execException) {\n            if (baseError) {\n                baseError = ethereum_utils_1.VM_EXCEPTIONS;\n                errors.push(`${transaction.hash.toString()}: ${transaction.execException}\\n`);\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n            else {\n                baseError = ethereum_utils_1.VM_EXCEPTION;\n                errors = [transaction.execException.message];\n                data[transaction.execException.data.hash] =\n                    transaction.execException.data;\n            }\n        }\n    });\n    if (baseError) {\n        const err = new Error(baseError + errors.join(\"\\n\"));\n        err.data = data;\n        throw err;\n    }\n}\n//#endregion helpers\nclass EthereumApi {\n    /**\n     * This is the Ethereum API that the provider interacts with.\n     * The only methods permitted on the prototype are the supported json-rpc\n     * methods.\n     * @param options -\n     * @param wallet -\n     * @param emitter -\n     */\n    constructor(options, wallet, blockchain) {\n        _EthereumApi_getId.set(this, (id => () => utils_1.Quantity.from(++id))(0));\n        _EthereumApi_filters.set(this, new Map());\n        _EthereumApi_subscriptions.set(this, new Map());\n        _EthereumApi_options.set(this, void 0);\n        _EthereumApi_blockchain.set(this, void 0);\n        _EthereumApi_wallet.set(this, void 0);\n        __classPrivateFieldSet(this, _EthereumApi_options, options, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_wallet, wallet, \"f\");\n        __classPrivateFieldSet(this, _EthereumApi_blockchain, blockchain, \"f\");\n    }\n    //#region db\n    /**\n     * Stores a string in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param value - String to store.\n     * @returns returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putString\", [\"testDb\", \"testKey\", \"testValue\"] ));\n     * ```\n     */\n    async db_putString(dbName, key, value) {\n        return false;\n    }\n    /**\n     * Returns string from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored string.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getString\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getString(dbName, key) {\n        return \"\";\n    }\n    /**\n     * Stores binary data in the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @param data - Data to store.\n     * @returns true if the value was stored, otherwise false.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_putHex\", [\"testDb\", \"testKey\", \"0x0\"] ));\n     * ```\n     */\n    async db_putHex(dbName, key, data) {\n        return false;\n    }\n    /**\n     * Returns binary data from the local database.\n     *\n     * @param dbName - Database name.\n     * @param key - Key name.\n     * @returns The previously stored data.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"db_getHex\", [\"testDb\", \"testKey\"] ));\n     * ```\n     */\n    async db_getHex(dbName, key) {\n        return \"0x00\";\n    }\n    //#endregion\n    //#region bzz\n    /**\n     * Returns the kademlia table in a readable table format.\n     * @returns Returns the kademlia table in a readable table format.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_hive\"));\n     * ```\n     */\n    async bzz_hive() {\n        return [];\n    }\n    /**\n     * Returns details about the swarm node.\n     * @returns Returns details about the swarm node.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"bzz_info\"));\n     * ```\n     */\n    async bzz_info() {\n        return [];\n    }\n    async evm_mine(arg) {\n        // `MINE_ONLY_ONE_BLOCK` refers to the number of blocks mined per call to `blockchain.mine()`\n        const MINE_ONLY_ONE_BLOCK = true;\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const vmErrorsOnRPCResponse = options.chain.vmErrorsOnRPCResponse;\n        // Since `typeof null === \"object\"` we have to guard against that\n        if (arg !== null && typeof arg === \"object\") {\n            let { blocks, timestamp } = arg;\n            if (blocks == null) {\n                blocks = 1;\n            }\n            // TODO(perf): add an option to mine a bunch of blocks in a batch so\n            // we can save them all to the database in one go.\n            // Developers like to move the blockchain forward by thousands of blocks\n            // at a time and doing this would make it way faster\n            for (let i = 0; i < blocks; i++) {\n                const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, MINE_ONLY_ONE_BLOCK, timestamp);\n                if (vmErrorsOnRPCResponse) {\n                    assertExceptionalTransactions(transactions);\n                }\n            }\n        }\n        else {\n            const timestamp = arg;\n            const { transactions } = await blockchain.mine(miner_1.Capacity.FillBlock, MINE_ONLY_ONE_BLOCK, timestamp);\n            if (vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(transactions);\n            }\n        }\n        return \"0x0\";\n    }\n    /**\n     * Sets the given account's nonce to the specified value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param nonce - The nonce value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountNonce\", [address, nonce] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountNonce(address, nonce) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        const account = await eei.getAccount(vmAddress);\n        account.nonce = utils_1.Quantity.toBigInt(nonce);\n        await eei.checkpoint();\n        await eei.putAccount(vmAddress, account);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's balance to the specified WEI value. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param balance - The balance value, in WEI, to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const balance = \"0x3e8\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountBalance\", [address, balance] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountBalance(address, balance) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        const account = await eei.getAccount(vmAddress);\n        account.balance = utils_1.Quantity.toBigInt(balance);\n        await eei.checkpoint();\n        await eei.putAccount(vmAddress, account);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's code to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param code - The code to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountCode\", [address, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountCode(address, code) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const codeBuffer = utils_1.Data.toBuffer(code);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        // The ethereumjs-vm StateManager does not allow to set empty code,\n        // therefore we will manually set the code hash when \"clearing\" the contract code\n        await eei.checkpoint();\n        if (codeBuffer.length > 0) {\n            await eei.putContractCode(vmAddress, codeBuffer);\n        }\n        else {\n            const account = await eei.getAccount(vmAddress);\n            account.codeHash = util_1.KECCAK256_NULL;\n            await eei.putAccount(vmAddress, account);\n        }\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Sets the given account's storage slot to the specified data. Mines a new block\n     * before returning.\n     *\n     * Warning: this will result in an invalid state tree.\n     *\n     * @param address - The account address to update.\n     * @param slot - The storage slot that should be set.\n     * @param value - The value to be set.\n     * @returns `true` if it worked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\";\n     * const data = \"0xbaddad42\";\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const result = await provider.send(\"evm_setAccountStorageAt\", [address, slot, data] );\n     * console.log(result);\n     * ```\n     */\n    async evm_setAccountStorageAt(address, slot, value) {\n        // TODO: the effect of this function could happen during a block mine operation, which would cause all sorts of\n        // issues. We need to figure out a good way of timing this.\n        // Issue: https://github.com/trufflesuite/ganache/issues/1646\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const slotBuffer = utils_1.Data.toBuffer(slot);\n        const valueBuffer = utils_1.Data.toBuffer(value);\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const eei = blockchain.vm.eei;\n        await eei.checkpoint();\n        await eei.putContractStorage(vmAddress, slotBuffer, valueBuffer);\n        await eei.commit();\n        // TODO: do we need to mine a block here? The changes we're making really don't make any sense at all\n        // and produce an invalid trie going forward.\n        await blockchain.mine(miner_1.Capacity.Empty);\n        return true;\n    }\n    /**\n     * Jump forward in time by the given amount of time, in seconds.\n     * @param seconds - Number of seconds to jump forward in time by. Must be greater than or equal to `0`.\n     * @returns Returns the total time adjustment, in seconds.\n     * @example\n     * ```javascript\n     * const seconds = 10;\n     * const timeAdjustment = await provider.send(\"evm_increaseTime\", [seconds] );\n     * console.log(timeAdjustment);\n     * ```\n     */\n    async evm_increaseTime(seconds) {\n        const milliseconds = (typeof seconds === \"number\" ? seconds : utils_1.Quantity.toNumber(seconds)) *\n            1000;\n        return Math.floor(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").increaseTime(milliseconds) / 1000);\n    }\n    /**\n     * Sets the internal clock time to the given timestamp.\n     *\n     * Warning: This will allow you to move *backwards* in time, which may cause\n     * new blocks to appear to be mined before old blocks. This will result in\n     * an invalid state.\n     *\n     * @param time - JavaScript timestamp (millisecond precision).\n     * @returns The amount of *seconds* between the given timestamp and now.\n     * @example\n     * ```javascript\n     * const currentDate = Date.now();\n     * await new Promise(resolve => {\n     *   setTimeout(async () => {\n     *     const time = await provider.send(\"evm_setTime\", [currentDate]);\n     *     console.log(time); // should be about two seconds ago\n     *     resolve();\n     *   }, 1000);\n     * });\n     * ```\n     */\n    async evm_setTime(time) {\n        let timestamp;\n        switch (typeof time) {\n            case \"object\":\n                timestamp = time.getTime();\n                break;\n            case \"number\":\n                timestamp = time;\n                break;\n            default:\n                timestamp = utils_1.Quantity.toNumber(time);\n                break;\n        }\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const offsetMilliseconds = blockchain.setTimeDiff(timestamp);\n        // convert offsetMilliseconds to seconds:\n        return Math.floor(offsetMilliseconds / 1000);\n    }\n    /**\n     * Revert the state of the blockchain to a previous snapshot. Takes a single\n     * parameter, which is the snapshot id to revert to. This deletes the given\n     * snapshot, as well as any snapshots taken after (e.g.: reverting to id 0x1\n     * will delete snapshots with ids 0x1, 0x2, etc.)\n     *\n     * @param snapshotId - The snapshot id to revert.\n     * @returns `true` if a snapshot was reverted, otherwise `false`.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     * console.log({isReverted: isReverted});\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_revert(snapshotId) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").revert(utils_1.Quantity.from(snapshotId));\n    }\n    /**\n     * Snapshot the state of the blockchain at the current block. Takes no\n     * parameters. Returns the id of the snapshot that was created. A snapshot can\n     * only be reverted once. After a successful `evm_revert`, the same snapshot\n     * id cannot be used again. Consider creating a new snapshot after each\n     * `evm_revert` if you need to revert to the same point multiple times.\n     *\n     * @returns The hex-encoded identifier for this snapshot.\n     *\n     * @example\n     * ```javascript\n     * const provider = ganache.provider();\n     * const [from, to] = await provider.send(\"eth_accounts\");\n     * const startingBalance = BigInt(await provider.send(\"eth_getBalance\", [from] ));\n     *\n     * // take a snapshot\n     * const snapshotId = await provider.send(\"evm_snapshot\");\n     *\n     * // send value to another account (over-simplified example)\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"] );\n     * await provider.send(\"eth_sendTransaction\", [{from, to, value: \"0xffff\"}] );\n     *\n     * // ensure balance has updated\n     * const newBalance = await provider.send(\"eth_getBalance\", [from] );\n     * assert(BigInt(newBalance) < startingBalance);\n     *\n     * // revert the snapshot\n     * const isReverted = await provider.send(\"evm_revert\", [snapshotId] );\n     * assert(isReverted);\n     *\n     * // ensure balance has reverted\n     * const endingBalance = await provider.send(\"eth_getBalance\", [from] );\n     * const isBalanceReverted = assert.strictEqual(BigInt(endingBalance), startingBalance);\n     * console.log({isBalanceReverted: isBalanceReverted});\n     * ```\n     */\n    async evm_snapshot() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").snapshot());\n    }\n    /**\n     * Adds any arbitrary account to the `personal` namespace.\n     *\n     * Note: accounts already known to the `personal` namespace and accounts\n     * returned by `eth_accounts` cannot be re-added using this method.\n     * @param address - The address of the account to add to the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to encrypt the account's private key.\n     * NOTE: this passphrase will be needed for all `personal` namespace calls\n     * that require a password.\n     * @returns `true` if  the account was successfully added. `false` if the\n     * account is already in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const address = \"0x742d35Cc6634C0532925a3b844Bc454e4438f44e\";\n     * const passphrase = \"passphrase\"\n     * const result = await provider.send(\"evm_addAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_addAccount(address, passphrase) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addUnknownAccount(addy, passphrase);\n    }\n    /**\n     * Removes an account from the `personal` namespace.\n     *\n     * Note: accounts not known to the `personal` namespace cannot be removed\n     * using this method.\n     * @param address - The address of the account to remove from the `personal`\n     * namespace.\n     * @param passphrase - The passphrase used to decrypt the account's private key.\n     * @returns `true` if the account was successfully removed. `false` if the\n     * account was not in the `personal` namespace.\n     * @example\n     * ```javascript\n     * const [address] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"\";\n     * const result = await provider.send(\"evm_removeAccount\", [address, passphrase] );\n     * console.log(result);\n     * ```\n     */\n    async evm_removeAccount(address, passphrase) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").removeKnownAccount(addy, passphrase);\n    }\n    //#endregion evm\n    //#region miner\n    /**\n     * Resume the CPU mining process with the given number of threads.\n     *\n     * Note: `threads` is ignored.\n     * @param threads - Number of threads to resume the CPU mining process with.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_start\");\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_start(threads = 1) {\n        if (__classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.instamine === \"eager\") {\n            const resumption = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n            // resumption can be undefined if the blockchain isn't currently paused\n            if (resumption &&\n                resumption.transactions != null &&\n                __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                assertExceptionalTransactions(resumption.transactions);\n            }\n        }\n        else {\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").resume(threads);\n        }\n        return true;\n    }\n    /**\n     * Stop the CPU mining operation.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * // check that eth_mining returns true\n     * console.log(await provider.send(\"eth_mining\"));\n     * await provider.send(\"miner_stop\");\n     * // check that eth_mining returns false\n     * console.log(await provider.send(\"eth_mining\"));\n     * ```\n     */\n    async miner_stop() {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").pause();\n        return true;\n    }\n    /**\n     * Sets the default accepted gas price when mining transactions.\n     * Any transactions that don't specify a gas price will use this amount.\n     * Transactions that are below this limit are excluded from the mining process.\n     * @param number - Default accepted gas price.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setGasPrice\", [300000] ));\n     * ```\n     */\n    async miner_setGasPrice(number) {\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice = utils_1.Quantity.from(number);\n        return true;\n    }\n    /**\n     * Sets the etherbase, where mining rewards will go.\n     * @param address - The address where the mining rewards will go.\n     * @returns `true`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(await provider.send(\"miner_setEtherbase\", [account] ));\n     * ```\n     */\n    async miner_setEtherbase(address) {\n        __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase = ethereum_address_1.Address.from(address);\n        return true;\n    }\n    /**\n     * Set the extraData block header field a miner can include.\n     * @param extra - The `extraData` to include.\n     * @returns If successfully set returns `true`, otherwise returns an error.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"miner_setExtra\", [\"0x0\"] ));\n     * ```\n     */\n    async miner_setExtra(extra) {\n        const bytes = utils_1.Data.from(extra);\n        const length = bytes.toBuffer().length;\n        if (length > 32) {\n            throw new Error(`extra exceeds max length. ${length} > 32`);\n        }\n        __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.extraData = bytes;\n        return true;\n    }\n    //#endregion\n    //#region web3\n    /**\n     * Returns the current client version.\n     * @returns The current client version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"web3_clientVersion\"));\n     * ```\n     */\n    async web3_clientVersion() {\n        return CLIENT_VERSION;\n    }\n    /**\n     * Returns Keccak-256 (not the standardized SHA3-256) of the given data.\n     * @param data - the data to convert into a SHA3 hash.\n     * @returns The SHA3 result of the given string.\n     * @example\n     * ```javascript\n     * const data = \"0xabcdef0123456789\";\n     * const sha3 = await provider.send(\"web3_sha3\", [data] );\n     * console.log(sha3);\n     * ```\n     */\n    async web3_sha3(data) {\n        return utils_1.Data.from((0, utils_1.keccak)(utils_1.Data.toBuffer(data)));\n    }\n    //#endregion\n    //#region net\n    /**\n     * Returns the current network id.\n     * @returns The current network id. This value should NOT be JSON-RPC\n     * Quantity/Data encoded.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_version\"));\n     * ```\n     */\n    async net_version() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.networkId.toString();\n    }\n    /**\n     * Returns `true` if client is actively listening for network connections.\n     * @returns `true` when listening, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_listening\"));\n     * ```\n     */\n    async net_listening() {\n        return true;\n    }\n    /**\n     * Returns number of peers currently connected to the client.\n     * @returns Number of connected peers.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"net_peerCount\"));\n     * ```\n     */\n    async net_peerCount() {\n        return utils_1.Quantity.Zero;\n    }\n    //#endregion\n    //#region eth\n    /**\n     * Generates and returns an estimate of how much gas is necessary to allow the\n     * transaction to complete. The transaction will not be added to the\n     * blockchain. Note that the estimate may be significantly more than the\n     * amount of gas actually used by the transaction, for a variety of reasons\n     * including EVM mechanics and node performance.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns The amount of gas used.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const gasEstimate = await provider.request({ method: \"eth_estimateGas\", params: [{ from, to }, \"latest\" ] });\n     * console.log(gasEstimate);\n     * ```\n     */\n    async eth_estimateGas(transaction, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        const generateVM = async () => {\n            // note(hack): blockchain.vm.copy() doesn't work so we just do it this way\n            // /shrug\n            const vm = await blockchain.createVmFromStateTrie(blockchain.trie.copy(false), options.chain.allowUnlimitedContractSize, false);\n            return vm;\n        };\n        return new Promise((resolve, reject) => {\n            const { coinbase } = blockchain;\n            const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n            if (tx.from == null) {\n                tx.from = coinbase;\n            }\n            if (tx.gas.isNull()) {\n                // eth_estimateGas isn't subject to regular transaction gas limits\n                tx.gas = options.miner.callGasLimit;\n            }\n            const block = new ethereum_block_1.RuntimeBlock(blockchain.common, utils_1.Quantity.from((parentHeader.number.toBigInt() || 0n) + 1n), parentHeader.parentHash, new ethereum_address_1.Address(parentHeader.miner.toBuffer()), tx.gas, parentHeader.gasUsed, parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, blockchain.getMixHash(parentHeader.parentHash.toBuffer()), 0n, // no baseFeePerGas for estimates\n            util_1.KECCAK256_RLP);\n            const runArgs = {\n                tx: tx.toVmTransaction(),\n                block,\n                skipBalance: true,\n                skipNonce: true\n            };\n            (0, gas_estimator_1.default)(generateVM, runArgs, (err, result) => {\n                if (err)\n                    return void reject(err);\n                resolve(utils_1.Quantity.from(result.gasEstimate));\n            });\n        });\n    }\n    /**\n     * Returns the current ethereum protocol version.\n     * @returns The current ethereum protocol version.\n     * @example\n     * ```javascript\n     * const version = await provider.request({ method: \"eth_protocolVersion\", params: [] });\n     * console.log(version);\n     * ```\n     */\n    async eth_protocolVersion() {\n        return PROTOCOL_VERSION;\n    }\n    /**\n     * Returns an object containing data about the sync status or `false` when not syncing.\n     *\n     * @returns An object with sync status data or `false`, when not syncing.\n     *\n     * * `startingBlock`: \\{bigint\\} The block at which the import started (will\n     *     only be reset, after the sync reached his head).\n     * * `currentBlock`: \\{bigint\\} The current block, same as `eth_blockNumber`.\n     * * `highestBlock`: \\{bigint\\} The estimated highest block.\n     *\n     * @example\n     * ```javascript\n     * const result = await provider.request({ method: \"eth_syncing\", params: [] });\n     * console.log(result);\n     * ```\n     */\n    async eth_syncing() {\n        return false;\n    }\n    /**\n     * Returns the client coinbase address.\n     * @returns The current coinbase address.\n     * @example\n     * ```javascript\n     * const coinbaseAddress = await provider.request({ method: \"eth_coinbase\" });\n     * console.log(coinbaseAddress);\n     * ```\n     */\n    async eth_coinbase() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").coinbase;\n    }\n    /**\n     * Returns information about a block by block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.request({ method: \"eth_getBlockByNumber\", params: [\"0x0\", false] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByNumber(number, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .get(number)\n            .catch(_ => null);\n        // @ts-ignore\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the details for the account at the specified address and block\n     * number, the account's Merkle proof, and the storage values for the\n     * specified storage keys with their Merkle-proofs.\n     *\n     * @param address - Address of the account\n     * @param storageKeys - Array of storage keys to be proofed.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\", or\n     * \"pending\".\n     * @returns An object containing the details for the account at the specified\n     * address and block number, the account's Merkle proof, and the\n     * storage-values for the specified storage keys with their Merkle-proofs:\n     * * `balance`: `QUANTITY` - the balance of the account.\n     * * `codeHash`: `DATA` - 32 Bytes - hash of the account. A simple account\n     *   without code will return\n     *   `\"0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470\"`\n     * * `nonce`: `QUANTITY` - the nonce of the account.\n     * * `storageHash`: `DATA` - 32 Bytes - SHA3 of the StorageRoot. All storage\n     *   will deliver a MerkleProof starting with this rootHash.\n     * * `accountProof`: `Array` - Array of rlp-serialized MerkleTree-Nodes,\n     *   starting with the stateRoot-NODE, following the path of the SHA3\n     *   (address) as key.\n     * * `storageProof`: `Array` - Array of storage entries as requested. Each\n     *   entry is an object with the following properties:\n     *   * `key`: `DATA` - the requested storage key.\n     *   * `value`: `QUANTITY` - the storage value.\n     *   * `proof`: `Array` - Array of rlp-serialized MerkleTree-Nodes, starting\n     *     with the storageHash-Node, following the path of the SHA3 (key) as\n     *     path.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting `value` to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const proof = await provider.request({ method: \"eth_getProof\", params: [txReceipt.contractAddress, [\"0x0\", \"0x1\"], \"latest\"] });\n     * console.log(proof);\n     * ```\n     */\n    async eth_getProof(address, storageKeys, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (blockchain.fallback) {\n            throw new Error(\"eth_getProof is not supported on a forked network. See https://github.com/trufflesuite/ganache/issues/3234 for details.\");\n        }\n        const targetBlock = await blockchain.blocks.get(blockNumber);\n        const vmAddress = ethereum_address_1.Address.from(address);\n        const slotBuffers = storageKeys.map(slotHex => utils_1.Data.toBuffer(slotHex, 32));\n        const stateManagerCopy = blockchain.vm.stateManager.copy();\n        await stateManagerCopy.setStateRoot(targetBlock.header.stateRoot.toBuffer());\n        const proof = await stateManagerCopy.getProof(vmAddress, slotBuffers);\n        return {\n            address: vmAddress,\n            balance: utils_1.Quantity.from(proof.balance),\n            codeHash: utils_1.Data.from(proof.codeHash),\n            nonce: utils_1.Quantity.from(proof.nonce),\n            storageHash: utils_1.Data.from(proof.storageHash),\n            accountProof: proof.accountProof.map(p => utils_1.Data.from(p)),\n            storageProof: proof.storageProof.map(storageProof => ({\n                key: utils_1.Data.from(storageProof.key),\n                proof: storageProof.proof.map(p => utils_1.Data.from(p)),\n                value: utils_1.Quantity.from(storageProof.value)\n            }))\n        };\n    }\n    /**\n     * Returns information about a block by block hash.\n     * @param hash - Hash of a block.\n     * @param transactions - If `true` it returns the full transaction objects, if `false` only the hashes of the\n     * transactions.\n     * @returns The block, `null` if the block doesn't exist.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `transactions`: `Array` - Array of transaction objects or 32 Bytes transaction hashes depending on the last parameter.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const block = await provider.request({ method: \"eth_getBlockByHash\", params: [txReceipt.blockHash, true] });\n     * console.log(block);\n     * ```\n     */\n    async eth_getBlockByHash(hash, transactions) {\n        if (typeof transactions === \"undefined\") {\n            transactions = false;\n        }\n        const block = await __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        return block ? block.toJSON(transactions) : null;\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block number.\n     * @param number - Integer of a block number, or the string \"earliest\", \"latest\" or \"pending\", as in the\n     * default block parameter.\n     * @returns Integer of the number of transactions in the block.\n     * @example\n     * ```javascript\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByNumber\", params: [\"0x0\"] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByNumber(blockNumber) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blocks.getEffectiveNumber(blockNumber);\n        const rawBlock = await blocks.getRawByBlockNumber(blockNum);\n        if (!rawBlock)\n            return null;\n        const [, rawTransactions] = (0, rlp_1.decode)(rawBlock);\n        return utils_1.Quantity.from(rawTransactions.length);\n    }\n    /**\n     * Returns the number of transactions in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns Number of transactions in the block.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const txCount = await provider.request({ method: \"eth_getBlockTransactionCountByHash\", params: [txReceipt.blockHash] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getBlockTransactionCountByHash(hash) {\n        const { blocks } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blocks.getByHash(hash).catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return utils_1.Quantity.from(transactions.length);\n    }\n    /**\n     * Returns a list of available compilers.\n     * @returns List of available compilers.\n     * @example\n     * ```javascript\n     * const compilers = await provider.send(\"eth_getCompilers\");\n     * console.log(compilers);\n     * ```\n     */\n    async eth_getCompilers() {\n        return [];\n    }\n    /**\n     * Returns information about a transaction by block hash and transaction index position.\n     * @param hash - Hash of a block.\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockHashAndIndex\", params: [ blockHash, transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockHashAndIndex(hash, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks\n            .getByHash(hash)\n            .catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns information about a transaction by block number and transaction index position.\n     * @param number - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param index - Integer of the transaction index position.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * const { transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByBlockNumberAndIndex\", params: [ \"latest\", transactionIndex ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByBlockNumberAndIndex(number, index) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const block = await blockchain.blocks.get(number).catch(_ => null);\n        if (!block)\n            return null;\n        const transactions = block.getTransactions();\n        return transactions[utils_1.Quantity.toNumber(index)].toJSON(blockchain.common);\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param hash - Hash of a block.\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockHash\", [blockHash] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockHash(hash) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the number of uncles in a block from a block matching the given block hash.\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @returns The number of uncles in a block.\n     * @example\n     * ```javascript\n     * const uncleCount = await provider.send(\"eth_getUncleCountByBlockNumber\", [\"latest\"] );\n     * console.log(uncleCount);\n     * ```\n     */\n    async eth_getUncleCountByBlockNumber(blockNumber) {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param hash - Hash of a block.\n     * @param index - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const blockHash = await provider.send(\"eth_getBlockByNumber\", [\"latest\"] );\n     * const block = await provider.send(\"eth_getUncleByBlockHashAndIndex\", [blockHash, \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockHashAndIndex(hash, index) {\n        return null;\n    }\n    /**\n     * Returns information about a uncle of a block by hash and uncle index position.\n     *\n     * @param blockNumber - A block number, or the string \"earliest\", \"latest\" or \"pending\".\n     * @param uncleIndex - The uncle's index position.\n     * @returns A block object or `null` when no block is found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - Hash of the block. `null` when pending.\n     * * `parentHash`: `DATA`, 32 Bytes - Hash of the parent block.\n     * * `sha3Uncles`: `DATA`, 32 Bytes - SHA3 of the uncles data in the block.\n     * * `miner`: `DATA`, 20 Bytes -  Address of the miner.\n     * * `stateRoot`: `DATA`, 32 Bytes - The root of the state trie of the block.\n     * * `transactionsRoot`: `DATA`, 32 Bytes - The root of the transaction trie of the block.\n     * * `receiptsRoot`: `DATA`, 32 Bytes - The root of the receipts trie of the block.\n     * * `logsBloom`: `DATA`, 256 Bytes - The bloom filter for the logs of the block. `null` when pending.\n     * * `difficulty`: `QUANTITY` - Integer of the difficulty of this block.\n     * * `number`: `QUANTITY` - The block number. `null` when pending.\n     * * `gasLimit`: `QUANTITY` - The maximum gas allowed in the block.\n     * * `gasUsed`: `QUANTITY` - Total gas used by all transactions in the block.\n     * * `timestamp`: `QUANTITY` - The unix timestamp for when the block was collated.\n     * * `extraData`: `DATA` - Extra data for the block.\n     * * `mixHash`: `DATA`, 256 Bytes - Hash identifier for the block.\n     * * `nonce`: `DATA`, 8 Bytes - Hash of the generated proof-of-work. `null` when pending.\n     * * `totalDifficulty`: `QUANTITY` - Integer of the total difficulty of the chain until this block.\n     * * `size`: `QUANTITY` - Integer the size of the block in bytes.\n     * * `uncles`: `Array` - Array of uncle hashes.\n     *\n     * * **NOTE: **The return does not contain a list of transactions in the uncle\n     * block, to get this, make another request to `eth_getBlockByHash`.\n     *\n     * @example\n     * ```javascript\n     * const block = await provider.send(\"eth_getUncleByBlockNumberAndIndex\", [\"latest\", \"0x0\"] );\n     * console.log(block);\n     * ```\n     */\n    async eth_getUncleByBlockNumberAndIndex(blockNumber, uncleIndex) {\n        return null;\n    }\n    /**\n     * Returns: An Array with the following elements\n     * 1: `DATA`, 32 Bytes - current block header pow-hash\n     * 2: `DATA`, 32 Bytes - the seed hash used for the DAG.\n     * 3: `DATA`, 32 Bytes - the boundary condition (\"target\"), 2^256 / difficulty.\n     *\n     * @returns The hash of the current block, the seedHash, and the boundary condition to be met (\"target\").\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"eth_getWork\", [] ));\n     * ```\n     */\n    async eth_getWork() {\n        return [];\n    }\n    /**\n     * Used for submitting a proof-of-work solution.\n     *\n     * @param nonce - The nonce found (64 bits).\n     * @param powHash - The header's pow-hash (256 bits).\n     * @param digest - The mix digest (256 bits).\n     * @returns `true` if the provided solution is valid, otherwise `false`.\n     * @example\n     * ```javascript\n     * const nonce = \"0xe0df4bd14ab39a71\";\n     * const powHash = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const digest = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitWork\", params: [nonce, powHash, digest] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitWork(nonce, powHash, digest) {\n        return false;\n    }\n    /**\n     * Used for submitting mining hashrate.\n     *\n     * @param hashRate - A hexadecimal string representation (32 bytes) of the hash rate.\n     * @param clientID - A random hexadecimal(32 bytes) ID identifying the client.\n     * @returns `true` if submitting went through successfully and `false` otherwise.\n     * @example\n     * ```javascript\n     * const hashRate = \"0x0000000000000000000000000000000000000000000000000000000000000001\";\n     * const clientId = \"0xb2222a74119abd18dbcb7d1f661c6578b7bbeb4984c50e66ed538347f606b971\";\n     * const result = await provider.request({ method: \"eth_submitHashrate\", params: [hashRate, clientId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_submitHashrate(hashRate, clientID) {\n        return false;\n    }\n    /**\n     * Returns `true` if client is actively mining new blocks.\n     * @returns returns `true` if the client is mining, otherwise `false`.\n     * @example\n     * ```javascript\n     * const isMining = await provider.request({ method: \"eth_mining\", params: [] });\n     * console.log(isMining);\n     * ```\n     */\n    async eth_mining() {\n        // we return the blockchain's started state\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted();\n    }\n    /**\n     * Returns the number of hashes per second that the node is mining with.\n     * @returns Number of hashes per second.\n     * @example\n     * ```javascript\n     * const hashrate = await provider.request({ method: \"eth_hashrate\", params: [] });\n     * console.log(hashrate);\n     * ```\n     */\n    async eth_hashrate() {\n        return utils_1.Quantity.Zero;\n    }\n    /**\n     * Returns the current price per gas in wei.\n     * @returns Integer of the current gas price in wei.\n     * @example\n     * ```javascript\n     * const gasPrice = await provider.request({ method: \"eth_gasPrice\", params: [] });\n     * console.log(gasPrice);\n     * ```\n     */\n    async eth_gasPrice() {\n        return __classPrivateFieldGet(this, _EthereumApi_options, \"f\").miner.defaultGasPrice;\n    }\n    /**\n     * Returns a `maxPriorityFeePerGas` value suitable for quick transaction inclusion.\n     * @returns The maxPriorityFeePerGas in wei.\n     * @example\n     * ```javascript\n     * const suggestedTip = await provider.request({ method: \"eth_maxPriorityFeePerGas\", params: [] });\n     * console.log(suggestedTip);\n     * ```\n     */\n    async eth_maxPriorityFeePerGas() {\n        return utils_1.Quantity.Gwei;\n    }\n    /**\n     * Returns a list of addresses owned by client.\n     * @returns Array of 20 Bytes - addresses owned by the client.\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * console.log(accounts);\n     * ```\n     */\n    async eth_accounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Returns the number of the most recent block.\n     * @returns The current block number the client is on.\n     * @example\n     * ```javascript\n     * const blockNumber = await provider.request({ method: \"eth_blockNumber\" });\n     * console.log(blockNumber);\n     * ```\n     */\n    async eth_blockNumber() {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blocks.latest.header.number;\n    }\n    /**\n     * Returns the currently configured chain id, a value used in\n     * replay-protected transaction signing as introduced by EIP-155.\n     * @returns The chain id as a string.\n     * @EIP [155 – Simple replay attack protection](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-155.md)\n     *\n     * @example\n     * ```javascript\n     * const chainId = await provider.send(\"eth_chainId\");\n     * console.log(chainId);\n     * ```\n     */\n    async eth_chainId() {\n        return utils_1.Quantity.from(__classPrivateFieldGet(this, _EthereumApi_options, \"f\").chain.chainId);\n    }\n    /**\n     * Returns the balance of the account of given address.\n     * @param address - Address to check for balance.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     *\n     * @returns Integer of the account balance in wei.\n     *\n     * @example\n     * ```javascript\n     * const accounts = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const balance = await provider.request({ method: \"eth_getBalance\", params: [accounts[0], \"latest\"] });\n     * console.log(balance);\n     * ```\n     */\n    async eth_getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getBalance(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns code at a given address.\n     *\n     * @param address - Address.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\" or \"pending\".\n     * @returns The code from the given address.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const code = await provider.request({ method: \"eth_getCode\", params: [txReceipt.contractAddress, \"latest\"] });\n     * console.log(code);\n     * ```\n     */\n    async eth_getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { accounts } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        return accounts.getCode(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Returns the value from a storage position at a given address.\n     * @param address - Address of the storage.\n     * @param position - Integer of the position in the storage.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @returns The value in storage at the requested position.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storageValue = await provider.request({ method: \"eth_getStorageAt\", params: [txReceipt.contractAddress, \"0x0\", \"latest\"] });\n     * console.log(storageValue);\n     * ```\n     */\n    async eth_getStorageAt(address, position, blockNumber = ethereum_utils_1.Tag.latest) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const blockNum = blockchain.blocks.getEffectiveNumber(blockNumber);\n        const block = await blockchain.blocks.getRawByBlockNumber(blockNum);\n        if (!block)\n            throw new Error(\"header not found\");\n        const [[, , , blockStateRoot]] = (0, rlp_1.decode)(block);\n        const trie = blockchain.trie.copy(false);\n        trie.setContext(blockStateRoot, null, blockNum);\n        const posBuff = utils_1.Quantity.toBuffer(position);\n        const length = posBuff.length;\n        let paddedPosBuff;\n        if (length < 32) {\n            // storage locations are 32 bytes wide, so we need to expand any value\n            // given to 32 bytes.\n            paddedPosBuff = Buffer.allocUnsafe(32).fill(0);\n            posBuff.copy(paddedPosBuff, 32 - length);\n        }\n        else if (length === 32) {\n            paddedPosBuff = posBuff;\n        }\n        else {\n            // if the position value we're passed is > 32 bytes, truncate it. This is\n            // what geth does.\n            paddedPosBuff = posBuff.slice(-32);\n        }\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        const addressData = await trie.get(addressBuf);\n        // An address's stateRoot is stored in the 3rd rlp entry\n        const addressStateRoot = (0, rlp_1.decode)(addressData)[2];\n        trie.setContext(addressStateRoot, addressBuf, blockNum);\n        const value = await trie.get(paddedPosBuff);\n        return utils_1.Data.from((0, rlp_1.decode)(value), 32);\n    }\n    /**\n     * Returns the information about a transaction requested by transaction hash.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns The transaction object or `null` if no transaction was found.\n     *\n     * * `hash`: `DATA`, 32 Bytes - The transaction hash.\n     * * `nonce`: `QUANTITY` - The number of transactions made by the sender prior to this one.\n     * * `blockHash`: `DATA`, 32 Bytes - The hash of the block the transaction is in. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The number of the block the transaction is in. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - The index position of the transaction in the block.\n     * * `from`: `DATA`, 20 Bytes - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 Bytes - The address the transaction is sent to.\n     * * `value`: `QUANTITY` - The value transferred in wei.\n     * * `gas`: `QUANTITY` - The gas provided by the sender.\n     * * `gasPrice`: `QUANTITY` - The price of gas in wei.\n     * * `input`: `DATA` - The data sent along with the transaction.\n     * * `v`: `QUANTITY` - ECDSA recovery id.\n     * * `r`: `DATA`, 32 Bytes - ECDSA signature r.\n     * * `s`: `DATA`, 32 Bytes - ECDSA signature s.\n     *\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     *\n     * const tx = await provider.request({ method: \"eth_getTransactionByHash\", params: [ txHash ] });\n     * console.log(tx);\n     * ```\n     */\n    async eth_getTransactionByHash(transactionHash) {\n        const { transactions } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const hashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // we must check the database before checking the pending cache, because the\n        // cache is updated _after_ the transaction is already in the database, and\n        // the database contains block info whereas the pending cache doesn't.\n        const transaction = await transactions.get(hashBuffer);\n        if (transaction === null) {\n            // if we can't find it in the list of pending transactions, check the db!\n            const tx = transactions.transactionPool.find(hashBuffer);\n            return tx ? tx.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common) : null;\n        }\n        else {\n            return transaction.toJSON(__classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").common);\n        }\n    }\n    /**\n     * Returns the receipt of a transaction by transaction hash.\n     *\n     * Note: The receipt is not available for pending transactions.\n     *\n     * @param transactionHash - Hash of a transaction.\n     * @returns Returns the receipt of a transaction by transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     *\n     * const txReceipt = await provider.request({ method: \"eth_getTransactionReceipt\", params: [ txHash ] });\n     * console.log(txReceipt);\n     * ```\n     */\n    async eth_getTransactionReceipt(transactionHash) {\n        const { transactions, transactionReceipts, blocks, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const dataHash = utils_1.Data.from(transactionHash);\n        const txHash = dataHash.toBuffer();\n        const transactionPromise = transactions.get(txHash);\n        const receiptPromise = transactionReceipts.get(txHash);\n        const [transaction, receipt] = await Promise.all([\n            transactionPromise,\n            receiptPromise\n        ]);\n        if (transaction) {\n            return receipt.toJSON(transaction, common);\n        }\n        // if we are performing \"strict\" instamining, then check to see if the\n        // transaction is pending so as to warn about the v7 instamine changes\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        if (options.miner.blockTime <= 0 &&\n            options.miner.instamine === \"strict\" &&\n            __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").isStarted()) {\n            const tx = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").transactions.transactionPool.find(txHash);\n            if (tx != null) {\n                options.logging.logger.log(\" > Ganache `eth_getTransactionReceipt` notice: the transaction with hash\\n\" +\n                    ` > \\`${dataHash.toString()}\\` has not\\n` +\n                    \" > yet been mined.\" +\n                    \" See https://trfl.io/v7-instamine for additional information.\");\n            }\n        }\n        return null;\n    }\n    /**\n     * Creates new message call transaction or a contract creation, if the data field contains code.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, privateKey);\n    }\n    /**\n     * Signs a transaction that can be submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to }] });\n     * console.log(signedTx)\n     * ```\n     */\n    async eth_signTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const fromString = tx.from.toString();\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const isKnownAccount = wallet.knownAccounts.has(fromString);\n        const privateKey = wallet.unlockedAccounts.get(fromString);\n        if (privateKey === undefined) {\n            const msg = isKnownAccount\n                ? \"authentication needed: passphrase or unlock\"\n                : \"sender account not recognized\";\n            throw new Error(msg);\n        }\n        tx.signAndHash(privateKey.toBuffer());\n        return utils_1.Data.from(tx.serialized);\n    }\n    /**\n     * Creates new message call transaction or a contract creation for signed transactions.\n     * @param transaction - The signed transaction data.\n     * @returns The transaction hash.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const signedTx = await provider.request({ method: \"eth_signTransaction\", params: [{ from, to, gas: \"0x5b8d80\", maxFeePerGas: \"0xffffffff\" }] });\n     * const txHash = await provider.send(\"eth_sendRawTransaction\", [signedTx] );\n     * console.log(txHash);\n     * ```\n     */\n    async eth_sendRawTransaction(transaction) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromString(transaction, blockchain.common);\n        return blockchain.queueTransaction(tx);\n    }\n    /**\n     * The sign method calculates an Ethereum specific signature with:\n     * `sign(keccak256(\"\\x19Ethereum Signed Message:\\n\" + message.length + message)))`.\n     *\n     * By adding a prefix to the message makes the calculated signature\n     * recognizable as an Ethereum specific signature. This prevents misuse where a malicious DApp can sign arbitrary data\n     *  (e.g. transaction) and use the signature to impersonate the victim.\n     *\n     * Note the address to sign with must be unlocked.\n     *\n     * @param address - Address to sign with.\n     * @param message - Message to sign.\n     * @returns Signature - a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const msg = \"0x307866666666666666666666\";\n     * const signature = await provider.request({ method: \"eth_sign\", params: [account, msg] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_sign(address, message) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        const messageHash = (0, util_1.hashPersonalMessage)(utils_1.Data.toBuffer(message));\n        const { v, r, s } = (0, utils_1.ecsign)(messageHash, privateKey.toBuffer());\n        return (0, util_1.toRpcSig)(v, r, s);\n    }\n    /**\n     * Identical to eth_signTypedData_v4.\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData(address, typedData) {\n        return this.eth_signTypedData_v4(address, typedData);\n    }\n    /**\n     *\n     * @param address - Address of the account that will sign the messages.\n     * @param typedData - Typed structured data to be signed.\n     * @returns Signature. As in `eth_sign`, it is a hex encoded 129 byte array\n     * starting with `0x`. It encodes the `r`, `s`, and `v` parameters from\n     * appendix F of the [yellow paper](https://ethereum.github.io/yellowpaper/paper.pdf)\n     *  in big-endian format. Bytes 0...64 contain the `r` parameter, bytes\n     * 64...128 the `s` parameter, and the last byte the `v` parameter. Note\n     * that the `v` parameter includes the chain id as specified in [EIP-155](https://eips.ethereum.org/EIPS/eip-155).\n     * @EIP [712](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-712.md)\n     * @example\n     * ```javascript\n     * const [account] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const typedData = {\n     *  types: {\n     *    EIP712Domain: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'version', type: 'string' },\n     *      { name: 'chainId', type: 'uint256' },\n     *      { name: 'verifyingContract', type: 'address' },\n     *    ],\n     *    Person: [\n     *      { name: 'name', type: 'string' },\n     *      { name: 'wallet', type: 'address' }\n     *    ],\n     *    Mail: [\n     *      { name: 'from', type: 'Person' },\n     *      { name: 'to', type: 'Person' },\n     *      { name: 'contents', type: 'string' }\n     *    ],\n     *  },\n     *  primaryType: 'Mail',\n     *  domain: {\n     *    name: 'Ether Mail',\n     *    version: '1',\n     *    chainId: 1,\n     *    verifyingContract: '0xCcCCccccCCCCcCCCCCCcCcCccCcCCCcCcccccccC',\n     *  },\n     *  message: {\n     *    from: {\n     *      name: 'Cow',\n     *      wallet: '0xCD2a3d9F938E13CD947Ec05AbC7FE734Df8DD826',\n     *    },\n     *    to: {\n     *      name: 'Bob',\n     *      wallet: '0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB',\n     *    },\n     *    contents: 'Hello, Bob!',\n     *  },\n     * };\n     * const signature = await provider.request({ method: \"eth_signTypedData_v4\", params: [account, typedData] });\n     * console.log(signature);\n     * ```\n     */\n    async eth_signTypedData_v4(address, typedData) {\n        const account = ethereum_address_1.Address.from(address).toString().toLowerCase();\n        const privateKey = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockedAccounts.get(account);\n        if (privateKey == null) {\n            throw new Error(\"cannot sign data; no private key\");\n        }\n        if (typeof typedData === \"string\") {\n            throw new Error(\"cannot sign data; string sent, expected object\");\n        }\n        if (!typedData.types) {\n            throw new Error(\"cannot sign data; types missing\");\n        }\n        if (!typedData.types.EIP712Domain) {\n            throw new Error(\"cannot sign data; EIP712Domain definition missing\");\n        }\n        if (!typedData.domain) {\n            throw new Error(\"cannot sign data; domain missing\");\n        }\n        if (!typedData.primaryType) {\n            throw new Error(\"cannot sign data; primaryType missing\");\n        }\n        if (!typedData.message) {\n            throw new Error(\"cannot sign data; message missing\");\n        }\n        return (0, eth_sig_util_1.signTypedData_v4)(privateKey.toBuffer(), { data: typedData });\n    }\n    eth_subscribe(subscriptionName, options) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        switch (subscriptionName) {\n            case \"newHeads\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n                    const value = block;\n                    const header = value.header;\n                    const result = {\n                        logsBloom: header.logsBloom,\n                        miner: header.miner,\n                        difficulty: header.difficulty,\n                        totalDifficulty: header.totalDifficulty,\n                        extraData: header.extraData,\n                        gasLimit: header.gasLimit,\n                        gasUsed: header.gasUsed,\n                        hash: block.hash(),\n                        mixHash: block.header.mixHash,\n                        nonce: header.nonce,\n                        number: header.number,\n                        parentHash: header.parentHash,\n                        receiptsRoot: header.receiptsRoot,\n                        stateRoot: header.stateRoot,\n                        timestamp: header.timestamp,\n                        transactionsRoot: header.transactionsRoot,\n                        sha3Uncles: header.sha3Uncles\n                    };\n                    if (header.baseFeePerGas !== undefined) {\n                        result.baseFeePerGas = header.baseFeePerGas;\n                    }\n                    if (header.withdrawalsRoot !== undefined) {\n                        result.withdrawalsRoot = header.withdrawalsRoot;\n                    }\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"logs\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const { addresses, topics } = options\n                    ? (0, filter_parsing_1.parseFilterDetails)(options)\n                    : { addresses: [], topics: [] };\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"blockLogs\", (blockLogs) => {\n                    for (const log of blockLogs.filter(addresses, topics)) {\n                        promiEvent.emit(\"message\", {\n                            type: \"eth_subscription\",\n                            data: {\n                                result: log,\n                                subscription: subscription.toString()\n                            }\n                        });\n                    }\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"newPendingTransactions\": {\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n                    const result = transaction.hash.toString();\n                    promiEvent.emit(\"message\", {\n                        type: \"eth_subscription\",\n                        data: {\n                            result,\n                            subscription: subscription.toString()\n                        }\n                    });\n                });\n                subscriptions.set(subscription.toString(), unsubscribe);\n                return promiEvent;\n            }\n            case \"syncing\": {\n                // ganache doesn't sync, so doing nothing is perfectly valid.\n                const subscription = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n                const promiEvent = utils_1.PromiEvent.resolve(subscription);\n                __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\").set(subscription.toString(), () => { });\n                return promiEvent;\n            }\n            default:\n                throw new ethereum_utils_1.CodedError(`no \\\"${subscriptionName}\\\" subscription in eth namespace`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Cancel a subscription to a particular event. Returns a boolean indicating\n     * if the subscription was successfully cancelled.\n     *\n     * @param subscriptionId - The ID of the subscription to unsubscribe to.\n     * @returns `true` if subscription was cancelled successfully, otherwise `false`.\n     * @example\n     * ```javascript\n     * const subscriptionId = await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const result = await provider.request({ method: \"eth_unsubscribe\", params: [subscriptionId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_unsubscribe(subscriptionId) {\n        const subscriptions = __classPrivateFieldGet(this, _EthereumApi_subscriptions, \"f\");\n        const unsubscribe = subscriptions.get(subscriptionId);\n        if (unsubscribe) {\n            subscriptions.delete(subscriptionId);\n            unsubscribe();\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    /**\n     * Creates a filter in the node, to notify when a new block arrives. To check\n     * if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newBlockFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newBlockFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"block\", (block) => {\n            value.updates.push(block.hash());\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.block\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter in the node, to notify when new pending transactions\n     * arrive. To check if the state has changed, call `eth_getFilterChanges`.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newPendingTransactionFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newPendingTransactionFilter() {\n        const unsubscribe = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").on(\"pendingTransaction\", (transaction) => {\n            value.updates.push(transaction.hash);\n        });\n        const value = {\n            updates: [],\n            unsubscribe,\n            filter: null,\n            type: ethereum_utils_1.FilterTypes.pendingTransaction\n        };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Creates a filter object, based on filter options, to notify when the state\n     * changes (logs). To check if the state has changed, call\n     * `eth_getFilterChanges`.\n     *\n     * If the from `fromBlock` or `toBlock` option are equal to \"latest\" the\n     * filter continually append logs for whatever block is seen as latest at the\n     * time the block was mined, not just for the block that was \"latest\" when the\n     * filter was created.\n     *\n     * ### A note on specifying topic filters:\n     * Topics are order-dependent. A transaction with a log with topics [A, B]\n     * will be matched by the following topic filters:\n     *  * `[]` “anything”\n     *  * `[A]` “A in first position (and anything after)”\n     *  * `[null, B]` “anything in first position AND B in second position (and\n     * anything after)”\n     *  * `[A, B]` “A in first position AND B in second position (and anything\n     * after)”\n     *  * `[[A, B], [A, B]]` “(A OR B) in first position AND (A OR B) in second\n     * position (and anything after)”\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     *\n     * @param filter - The filter options as seen in source.\n     *\n     * @returns A filter id.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * console.log(filterId);\n     * ```\n     */\n    async eth_newFilter(filter) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (filter == null)\n            filter = {};\n        const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter || {});\n        const unsubscribe = blockchain.on(\"blockLogs\", (blockLogs) => {\n            const blockNumber = blockLogs.blockNumber;\n            // every time we get a blockLogs message we re-check what the filter's\n            // range is. We do this because \"latest\" isn't the latest block at the\n            // time the filter was set up, rather it is the actual latest *mined*\n            // block (that is: not pending)\n            const { fromBlock, toBlock } = (0, filter_parsing_1.parseFilterRange)(filter, blockchain);\n            if (fromBlock <= blockNumber && toBlock >= blockNumber) {\n                value.updates.push(...blockLogs.filter(addresses, topics));\n            }\n        });\n        const value = { updates: [], unsubscribe, filter, type: ethereum_utils_1.FilterTypes.log };\n        const filterId = __classPrivateFieldGet(this, _EthereumApi_getId, \"f\").call(this);\n        __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").set(filterId.toString(), value);\n        return filterId;\n    }\n    /**\n     * Polling method for a filter, which returns an array of logs, block hashes,\n     * or transaction hashes, depending on the filter type, which occurred since\n     * last poll.\n     *\n     * @param filterId - The filter id.\n     * @returns An array of logs, block hashes, or transaction hashes, depending\n     * on the filter type, which occurred since last poll.\n     *\n     * For filters created with `eth_newBlockFilter` the return are block hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newPendingTransactionFilter` the return are transaction hashes (`DATA`, 32 Bytes).\n     *\n     * For filters created with `eth_newFilter` the return are log objects with the following parameters:\n     * * `removed`: `TAG` - `true` when the log was removed, `false` if its a valid log.\n     * * `logIndex`: `QUANTITY` - Integer of the log index position in the block. `null` when pending.\n     * * `transactionIndex`: `QUANTITY` - Integer of the transactions index position. `null` when pending.\n     * * `transactionHash`: `DATA`, 32 Bytes - Hash of the transaction where the log was. `null` when pending.\n     * * `blockHash`: `DATA`, 32 Bytes - Hash of the block where the log was. `null` when pending.\n     * * `blockNumber`: `QUANTITY` - The block number where the log was in. `null` when pending.\n     * * `address`: `DATA`, 20 Bytes - The address from which the log originated.\n     * * `data`: `DATA` - Contains one or more 32 Bytes non-indexed arguments of the log.\n     * * `topics`: `Array of DATA` - Array of 0 to 4 32 Bytes `DATA` of indexed log arguments.\n     *\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     console.log(\"Entered Logs contract constructor.\");\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     console.log(\"Called logNTimes with the parameter: %o\", n);\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * const subscriptionId = await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     *\n     * const changes = await provider.request({ method: \"eth_getFilterChanges\", params: [filterId] });\n     * console.log(changes);\n     *\n     * await provider.send(\"eth_unsubscribe\", [subscriptionId]);\n     * ```\n     */\n    async eth_getFilterChanges(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter) {\n            const updates = filter.updates;\n            filter.updates = [];\n            return updates;\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is\n     * no longer needed.\n     *\n     * @param filterId - The filter id.\n     * @returns `true` if the filter was successfully uninstalled, otherwise\n     * `false`.\n     * @example\n     * ```javascript\n     * const filterId = await provider.request({ method: \"eth_newFilter\", params: [] });\n     * const result = await provider.request({ method: \"eth_uninstallFilter\", params: [filterId] });\n     * console.log(result);\n     * ```\n     */\n    async eth_uninstallFilter(filterId) {\n        const id = utils_1.Quantity.toString(filterId);\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(id);\n        if (!filter)\n            return false;\n        filter.unsubscribe();\n        return __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").delete(id);\n    }\n    /**\n     * Returns an array of all logs matching filter with given id.\n     *\n     * @param filterId - The filter id.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     console.log(\"Entered Logs contract constructor.\");\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     console.log(\"Called logNTimes with the parameter: %o\", n);\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     * const filterId = await provider.send(\"eth_newFilter\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     *\n     * const logs = await provider.request({ method: \"eth_getFilterLogs\", params: [filterId] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getFilterLogs(filterId) {\n        const filter = __classPrivateFieldGet(this, _EthereumApi_filters, \"f\").get(utils_1.Quantity.toString(filterId));\n        if (filter && filter.type === ethereum_utils_1.FilterTypes.log) {\n            return this.eth_getLogs(filter.filter);\n        }\n        else {\n            throw new Error(\"filter not found\");\n        }\n    }\n    /**\n     * Returns an array of all logs matching a given filter object.\n     *\n     * Filter options:\n     * * `fromBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `toBlock`: `QUANTITY | TAG` (optional) - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * * `address`: `DATA | Array` (optional) - Contract address or a list of addresses from which the logs should originate.\n     * * `topics`: `Array of DATA` (optional) - Array of 32 Bytes `DATA` topics. Topics are order-dependent. Each topic can also\n     * be an array of `DATA` with \"or\" options.\n     * * `blockHash`: `DATA`, 32 Bytes (optional) - Hash of the block to restrict logs from. If `blockHash` is present,\n     * then neither `fromBlock` or `toBlock` are allowed.\n     *\n     * @param filter - The filter options as seen in source.\n     * @returns Array of log objects, or an empty array.\n     * @example\n     * ```javascript\n     * // Logs.sol\n     * // // SPDX-License-Identifier: MIT\n     * // pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * // contract Logs {\n     * //   event Event(uint256 indexed first, uint256 indexed second);\n     * //   constructor() {\n     * //     console.log(\"Entered Logs contract constructor.\");\n     * //     emit Event(1, 2);\n     * //   }\n     * //\n     * //   function logNTimes(uint8 n) public {\n     * //     console.log(\"Called logNTimes with the parameter: %o\", n);\n     * //     for (uint8 i = 0; i < n; i++) {\n     * //       emit Event(i, i);\n     * //     }\n     * //   }\n     * // }\n     *\n     * const logsContract = \"0x608060405234801561001057600080fd5b5061003c60405180606001604052806022815260200161064b6022913961007160201b6100cd1760201c565b600260017f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a36101f0565b61010d8160405160240161008591906101ce565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061011060201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561016f578082015181840152602081019050610154565b8381111561017e576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a082610135565b6101aa8185610140565b93506101ba818560208601610151565b6101c381610184565b840191505092915050565b600060208201905081810360008301526101e88184610195565b905092915050565b61044c806101ff6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635e19e69f14610030575b600080fd5b61004a60048036038101906100459190610265565b61004c565b005b6100716040518060600160405280602781526020016103f0602791398260ff16610166565b60005b8160ff168160ff1610156100c9578060ff168160ff167f34e802e5ebd1f132e05852c5064046c1b535831ec52f1c4997fc6fdc4d5345b360405160405180910390a380806100c1906102c1565b915050610074565b5050565b610163816040516024016100e19190610384565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b50565b6101fe828260405160240161017c9291906103bf565b6040516020818303038152906040527fb60e72cc000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610202565b5050565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600080fd5b600060ff82169050919050565b6102428161022c565b811461024d57600080fd5b50565b60008135905061025f81610239565b92915050565b60006020828403121561027b5761027a610227565b5b600061028984828501610250565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006102cc8261022c565b915060ff8214156102e0576102df610292565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561032557808201518184015260208101905061030a565b83811115610334576000848401525b50505050565b6000601f19601f8301169050919050565b6000610356826102eb565b61036081856102f6565b9350610370818560208601610307565b6103798161033a565b840191505092915050565b6000602082019050818103600083015261039e818461034b565b905092915050565b6000819050919050565b6103b9816103a6565b82525050565b600060408201905081810360008301526103d9818561034b565b90506103e860208301846103b0565b939250505056fe43616c6c6564206c6f674e54696d657320776974682074686520706172616d657465723a20256fa2646970667358221220efe39b9dc769a10eb54b65df8344ee92d584288e80e1c170636e1ede5dd7c3e064736f6c634300080b0033456e7465726564204c6f677320636f6e747261637420636f6e7374727563746f722e\";\n     * const [from] = await provider.send(\"eth_accounts\");\n     *\n     * await provider.send(\"eth_subscribe\", [\"newHeads\"]);\n     * const txHash = await provider.send(\"eth_sendTransaction\", [{ from, data: logsContract, gas: \"0x5b8d80\" }] );\n     *\n     * const { contractAddress } = await provider.send(\"eth_getTransactionReceipt\", [txHash] );\n     *\n     * const logs = await provider.request({ method: \"eth_getLogs\", params: [{ address: contractAddress }] });\n     * console.log(logs);\n     * ```\n     */\n    async eth_getLogs(filter) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").blockLogs.getLogs(filter);\n    }\n    /**\n     * Returns the number of transactions sent from an address.\n     *\n     * @param address - `DATA`, 20 Bytes - The address to get number of transactions sent from\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     * or \"pending\".\n     * @returns Number of transactions sent from this address.\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to, gas: \"0x5b8d80\" }] });\n     *\n     * const txCount = await provider.request({ method: \"eth_getTransactionCount\", params: [ from, \"latest\" ] });\n     * console.log(txCount);\n     * ```\n     */\n    async eth_getTransactionCount(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").accounts.getNonce(ethereum_address_1.Address.from(address), blockNumber);\n    }\n    /**\n     * Executes a new message call immediately without creating a transaction on the block chain.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * State Override object - An address-to-state mapping, where each entry specifies some\n     * state to be ephemerally overridden prior to executing the call. Each address maps to an\n     * object containing:\n     * * `balance`: `QUANTITY` (optional) - The balance to set for the account before executing the call.\n     * * `nonce`: `QUANTITY` (optional) - The nonce to set for the account before executing the call.\n     * * `code`: `DATA` (optional) - The EVM bytecode to set for the account before executing the call.\n     * * `state`: `OBJECT` (optional*) - Key-value mapping to override *all* slots in the account storage before executing the call.\n     * * `stateDiff`: `OBJECT` (optional*) - Key-value mapping to override *individual* slots in the account storage before executing the call.\n     * * *Note - `state` and `stateDiff` fields are mutually exclusive.\n     * @param transaction - The transaction call object as seen in source.\n     * @param blockNumber - Integer block number, or the string \"latest\", \"earliest\"\n     *  or \"pending\".\n     * @param overrides - State overrides to apply during the simulation.\n     *\n     * @returns The return value of executed contract.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const txObj = { from, gas: \"0x5b8d80\", gasPrice: \"0x1dfd14000\", value:\"0x0\", data: simpleSol };\n     * const slot = \"0x0000000000000000000000000000000000000000000000000000000000000005\"\n     * const overrides = { [from]: { balance: \"0x3e8\", nonce: \"0x5\", code: \"0xbaddad42\", stateDiff: { [slot]: \"0x00000000000000000000000000000000000000000000000000000000baddad42\"}}};\n     * const result = await provider.request({ method: \"eth_call\", params: [txObj, \"latest\", overrides] });\n     * console.log(result);\n     * ```\n     */\n    async eth_call(transaction, blockNumber = ethereum_utils_1.Tag.latest, overrides = {}) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const common = blockchain.common;\n        const blocks = blockchain.blocks;\n        const parentBlock = await blocks.get(blockNumber);\n        const parentHeader = parentBlock.header;\n        const options = __classPrivateFieldGet(this, _EthereumApi_options, \"f\");\n        let gas;\n        if (typeof transaction.gasLimit === \"undefined\") {\n            if (typeof transaction.gas !== \"undefined\") {\n                gas = utils_1.Quantity.from(transaction.gas);\n            }\n            else {\n                // eth_call isn't subject to regular transaction gas limits by default\n                gas = options.miner.callGasLimit;\n            }\n        }\n        else {\n            gas = utils_1.Quantity.from(transaction.gasLimit);\n        }\n        let data;\n        if (typeof transaction.data === \"undefined\") {\n            if (typeof transaction.input !== \"undefined\") {\n                data = utils_1.Data.from(transaction.input);\n            }\n        }\n        else {\n            data = utils_1.Data.from(transaction.data);\n        }\n        // eth_call doesn't validate that the transaction has a sufficient\n        // \"effectiveGasPrice\". however, if `maxPriorityFeePerGas` or\n        // `maxFeePerGas` values are set, the baseFeePerGas is used to calculate\n        // the effectiveGasPrice, which is used to calculate tx costs/refunds.\n        const baseFeePerGasBigInt = parentBlock.header.baseFeePerGas\n            ? parentBlock.header.baseFeePerGas.toBigInt()\n            : undefined;\n        let gasPrice;\n        const hasGasPrice = typeof transaction.gasPrice !== \"undefined\";\n        // if the original block didn't have a `baseFeePerGas` (baseFeePerGasBigInt\n        // is undefined) then EIP-1559 was not active on that block and we can't use\n        // type 2 fee values (as they rely on the baseFee)\n        if (!common.isActivatedEIP(1559) || baseFeePerGasBigInt === undefined) {\n            gasPrice = utils_1.Quantity.from(hasGasPrice ? 0 : transaction.gasPrice);\n        }\n        else {\n            const hasMaxFeePerGas = typeof transaction.maxFeePerGas !== \"undefined\";\n            const hasMaxPriorityFeePerGas = typeof transaction.maxPriorityFeePerGas !== \"undefined\";\n            if (hasGasPrice && (hasMaxFeePerGas || hasMaxPriorityFeePerGas)) {\n                throw new Error(\"both gasPrice and (maxFeePerGas or maxPriorityFeePerGas) specified\");\n            }\n            // User specified 1559 gas fields (or none), use those\n            let maxFeePerGas = 0n;\n            let maxPriorityFeePerGas = 0n;\n            if (hasMaxFeePerGas) {\n                maxFeePerGas = BigInt(transaction.maxFeePerGas);\n            }\n            if (hasMaxPriorityFeePerGas) {\n                maxPriorityFeePerGas = BigInt(transaction.maxPriorityFeePerGas);\n            }\n            if (maxPriorityFeePerGas > 0 || maxFeePerGas > 0) {\n                const a = maxFeePerGas - baseFeePerGasBigInt;\n                const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n                gasPrice = utils_1.Quantity.from(baseFeePerGasBigInt + tip);\n            }\n            else {\n                gasPrice = utils_1.Quantity.from(0);\n            }\n        }\n        const block = new ethereum_block_1.RuntimeBlock(blockchain.common, parentHeader.number, parentHeader.parentHash, blockchain.coinbase, gas, parentHeader.gasUsed, parentHeader.timestamp, options.miner.difficulty, parentHeader.totalDifficulty, blockchain.getMixHash(parentHeader.parentHash.toBuffer()), baseFeePerGasBigInt, util_1.KECCAK256_RLP);\n        const simulatedTransaction = {\n            gas,\n            // if we don't have a from address, our caller sut be the configured coinbase address\n            from: transaction.from == null\n                ? blockchain.coinbase\n                : ethereum_address_1.Address.from(transaction.from),\n            to: transaction.to == null ? null : ethereum_address_1.Address.from(transaction.to),\n            gasPrice,\n            value: transaction.value == null ? null : utils_1.Quantity.from(transaction.value),\n            data,\n            block\n        };\n        return blockchain.simulateTransaction(simulatedTransaction, parentBlock, overrides);\n    }\n    /**\n     * Returns a collection of historical block gas data and optional effective fee spent per unit of gas for a given percentile of block gas usage.\n     *\n     * @param blockCount - Range of blocks between 1 and 1024. Will return less than the requested range if not all blocks are available.\n     * @param newestBlock - Highest block of the requested range.\n     * @param rewardPercentiles - A monotonically increasing list of percentile values. For each block in the requested range,\n     * the transactions will be sorted in ascending order by effective tip per gas and the corresponding effective tip for the percentile\n     * will be determined, accounting for gas consumed.\n     * @returns Transaction base fee per gas and effective priority fee per gas for the requested/supported block range\n     *\n     * * `oldestBlock`:  - Lowest number block of the returned range.\n     * * `baseFeePerGas`:  - An array of block base fees per gas. This includes the next block after the newest of the returned range,\n     * because this value can be derived from the newest block. Zeroes are returned for pre-EIP-1559 blocks.\n     * * `gasUsedRatio`:  - An array of block gas used ratios. These are calculated as the ratio of `gasUsed` and `gasLimit`.\n     * * `reward`:  - An array of effective priority fee per gas data points from a single block. All zeroes are returned if the\n     * block is empty.\n     *\n     * @EIP [1559 - Fee market change](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1559.md)\n     * @example\n     * ```javascript\n     * const [from, to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to }] });\n     * const feeHistory = await provider.request({ method: \"eth_feeHistory\", params: [\"0x1\", \"0x1\", [10, 100]] });\n     * console.log(feeHistory);\n     * ```\n     */\n    async eth_feeHistory(blockCount, newestBlock, rewardPercentiles) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const MIN_BLOCKS = 1;\n        const MAX_BLOCKS = 1024;\n        const PRECISION_FLOAT = 1e14;\n        const PAD_PRECISION = 16;\n        const PRECISION_BIG_INT = BigInt(1e16);\n        const newestBlockNumber = blockchain.blocks\n            .getEffectiveNumber(newestBlock)\n            .toBigInt();\n        // blockCount must be within MIN_BLOCKS and MAX_BLOCKS. blockCount > newestBlock is\n        // technically valid per the spec but we cannot go past the Genesis Block. Values\n        // above MAX_BLOCKS are technically within spec, however we cap totalBlocks because\n        // of the resource needs and potential abuse of a very large blockCount.\n        const totalBlocks = Number((0, utils_1.min)((0, utils_1.max)(utils_1.Quantity.toBigInt(blockCount), MIN_BLOCKS), newestBlockNumber + 1n, MAX_BLOCKS));\n        const baseFeePerGas = new Array(totalBlocks);\n        const gasUsedRatio = new Array(totalBlocks);\n        let reward;\n        // percentiles must be unique and in ascending order between 0 and 100\n        if (rewardPercentiles.length > 0) {\n            const ERR_INVALID_PERCENTILE = \"invalid reward percentile: percentiles must be unique and in ascending order\";\n            if (rewardPercentiles[0] < 0)\n                throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[0]}`);\n            if (rewardPercentiles[rewardPercentiles.length - 1] > 100)\n                throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[rewardPercentiles.length - 1]}`);\n            for (let i = 1; i < rewardPercentiles.length; i++) {\n                if (rewardPercentiles[i] <= rewardPercentiles[i - 1]) {\n                    throw new Error(`${ERR_INVALID_PERCENTILE} ${rewardPercentiles[i]} ${rewardPercentiles[i - 1]}`);\n                }\n            }\n            reward = new Array(totalBlocks);\n        }\n        // totalBlocks is inclusive of newestBlock\n        const oldestBlockNumber = newestBlockNumber - BigInt(totalBlocks - 1);\n        let currentBlock;\n        let currentPosition = 0;\n        while (currentPosition < totalBlocks) {\n            currentBlock = await blockchain.blocks.get(utils_1.Quantity.toBuffer(oldestBlockNumber + BigInt(currentPosition)));\n            baseFeePerGas[currentPosition] = currentBlock.header.baseFeePerGas;\n            const gasUsed = currentBlock.header.gasUsed.toBigInt();\n            const gasLimit = currentBlock.header.gasLimit.toBigInt();\n            if (gasUsed === gasLimit) {\n                gasUsedRatio[currentPosition] = 1;\n            }\n            else {\n                gasUsedRatio[currentPosition] = Number(`0.${((gasUsed * PRECISION_BIG_INT) / gasLimit)\n                    .toString()\n                    .padStart(PAD_PRECISION, \"0\")}`);\n            }\n            // For each percentile, find the cost of the unit of gas at that percentage\n            if (reward !== undefined) {\n                const transactions = currentBlock.getTransactions();\n                // If there are no transactions, all reward percentiles are 0.\n                if (transactions.length === 0) {\n                    reward[currentPosition] = rewardPercentiles.map(() => utils_1.Quantity.Zero);\n                }\n                else {\n                    // For all transactions, effectiveGasReward = normalized fee per unit of gas\n                    // earned by the miner regardless of transaction type\n                    const baseFee = baseFeePerGas[currentPosition].toBigInt();\n                    const receipts = await Promise.all(transactions.map(tx => blockchain.transactionReceipts.get(tx.hash.toBuffer())));\n                    // Effective Reward is the amount paid per unit of gas\n                    const effectiveRewardAndGasUsed = transactions\n                        .map((tx, idx) => {\n                        let effectiveGasReward;\n                        if (\"maxPriorityFeePerGas\" in tx) {\n                            const maxPriorityFeePerGas = tx.maxPriorityFeePerGas.toBigInt();\n                            effectiveGasReward = BigInt((0, utils_1.min)(tx.maxFeePerGas.toBigInt() - baseFee, maxPriorityFeePerGas));\n                        }\n                        else {\n                            effectiveGasReward = tx.gasPrice.toBigInt() - baseFee;\n                        }\n                        return {\n                            effectiveGasReward: effectiveGasReward,\n                            gasUsed: utils_1.Quantity.toBigInt(receipts[idx].gasUsed)\n                        };\n                    })\n                        .sort((a, b) => {\n                        if (a.effectiveGasReward > b.effectiveGasReward)\n                            return 1;\n                        if (a.effectiveGasReward < b.effectiveGasReward)\n                            return -1;\n                        return 0;\n                    });\n                    // All of the block transactions are ordered, ascending, from least to greatest by\n                    // the fee the tx paid per unit of gas. For each percentile of block gas consumed,\n                    // what was the fee paid for the unit of gas at that percentile.\n                    reward[currentPosition] = rewardPercentiles.map(percentile => {\n                        let totalGasUsed = 0n;\n                        const targetGas = (gasUsed * BigInt(percentile * PRECISION_FLOAT)) /\n                            PRECISION_BIG_INT;\n                        for (const values of effectiveRewardAndGasUsed) {\n                            totalGasUsed = totalGasUsed + values.gasUsed;\n                            if (targetGas <= totalGasUsed) {\n                                return utils_1.Quantity.from(values.effectiveGasReward);\n                            }\n                        }\n                    });\n                }\n            }\n            currentPosition++;\n        }\n        // baseFeePerGas is calculated based on the header of the previous block, including the block after newestBlock.\n        baseFeePerGas[totalBlocks] = utils_1.Quantity.from(ethereum_block_1.Block.calcNextBaseFee(currentBlock));\n        return {\n            oldestBlock: utils_1.Quantity.from(oldestBlockNumber),\n            baseFeePerGas,\n            gasUsedRatio,\n            reward\n        };\n    }\n    //#endregion\n    //#region debug\n    /**\n     * Attempt to run the transaction in the exact same manner as it was executed\n     * on the network. It will replay any transaction that may have been executed\n     * prior to this one before it will finally attempt to execute the transaction\n     * that corresponds to the given hash.\n     *\n     * In addition to the hash of the transaction you may give it a secondary\n     * optional argument, which specifies the options for this specific call.\n     * The possible options are:\n     *\n     * * `disableStorage`: \\{boolean\\} Setting this to `true` will disable storage capture (default = `false`).\n     * * `disableMemory`: \\{boolean\\} Setting this to `true` will disable memory capture (default = `false`).\n     * * `disableStack`: \\{boolean\\} Setting this to `true` will disable stack capture (default = `false`).\n     *\n     * @param transactionHash - Hash of the transaction to trace.\n     * @param options - See options in source.\n     * @returns Returns the `gas`, `structLogs`, and `returnValue` for the traced transaction.\n     *\n     * The `structLogs` are an array of logs, which contains the following fields:\n     * * `depth`: The execution depth.\n     * * `error`: Information about an error, if one occurred.\n     * * `gas`: The number of gas remaining.\n     * * `gasCost`: The cost of gas in wei.\n     * * `memory`: An array containing the contract's memory data.\n     * * `op`: The current opcode.\n     * * `pc`: The current program counter.\n     * * `stack`: The EVM execution stack.\n     * * `storage`: An object containing the contract's storage data.\n     *\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     * const transactionTrace = await provider.request({ method: \"debug_traceTransaction\", params: [txHash] });\n     * console.log(transactionTrace);\n     * ```\n     */\n    async debug_traceTransaction(transactionHash, options = {}) {\n        return __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\").traceTransaction(transactionHash, options);\n    }\n    // TODO: example doesn't return correct value\n    // Issue: https://github.com/trufflesuite/ganache/issues/3203\n    /**\n     * Attempts to replay the transaction as it was executed on the network and\n     * return storage data given a starting key and max number of entries to return.\n     *\n     * @param blockHash - Hash of a block.\n     * @param transactionIndex - Integer of the transaction index position.\n     * @param contractAddress - Address of the contract.\n     * @param startKey - Hash of the start key for grabbing storage entries.\n     * @param maxResult - Integer of maximum number of storage entries to return.\n     * @returns Returns a storage object with the keys being keccak-256 hashes of the storage keys,\n     * and the values being the raw, unhashed key and value for that specific storage slot. Also\n     * returns a next key which is the keccak-256 hash of the next key in storage for continuous downloading.\n     * @example\n     * ```javascript\n     * // Simple.sol\n     * // // SPDX-License-Identifier: MIT\n     * //  pragma solidity >= 0.4.22 <0.9.0;\n     * //\n     * // import \"console.sol\";\n     * //\n     * //  contract Simple {\n     * //      uint256 public value;\n     * //      constructor() payable {\n     * //          console.log(\"Called Simple contract constructor. Setting value to 5.\");\n     * //          value = 5;\n     * //      }\n     * //  }\n     * const simpleSol = \"0x608060405261002f6040518060600160405280603781526020016104016037913961003c60201b6100541760201c565b60056000819055506101bb565b6100d8816040516024016100509190610199565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100db60201b60201c565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561013a57808201518184015260208101905061011f565b83811115610149576000848401525b50505050565b6000601f19601f8301169050919050565b600061016b82610100565b610175818561010b565b935061018581856020860161011c565b61018e8161014f565b840191505092915050565b600060208201905081810360008301526101b38184610160565b905092915050565b610237806101ca6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80633fa4f24514610030575b600080fd5b61003861004e565b604051610045919061012b565b60405180910390f35b60005481565b6100ea8160405160240161006891906101df565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506100ed565b50565b60006a636f6e736f6c652e6c6f6790508151602083016000808383865afa5050505050565b6000819050919050565b61012581610112565b82525050565b6000602082019050610140600083018461011c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610180578082015181840152602081019050610165565b8381111561018f576000848401525b50505050565b6000601f19601f8301169050919050565b60006101b182610146565b6101bb8185610151565b93506101cb818560208601610162565b6101d481610195565b840191505092915050565b600060208201905081810360008301526101f981846101a6565b90509291505056fea26469706673582212205402181d93a2ec38e277cfd7fa6bdb14ae069535ac31572e1c94c713cddb891264736f6c634300080b003343616c6c65642053696d706c6520636f6e747261637420636f6e7374727563746f722e2053657474696e672076616c756520746f20352e\";\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const initialTxHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", data: simpleSol }] });\n     *\n     * const {contractAddress} = await provider.request({ method: \"eth_getTransactionReceipt\", params: [initialTxHash] });\n     *\n     * // set value to 19\n     * const data = \"0x552410770000000000000000000000000000000000000000000000000000000000000019\";\n     * const txHash = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, to: contractAddress, data }] });\n     *\n     * const { blockHash, transactionIndex } = await provider.request({ method: \"eth_getTransactionReceipt\", params: [txHash] });\n     * const storage = await provider.request({ method: \"debug_storageRangeAt\", params: [blockHash, transactionIndex, contractAddress, \"0x01\", 1] });\n     * console.log(storage);\n     * ```\n     */\n    async debug_storageRangeAt(blockHash, transactionIndex, contractAddress, startKey, maxResult) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        if (blockchain.fallback) {\n            throw new Error(\"debug_storageRangeAt is not supported on a forked network. See https://github.com/trufflesuite/ganache/issues/3488 for details.\");\n        }\n        return blockchain.storageRangeAt(blockHash, utils_1.Quantity.toNumber(transactionIndex), contractAddress, startKey, utils_1.Quantity.toNumber(maxResult));\n    }\n    //#endregion\n    //#region personal\n    /**\n     * Returns all the Ethereum account addresses of all keys that have been\n     * added.\n     * @returns The Ethereum account addresses of all keys that have been added.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"personal_listAccounts\"));\n     * ```\n     */\n    async personal_listAccounts() {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").addresses;\n    }\n    /**\n     * Generates a new account with private key. Returns the address of the new\n     * account.\n     * @param passphrase - The passphrase to encrypt the private key with.\n     * @returns The new account's address.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const address = await provider.send(\"personal_newAccount\", [passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_newAccount(passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet.createRandomAccount();\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Imports the given unencrypted private key (hex string) into the key store, encrypting it with the passphrase.\n     *\n     * @param rawKey - The raw, unencrypted private key to import.\n     * @param passphrase - The passphrase to encrypt with.\n     * @returns Returns the address of the new account.\n     * @example\n     * ```javascript\n     * const rawKey = \"0x0123456789012345678901234567890123456789012345678901234567890123\";\n     * const passphrase = \"passphrase\";\n     *\n     * const address = await provider.send(\"personal_importRawKey\",[rawKey, passphrase] );\n     * console.log(address);\n     * ```\n     */\n    async personal_importRawKey(rawKey, passphrase) {\n        if (typeof passphrase !== \"string\") {\n            throw new Error(\"missing value for required argument `passphrase`\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const newAccount = wallet_1.default.createAccountFromPrivateKey(utils_1.Data.from(rawKey));\n        const address = newAccount.address;\n        const strAddress = address.toString();\n        await wallet.addToKeyFile(address, newAccount.privateKey, passphrase, true);\n        wallet.addresses.push(strAddress);\n        wallet.knownAccounts.add(strAddress);\n        return newAccount.address;\n    }\n    /**\n     * Locks the account. The account can no longer be used to send transactions.\n     * @param address - The account address to be locked.\n     * @returns Returns `true` if the account was locked, otherwise `false`.\n     * @example\n     * ```javascript\n     * const [account] = await provider.send(\"personal_listAccounts\");\n     * const isLocked = await provider.send(\"personal_lockAccount\", [account] );\n     * console.log(isLocked);\n     * ```\n     */\n    async personal_lockAccount(address) {\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").lockAccount(address.toLowerCase());\n    }\n    /**\n     * Unlocks the account for use.\n     *\n     * The unencrypted key will be held in memory until the unlock duration\n     * expires. The unlock duration defaults to 300 seconds. An explicit duration\n     * of zero seconds unlocks the key until geth exits.\n     *\n     * The account can be used with `eth_sign` and `eth_sendTransaction` while it is\n     * unlocked.\n     * @param address - 20 Bytes - The address of the account to unlock.\n     * @param passphrase - Passphrase to unlock the account.\n     * @param duration - (default: 300) Duration in seconds how long the account\n     * should remain unlocked for. Set to 0 to disable automatic locking.\n     * @returns `true` if it worked. Throws an error or returns `false` if it did not.\n     * @example\n     * ```javascript\n     * // generate an account\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * const isUnlocked = await provider.send(\"personal_unlockAccount\", [newAccount, passphrase] );\n     * console.log(isUnlocked);\n     * ```\n     */\n    async personal_unlockAccount(address, passphrase, duration = 300) {\n        const addy = ethereum_address_1.Address.from(address);\n        return __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\").unlockAccount(addy, passphrase, duration);\n    }\n    /**\n     * Validate the given passphrase and submit transaction.\n     *\n     * The transaction is the same argument as for `eth_sendTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified, signed and\n     * send onto the network. The account is not unlocked globally in the node\n     * and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param txData - The transaction call object as seen in source.\n     * @param passphrase - The passphrase to decrpyt the private key belonging to `tx.from`.\n     * @returns The transaction hash or if unsuccessful an error.\n     * @example\n     * ```javascript\n     * const passphrase = \"passphrase\";\n     * const newAccount = await provider.send(\"personal_newAccount\", [passphrase] );\n     * // fund the new account\n     * await provider.send(\"evm_setAccountBalance\", [newAccount,\"0xffffffffffffff\"])\n     * const [to] = await provider.send(\"personal_listAccounts\");\n     *\n     * // use account and passphrase to send the transaction\n     * const txHash = await provider.send(\"personal_sendTransaction\", [{ from: newAccount, to, gasLimit: \"0x5b8d80\" }, passphrase] );\n     * console.log(txHash);\n     * ```\n     */\n    async personal_sendTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        const from = tx.from;\n        if (from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        await autofillDefaultTransactionValues(tx, this.eth_estimateGas.bind(this), this.eth_maxPriorityFeePerGas, transaction, blockchain, __classPrivateFieldGet(this, _EthereumApi_options, \"f\"));\n        return blockchain.queueTransaction(tx, utils_1.Data.from(secretKey));\n    }\n    /**\n     * Validates the given passphrase and signs a transaction that can be\n     * submitted to the network at a later time using `eth_sendRawTransaction`.\n     *\n     * The transaction is the same argument as for `eth_signTransaction` and\n     * contains the from address. If the passphrase can be used to decrypt the\n     * private key belonging to `tx.from` the transaction is verified and signed.\n     * The account is not unlocked globally in the node and cannot be used in other RPC calls.\n     *\n     * Transaction call object:\n     * * `from`: `DATA`, 20 bytes (optional) - The address the transaction is sent from.\n     * * `to`: `DATA`, 20 bytes - The address the transaction is sent to.\n     * * `gas`: `QUANTITY` (optional) - Integer of the maximum gas allowance for the transaction.\n     * * `gasPrice`: `QUANTITY` (optional) - Integer of the price of gas in wei.\n     * * `value`: `QUANTITY` (optional) - Integer of the value in wei.\n     * * `data`: `DATA` (optional) - Hash of the method signature and the ABI encoded parameters.\n     *\n     * @param transaction - The transaction call object as seen in source.\n     * @returns The raw, signed transaction.\n     * @example\n     * ```javascript\n     * const [to] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * const passphrase = \"passphrase\";\n     * const from = await provider.send(\"personal_newAccount\", [passphrase] );\n     * await provider.request({ method: \"eth_subscribe\", params: [\"newHeads\"] });\n     * const signedTx = await provider.request({ method: \"personal_signTransaction\", params: [{ from, to }, passphrase] });\n     * console.log(signedTx)\n     * ```\n     */\n    async personal_signTransaction(transaction, passphrase) {\n        const blockchain = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const tx = ethereum_transaction_1.TransactionFactory.fromRpc(transaction, blockchain.common);\n        if (tx.from == null) {\n            throw new Error(\"from not found; is required\");\n        }\n        const wallet = __classPrivateFieldGet(this, _EthereumApi_wallet, \"f\");\n        const secretKey = await wallet.getFromKeyFile(tx.from, passphrase);\n        tx.signAndHash(secretKey);\n        return utils_1.Data.from(tx.serialized);\n    }\n    //#endregion\n    //#region rpc\n    /**\n     * Returns object of RPC modules.\n     * @returns RPC modules.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"rpc_modules\"));\n     * ```\n     */\n    async rpc_modules() {\n        return RPC_MODULES;\n    }\n    //#endregion\n    //#region shh\n    /**\n     * Creates new whisper identity in the client.\n     *\n     * @returns - The address of the new identity.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newIdentity\"));\n     * ```\n     */\n    async shh_newIdentity() {\n        return \"0x00\";\n    }\n    /**\n     * Checks if the client hold the private keys for a given identity.\n     *\n     * @param address - The identity address to check.\n     * @returns Returns `true` if the client holds the private key for that identity, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_hasIdentity\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_hasIdentity(address) {\n        return false;\n    }\n    /**\n     * Creates a new group.\n     *\n     * @returns The address of the new group.\n     */\n    async shh_newGroup() {\n        return \"0x00\";\n    }\n    /**\n     * Adds a whisper identity to the group.\n     *\n     * @param address - The identity address to add to a group.\n     * @returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_addToGroup\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_addToGroup(address) {\n        return false;\n    }\n    /**\n     * Creates filter to notify, when client receives whisper message matching the filter options.\n     *\n     * @param to - (optional) Identity of the receiver. When present it will try to decrypt any incoming message\n     *  if the client holds the private key to this identity.\n     * @param topics - Array of topics which the incoming message's topics should match.\n     * @returns Returns `true` if the identity was successfully added to the group, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_newFilter\", [\"0x0\", []] ));\n     * ```\n     */\n    async shh_newFilter(to, topics) {\n        return false;\n    }\n    /**\n     * Uninstalls a filter with given id. Should always be called when watch is no longer needed.\n     * Additionally filters timeout when they aren't requested with `shh_getFilterChanges` for a period of time.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns `true` if the filter was successfully uninstalled, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_uninstallFilter\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_uninstallFilter(id) {\n        return false;\n    }\n    /**\n     * Polling method for whisper filters. Returns new messages since the last call of this method.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns More Info: https://github.com/ethereum/wiki/wiki/JSON-RPC#shh_getfilterchanges\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getFilterChanges\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getFilterChanges(id) {\n        return [];\n    }\n    /**\n     * Get all messages matching a filter. Unlike shh_getFilterChanges this returns all messages.\n     *\n     * @param id - The filter id. Ex: \"0x7\"\n     * @returns See: `shh_getFilterChanges`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_getMessages\", [\"0x0\"] ));\n     * ```\n     */\n    async shh_getMessages(id) {\n        return false;\n    }\n    /**\n     * Creates a whisper message and injects it into the network for distribution.\n     *\n     * @param postData -\n     * @returns Returns `true` if the message was sent, otherwise `false`.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_post\", [{}] ));\n     * ```\n     */\n    async shh_post(postData) {\n        return false;\n    }\n    /**\n     * Returns the current whisper protocol version.\n     *\n     * @returns The current whisper protocol version.\n     * @example\n     * ```javascript\n     * console.log(await provider.send(\"shh_version\"));\n     * ```\n     */\n    async shh_version() {\n        return \"2\";\n    }\n    //#endregion\n    //#region txpool\n    /**\n     * Returns the current content of the transaction pool.\n     *\n     * @returns The transactions currently pending or queued in the transaction pool.\n     * @example\n     * ```javascript\n     * const [from] = await provider.request({ method: \"eth_accounts\", params: [] });\n     * await provider.send(\"miner_stop\")\n     * const pendingTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x0\" }] });\n     * const queuedTx = await provider.request({ method: \"eth_sendTransaction\", params: [{ from, gas: \"0x5b8d80\", nonce:\"0x2\" }] });\n     * const pool = await provider.send(\"txpool_content\");\n     * console.log(pool);\n     * ```\n     */\n    async txpool_content() {\n        const { transactions, common } = __classPrivateFieldGet(this, _EthereumApi_blockchain, \"f\");\n        const { transactionPool: { executables, origins } } = transactions;\n        const processMap = (map) => {\n            let res = {};\n            for (let [_, { array, length }] of map) {\n                for (let i = 0; i < length; ++i) {\n                    const transaction = array[i];\n                    const from = transaction.from.toString();\n                    if (res[from] === undefined) {\n                        res[from] = {};\n                    }\n                    // The nonce keys are actual decimal numbers (as strings) and not\n                    // hex literals (based on what geth returns).\n                    const nonce = transaction.nonce.toBigInt().toString();\n                    res[from][nonce] = transaction.toJSON(common);\n                }\n            }\n            return res;\n        };\n        return {\n            pending: processMap(executables.pending),\n            queued: processMap(origins)\n        };\n    }\n}\n_EthereumApi_getId = new WeakMap(), _EthereumApi_filters = new WeakMap(), _EthereumApi_subscriptions = new WeakMap(), _EthereumApi_options = new WeakMap(), _EthereumApi_blockchain = new WeakMap(), _EthereumApi_wallet = new WeakMap();\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getString\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"db_putHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"db_getHex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_hive\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"bzz_info\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_mine\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountNonce\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"evm_setAccountCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"evm_setAccountStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_increaseTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"evm_setTime\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"evm_revert\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"miner_start\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"miner_stop\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setGasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setEtherbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"miner_setExtra\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"web3_clientVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"web3_sha3\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_listening\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"net_peerCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_estimateGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_protocolVersion\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_syncing\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_coinbase\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getProof\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBlockByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getBlockTransactionCountByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getCompilers\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getTransactionByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getUncleCountByBlockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockHashAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_getUncleByBlockNumberAndIndex\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_getWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_submitWork\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_submitHashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_mining\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_hashrate\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_gasPrice\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_maxPriorityFeePerGas\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_accounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_blockNumber\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_chainId\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getBalance\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getCode\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"eth_getStorageAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionByHash\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getTransactionReceipt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_sendRawTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_sign\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"eth_signTypedData_v4\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_subscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_unsubscribe\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newBlockFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"eth_newPendingTransactionFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0, 1)\n], EthereumApi.prototype, \"eth_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getFilterLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"eth_getLogs\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"eth_getTransactionCount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 3)\n], EthereumApi.prototype, \"eth_call\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(3)\n], EthereumApi.prototype, \"eth_feeHistory\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1, 2)\n], EthereumApi.prototype, \"debug_traceTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(5)\n], EthereumApi.prototype, \"debug_storageRangeAt\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"personal_listAccounts\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_newAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_importRawKey\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"personal_lockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2, 3)\n], EthereumApi.prototype, \"personal_unlockAccount\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_sendTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"personal_signTransaction\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"rpc_modules\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_hasIdentity\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_newGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_addToGroup\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(2)\n], EthereumApi.prototype, \"shh_newFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_uninstallFilter\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getFilterChanges\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_getMessages\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(1)\n], EthereumApi.prototype, \"shh_post\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"shh_version\", null);\n__decorate([\n    (0, assert_arg_length_1.assertArgLength)(0)\n], EthereumApi.prototype, \"txpool_content\", null);\nexports.default = EthereumApi;\n//# sourceMappingURL=api.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Blockchain_state, _Blockchain_miner, _Blockchain_blockBeingSavedPromise, _Blockchain_timer, _Blockchain_emitStepEvent, _Blockchain_database, _Blockchain_options, _Blockchain_instamine, _Blockchain_saveNewBlock, _Blockchain_emitNewBlock, _Blockchain_getTransactionLogOutput, _Blockchain_handleNewBlockData, _Blockchain_readyNextBlock, _Blockchain_isPaused, _Blockchain_commitAccounts, _Blockchain_initializeGenesisBlock, _Blockchain_timeAdjustment, _Blockchain_adjustedTime, _Blockchain_deleteBlockData, _Blockchain_snapshots, _Blockchain_createFastForwardVm, _Blockchain_traceTransaction, _Blockchain_prepareNextBlock;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Status = void 0;\nconst os_1 = require(\"os\");\nconst miner_1 = __importStar(require(\"./miner/miner\"));\nconst database_1 = __importDefault(require(\"./database\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst common_1 = require(\"@ethereumjs/common\");\nconst vm_1 = require(\"@ethereumjs/vm\");\nconst evm_1 = require(\"@ethereumjs/evm\");\nconst utils_1 = require(\"@ganache/utils\");\nconst account_manager_1 = __importDefault(require(\"./data-managers/account-manager\"));\nconst block_manager_1 = __importDefault(require(\"./data-managers/block-manager\"));\nconst blocklog_manager_1 = __importDefault(require(\"./data-managers/blocklog-manager\"));\nconst transaction_manager_1 = __importDefault(require(\"./data-managers/transaction-manager\"));\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst run_call_1 = require(\"./helpers/run-call\");\nconst state_manager_1 = require(\"./forking/state-manager\");\nconst trie_1 = require(\"./helpers/trie\");\nconst trie_2 = require(\"./forking/trie\");\nconst precompiles_1 = require(\"./helpers/precompiles\");\nconst transaction_receipt_manager_1 = __importDefault(require(\"./data-managers/transaction-receipt-manager\"));\nconst provider_events_1 = require(\"./provider-events\");\nconst mcl_wasm_1 = __importDefault(require(\"mcl-wasm\"));\nconst console_log_1 = require(\"@ganache/console.log\");\nconst storage_range_at_1 = require(\"./helpers/storage-range-at\");\nconst state_manager_2 = require(\"./state-manager\");\nconst common_helpers_1 = require(\"./helpers/common-helpers\");\nconst mclInitPromise = mcl_wasm_1.default.init(mcl_wasm_1.default.BLS12_381).then(() => {\n    mcl_wasm_1.default.setMapToMode(mcl_wasm_1.default.IRTF); // set the right map mode; otherwise mapToG2 will return wrong values.\n    mcl_wasm_1.default.verifyOrderG1(true); // subgroup checks for G1\n    mcl_wasm_1.default.verifyOrderG2(true); // subgroup checks for G2\n});\nvar Status;\n(function (Status) {\n    // Flags\n    Status[Status[\"started\"] = 1] = \"started\";\n    Status[Status[\"starting\"] = 2] = \"starting\";\n    Status[Status[\"stopped\"] = 4] = \"stopped\";\n    Status[Status[\"stopping\"] = 8] = \"stopping\";\n    Status[Status[\"paused\"] = 16] = \"paused\"; // 0001 0000\n})(Status = exports.Status || (exports.Status = {}));\n/**\n * Sets the provided VM state manager's state root *without* first\n * checking for checkpoints or flushing the existing cache.\n *\n * Useful if you know the state manager is not in a checkpoint and its internal\n * cache is safe to discard.\n *\n * @param stateManager -\n * @param stateRoot -\n */\nfunction setStateRootSync(stateManager, stateRoot) {\n    stateManager._trie.root(stateRoot);\n    stateManager._cache.clear();\n    stateManager._storageTries = {};\n}\nfunction makeTrie(blockchain, trieDB, root) {\n    if (blockchain.fallback) {\n        return new trie_2.ForkTrie(trieDB, root ? root.toBuffer() : null, blockchain);\n    }\n    else {\n        return new trie_1.GanacheTrie(trieDB, root ? root.toBuffer() : null, blockchain);\n    }\n}\nfunction createCommon(chainId, networkId, hardfork) {\n    const common = common_1.Common.custom({\n        name: \"ganache\",\n        networkId: networkId,\n        chainId: chainId,\n        comment: \"Local test network\",\n        defaultHardfork: hardfork\n    }, \n    // if we were given a chain id that matches a real chain, use it\n    // NOTE: I don't think Common serves a purpose other than instructing the\n    // VM what hardfork is in use (and what EIPs are active). But just incase\n    // things change in the future its configured \"more correctly\" here.\n    { baseChain: utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1 });\n    // the VM likes to listen to \"hardforkChanged\" events from common, but:\n    //  a) we don't currently support changing hardforks\n    //  b) it can cause `MaxListenersExceededWarning`.\n    // Since we don't need it we overwrite .on to make it be quiet.\n    common.on = () => { };\n    return common;\n}\nclass Blockchain extends emittery_1.default {\n    /**\n     * Initializes the underlying Database and handles synchronization between\n     * the API and the database.\n     *\n     * Emits a `ready` event once the database and all dependencies are fully\n     * initialized.\n     * @param options -\n     */\n    constructor(options, coinbase, fallback) {\n        super();\n        _Blockchain_state.set(this, Status.starting);\n        _Blockchain_miner.set(this, void 0);\n        _Blockchain_blockBeingSavedPromise.set(this, void 0);\n        /**\n         * When not instamining (blockTime > 0) this value holds the timeout timer.\n         */\n        _Blockchain_timer.set(this, null);\n        /**\n         * Because step events are expensive to create and emit, CPU-wise, we do it\n         * conditionally.\n         */\n        _Blockchain_emitStepEvent.set(this, false);\n        _Blockchain_database.set(this, void 0);\n        _Blockchain_options.set(this, void 0);\n        _Blockchain_instamine.set(this, void 0);\n        _Blockchain_saveNewBlock.set(this, ({ block, serialized, storageKeys, transactions }) => {\n            const { blocks } = this;\n            blocks.latest = block;\n            return __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const blockHash = block.hash();\n                const blockHeader = block.header;\n                const blockNumberQ = blockHeader.number;\n                const blockNumber = blockNumberQ.toBuffer();\n                const blockLogs = ethereum_utils_1.BlockLogs.create(blockHash);\n                const timestamp = blockHeader.timestamp;\n                const timestampStr = new Date(timestamp.toNumber() * 1000).toString();\n                const logOutput = [];\n                transactions.forEach((tx, i) => {\n                    const hash = tx.hash.toBuffer();\n                    const index = utils_1.Quantity.from(i);\n                    // save transaction to the database\n                    // TODO: the block has already done most of the work serializing the tx\n                    // we should reuse it, if possible\n                    // https://github.com/trufflesuite/ganache/issues/4341\n                    const serialized = tx.serializeForDb(blockHash, blockNumberQ, index);\n                    this.transactions.set(hash, serialized);\n                    // save receipt to the database\n                    const receipt = tx.getReceipt();\n                    const encodedReceipt = receipt.serialize(true);\n                    this.transactionReceipts.set(hash, encodedReceipt);\n                    // collect block logs\n                    tx.getLogs().forEach(blockLogs.append.bind(blockLogs, index, tx.hash));\n                    // prepare log output\n                    logOutput.push(__classPrivateFieldGet(this, _Blockchain_getTransactionLogOutput, \"f\").call(this, hash, receipt, blockHeader.number, timestampStr, tx.execException));\n                });\n                // save storage keys to the database\n                storageKeys.forEach(value => {\n                    this.storageKeys.put(value.hashedKey, value.key);\n                });\n                blockLogs.blockNumber = blockHeader.number;\n                // save block logs to the database\n                this.blockLogs.set(blockNumber, blockLogs.serialize());\n                // save block to the database\n                blocks.putBlock(blockNumber, blockHash, serialized);\n                // update the \"latest\" index\n                blocks.updateLatestIndex(blockNumber);\n                // output to the log, if we have data to output\n                if (logOutput.length > 0)\n                    __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(logOutput.join(os_1.EOL));\n                return { block, blockLogs, transactions };\n            });\n        });\n        /**\n         * Emit the block now that everything has been fully saved to the database\n         */\n        _Blockchain_emitNewBlock.set(this, async (blockInfo) => {\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const { block, blockLogs, transactions } = blockInfo;\n            transactions.forEach(transaction => {\n                transaction.finalize(\"confirmed\", transaction.execException);\n            });\n            if (options.miner.instamine === \"eager\") {\n                // in eager instamine mode we must delay the broadcast of new blocks\n                await new Promise(resolve => {\n                    // we delay emitting blocks and blockLogs because we need to allow for:\n                    // ```\n                    //  await provider.request({\"method\": \"eth_sendTransaction\"...)\n                    //  await provider.once(\"message\") // <- should work\n                    // ```\n                    // If we don't have this delay here the messages will be sent before\n                    // the call has a chance to listen to the event.\n                    setImmediate(async () => {\n                        // emit block logs first so filters can pick them up before\n                        // block listeners are notified\n                        await Promise.all([\n                            this.emit(\"blockLogs\", blockLogs),\n                            this.emit(\"block\", block)\n                        ]);\n                        resolve(void 0);\n                    });\n                });\n            }\n            else {\n                // emit block logs first so filters can pick them up before\n                // block listeners are notified\n                await Promise.all([\n                    this.emit(\"blockLogs\", blockLogs),\n                    this.emit(\"block\", block)\n                ]);\n            }\n            return blockInfo;\n        });\n        _Blockchain_getTransactionLogOutput.set(this, (hash, receipt, blockNumber, timestamp, error) => {\n            let str = `${os_1.EOL}  Transaction: ${utils_1.Data.from(hash)}${os_1.EOL}`;\n            const contractAddress = receipt.contractAddress;\n            if (contractAddress != null) {\n                str += `  Contract created: ${ethereum_address_1.Address.from(contractAddress)}${os_1.EOL}`;\n            }\n            str += `  Gas usage: ${utils_1.Quantity.toNumber(receipt.raw[1])}\n  Block number: ${blockNumber.toNumber()}\n  Block time: ${timestamp}${os_1.EOL}`;\n            if (error) {\n                str += `  Runtime error: ${error.data.message}${os_1.EOL}`;\n                if (error.data.reason) {\n                    str += `  Revert reason: ${error.data.reason}${os_1.EOL}`;\n                }\n            }\n            return str;\n        });\n        _Blockchain_handleNewBlockData.set(this, async (blockData) => {\n            __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(() => {\n                const saveBlockProm = __classPrivateFieldGet(this, _Blockchain_saveNewBlock, \"f\").call(this, blockData);\n                saveBlockProm.then(__classPrivateFieldGet(this, _Blockchain_emitNewBlock, \"f\"));\n                // blockBeingSavedPromise should await the block being _saved_, but doesn't\n                // need to await the block being emitted.\n                return saveBlockProm;\n            }), \"f\");\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        });\n        _Blockchain_readyNextBlock.set(this, (previousBlock, timestamp) => {\n            const previousHeader = previousBlock.header;\n            const previousNumber = previousHeader.number.toBigInt() || 0n;\n            const minerOptions = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner;\n            if (timestamp == null) {\n                timestamp = __classPrivateFieldGet(this, _Blockchain_adjustedTime, \"f\").call(this, previousHeader.timestamp);\n            }\n            return new ethereum_block_1.RuntimeBlock(this.common, utils_1.Quantity.from(previousNumber + 1n), previousBlock.hash(), this.coinbase, minerOptions.blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : minerOptions.difficulty, previousHeader.totalDifficulty, this.getMixHash(previousBlock.hash().toBuffer()), ethereum_block_1.Block.calcNextBaseFee(previousBlock), util_1.KECCAK256_RLP);\n        });\n        this.isStarted = () => {\n            return __classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.started;\n        };\n        this.mine = async (maxTransactions, onlyOneBlock = false, timestamp) => {\n            const nextBlock = __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\").call(this, this.blocks.latest, timestamp);\n            const transactions = await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").mine(nextBlock, maxTransactions, onlyOneBlock);\n            await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n            if (__classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement !== \"clock\") {\n                // if block time is incremental, adjustments should only apply once,\n                // otherwise they accumulate with each block.\n                __classPrivateFieldSet(this, _Blockchain_timeAdjustment, 0, \"f\");\n            }\n            else if (timestamp !== undefined) {\n                // when miner.timestampIncrement is a number, the previous block timestamp\n                // is used as a reference for the next block, so this call is not\n                // required.\n                this.setTimeDiff(timestamp * 1000);\n            }\n            return {\n                transactions,\n                blockNumber: nextBlock.header.number\n            };\n        };\n        _Blockchain_isPaused.set(this, () => {\n            return (__classPrivateFieldGet(this, _Blockchain_state, \"f\") & Status.paused) !== 0;\n        });\n        this.createVmFromStateTrie = async (stateTrie, allowUnlimitedContractSize, activatePrecompile, common) => {\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks\n                        .get(utils_1.Quantity.toBuffer(number))\n                        .catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            // ethereumjs-vm wants to \"copy\" the blockchain when `vm.copy` is called.\n            blockchain.copy = () => {\n                return blockchain;\n            };\n            common = common || this.common;\n            // TODO: prefixCodeHashes should eventually be conditional\n            // https://github.com/trufflesuite/ganache/issues/3701\n            const stateManager = this.fallback\n                ? new state_manager_1.ForkStateManager({\n                    trie: stateTrie,\n                    prefixCodeHashes: false\n                })\n                : new state_manager_2.GanacheStateManager({ trie: stateTrie, prefixCodeHashes: false });\n            const eei = new vm_1.EEI(stateManager, common, blockchain);\n            const evm = new evm_1.EVM({ common, allowUnlimitedContractSize, eei });\n            const vm = await vm_1.VM.create({\n                activatePrecompiles: false,\n                common,\n                blockchain,\n                stateManager,\n                evm\n            });\n            if (activatePrecompile) {\n                await (0, precompiles_1.activatePrecompiles)(vm.eei);\n                if (common.isActivatedEIP(2537)) {\n                    // BLS12-381 curve, not yet included in any supported hardforks\n                    // but probably will be in the Shanghai hardfork\n                    // TODO: remove above comment once Shanghai is supported!\n                    await mclInitPromise; // ensure that mcl is initialized!\n                }\n            }\n            return vm;\n        };\n        _Blockchain_commitAccounts.set(this, (accounts) => {\n            return Promise.all(accounts.map(account => this.trie.put(account.address.toBuffer(), account.serialize())));\n        });\n        _Blockchain_initializeGenesisBlock.set(this, async (timestamp, blockGasLimit, initialAccounts) => {\n            if (this.fallback != null) {\n                const { block: fallbackBlock } = this.fallback;\n                const { miner: minerOptions } = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n                // commit accounts, but for forking.\n                const stateManager = this.vm.stateManager;\n                await stateManager.checkpoint();\n                initialAccounts.forEach(account => {\n                    this.vm.eei.putAccount(account.address, account);\n                });\n                await stateManager.commit();\n                // create the genesis block\n                let baseFeePerGas;\n                if (this.common.isActivatedEIP(1559)) {\n                    if (fallbackBlock.header.baseFeePerGas === undefined) {\n                        baseFeePerGas = ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS;\n                    }\n                    else {\n                        baseFeePerGas = fallbackBlock.header.baseFeePerGas.toBigInt();\n                    }\n                }\n                const genesis = new ethereum_block_1.RuntimeBlock(this.common, utils_1.Quantity.from(fallbackBlock.header.number.toBigInt() + 1n), fallbackBlock.hash(), this.coinbase, blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : minerOptions.difficulty, fallbackBlock.header.totalDifficulty, this.getMixHash(fallbackBlock.hash().toBuffer()), baseFeePerGas, util_1.KECCAK256_RLP);\n                // store the genesis block in the database\n                const { block, serialized } = genesis.finalize(util_1.KECCAK256_RLP, util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root(), 0n, minerOptions.extraData, [], new Map());\n                const hash = block.hash();\n                return this.blocks\n                    .putBlock(block.header.number.toBuffer(), hash, serialized)\n                    .then(_ => ({\n                    block,\n                    blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n                }));\n            }\n            await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n            // README: block `0` is weird in that a `0` _should_ be hashed as `[]`,\n            // instead of `[0]`, so we set it to `Quantity.Empty` instead of\n            // `Quantity.Zero` here. A few lines down in this function we swap\n            // this `Quantity.Empty` for `Quantity.Zero`. This is all so we don't\n            // have to have a \"treat empty as 0` check in every function that uses the\n            // \"latest\" block (which this genesis block will be for brief moment).\n            const rawBlockNumber = utils_1.Quantity.Empty;\n            // create the genesis block\n            const baseFeePerGas = this.common.isActivatedEIP(1559)\n                ? ethereum_block_1.Block.INITIAL_BASE_FEE_PER_GAS\n                : undefined;\n            const genesis = new ethereum_block_1.RuntimeBlock(this.common, rawBlockNumber, utils_1.Data.from(utils_1.BUFFER_32_ZERO), this.coinbase, blockGasLimit, utils_1.Quantity.Zero, utils_1.Quantity.from(timestamp), this.isPostMerge ? utils_1.Quantity.Zero : __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, utils_1.Quantity.Zero, // we start the totalDifficulty at 0\n            // we use the initial trie root as the genesis block's mixHash as it\n            // is deterministic based on initial wallet conditions\n            this.isPostMerge ? (0, utils_1.keccak)(this.trie.root()) : utils_1.BUFFER_32_ZERO, baseFeePerGas, util_1.KECCAK256_RLP);\n            // store the genesis block in the database\n            const { block, serialized } = genesis.finalize(util_1.KECCAK256_RLP, util_1.KECCAK256_RLP, utils_1.BUFFER_256_ZERO, this.trie.root(), 0n, __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.extraData, [], new Map());\n            // README: set the block number to an actual 0 now.\n            block.header.number = utils_1.Quantity.Zero;\n            const hash = block.hash();\n            return this.blocks\n                .putBlock(block.header.number.toBuffer(), hash, serialized)\n                .then(_ => ({\n                block,\n                blockLogs: ethereum_utils_1.BlockLogs.create(hash)\n            }));\n        });\n        /**\n         * The number of milliseconds time should be adjusted by when computing the\n         * \"time\" for a block.\n         */\n        _Blockchain_timeAdjustment.set(this, 0);\n        /**\n         * Returns the timestamp, adjusted by the timeAdjustment offset, in seconds.\n         * @param precedingTimestamp - the timestamp of the block to be used as the\n         * time source if `timestampIncrement` is not \"clock\".\n         */\n        _Blockchain_adjustedTime.set(this, (precedingTimestamp) => {\n            const timeAdjustment = __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\");\n            const timestampIncrement = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement;\n            if (timestampIncrement === \"clock\") {\n                return Math.floor((Date.now() + timeAdjustment) / 1000);\n            }\n            else {\n                return (precedingTimestamp.toNumber() +\n                    Math.floor(timeAdjustment / 1000) +\n                    timestampIncrement.toNumber());\n            }\n        });\n        _Blockchain_deleteBlockData.set(this, async (blocksToDelete, newLatestBlockNumber) => {\n            // if we are forking we need to make sure we clean up the forking related\n            // metadata that isn't stored in the trie\n            if (\"revertMetaData\" in this.trie) {\n                await this.trie.revertMetaData(blocksToDelete[blocksToDelete.length - 1].header.number, blocksToDelete[0].header.number);\n            }\n            await __classPrivateFieldGet(this, _Blockchain_database, \"f\").batch(() => {\n                const { blocks, transactions, transactionReceipts, blockLogs } = this;\n                // point to the new \"latest\" again\n                blocks.updateLatestIndex(newLatestBlockNumber);\n                // clean up old blocks\n                blocksToDelete.forEach(block => {\n                    block.getTransactions().forEach(tx => {\n                        const txHash = tx.hash.toBuffer();\n                        transactions.del(txHash);\n                        transactionReceipts.del(txHash);\n                    });\n                    const blockNum = block.header.number.toBuffer();\n                    blocks.del(blockNum);\n                    blocks.del(block.hash().toBuffer());\n                    blockLogs.del(blockNum);\n                });\n            });\n        });\n        // TODO(stability): this.#snapshots is a potential unbound memory suck. Caller\n        // could call `evm_snapshot` over and over to grow the snapshot stack\n        // indefinitely. `this.#snapshots.blocks` is even worse. To solve this we\n        // might need to store in the db. An unlikely real problem, but possible.\n        _Blockchain_snapshots.set(this, {\n            snaps: [],\n            blocks: null,\n            unsubscribeFromBlocks: null\n        });\n        /**\n         * Creates a new VM with it's internal state set to that of the given `block`,\n         * up to, but _not_ including, the transaction at the given\n         * `transactionIndex`.\n         *\n         * Note: the VM is returned in a \"checkpointed\" state.\n         *\n         * @param transactionIndex\n         * @param trie\n         * @param block\n         */\n        _Blockchain_createFastForwardVm.set(this, async (transactionIndex, trie, block) => {\n            const blocks = this.blocks;\n            // ethereumjs vm doesn't use the callback style anymore\n            const blockchain = {\n                getBlock: async (number) => {\n                    const block = await blocks\n                        .get(utils_1.Quantity.toBuffer(number))\n                        .catch(_ => null);\n                    return block ? { hash: () => block.hash().toBuffer() } : null;\n                }\n            };\n            const common = this.fallback\n                ? this.fallback.getCommonForBlockNumber(this.common, BigInt(block.header.number.toString()))\n                : this.common;\n            // TODO: prefixCodeHashes should eventually be conditional\n            // https://github.com/trufflesuite/ganache/issues/3701\n            const stateManager = this.fallback\n                ? new state_manager_1.ForkStateManager({\n                    trie: trie,\n                    prefixCodeHashes: false\n                })\n                : new state_manager_2.GanacheStateManager({ trie, prefixCodeHashes: false });\n            const eei = new vm_1.EEI(stateManager, common, blockchain);\n            const evm = new evm_1.EVM({\n                common,\n                allowUnlimitedContractSize: __classPrivateFieldGet(this, _Blockchain_options, \"f\").chain.allowUnlimitedContractSize,\n                eei\n            });\n            const vm = await vm_1.VM.create({\n                activatePrecompiles: false,\n                common,\n                blockchain,\n                stateManager,\n                evm\n            });\n            // Don't even let the vm try to flush the block's _cache to the stateTrie.\n            // When forking some of the data that the traced function may request will\n            // exist only on the main chain. Because we pretty much lie to the VM by\n            // telling it we DO have data in our Trie, when we really don't, it gets\n            // lost during the commit phase when it traverses the \"borrowed\" datum's\n            // trie (as it may not have a valid root). Because this is a trace, and we\n            // don't need to commit the data, duck punching the `flush` method (the\n            // simplest method I could find) is fine.\n            // Remove this and you may see the infamous\n            // `Uncaught TypeError: Cannot read property 'pop' of undefined` error!\n            vm.stateManager._cache.flush = async () => { };\n            // Process the block without committing the data.\n            await vm.stateManager.checkpoint();\n            for (let i = 0; i < transactionIndex; i++) {\n                const tx = block.transactions[i];\n                const transactionEventContext = {};\n                this.emit(\"ganache:vm:tx:before\", {\n                    context: transactionEventContext\n                });\n                await vm.runTx({\n                    skipHardForkValidation: true,\n                    skipNonce: true,\n                    skipBalance: true,\n                    skipBlockGasLimitValidation: true,\n                    tx,\n                    block: block\n                });\n                this.emit(\"ganache:vm:tx:after\", {\n                    context: transactionEventContext\n                });\n            }\n            return vm;\n        });\n        _Blockchain_traceTransaction.set(this, async (transactionIndex, trie, newBlock, options) => {\n            const vm = await __classPrivateFieldGet(this, _Blockchain_createFastForwardVm, \"f\").call(this, transactionIndex, trie, newBlock);\n            let currentDepth = -1;\n            const storageStack = [];\n            const storage = {};\n            let gas = 0n;\n            const structLogs = [];\n            const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n            const transaction = newBlock.transactions[transactionIndex];\n            const transactionEventContext = {};\n            const stepListener = async (event, next) => {\n                // See these docs:\n                // https://github.com/ethereum/go-ethereum/wiki/Management-APIs\n                if (__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\")) {\n                    this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(transactionEventContext, event));\n                }\n                const gasLeft = event.gasLeft;\n                const totalGasUsedAfterThisStep = transaction.gasLimit - gasLeft;\n                const gasUsedPreviousStep = totalGasUsedAfterThisStep - gas;\n                gas += gasUsedPreviousStep;\n                let memory;\n                if (options.disableMemory === true) {\n                    memory = [];\n                }\n                else {\n                    // We get the memory as one large array.\n                    // Let's cut it up into 32 byte chunks as required by the spec.\n                    const limit = Number(event.memoryWordCount);\n                    memory = Array(limit);\n                    let index = 0;\n                    while (index < limit) {\n                        const offset = index * 32;\n                        const slice = event.memory.subarray(offset, offset + 32);\n                        memory[index++] = TraceData.from(slice);\n                    }\n                }\n                const stack = [];\n                if (options.disableStack !== true) {\n                    for (const stackItem of event.stack) {\n                        stack.push(TraceData.from(utils_1.Quantity.toBuffer(stackItem)));\n                    }\n                }\n                const structLog = {\n                    depth: event.depth + 1,\n                    error: \"\",\n                    gas: utils_1.Quantity.from(gasLeft),\n                    gasCost: 0,\n                    memory,\n                    op: event.opcode.name,\n                    pc: event.pc,\n                    stack,\n                    storage: null\n                };\n                // The gas difference calculated for each step is indicative of gas consumed in\n                // the previous step. Gas consumption in the final step will always be zero.\n                if (structLogs.length) {\n                    structLogs[structLogs.length - 1].gasCost = Number(gasUsedPreviousStep);\n                }\n                if (options.disableStorage === true) {\n                    // Add the struct log as is - nothing more to do.\n                    structLogs.push(structLog);\n                    next();\n                }\n                else {\n                    const { depth: eventDepth } = event;\n                    if (currentDepth > eventDepth) {\n                        storageStack.pop();\n                    }\n                    else if (currentDepth < eventDepth) {\n                        storageStack.push(new ethereum_utils_1.TraceStorageMap());\n                    }\n                    currentDepth = eventDepth;\n                    switch (event.opcode.name) {\n                        case \"SSTORE\": {\n                            const key = stack[stack.length - 1];\n                            const value = stack[stack.length - 2];\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            // Tell vm to move on to the next instruction. See below.\n                            structLogs.push(structLog);\n                            next();\n                            // assign after callback because this storage change actually takes\n                            // effect _after_ this opcode executes\n                            storageStack[eventDepth].set(key, value);\n                            break;\n                        }\n                        case \"SLOAD\": {\n                            const key = stack[stack.length - 1];\n                            const result = await vm.stateManager.getContractStorage(event.address, key.toBuffer());\n                            const value = TraceData.from(result);\n                            storageStack[eventDepth].set(key, value);\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                            break;\n                        }\n                        default:\n                            // new TraceStorageMap() here creates a shallow clone, to prevent other steps from overwriting\n                            structLog.storage = new ethereum_utils_1.TraceStorageMap(storageStack[eventDepth]);\n                            structLogs.push(structLog);\n                            next();\n                    }\n                }\n            };\n            vm.evm.events.on(\"step\", stepListener);\n            this.emit(\"ganache:vm:tx:before\", {\n                context: transactionEventContext\n            });\n            await vm.runTx({\n                skipHardForkValidation: true,\n                skipNonce: true,\n                skipBalance: true,\n                skipBlockGasLimitValidation: true,\n                tx: transaction,\n                block: newBlock\n            });\n            this.emit(\"ganache:vm:tx:after\", {\n                context: transactionEventContext\n            });\n            vm.evm.events.removeListener(\"step\", stepListener);\n            // send state results back\n            return {\n                gas: utils_1.Quantity.from(gas),\n                structLogs,\n                returnValue: \"\",\n                storage\n            };\n        });\n        /**\n         * Creates a block based on the given `targetBlock` that contains only the\n         * transactions from `targetBlock` up to and including the transaction at\n         * `transactionIndex`.\n         *\n         * @param targetBlock\n         * @param parentBlock\n         * @param transactionIndex\n         * @returns\n         */\n        _Blockchain_prepareNextBlock.set(this, (targetBlock, parentBlock, transactionIndex) => {\n            targetBlock.header.parentHash;\n            // Prepare the \"next\" block with necessary transactions\n            const newBlock = new ethereum_block_1.RuntimeBlock(this.common, utils_1.Quantity.from((parentBlock.header.number.toBigInt() || 0n) + 1n), parentBlock.hash(), ethereum_address_1.Address.from(parentBlock.header.miner.toString()), parentBlock.header.gasLimit, utils_1.Quantity.Zero, \n            // make sure we use the same timestamp as the target block\n            targetBlock.header.timestamp, this.isPostMerge ? utils_1.Quantity.Zero : __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.difficulty, parentBlock.header.totalDifficulty, this.getMixHash(parentBlock.hash().toBuffer()), ethereum_block_1.Block.calcNextBaseFee(parentBlock), util_1.KECCAK256_RLP);\n            newBlock.transactions = [];\n            newBlock.uncleHeaders = [];\n            const transactions = targetBlock.getTransactions();\n            for (let i = 0; i <= transactionIndex; i++) {\n                const tx = transactions[i];\n                newBlock.transactions.push(tx.toVmTransaction());\n            }\n            return newBlock;\n        });\n        __classPrivateFieldSet(this, _Blockchain_options, options, \"f\");\n        this.fallback = fallback;\n        this.coinbase = coinbase;\n        __classPrivateFieldSet(this, _Blockchain_instamine, !options.miner.blockTime || options.miner.blockTime <= 0, \"f\");\n        __classPrivateFieldSet(this, _Blockchain_database, new database_1.default(options, this), \"f\");\n    }\n    async initialize(initialAccounts) {\n        const database = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n        const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n        const instamine = __classPrivateFieldGet(this, _Blockchain_instamine, \"f\");\n        try {\n            let common;\n            if (this.fallback) {\n                await this.fallback.initialize();\n                await database.initialize();\n                common = this.common = this.fallback.common;\n                options.fork.blockNumber = this.fallback.blockNumber.toNumber();\n                options.chain.networkId = Number(common.networkId());\n                options.chain.chainId = Number(common.chainId());\n            }\n            else {\n                await database.initialize();\n                common = this.common = createCommon(options.chain.chainId, options.chain.networkId, options.chain.hardfork);\n                if (options.chain.allowUnlimitedInitCodeSize) {\n                    (0, common_helpers_1.removeEIP3860InitCodeSizeLimitCheck)(common);\n                }\n            }\n            this.isPostMerge = this.common.gteHardfork(\"merge\");\n            const blocks = (this.blocks = await block_manager_1.default.initialize(this, common, database.blockIndexes, database.blocks));\n            this.blockLogs = new blocklog_manager_1.default(database.blockLogs, this);\n            this.transactions = new transaction_manager_1.default(options, common, this, database.transactions);\n            this.transactionReceipts = new transaction_receipt_manager_1.default(database.transactionReceipts, this);\n            this.accounts = new account_manager_1.default(this);\n            this.storageKeys = database.storageKeys;\n            // if we have a latest block, use it to set up the trie.\n            const { latest } = blocks;\n            {\n                let stateRoot;\n                if (latest) {\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, Promise.resolve({\n                        block: latest,\n                        blockLogs: null\n                    }), \"f\");\n                    ({ stateRoot } = latest.header);\n                }\n                else {\n                    stateRoot = null;\n                }\n                this.trie = makeTrie(this, database.trie, stateRoot);\n            }\n            // create VM and listen to step events\n            this.vm = await this.createVmFromStateTrie(this.trie, options.chain.allowUnlimitedContractSize, true);\n            {\n                // Grab current time once to be used in all references to \"now\", to avoid\n                // any discrepancies. See https://github.com/trufflesuite/ganache/issues/3271\n                const startTime = new Date();\n                // if we don't have a time from the user get one now\n                if (options.chain.time == null)\n                    options.chain.time = startTime;\n                // create first block\n                const timestamp = options.chain.time.getTime();\n                const firstBlockTime = Math.floor(timestamp / 1000);\n                // if we are using clock time we need to record the time offset so\n                // other blocks can have timestamps relative to our initial time.\n                if (options.miner.timestampIncrement === \"clock\") {\n                    __classPrivateFieldSet(this, _Blockchain_timeAdjustment, timestamp - +startTime, \"f\");\n                }\n                // if we don't already have a latest block, create a genesis block!\n                if (!latest) {\n                    if (initialAccounts.length > 0) {\n                        await __classPrivateFieldGet(this, _Blockchain_commitAccounts, \"f\").call(this, initialAccounts);\n                    }\n                    __classPrivateFieldSet(this, _Blockchain_blockBeingSavedPromise, __classPrivateFieldGet(this, _Blockchain_initializeGenesisBlock, \"f\").call(this, firstBlockTime, options.miner.blockGasLimit, initialAccounts), \"f\");\n                    blocks.latest = await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\").then(({ block }) => block);\n                    // when we are forking, blocks.earliest is already set to what was\n                    // retrieved from the fork\n                    if (!blocks.earliest) {\n                        blocks.earliest = blocks.latest;\n                    }\n                }\n            }\n            {\n                // configure and start miner\n                const txPool = this.transactions.transactionPool;\n                const minerOpts = options.miner;\n                const miner = (__classPrivateFieldSet(this, _Blockchain_miner, new miner_1.default(minerOpts, txPool.executables, this.vm, __classPrivateFieldGet(this, _Blockchain_readyNextBlock, \"f\")), \"f\"));\n                //#region re-emit miner events:\n                miner.on(\"ganache:vm:tx:before\", event => {\n                    this.emit(\"ganache:vm:tx:before\", event);\n                });\n                miner.on(\"ganache:vm:tx:step\", event => {\n                    if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                        return;\n                    this.emit(\"ganache:vm:tx:step\", event);\n                });\n                miner.on(\"ganache:vm:tx:after\", event => {\n                    this.emit(\"ganache:vm:tx:after\", event);\n                });\n                miner.on(\"ganache:vm:tx:console.log\", event => {\n                    options.logging.logger.log(...event.logs);\n                    this.emit(\"ganache:vm:tx:console.log\", event);\n                });\n                //#endregion\n                //#region automatic mining\n                const nullResolved = Promise.resolve(null);\n                const mineAll = (maxTransactions, onlyOneBlock) => __classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)\n                    ? nullResolved\n                    : this.mine(maxTransactions, onlyOneBlock);\n                if (instamine) {\n                    // insta mining\n                    // whenever the transaction pool is drained mine the txs into blocks\n                    // only one transaction should be added per block\n                    txPool.on(\"drain\", mineAll.bind(null, miner_1.Capacity.Single));\n                }\n                else {\n                    // interval mining\n                    const wait = () => (__classPrivateFieldSet(this, _Blockchain_timer, setTimeout(next, minerOpts.blockTime * 1e3), \"f\"));\n                    // when interval mining, only one block should be mined. the block\n                    // can, however, be filled\n                    const next = () => {\n                        mineAll(miner_1.Capacity.FillBlock, true).then(wait);\n                    };\n                    wait();\n                }\n                //#endregion\n                miner.on(\"block\", __classPrivateFieldGet(this, _Blockchain_handleNewBlockData, \"f\"));\n                this.once(\"stop\").then(() => miner.clearListeners());\n            }\n        }\n        catch (e) {\n            // we failed to start up :-( bail!\n            __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n            // ignore errors while stopping here, since we are already in an\n            // exceptional case\n            await this.stop().catch(_ => { });\n            throw e;\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.started, \"f\");\n        this.emit(\"ready\");\n    }\n    getMixHash(data) {\n        // mixHash is used as an RNG post merge hardfork\n        return this.isPostMerge ? (0, utils_1.keccak)(data) : utils_1.BUFFER_32_ZERO;\n    }\n    pause() {\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") | Status.paused, \"f\");\n    }\n    resume(_threads = 1) {\n        if (!__classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)) {\n            __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Warning: startMining called when miner was already started\");\n            return;\n        }\n        // toggles the `paused` bit\n        __classPrivateFieldSet(this, _Blockchain_state, __classPrivateFieldGet(this, _Blockchain_state, \"f\") ^ Status.paused, \"f\");\n        // if we are instamining mine a block right away\n        if (__classPrivateFieldGet(this, _Blockchain_instamine, \"f\")) {\n            return this.mine(miner_1.Capacity.FillBlock);\n        }\n    }\n    /**\n     * @param milliseconds - the number of milliseconds to adjust the time by.\n     * Negative numbers are treated as 0.\n     * @returns the total time offset *in milliseconds*\n     */\n    increaseTime(milliseconds) {\n        if (milliseconds < 0) {\n            milliseconds = 0;\n        }\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\") + milliseconds, \"f\"));\n    }\n    /**\n     * Adjusts the internal time adjustment such that the provided time is considered the \"current\" time.\n     * @param newTime - the time (in milliseconds) that will be considered the \"current\" time\n     * @returns the total time offset *in milliseconds*\n     */\n    setTimeDiff(newTime) {\n        // when using clock time use Date.now(), otherwise use the timestamp of the\n        // current latest block\n        const currentTime = __classPrivateFieldGet(this, _Blockchain_options, \"f\").miner.timestampIncrement === \"clock\"\n            ? Date.now()\n            : this.blocks.latest.header.timestamp.toNumber() * 1000;\n        return (__classPrivateFieldSet(this, _Blockchain_timeAdjustment, newTime - currentTime, \"f\"));\n    }\n    snapshot() {\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        // Subscription ids are based on the number of active snapshots. Weird? Yes.\n        // But it's the way it's been since the beginning so it just hasn't been\n        // changed. Feel free to change it so ids are unique if it bothers you\n        // enough.\n        const id = snaps.push({\n            block: this.blocks.latest,\n            timeAdjustment: __classPrivateFieldGet(this, _Blockchain_timeAdjustment, \"f\")\n        });\n        // start listening to new blocks if this is the first snapshot\n        if (id === 1) {\n            snapshots.unsubscribeFromBlocks = this.on(\"block\", block => {\n                snapshots.blocks = {\n                    current: block.hash().toBuffer(),\n                    next: snapshots.blocks\n                };\n            });\n        }\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Saved snapshot #\" + id);\n        return id;\n    }\n    async revert(snapshotId) {\n        if (snapshotId.isNull()) {\n            throw new Error(\"invalid snapshotId\");\n        }\n        const rawValue = snapshotId.toBigInt();\n        __classPrivateFieldGet(this, _Blockchain_options, \"f\").logging.logger.log(\"Reverting to snapshot #\" + snapshotId);\n        const snapshots = __classPrivateFieldGet(this, _Blockchain_snapshots, \"f\");\n        const snaps = snapshots.snaps;\n        const snapshotIndex = Number(rawValue - 1n);\n        const snapshot = snaps[snapshotIndex];\n        if (!snapshot) {\n            return false;\n        }\n        // pause processing new transactions...\n        await this.transactions.pause();\n        // then pause the miner, too.\n        await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause();\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        // Pending transactions are always removed when you revert, even if they\n        // were present before the snapshot was created. Ideally, we'd remove only\n        // the new transactions.. but we'll leave that for another day.\n        this.transactions.clear();\n        const blocks = this.blocks;\n        const currentHash = blocks.latest.hash().toBuffer();\n        const snapshotBlock = snapshot.block;\n        const snapshotHeader = snapshotBlock.header;\n        const snapshotHash = snapshotBlock.hash().toBuffer();\n        // remove this and all stored snapshots after this snapshot\n        snaps.splice(snapshotIndex);\n        // if there are no more listeners, stop listening to new blocks\n        if (snaps.length === 0) {\n            snapshots.unsubscribeFromBlocks();\n        }\n        // if the snapshot's hash is different than the latest block's hash we've\n        // got new blocks to clean up.\n        if (!currentHash.equals(snapshotHash)) {\n            // if we've added blocks since we snapshotted we need to delete them and put\n            // some things back the way they were.\n            const blockPromises = [];\n            let blockList = snapshots.blocks;\n            while (blockList !== null) {\n                if (blockList.current.equals(snapshotHash))\n                    break;\n                blockPromises.push(blocks.getByHash(blockList.current));\n                blockList = blockList.next;\n            }\n            snapshots.blocks = blockList;\n            const blockData = await Promise.all(blockPromises);\n            await __classPrivateFieldGet(this, _Blockchain_deleteBlockData, \"f\").call(this, blockData, snapshotHeader.number.toBuffer());\n            setStateRootSync(this.vm.stateManager, snapshotHeader.stateRoot.toBuffer());\n            blocks.latest = snapshotBlock;\n        }\n        // put our time adjustment back\n        __classPrivateFieldSet(this, _Blockchain_timeAdjustment, snapshot.timeAdjustment, \"f\");\n        // resume mining\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").resume();\n        // resume processing transactions\n        this.transactions.resume();\n        return true;\n    }\n    async queueTransaction(transaction, secretKey) {\n        // NOTE: this.transactions.add *must* be awaited before returning the\n        // `transaction.hash()`, as the transactionPool may change the transaction\n        // (and thus its hash!)\n        // It may also throw Errors that must be returned to the caller.\n        const isExecutable = (await this.transactions.add(transaction, secretKey)) === true;\n        if (isExecutable) {\n            process.nextTick(this.emit.bind(this), \"pendingTransaction\", transaction);\n        }\n        const { hash } = transaction;\n        const instamine = __classPrivateFieldGet(this, _Blockchain_instamine, \"f\");\n        if (!instamine || __classPrivateFieldGet(this, _Blockchain_isPaused, \"f\").call(this)) {\n            return hash;\n        }\n        else {\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            // if the transaction is not executable, we just have to return the hash\n            if (instamine && options.miner.instamine === \"eager\") {\n                if (!isExecutable) {\n                    // users have been confused about why ganache \"hangs\" when sending a\n                    // transaction with a \"too-high\" nonce. This message should help them\n                    // understand what's going on.\n                    options.logging.logger.log(`Transaction \"${hash}\" has a too-high nonce; this transaction has been added to the pool, and will be processed when its nonce is reached. See https://github.com/trufflesuite/ganache/issues/4165 for more information.`);\n                }\n                // in eager instamine mode we must wait for the transaction to be saved\n                // before we can return the hash\n                const { status, error } = await transaction.once(\"finalized\");\n                // in eager instamine mode we must throw on all rejected transaction\n                // errors. We must also throw on `confirmed` transactions when\n                // vmErrorsOnRPCResponse is enabled.\n                if (error &&\n                    (status === \"rejected\" || options.chain.vmErrorsOnRPCResponse))\n                    throw error;\n            }\n            return hash;\n        }\n    }\n    async simulateTransaction(transaction, parentBlock, overrides) {\n        let result;\n        const data = transaction.data;\n        let gasLimit = transaction.gas.toBigInt();\n        // subtract out the transaction's base fee from the gas limit before\n        // simulating the tx, because `runCall` doesn't account for raw gas costs.\n        const hasToAddress = transaction.to != null;\n        const to = hasToAddress ? new ethereum_address_1.Address(transaction.to.toBuffer()) : null;\n        const common = this.fallback\n            ? this.fallback.getCommonForBlockNumber(this.common, BigInt(transaction.block.header.number.toString()))\n            : this.common;\n        const gasLeft = gasLimit - (0, ethereum_transaction_1.calculateIntrinsicGas)(data, hasToAddress, common);\n        const transactionContext = {};\n        this.emit(\"ganache:vm:tx:before\", {\n            context: transactionContext\n        });\n        if (gasLeft >= 0n) {\n            const stateTrie = this.trie.copy(false);\n            stateTrie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n            const options = __classPrivateFieldGet(this, _Blockchain_options, \"f\");\n            const vm = await this.createVmFromStateTrie(stateTrie, options.chain.allowUnlimitedContractSize, false, // precompiles have already been initialized in the stateTrie\n            common);\n            // take a checkpoint so the `runCall` never writes to the trie. We don't\n            // commit/revert later because this stateTrie is ephemeral anyway.\n            await vm.eei.checkpoint();\n            vm.evm.events.on(\"step\", (event) => {\n                const logs = (0, console_log_1.maybeGetLogs)(event);\n                if (logs) {\n                    options.logging.logger.log(...logs);\n                    this.emit(\"ganache:vm:tx:console.log\", {\n                        context: transactionContext,\n                        logs\n                    });\n                }\n                if (!__classPrivateFieldGet(this, _Blockchain_emitStepEvent, \"f\"))\n                    return;\n                const ganacheStepEvent = (0, provider_events_1.makeStepEvent)(transactionContext, event);\n                this.emit(\"ganache:vm:tx:step\", ganacheStepEvent);\n            });\n            const caller = transaction.from.toBuffer();\n            const callerAddress = new ethereum_address_1.Address(caller);\n            if (common.isActivatedEIP(2929)) {\n                const eei = vm.eei;\n                // handle Berlin hardfork warm storage reads\n                (0, precompiles_1.warmPrecompiles)(eei);\n                eei.addWarmedAddress(caller);\n                if (to)\n                    eei.addWarmedAddress(to.buf);\n                // shanghai hardfork requires that we warm the coinbase address\n                if (common.isActivatedEIP(3651)) {\n                    eei.addWarmedAddress(transaction.block.header.coinbase.buf);\n                }\n            }\n            // If there are any overrides requested for eth_call, apply\n            // them now before running the simulation.\n            await (0, run_call_1.applySimulationOverrides)(stateTrie, vm, overrides);\n            // we need to update the balance and nonce of the sender _before_\n            // we run this transaction so that things that rely on these values\n            // are correct (like contract creation!).\n            const fromAccount = await vm.eei.getAccount(callerAddress);\n            fromAccount.nonce += 1n;\n            const txCost = gasLimit * transaction.gasPrice.toBigInt();\n            const startBalance = fromAccount.balance;\n            // TODO: should we throw if insufficient funds?\n            fromAccount.balance = txCost > startBalance ? 0n : startBalance - txCost;\n            await vm.eei.putAccount(callerAddress, fromAccount);\n            // finally, run the call\n            result = await vm.evm.runCall({\n                caller: callerAddress,\n                data: transaction.data && transaction.data.toBuffer(),\n                gasPrice: transaction.gasPrice.toBigInt(),\n                gasLimit: gasLeft,\n                to,\n                value: transaction.value == null ? 0n : transaction.value.toBigInt(),\n                block: transaction.block\n            });\n        }\n        else {\n            result = {\n                execResult: {\n                    runState: { programCounter: 0 },\n                    exceptionError: new evm_1.EvmError(evm_1.EvmErrorMessage.OUT_OF_GAS),\n                    returnValue: utils_1.BUFFER_EMPTY\n                }\n            };\n        }\n        this.emit(\"ganache:vm:tx:after\", {\n            context: transactionContext\n        });\n        if (result.execResult.exceptionError) {\n            throw new ethereum_utils_1.CallError(result);\n        }\n        else {\n            return utils_1.Data.from(result.execResult.returnValue || \"0x\");\n        }\n    }\n    /**\n     * traceTransaction\n     *\n     * Run a previously-run transaction in the same state in which it occurred at the time it was run.\n     * This will return the vm-level trace output for debugging purposes.\n     *\n     * Strategy:\n     *\n     *  1. Find block where transaction occurred\n     *  2. Set state root of that block\n     *  3. Rerun every transaction in that block prior to and including the requested transaction\n     *  4. Send trace results back.\n     *\n     * @param transactionHash -\n     * @param options -\n     */\n    async traceTransaction(transactionHash, options) {\n        const transactionHashBuffer = utils_1.Data.toBuffer(transactionHash);\n        // #1 - get block via transaction object\n        const transaction = await this.transactions.get(transactionHashBuffer);\n        if (!transaction) {\n            throw new Error(\"Unknown transaction \" + transactionHash);\n        }\n        const targetBlock = await this.blocks.getByHash(transaction.blockHash.toBuffer());\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const txIndex = transaction.index.toNumber();\n        const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, txIndex);\n        // #2 - Set state root of original block\n        //\n        // TODO: Forking needs the forked block number passed during this step:\n        // https://github.com/trufflesuite/ganache/blob/develop/lib/blockchain_double.js#L917\n        const trie = this.trie.copy();\n        trie.setContext(parentBlock.header.stateRoot.toBuffer(), null, parentBlock.header.number);\n        // #3 - Rerun every transaction in block prior to and including the requested transaction\n        const { gas, structLogs, returnValue, storage } = await __classPrivateFieldGet(this, _Blockchain_traceTransaction, \"f\").call(this, txIndex, trie, newBlock, options);\n        // #4 - Send results back\n        return { gas, structLogs, returnValue, storage };\n    }\n    /**\n     * storageRangeAt\n     *\n     * Returns a contract's storage given a starting key and max number of\n     * entries to return.\n     *\n     *\n     * @param blockHash -\n     * @param txIndex -\n     * @param contractAddress -\n     * @param startKey -\n     * @param maxResult -\n     */\n    async storageRangeAt(blockHash, txIndex, contractAddress, startKey, maxResult) {\n        // get block information\n        const targetBlock = await this.blocks.getByHash(blockHash);\n        // get transaction using txIndex\n        const transactions = targetBlock.getTransactions();\n        const transaction = transactions[txIndex];\n        if (!transaction) {\n            throw new Error(`transaction index ${txIndex} is out of range for block ${blockHash}`);\n        }\n        const parentBlock = await this.blocks.getByHash(targetBlock.header.parentHash.toBuffer());\n        const { trie: trieDb, storageKeys: storageKeysDb } = __classPrivateFieldGet(this, _Blockchain_database, \"f\");\n        const trie = makeTrie(this, trieDb, parentBlock.header.stateRoot);\n        // get the contractAddress account storage trie\n        const contractAddressBuffer = ethereum_address_1.Address.toBuffer(contractAddress);\n        const rawAccount = await trie.get(contractAddressBuffer);\n        if (!rawAccount) {\n            throw new Error(`account ${contractAddress} doesn't exist`);\n        }\n        let storageTrie;\n        if (txIndex === 0) {\n            // there are no transactions to run, so let's just grab what we need\n            // from the last block's trie\n            const [, , stateRoot] = (0, rlp_1.decode)(rawAccount);\n            trie.setContext(stateRoot, contractAddressBuffer, parentBlock.header.number);\n            storageTrie = trie;\n        }\n        else {\n            // prepare block to be run in traceTransaction\n            const newBlock = __classPrivateFieldGet(this, _Blockchain_prepareNextBlock, \"f\").call(this, targetBlock, parentBlock, txIndex);\n            // run every transaction in that block prior to the requested transaction\n            const vm = await __classPrivateFieldGet(this, _Blockchain_createFastForwardVm, \"f\").call(this, txIndex, trie, newBlock);\n            storageTrie = await vm.stateManager.getStorageTrie(contractAddressBuffer);\n        }\n        return await (0, storage_range_at_1.dumpTrieStorageDetails)(utils_1.Data.toBuffer(startKey), maxResult, storageTrie, storageKeysDb);\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Blockchain_emitStepEvent, enable, \"f\");\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\").toggleStepEvent(enable);\n    }\n    /**\n     * Gracefully shuts down the blockchain service and all of its dependencies.\n     */\n    async stop() {\n        // If the blockchain is still initializing we don't want to shut down\n        // yet because there may still be database calls in flight. Leveldb may\n        // cause a segfault due to a race condition between a db write and the close\n        // call.\n        if (__classPrivateFieldGet(this, _Blockchain_state, \"f\") === Status.starting) {\n            await this.once(\"ready\");\n        }\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopping, \"f\");\n        // stop the polling miner, if necessary\n        clearTimeout(__classPrivateFieldGet(this, _Blockchain_timer, \"f\"));\n        // clean up listeners\n        if (this.vm) {\n            this.vm.events.removeAllListeners();\n            this.vm.evm && this.vm.evm.events.removeAllListeners();\n        }\n        // pause processing new transactions...\n        this.transactions && (await this.transactions.pause());\n        // then pause the miner, too.\n        __classPrivateFieldGet(this, _Blockchain_miner, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_miner, \"f\").pause());\n        // wait for anything in the process of being saved to finish up\n        await __classPrivateFieldGet(this, _Blockchain_blockBeingSavedPromise, \"f\");\n        this.fallback && (await this.fallback.close());\n        await this.emit(\"stop\");\n        __classPrivateFieldGet(this, _Blockchain_database, \"f\") && (await __classPrivateFieldGet(this, _Blockchain_database, \"f\").close());\n        __classPrivateFieldSet(this, _Blockchain_state, Status.stopped, \"f\");\n    }\n}\nexports.default = Blockchain;\n_Blockchain_state = new WeakMap(), _Blockchain_miner = new WeakMap(), _Blockchain_blockBeingSavedPromise = new WeakMap(), _Blockchain_timer = new WeakMap(), _Blockchain_emitStepEvent = new WeakMap(), _Blockchain_database = new WeakMap(), _Blockchain_options = new WeakMap(), _Blockchain_instamine = new WeakMap(), _Blockchain_saveNewBlock = new WeakMap(), _Blockchain_emitNewBlock = new WeakMap(), _Blockchain_getTransactionLogOutput = new WeakMap(), _Blockchain_handleNewBlockData = new WeakMap(), _Blockchain_readyNextBlock = new WeakMap(), _Blockchain_isPaused = new WeakMap(), _Blockchain_commitAccounts = new WeakMap(), _Blockchain_initializeGenesisBlock = new WeakMap(), _Blockchain_timeAdjustment = new WeakMap(), _Blockchain_adjustedTime = new WeakMap(), _Blockchain_deleteBlockData = new WeakMap(), _Blockchain_snapshots = new WeakMap(), _Blockchain_createFastForwardVm = new WeakMap(), _Blockchain_traceTransaction = new WeakMap(), _Blockchain_prepareNextBlock = new WeakMap();\n//# sourceMappingURL=blockchain.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Connector_provider, _Connector_handle;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Connector = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst provider_1 = require(\"./provider\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bufferify_1 = require(\"./helpers/bufferify\");\nfunction isHttp(connection) {\n    return (connection.constructor.name === \"uWS.HttpRequest\" ||\n        connection.constructor.name === \"HttpRequest\");\n}\nclass Connector extends emittery_1.default {\n    constructor(providerOptions = null, executor) {\n        super();\n        _Connector_provider.set(this, void 0);\n        this.BUFFERIFY_THRESHOLD = Connector.BUFFERIFY_THRESHOLD;\n        _Connector_handle.set(this, (payload, connection) => {\n            const method = payload.method;\n            if (method === \"eth_subscribe\") {\n                if (isHttp(connection)) {\n                    return Promise.reject(new ethereum_utils_1.CodedError(\"notifications not supported\", utils_1.JsonRpcErrorCode.METHOD_NOT_SUPPORTED));\n                }\n            }\n            const params = payload.params;\n            return __classPrivateFieldGet(this, _Connector_provider, \"f\")._requestRaw({ method, params });\n        });\n        __classPrivateFieldSet(this, _Connector_provider, new provider_1.EthereumProvider(providerOptions, executor), \"f\");\n    }\n    get provider() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\");\n    }\n    async connect() {\n        await __classPrivateFieldGet(this, _Connector_provider, \"f\").initialize();\n        // no need to wait for #provider.once(\"connect\") as the initialize()\n        // promise has already accounted for that after the promise is resolved\n        await this.emit(\"ready\");\n    }\n    parse(message) {\n        try {\n            return JSON.parse(message);\n        }\n        catch (e) {\n            throw new ethereum_utils_1.CodedError(e.message, utils_1.JsonRpcErrorCode.PARSE_ERROR);\n        }\n    }\n    handle(payload, connection) {\n        if (Array.isArray(payload)) {\n            // handle batch transactions\n            const promises = payload.map(payload => __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection)\n                .then(({ value }) => value)\n                .catch(e => e));\n            return Promise.resolve({ value: Promise.all(promises) });\n        }\n        else {\n            return __classPrivateFieldGet(this, _Connector_handle, \"f\").call(this, payload, connection);\n        }\n    }\n    format(results, payload) {\n        if (Array.isArray(payload)) {\n            return JSON.stringify(payload.map((payload, i) => {\n                const result = results[i];\n                if (result instanceof Error) {\n                    return (0, utils_1.makeError)(payload.id, result);\n                }\n                else {\n                    return (0, utils_1.makeResponse)(payload.id, result);\n                }\n            }));\n        }\n        else {\n            const json = (0, utils_1.makeResponse)(payload.id, results);\n            if (payload.method === \"debug_traceTransaction\" &&\n                typeof results === \"object\" &&\n                Array.isArray(results.structLogs) &&\n                // for \"large\" debug_traceTransaction results we convert to individual\n                // parts of the response to Buffers, yielded via a Generator function,\n                // instead of using JSON.stringify. This is necessary because we:\n                //   * avoid V8's maximum string length limit of 1GB\n                //   * avoid and the max Buffer length limit of ~2GB (on 64bit\n                //     architectures).\n                //   * avoid heap allocation failures due to trying to hold too much\n                //     data in memory (which can happen if we don't immediately consume\n                //     the `format` result -- by buffering everything into one array,\n                //     for example)\n                //\n                // We don't do this for everything because the bufferfication is so very\n                // very slow.\n                //\n                // TODO(perf): an even better way of solving this would be to convert\n                // `debug_traceTransaction` to a generator that yields chunks (of\n                // Buffer) as soon as they're available. We could then `write` these\n                // individual chunks immediately and our memory use would stay\n                // relatively low and constant.\n                results.structLogs.length > this.BUFFERIFY_THRESHOLD) {\n                return (0, bufferify_1.bufferify)(json, \"\");\n            }\n            else {\n                return JSON.stringify(json);\n            }\n        }\n    }\n    formatError(error, payload) {\n        const json = (0, utils_1.makeError)(payload && payload.id ? payload.id : null, error);\n        return JSON.stringify(json);\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Connector_provider, \"f\").disconnect();\n    }\n}\nexports.Connector = Connector;\n_Connector_provider = new WeakMap(), _Connector_handle = new WeakMap();\nConnector.BUFFERIFY_THRESHOLD = 100000;\n//# sourceMappingURL=connector.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AccountManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass AccountManager {\n    constructor(blockchain) {\n        _AccountManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _AccountManager_blockchain, blockchain, \"f\");\n    }\n    async get(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const raw = await this.getRaw(address, blockNumber);\n        if (raw == null)\n            return null;\n        return ethereum_utils_1.Account.fromBuffer(raw);\n    }\n    async getRaw(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const { trie, blocks } = __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\");\n        // get the block, its state root, and the trie at that state root\n        const { stateRoot, number } = (await blocks.get(blockNumber)).header;\n        const trieCopy = trie.copy(false);\n        trieCopy.setContext(stateRoot.toBuffer(), null, number);\n        // get the account from the trie\n        return await trieCopy.get(address.toBuffer());\n    }\n    async getNonce(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [nonce] = (0, rlp_1.decode)(data);\n        return nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce);\n    }\n    async getBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Quantity.Zero;\n        const [, balance] = (0, rlp_1.decode)(data);\n        return balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance);\n    }\n    async getNonceAndBalance(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return { nonce: utils_1.Quantity.Zero, balance: utils_1.Quantity.Zero };\n        const [nonce, balance] = (0, rlp_1.decode)(data);\n        return {\n            nonce: nonce.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(nonce),\n            balance: balance.length === 0 ? utils_1.Quantity.Zero : utils_1.Quantity.from(balance)\n        };\n    }\n    async getCode(address, blockNumber = ethereum_utils_1.Tag.latest) {\n        const data = await this.getRaw(address, blockNumber);\n        if (data == null)\n            return utils_1.Data.Empty;\n        const [, , , codeHash] = (0, rlp_1.decode)(data);\n        if (codeHash.equals(util_1.KECCAK256_NULL))\n            return utils_1.Data.Empty;\n        else\n            return __classPrivateFieldGet(this, _AccountManager_blockchain, \"f\").trie.database().get(codeHash).then(utils_1.Data.from);\n    }\n}\nexports.default = AccountManager;\n_AccountManager_blockchain = new WeakMap();\n//# sourceMappingURL=account-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockManager_blockchain, _BlockManager_common, _BlockManager_blockIndexes;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst LATEST_INDEX_KEY = utils_1.BUFFER_ZERO;\nconst NOTFOUND = 404;\nconst EMPTY_BUFFER = Buffer.from([]);\nclass BlockManager extends manager_1.default {\n    constructor(blockchain, common, blockIndexes, base) {\n        super(base, ethereum_block_1.Block, common);\n        _BlockManager_blockchain.set(this, void 0);\n        _BlockManager_common.set(this, void 0);\n        _BlockManager_blockIndexes.set(this, void 0);\n        this.fromFallback = async (tagOrBlockNumber) => {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            let blockNumber;\n            if (typeof tagOrBlockNumber === \"string\") {\n                blockNumber = tagOrBlockNumber;\n            }\n            else if (!fallback.isValidForkBlockNumber(tagOrBlockNumber)) {\n                // don't get the block if the requested block is _after_ our fallback's\n                // blocknumber because it doesn't exist in our local chain.\n                return null;\n            }\n            else {\n                blockNumber = tagOrBlockNumber.toString();\n            }\n            const json = await fallback.request(\"eth_getBlockByNumber\", [\n                blockNumber,\n                true\n            ]);\n            if (json == null) {\n                return null;\n            }\n            else {\n                const common = fallback.getCommonForBlockNumber(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), BigInt(json.number));\n                return BlockManager.rawFromJSON(json, common);\n            }\n        };\n        __classPrivateFieldSet(this, _BlockManager_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_common, common, \"f\");\n        __classPrivateFieldSet(this, _BlockManager_blockIndexes, blockIndexes, \"f\");\n    }\n    static async initialize(blockchain, common, blockIndexes, base) {\n        const bm = new BlockManager(blockchain, common, blockIndexes, base);\n        await bm.updateTaggedBlocks();\n        return bm;\n    }\n    static rawFromJSON(json, common) {\n        const blockNumber = utils_1.Quantity.toBuffer(json.number);\n        const hasWithdrawals = json.withdrawalsRoot != null;\n        const header = [\n            utils_1.Data.toBuffer(json.parentHash),\n            utils_1.Data.toBuffer(json.sha3Uncles),\n            ethereum_address_1.Address.from(json.miner).toBuffer(),\n            utils_1.Data.toBuffer(json.stateRoot),\n            utils_1.Data.toBuffer(json.transactionsRoot),\n            utils_1.Data.toBuffer(json.receiptsRoot),\n            utils_1.Data.toBuffer(json.logsBloom),\n            utils_1.Quantity.toBuffer(json.difficulty),\n            blockNumber,\n            utils_1.Quantity.toBuffer(json.gasLimit),\n            utils_1.Quantity.toBuffer(json.gasUsed),\n            utils_1.Quantity.toBuffer(json.timestamp),\n            utils_1.Data.toBuffer(json.extraData),\n            utils_1.Data.toBuffer(json.mixHash),\n            utils_1.Data.toBuffer(json.nonce)\n        ];\n        // We can't include the _slots_ for these values in the `header` array\n        // (i.e., set them to `undefined`), when the values are `undefined`, as the\n        // `length` of the array is encoded by the rlp process.\n        if (json.baseFeePerGas) {\n            header[15] = utils_1.Quantity.toBuffer(json.baseFeePerGas);\n            if (hasWithdrawals) {\n                header[16] = utils_1.Data.toBuffer(json.withdrawalsRoot);\n            }\n        }\n        const totalDifficulty = utils_1.Quantity.toBuffer(json.totalDifficulty);\n        const txs = Array(json.transactions.length);\n        const extraTxs = Array(json.transactions.length);\n        const blockHash = utils_1.Data.toBuffer(json.hash);\n        for (let index = 0; index < json.transactions.length; index++) {\n            const txJson = json.transactions[index];\n            const blockExtra = [\n                ethereum_address_1.Address.toBuffer(txJson.from),\n                utils_1.Quantity.toBuffer(txJson.hash)\n            ];\n            const txExtra = [\n                ...blockExtra,\n                blockHash,\n                blockNumber,\n                utils_1.Quantity.toBuffer(index)\n            ];\n            const tx = ethereum_transaction_1.TransactionFactory.fromRpc(txJson, common, txExtra);\n            txs[index] =\n                tx.raw.length === 9\n                    ? tx.raw\n                    : tx.serialized ?? (0, ethereum_transaction_1.encodeWithPrefix)(tx.type.toNumber(), tx.raw);\n            extraTxs[index] = blockExtra;\n        }\n        let start;\n        if (hasWithdrawals) {\n            const extraWithdrawals = Array(json.withdrawals.length);\n            for (let i = 0; i < json.withdrawals.length; i++) {\n                const withdrawal = json.withdrawals[i];\n                extraWithdrawals[i] = [\n                    utils_1.Quantity.toBuffer(withdrawal.index),\n                    utils_1.Quantity.toBuffer(withdrawal.validatorIndex),\n                    ethereum_address_1.Address.toBuffer(withdrawal.address),\n                    utils_1.Quantity.toBuffer(withdrawal.amount)\n                ];\n            }\n            start = [header, txs, [], extraWithdrawals];\n        }\n        else {\n            start = [header, txs, []];\n        }\n        return (0, ethereum_block_1.serialize)(start, [totalDifficulty, extraTxs]).serialized;\n    }\n    getBlockByTag(tag) {\n        switch (tag) {\n            case \"latest\":\n            case \"finalized\":\n            case \"safe\":\n                return this.latest;\n            case \"pending\":\n                // TODO: build a real pending block!\n                return this.latest; // this.createBlock(this.latest.header);\n            case \"earliest\":\n                return this.earliest;\n            default:\n                // the key is probably a hex string, let nature takes its course.\n                break;\n        }\n    }\n    getEffectiveNumber(tagOrBlockNumber = typeof ethereum_utils_1.Tag.latest) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block) {\n                return block.header.number;\n            }\n        }\n        return utils_1.Quantity.from(tagOrBlockNumber);\n    }\n    async getNumberFromHash(hash) {\n        return __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(utils_1.Data.toBuffer(hash)).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async getByHash(hash) {\n        const number = await this.getNumberFromHash(hash);\n        if (number === null) {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const json = await fallback.request(\"eth_getBlockByHash\", [\n                    utils_1.Data.from(hash),\n                    true\n                ]);\n                if (json) {\n                    const blockNumber = BigInt(json.number);\n                    if (blockNumber <= fallback.blockNumber.toBigInt()) {\n                        const common = fallback.getCommonForBlockNumber(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), blockNumber);\n                        return new ethereum_block_1.Block(BlockManager.rawFromJSON(json, common), common);\n                    }\n                }\n            }\n            return null;\n        }\n        else {\n            return this.get(number);\n        }\n    }\n    async getRawByBlockNumber(blockNumber) {\n        // TODO(perf): make the block's raw fields accessible on latest/earliest/pending so\n        // we don't have to fetch them from the db each time a block tag is used.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3481\n        const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n        const numBuf = blockNumber.toBuffer();\n        return this.getRaw(numBuf).then(block => {\n            if (block == null && fallback) {\n                return this.fromFallback(blockNumber);\n            }\n            return block;\n        });\n    }\n    async get(tagOrBlockNumber) {\n        if (typeof tagOrBlockNumber === \"string\") {\n            const block = this.getBlockByTag(tagOrBlockNumber);\n            if (block)\n                return block;\n        }\n        const blockNumber = utils_1.Quantity.from(tagOrBlockNumber);\n        const block = await this.getRaw(blockNumber.toBuffer());\n        const common = __classPrivateFieldGet(this, _BlockManager_common, \"f\");\n        if (block)\n            return new ethereum_block_1.Block(block, common);\n        else {\n            const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n            if (fallback) {\n                const block = await this.fromFallback(blockNumber);\n                if (block) {\n                    return new ethereum_block_1.Block(block, fallback.getCommonForBlockNumber(common, blockNumber.toBigInt()));\n                }\n            }\n        }\n        throw new Error(\"header not found\");\n    }\n    /**\n     * Writes the block object to the underlying database.\n     * @param block -\n     */\n    async putBlock(number, hash, serialized) {\n        let key = number;\n        // ensure we can store Block #0 as key \"00\", not \"\"\n        if (EMPTY_BUFFER.equals(key)) {\n            key = Buffer.from([0]);\n        }\n        const secondaryKey = hash.toBuffer();\n        await Promise.all([\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(secondaryKey, key),\n            super.set(key, serialized)\n        ]);\n    }\n    /**\n     * Updates the \"latest\" index to point to the given number.\n     * @param number the block number of the latest block\n     */\n    async updateLatestIndex(number) {\n        await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").put(LATEST_INDEX_KEY, number);\n    }\n    async getEarliest() {\n        const fallback = __classPrivateFieldGet(this, _BlockManager_blockchain, \"f\").fallback;\n        if (fallback) {\n            const json = await fallback.request(\"eth_getBlockByNumber\", [ethereum_utils_1.Tag.earliest, true], \n            // TODO: re-enable cache once this is fixed\n            // https://github.com/trufflesuite/ganache/issues/3773\n            { disableCache: true });\n            if (json) {\n                const common = fallback.getCommonForBlockNumber(__classPrivateFieldGet(this, _BlockManager_common, \"f\"), BigInt(json.number));\n                return new ethereum_block_1.Block(BlockManager.rawFromJSON(json, common), common);\n            }\n        }\n        else {\n            // if we're forking, there shouldn't be an earliest block saved to the db,\n            // it's always retrieved from the fork\n            for await (const data of this.base.createValueStream({ limit: 1 })) {\n                return new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n            }\n        }\n    }\n    /**\n     * Updates the this.latest and this.earliest properties with data\n     * from the database.\n     */\n    async updateTaggedBlocks() {\n        const [earliest, latestBlockNumber] = await Promise.all([\n            this.getEarliest(),\n            __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\").get(LATEST_INDEX_KEY).catch(e => null)\n        ]);\n        if (earliest)\n            this.earliest = earliest;\n        if (latestBlockNumber) {\n            this.latest = await this.get(latestBlockNumber);\n        }\n        else {\n            // TODO: remove this section for the Ganache 8.0 release\n            // Ganache v7.0.0 didn't save a pointer to the latest block correctly, so\n            // when a database was restarted it would pull the wrong block. This code\n            // iterates over all data in the data base and finds the block with the\n            // highest block number and updates the database with the pointer so we\n            // don't have to hit this code again next time.\n            this.latest = await (async () => {\n                let latest;\n                for await (const data of this.base.createValueStream()) {\n                    const block = new ethereum_block_1.Block(data, __classPrivateFieldGet(this, _BlockManager_common, \"f\"));\n                    if (!latest ||\n                        block.header.number.toBigInt() > latest.header.number.toBigInt()) {\n                        latest = block;\n                    }\n                }\n                return latest;\n            })();\n            if (this.latest) {\n                // update the LATEST_INDEX_KEY index so we don't have to do this next time\n                await __classPrivateFieldGet(this, _BlockManager_blockIndexes, \"f\")\n                    .put(LATEST_INDEX_KEY, this.latest.header.number.toBuffer())\n                    .catch(e => null);\n            }\n        }\n    }\n}\nexports.default = BlockManager;\n_BlockManager_blockchain = new WeakMap(), _BlockManager_common = new WeakMap(), _BlockManager_blockIndexes = new WeakMap();\n//# sourceMappingURL=block-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _BlockLogManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst filter_parsing_1 = require(\"../helpers/filter-parsing\");\nclass BlockLogManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_utils_1.BlockLogs);\n        _BlockLogManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _BlockLogManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const log = await super.get(key);\n        if (log) {\n            log.blockNumber = utils_1.Quantity.from(key);\n        }\n        else if (__classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback) {\n            const block = utils_1.Quantity.from(key);\n            const res = await __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\").fallback.request(\"eth_getLogs\", [{ fromBlock: block, toBlock: block }]);\n            return ethereum_utils_1.BlockLogs.fromJSON(res);\n        }\n        return log;\n    }\n    async getLogs(filter) {\n        const blockchain = __classPrivateFieldGet(this, _BlockLogManager_blockchain, \"f\");\n        if (\"blockHash\" in filter) {\n            const { addresses, topics } = (0, filter_parsing_1.parseFilterDetails)(filter);\n            const blockNumber = await blockchain.blocks.getNumberFromHash(filter.blockHash);\n            if (!blockNumber)\n                return [];\n            const logs = await this.get(blockNumber);\n            return logs ? [...logs.filter(addresses, topics)] : [];\n        }\n        else {\n            const { addresses, topics, fromBlock, toBlockNumber } = (0, filter_parsing_1.parseFilter)(filter, blockchain);\n            const pendingLogsPromises = [\n                this.get(fromBlock.toBuffer())\n            ];\n            const fromBlockNumber = fromBlock.toNumber();\n            // if we have a range of blocks to search, do that here:\n            if (fromBlockNumber !== toBlockNumber) {\n                // fetch all the blockLogs in-between `fromBlock` and `toBlock` (excluding\n                // from, because we already started fetching that one)\n                for (let i = fromBlockNumber + 1, l = toBlockNumber + 1; i < l; i++) {\n                    pendingLogsPromises.push(this.get(utils_1.Quantity.toBuffer(i)));\n                }\n            }\n            // now filter and compute all the blocks' blockLogs (in block order)\n            return Promise.all(pendingLogsPromises).then(blockLogsRange => {\n                const filteredBlockLogs = [];\n                blockLogsRange.forEach(blockLogs => {\n                    // TODO(perf): this loops over all addresses for every block.\n                    // Maybe make it loop only once?\n                    // Issue: https://github.com/trufflesuite/ganache/issues/3482\n                    if (blockLogs)\n                        filteredBlockLogs.push(...blockLogs.filter(addresses, topics));\n                });\n                return filteredBlockLogs;\n            });\n        }\n    }\n}\nexports.default = BlockLogManager;\n_BlockLogManager_blockchain = new WeakMap();\n//# sourceMappingURL=blocklog-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Manager_Type, _Manager_options;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst NOTFOUND = 404;\nclass Manager {\n    constructor(base, type, options) {\n        _Manager_Type.set(this, void 0);\n        _Manager_options.set(this, void 0);\n        __classPrivateFieldSet(this, _Manager_Type, type, \"f\");\n        __classPrivateFieldSet(this, _Manager_options, options, \"f\");\n        this.base = base;\n    }\n    getRaw(key) {\n        if (typeof key === \"string\") {\n            key = utils_1.Data.toBuffer(key);\n        }\n        if (key.length === 0) {\n            key = utils_1.BUFFER_ZERO;\n        }\n        return this.base.get(key).catch(e => {\n            if (e.status === NOTFOUND)\n                return null;\n            throw e;\n        });\n    }\n    async get(key) {\n        const raw = await this.getRaw(key);\n        if (!raw)\n            return null;\n        return new (__classPrivateFieldGet(this, _Manager_Type, \"f\"))(raw, __classPrivateFieldGet(this, _Manager_options, \"f\"));\n    }\n    set(key, value) {\n        return this.base.put(key, value);\n    }\n    del(key) {\n        return this.base.del(key);\n    }\n}\nexports.default = Manager;\n_Manager_Type = new WeakMap(), _Manager_options = new WeakMap();\n//# sourceMappingURL=manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionManager_queue, _TransactionManager_paused, _TransactionManager_resumer, _TransactionManager_resolver, _TransactionManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst transaction_pool_1 = __importDefault(require(\"../transaction-pool\"));\nconst promise_queue_1 = __importDefault(require(\"@ganache/promise-queue\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\n// since our Manager needs to receive and Instantiable class with a\n// consistent return type and our transaction factory can return\n// any number of transaction types, we pass in this empty\n// no op class to fool the Manager\nclass NoOp {\n}\nclass TransactionManager extends manager_1.default {\n    constructor(options, common, blockchain, base) {\n        super(base, ethereum_transaction_1.TransactionFactory, common);\n        _TransactionManager_queue.set(this, new promise_queue_1.default());\n        _TransactionManager_paused.set(this, false);\n        _TransactionManager_resumer.set(this, void 0);\n        _TransactionManager_resolver.set(this, void 0);\n        _TransactionManager_blockchain.set(this, void 0);\n        this.fromFallback = async (transactionHash) => {\n            const { fallback } = __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\");\n            const tx = await fallback.request(\"eth_getTransactionByHash\", [\n                utils_1.Data.toString(transactionHash)\n            ]);\n            if (tx == null)\n                return null;\n            const blockHash = utils_1.Data.from(tx.blockHash, 32);\n            const blockNumber = utils_1.Quantity.from(tx.blockNumber);\n            const index = utils_1.Quantity.from(tx.transactionIndex);\n            // don't get the transaction if the requested transaction is _after_ our\n            // fallback's blocknumber because it doesn't exist in our local chain.\n            if (!fallback.isValidForkBlockNumber(blockNumber))\n                return null;\n            const extra = [\n                ethereum_address_1.Address.toBuffer(tx.from),\n                utils_1.Data.toBuffer(tx.hash, 32),\n                blockHash.toBuffer(),\n                blockNumber.toBuffer(),\n                index.toBuffer(),\n                utils_1.Quantity.toBuffer(tx.gasPrice)\n            ];\n            const common = fallback.getCommonForBlockNumber(fallback.common, blockNumber.toBigInt());\n            const runTx = ethereum_transaction_1.TransactionFactory.fromRpc(tx, common, extra);\n            return runTx.serializeForDb(blockHash, blockNumber, index);\n        };\n        /**\n         * Resume processing transactions. Has no effect if not paused.\n         */\n        this.resume = () => {\n            if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\"))\n                return;\n            __classPrivateFieldSet(this, _TransactionManager_paused, false, \"f\");\n            __classPrivateFieldGet(this, _TransactionManager_resolver, \"f\").call(this);\n        };\n        __classPrivateFieldSet(this, _TransactionManager_blockchain, blockchain, \"f\");\n        this.transactionPool = new transaction_pool_1.default(options, blockchain);\n    }\n    async getRaw(transactionHash) {\n        return super.getRaw(transactionHash).then(block => {\n            if (block == null && __classPrivateFieldGet(this, _TransactionManager_blockchain, \"f\").fallback) {\n                return this.fromFallback(transactionHash);\n            }\n            return block;\n        });\n    }\n    async get(key) {\n        const factory = (await super.get(key));\n        if (!factory)\n            return null;\n        return factory.tx;\n    }\n    /**\n     * Adds the transaction to the transaction pool.\n     *\n     * Returns a promise that is only resolved in the order it was added.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns `true` if the `transaction` is immediately executable, `false` if\n     * it may be valid in the future. Throws if the transaction is invalid.\n     */\n    async add(transaction, secretKey) {\n        if (__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _TransactionManager_resumer, \"f\");\n        }\n        // Because ganache requires determinism, we can't allow varying IO times to\n        // potentially affect the order in which transactions are inserted into the\n        // pool, so we use a FIFO queue to _return_ transaction insertions in the\n        // order the were received.\n        const insertion = this.transactionPool.prepareTransaction(transaction, secretKey);\n        const result = await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").add(insertion);\n        if (result) {\n            this.transactionPool.drain();\n        }\n        return result;\n    }\n    /**\n     * Immediately ignores all transactions that were in the process of being\n     * added to the pool. These transactions' `push` promises will be resolved\n     * immediately with the value `false` and will _not_ be added to the pool.\n     *\n     * Also clears all transactions that were already added to the pool.\n     *\n     * Transactions that are currently in the process of being mined may still be\n     * mined.\n     */\n    clear() {\n        __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").clear(false);\n        this.transactionPool.clear();\n    }\n    /**\n     * Stop processing _new_ transactions; puts new requests in a queue. Has no\n     * affect if already paused.\n     */\n    async pause() {\n        if (!__classPrivateFieldGet(this, _TransactionManager_paused, \"f\")) {\n            // stop processing new transactions immediately\n            __classPrivateFieldSet(this, _TransactionManager_paused, true, \"f\");\n            __classPrivateFieldSet(this, _TransactionManager_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _TransactionManager_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        // then wait until all async things we were already processing are done\n        // before returning\n        if (__classPrivateFieldGet(this, _TransactionManager_queue, \"f\").isBusy()) {\n            await __classPrivateFieldGet(this, _TransactionManager_queue, \"f\").emit(\"idle\");\n        }\n    }\n}\nexports.default = TransactionManager;\n_TransactionManager_queue = new WeakMap(), _TransactionManager_paused = new WeakMap(), _TransactionManager_resumer = new WeakMap(), _TransactionManager_resolver = new WeakMap(), _TransactionManager_blockchain = new WeakMap();\n//# sourceMappingURL=transaction-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionReceiptManager_blockchain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst manager_1 = __importDefault(require(\"./manager\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nclass TransactionReceiptManager extends manager_1.default {\n    constructor(base, blockchain) {\n        super(base, ethereum_transaction_1.InternalTransactionReceipt);\n        _TransactionReceiptManager_blockchain.set(this, void 0);\n        __classPrivateFieldSet(this, _TransactionReceiptManager_blockchain, blockchain, \"f\");\n    }\n    async get(key) {\n        const receipt = await super.get(key);\n        if (receipt) {\n            return receipt;\n        }\n        else if (__classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback) {\n            const res = await __classPrivateFieldGet(this, _TransactionReceiptManager_blockchain, \"f\").fallback.request(\"eth_getTransactionReceipt\", [typeof key === \"string\" ? key : utils_1.Data.from(key)]);\n            if (!res)\n                return null;\n            const status = res.status === \"0x1\" ? utils_1.Quantity.One.toBuffer() : utils_1.BUFFER_ZERO;\n            const cumulativeGasUsed = utils_1.Quantity.toBuffer(res.cumulativeGasUsed);\n            const logsBloom = utils_1.Data.toBuffer(res.logsBloom, 256);\n            const logs = res.logs.map(log => [\n                ethereum_address_1.Address.from(log.address).toBuffer(),\n                log.topics.map(topic => utils_1.Data.toBuffer(topic)),\n                Array.isArray(log.data)\n                    ? log.data.map(data => utils_1.Data.toBuffer(data))\n                    : utils_1.Data.toBuffer(log.data)\n            ]);\n            const gasUsed = utils_1.Quantity.toBuffer(res.gasUsed);\n            const contractAddress = res.contractAddress == null\n                ? utils_1.BUFFER_EMPTY\n                : ethereum_address_1.Address.from(res.contractAddress).toBuffer();\n            return ethereum_transaction_1.InternalTransactionReceipt.fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress);\n        }\n    }\n}\nexports.default = TransactionReceiptManager;\n_TransactionReceiptManager_blockchain = new WeakMap();\n//# sourceMappingURL=transaction-receipt-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Database_options, _Database_cleanupDirectory, _Database_closed, _Database_rootStore, _Database_cleanup;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst tmp_promise_1 = require(\"tmp-promise\");\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst trie_db_1 = require(\"./trie-db\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst levelup = require(\"levelup\");\n(0, tmp_promise_1.setGracefulCleanup)();\nconst tmpOptions = { prefix: \"ganache_\", unsafeCleanup: true };\nconst noop = () => Promise.resolve();\nclass Database extends emittery_1.default {\n    /**\n     * The Database handles the creation of the database, and all access to it.\n     * Once the database has been fully initialized it will emit a `ready`\n     * event.\n     * @param options - Supports one of two options: `db` (a leveldown compliant\n     * store instance) or `dbPath` (the path to store/read the db instance)\n     * @param blockchain -\n     */\n    constructor(options, blockchain) {\n        super();\n        _Database_options.set(this, void 0);\n        _Database_cleanupDirectory.set(this, noop);\n        _Database_closed.set(this, false);\n        this.directory = null;\n        this.db = null;\n        _Database_rootStore.set(this, void 0);\n        this.initialize = async () => {\n            const levelupOptions = {\n                keyEncoding: \"binary\",\n                valueEncoding: \"binary\"\n            };\n            const databaseOptions = __classPrivateFieldGet(this, _Database_options, \"f\").database;\n            const store = databaseOptions.db;\n            let db;\n            let shouldTryMigrate = false;\n            if (store) {\n                __classPrivateFieldSet(this, _Database_rootStore, (0, encoding_down_1.default)(store, levelupOptions), \"f\");\n                db = levelup(__classPrivateFieldGet(this, _Database_rootStore, \"f\"), {});\n                shouldTryMigrate = true;\n            }\n            else {\n                let directory = databaseOptions.dbPath;\n                if (!directory) {\n                    const dirInfo = await (0, tmp_promise_1.dir)(tmpOptions);\n                    directory = dirInfo.path;\n                    __classPrivateFieldSet(this, _Database_cleanupDirectory, dirInfo.cleanup, \"f\");\n                    // don't continue if we closed while we were waiting for the dir\n                    if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                        return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n                }\n                else {\n                    shouldTryMigrate = true;\n                }\n                this.directory = directory;\n                // specify an empty `prefix` for browser-based leveldown (level-js)\n                const leveldownOpts = { prefix: \"\" };\n                const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n                __classPrivateFieldSet(this, _Database_rootStore, store, \"f\");\n                db = levelup(store);\n            }\n            // don't continue if we closed while we were waiting for the db\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            const open = db.open();\n            const sublevelTrie = (0, subleveldown_1.default)(db, \"T\", levelupOptions);\n            this.trie = new trie_db_1.TrieDB(sublevelTrie);\n            this.db = db;\n            await open;\n            // don't continue if we closed while we were waiting for it to open\n            if (__classPrivateFieldGet(this, _Database_closed, \"f\"))\n                return __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n            this.blocks = (0, subleveldown_1.default)(db, \"b\", levelupOptions);\n            this.blockIndexes = (0, subleveldown_1.default)(db, \"i\", levelupOptions);\n            this.blockLogs = (0, subleveldown_1.default)(db, \"l\", levelupOptions);\n            this.transactions = (0, subleveldown_1.default)(db, \"t\", levelupOptions);\n            this.transactionReceipts = (0, subleveldown_1.default)(db, \"r\", levelupOptions);\n            this.storageKeys = (0, subleveldown_1.default)(db, \"s\", levelupOptions);\n            // only migrate if we were given a dbPath or a user-defined db\n            if (shouldTryMigrate) {\n                await this.runMigrations();\n            }\n            return this.emit(\"ready\");\n        };\n        /**\n         * Cleans up the database connections and our tmp directory.\n         */\n        _Database_cleanup.set(this, async () => {\n            const db = this.db;\n            if (db) {\n                await new Promise((resolve, reject) => db.close(err => {\n                    if (err)\n                        return void reject(err);\n                    resolve(void 0);\n                }));\n                await Promise.all([\n                    this.blocks.close(),\n                    this.blockIndexes.close(),\n                    this.blockIndexes.close(),\n                    this.transactionReceipts.close(),\n                    this.transactions.close(),\n                    this.storageKeys.close(),\n                    this.trie.close()\n                ]);\n            }\n            return __classPrivateFieldGet(this, _Database_cleanupDirectory, \"f\").call(this);\n        });\n        __classPrivateFieldSet(this, _Database_options, options, \"f\");\n        this.blockchain = blockchain;\n    }\n    /**\n     * Handles migrating the db from one version to another.\n     * @returns\n     */\n    async runMigrations() {\n        let version;\n        try {\n            // note: we only add a version\n            version = await this.db.get(utils_1.VERSION_KEY);\n        }\n        catch {\n            /* not found */\n        }\n        // we've shipped two versions:\n        //  * no version at all (referred to as \"version `null`\")\n        //  * and version: `BUFFER_ZERO` (the first versioned version)\n        // Since we only have the one version we can be lazy right now and just\n        // check if it exists.\n        if (version)\n            return;\n        const logger = __classPrivateFieldGet(this, _Database_options, \"f\").logging.logger;\n        logger.log(\"Migrating database from version `null` to `0`…\");\n        const ops = [\n            //#region MIGRATION 0a\n            // update the db with the version.\n            // since this was not an original field, adding a version if a migration in\n            // and of itself. Future migrations will need conditionally check the\n            // version to apply relevant migrations.\n            { type: \"put\", key: utils_1.VERSION_KEY, value: utils_1.BUFFER_ZERO }\n            //#endregion MIGRATION 0a\n        ];\n        //#region MIGRATION 0b\n        // ============\n        // Fix the `size` field of blocks.\n        //\n        // This migration fixes a bug in version `null` that caused us to compute\n        // the `size` of blocks incorrectly. We save the size to the db, so we need\n        // to recompute it and re-save for all blocks:\n        const stream = this.blocks.createReadStream();\n        const prefix = Buffer.from(this.blocks.db.db.prefix);\n        for await (const data of stream) {\n            const { key, value } = data;\n            ops.push({\n                type: \"put\",\n                key: Buffer.concat([prefix, key]),\n                value: ethereum_block_1.Block.migrate(value)\n            });\n        }\n        //#endregion MIGRATION 0b\n        // save all in one atomic operation:\n        await this.db.batch(ops);\n        logger.log(\"Migration complete\");\n    }\n    /**\n     * Call `batch` to batch `put` and `del` operations within the same\n     * event loop tick of the provided function. All db operations within the\n     * batch _must_ be executed synchronously.\n     * @param fn - Within this function's event loop tick, all `put` and\n     * `del` database operations are applied in a single atomic operation. This\n     * provides a single write call and if any individual put/del's fail the\n     * entire operation fails and no modifications are made.\n     * @returns a Promise that resolves to the return value\n     * of the provided function.\n     */\n    batch(fn) {\n        const rootDb = __classPrivateFieldGet(this, _Database_rootStore, \"f\").db;\n        const batch = this.db.batch();\n        const originalPut = rootDb.put;\n        const originalDel = rootDb.del;\n        rootDb.put = batch.put.bind(batch);\n        rootDb.del = batch.del.bind(batch);\n        let prom;\n        try {\n            const ret = fn();\n            // PSA: don't let vscode (or yourself) rewrite this to `await` the\n            // `batch.write` call. The `finally` block needs to run _before_ the\n            // write promise has resolved.\n            prom = batch.write().then(() => ret);\n        }\n        finally {\n            rootDb.put = originalPut;\n            rootDb.del = originalDel;\n        }\n        return prom;\n    }\n    /**\n     * Gracefully closes the database and cleans up the file system and waits for\n     * it to fully shut down. Emits a `close` event once complete.\n     * Note: only emits `close` once.\n     */\n    async close() {\n        const wasClosed = __classPrivateFieldGet(this, _Database_closed, \"f\");\n        __classPrivateFieldSet(this, _Database_closed, true, \"f\");\n        await __classPrivateFieldGet(this, _Database_cleanup, \"f\").call(this);\n        // only emit `close` once\n        if (!wasClosed) {\n            this.emit(\"close\");\n            return;\n        }\n    }\n}\nexports.default = Database;\n_Database_options = new WeakMap(), _Database_cleanupDirectory = new WeakMap(), _Database_closed = new WeakMap(), _Database_rootStore = new WeakMap(), _Database_cleanup = new WeakMap();\n//# sourceMappingURL=database.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkCache = void 0;\nconst util_1 = require(\"@ethereumjs/util\");\nconst cache_1 = require(\"@ethereumjs/statemanager/dist/cache\");\nclass ForkCache extends cache_1.Cache {\n    constructor(trie) {\n        /**\n         * Looks up address in underlying trie.\n         * @param address - Address of account\n         */\n        const lookupAccount = async (address) => {\n            const rlp = await trie.get(address.buf);\n            return rlp ? util_1.Account.fromRlpSerializedAccount(rlp) : new util_1.Account();\n        };\n        super({ getCb: lookupAccount, putCb: trie.put.bind(trie), deleteCb: trie.del.bind(trie) });\n    }\n}\nexports.ForkCache = ForkCache;\n//# sourceMappingURL=cache.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction Deferred() {\n    const deferred = {};\n    deferred.promise = new Promise((resolve, reject) => {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n    });\n    return deferred;\n}\nexports.default = Deferred;\n//# sourceMappingURL=deferred.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Fork_abortController, _Fork_handler, _Fork_options, _Fork_accounts, _Fork_hardfork, _Fork_setCommonFromChain, _Fork_setBlockDataFromChainAndOptions, _Fork_syncAccounts;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Fork = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst abort_controller_1 = __importDefault(require(\"abort-controller\"));\nconst common_1 = require(\"@ethereumjs/common\");\nconst http_handler_1 = require(\"./handlers/http-handler\");\nconst ws_handler_1 = require(\"./handlers/ws-handler\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\nconst block_manager_1 = __importDefault(require(\"../data-managers/block-manager\"));\nconst provider_handler_1 = require(\"./handlers/provider-handler\");\nconst persistent_cache_1 = require(\"./persistent-cache/persistent-cache\");\nconst url_1 = require(\"url\");\nconst common_helpers_1 = require(\"../helpers/common-helpers\");\nasync function fetchChainId(fork) {\n    const chainIdHex = await fork.request(\"eth_chainId\", []);\n    return parseInt(chainIdHex, 16);\n}\nasync function fetchNetworkId(fork) {\n    const networkIdStr = await fork.request(\"net_version\", []);\n    return parseInt(networkIdStr, 10);\n}\nfunction fetchBlockNumber(fork) {\n    // {disableCache: true} required so we never cache the blockNumber, as forking\n    // shouldn't ever cache a method that can change!\n    return fork.request(\"eth_blockNumber\", [], { disableCache: true });\n}\nfunction fetchBlock(fork, blockNumber) {\n    return fork.request(\"eth_getBlockByNumber\", [blockNumber, true]);\n}\nasync function fetchNonce(fork, address, blockNumber) {\n    const nonce = await fork.request(\"eth_getTransactionCount\", [\n        address,\n        blockNumber\n    ]);\n    return utils_1.Quantity.from(nonce);\n}\nclass Fork {\n    constructor(options, accounts) {\n        _Fork_abortController.set(this, new abort_controller_1.default());\n        _Fork_handler.set(this, void 0);\n        _Fork_options.set(this, void 0);\n        _Fork_accounts.set(this, void 0);\n        _Fork_hardfork.set(this, void 0);\n        _Fork_setCommonFromChain.set(this, async (chainIdPromise) => {\n            const [chainId, networkId] = await Promise.all([\n                chainIdPromise,\n                fetchNetworkId(this)\n            ]);\n            this.chainId = chainId;\n            this.common = common_1.Common.custom({\n                name: \"ganache-fork\",\n                defaultHardfork: __classPrivateFieldGet(this, _Fork_hardfork, \"f\"),\n                // use the remote chain's network id mostly because truffle's debugger\n                // needs it to match in order to fetch sources\n                networkId,\n                // we use ganache's own chain id for blocks _after_ the fork to prevent\n                // replay attacks\n                chainId: __classPrivateFieldGet(this, _Fork_options, \"f\").chain.chainId,\n                comment: \"Local test network fork\"\n            }, { baseChain: utils_1.KNOWN_CHAINIDS.has(chainId) ? chainId : 1 });\n            if (__classPrivateFieldGet(this, _Fork_options, \"f\").chain.allowUnlimitedInitCodeSize) {\n                (0, common_helpers_1.removeEIP3860InitCodeSizeLimitCheck)(this.common);\n            }\n            // disable listeners to common since we don't actually cause any `emit`s,\n            // but other EVM parts to listen and will make node complain about too\n            // many listeners.\n            this.common.on = () => { };\n        });\n        _Fork_setBlockDataFromChainAndOptions.set(this, async (chainIdPromise) => {\n            const { fork: options } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n            if (options.blockNumber === ethereum_utils_1.Tag.latest) {\n                const [latestBlock, chainId] = await Promise.all([\n                    fetchBlock(this, ethereum_utils_1.Tag.latest),\n                    chainIdPromise\n                ]);\n                let blockNumber = parseInt(latestBlock.number, 16);\n                const effectiveBlockNumber = utils_1.KNOWN_CHAINIDS.has(chainId)\n                    ? Math.max(blockNumber - options.preLatestConfirmations, 0)\n                    : blockNumber;\n                let block;\n                if (effectiveBlockNumber !== blockNumber) {\n                    block = await fetchBlock(this, utils_1.Quantity.from(effectiveBlockNumber));\n                }\n                else {\n                    block = latestBlock;\n                }\n                options.blockNumber = effectiveBlockNumber;\n                this.blockNumber = utils_1.Quantity.from(effectiveBlockNumber);\n                this.stateRoot = utils_1.Data.from(block.stateRoot);\n                await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, this.blockNumber);\n                return block;\n            }\n            else if (Number.isInteger(options.blockNumber) &&\n                options.blockNumber >= 0) {\n                const blockNumber = utils_1.Quantity.from(options.blockNumber);\n                const [block] = await Promise.all([\n                    fetchBlock(this, blockNumber).then(async (block) => {\n                        this.stateRoot = block.stateRoot;\n                        await __classPrivateFieldGet(this, _Fork_syncAccounts, \"f\").call(this, blockNumber);\n                        return block;\n                    }),\n                    fetchBlockNumber(this).then((latestBlockNumberHex) => {\n                        const latestBlockNumberInt = parseInt(latestBlockNumberHex, 16);\n                        // if our block number option is _after_ the current block number\n                        // throw, as it likely wasn't intentional and doesn't make sense.\n                        if (options.blockNumber > latestBlockNumberInt) {\n                            throw new Error(`\\`fork.blockNumber\\` (${options.blockNumber}) must not be greater than the current block number (${latestBlockNumberInt})`);\n                        }\n                        else {\n                            this.blockNumber = blockNumber;\n                        }\n                    })\n                ]);\n                return block;\n            }\n            else {\n                throw new Error(`Invalid value for \\`fork.blockNumber\\` option: \"${options.blockNumber}\". Must be a positive integer or the string \"latest\".`);\n            }\n        });\n        _Fork_syncAccounts.set(this, (blockNumber) => {\n            return Promise.all(__classPrivateFieldGet(this, _Fork_accounts, \"f\").map(async (account) => {\n                const nonce = await fetchNonce(this, account.address, blockNumber);\n                account.nonce = nonce;\n            }));\n        });\n        __classPrivateFieldSet(this, _Fork_options, options, \"f\");\n        const forkingOptions = options.fork;\n        __classPrivateFieldSet(this, _Fork_hardfork, options.chain.hardfork, \"f\");\n        __classPrivateFieldSet(this, _Fork_accounts, accounts, \"f\");\n        const { url, network } = forkingOptions;\n        if (url) {\n            const { protocol } = url;\n            switch (protocol) {\n                case \"ws:\":\n                case \"wss:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                case \"http:\":\n                case \"https:\":\n                    __classPrivateFieldSet(this, _Fork_handler, new http_handler_1.HttpHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n                    break;\n                default: {\n                    throw new Error(`Unsupported protocol: ${protocol}`);\n                }\n            }\n        }\n        else if (forkingOptions.provider) {\n            __classPrivateFieldSet(this, _Fork_handler, new provider_handler_1.ProviderHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n        else if (network) {\n            let normalizedNetwork;\n            if (network === \"görli\") {\n                forkingOptions.network = normalizedNetwork = \"goerli\";\n            }\n            else {\n                normalizedNetwork = network;\n            }\n            // Note: `process.env.INFURA_KEY` is replaced by webpack with an infura\n            // key.\n            const infuraKey = process.env.INFURA_KEY;\n            if (!infuraKey) {\n                throw new Error(\"The INFURA_KEY environment variable was not given and is required when using Ganache's integrated archive network feature.\");\n            }\n            // any because the `network` check above narrowed the type to one\n            // that doesn't include `url`, but we still want to add it.\n            forkingOptions.url = new url_1.URL(`wss://${normalizedNetwork}.infura.io/ws/v3/${infuraKey}`);\n            __classPrivateFieldSet(this, _Fork_handler, new ws_handler_1.WsHandler(options, __classPrivateFieldGet(this, _Fork_abortController, \"f\").signal), \"f\");\n        }\n    }\n    async initialize() {\n        let cacheProm;\n        const { fork: forkOptions, chain: chainOptions, miner: minerOptions } = __classPrivateFieldGet(this, _Fork_options, \"f\");\n        if (forkOptions.deleteCache)\n            await persistent_cache_1.PersistentCache.deleteDb();\n        if (forkOptions.disableCache === false) {\n            // ignore cache start up errors as it is possible there is an `open`\n            // conflict if another ganache fork is running at the time this one is\n            // started. The cache isn't required (though performance will be\n            // degraded without it)\n            cacheProm = persistent_cache_1.PersistentCache.create().catch(_e => null);\n        }\n        else {\n            cacheProm = null;\n        }\n        const chainIdPromise = fetchChainId(this);\n        const [block, cache] = await Promise.all([\n            __classPrivateFieldGet(this, _Fork_setBlockDataFromChainAndOptions, \"f\").call(this, chainIdPromise),\n            cacheProm,\n            __classPrivateFieldGet(this, _Fork_setCommonFromChain, \"f\").call(this, chainIdPromise)\n        ]);\n        const common = this.getCommonForBlockNumber(this.common, this.blockNumber.toBigInt());\n        this.block = new ethereum_block_1.Block(block_manager_1.default.rawFromJSON(block, common), common);\n        if (!chainOptions.time && minerOptions.timestampIncrement !== \"clock\") {\n            chainOptions.time = new Date((this.block.header.timestamp.toNumber() +\n                minerOptions.timestampIncrement.toNumber()) *\n                1000);\n        }\n        if (cache)\n            await this.initCache(cache);\n    }\n    async initCache(cache) {\n        await cache.initialize(this.block.header.number, this.block.hash(), this.request.bind(this));\n        __classPrivateFieldGet(this, _Fork_handler, \"f\").setCache(cache);\n    }\n    request(method, params, options = { disableCache: false }) {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").request(method, params, options);\n    }\n    abort() {\n        return __classPrivateFieldGet(this, _Fork_abortController, \"f\").abort();\n    }\n    close() {\n        return __classPrivateFieldGet(this, _Fork_handler, \"f\").close();\n    }\n    isValidForkBlockNumber(blockNumber) {\n        return blockNumber.toBigInt() <= this.blockNumber.toBigInt();\n    }\n    selectValidForkBlockNumber(blockNumber) {\n        return this.isValidForkBlockNumber(blockNumber)\n            ? blockNumber\n            : this.blockNumber;\n    }\n    /**\n     * If the `blockNumber` is before our `fork.blockNumber`, return a `Common`\n     * instance, applying the rules from the remote chain's `common` via its\n     * original `chainId`. If the remote chain's `chainId` is now \"known\", return\n     * a `Common` with our local `common`'s rules applied, but with the remote\n     * chain's `chainId`. If the block is greater than or equal to our\n     * `fork.blockNumber` return `common`.\n     * @param common -\n     * @param blockNumber -\n     */\n    getCommonForBlockNumber(common, blockNumber) {\n        if (blockNumber <= this.blockNumber.toBigInt()) {\n            // we are at or before our fork block\n            let forkCommon;\n            if (utils_1.KNOWN_CHAINIDS.has(this.chainId)) {\n                // we support this chain id, so let's use its rules\n                let hardfork;\n                // hardforks are iterated from earliest to latest\n                for (const hf of common.hardforks()) {\n                    if (hf.block === null)\n                        continue;\n                    if (blockNumber >= BigInt(hf.block)) {\n                        hardfork = hf.name;\n                    }\n                    else {\n                        break;\n                    }\n                }\n                forkCommon = new common_1.Common({ chain: this.chainId, hardfork });\n            }\n            else {\n                // we don't know about this chain or hardfork, so just carry on per usual,\n                // but with the fork's chainId (instead of our local chainId)\n                forkCommon = common_1.Common.custom({\n                    chainId: this.chainId,\n                    defaultHardfork: common.hardfork()\n                }, { baseChain: 1 });\n            }\n            if (__classPrivateFieldGet(this, _Fork_options, \"f\").chain.allowUnlimitedInitCodeSize) {\n                (0, common_helpers_1.removeEIP3860InitCodeSizeLimitCheck)(forkCommon);\n            }\n            return forkCommon;\n        }\n        else {\n            return common;\n        }\n    }\n}\nexports.Fork = Fork;\n_Fork_abortController = new WeakMap(), _Fork_handler = new WeakMap(), _Fork_options = new WeakMap(), _Fork_accounts = new WeakMap(), _Fork_hardfork = new WeakMap(), _Fork_setCommonFromChain = new WeakMap(), _Fork_setBlockDataFromChainAndOptions = new WeakMap(), _Fork_syncAccounts = new WeakMap();\n//# sourceMappingURL=fork.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseHandler = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rate_limiter_1 = __importDefault(require(\"../rate-limiter/rate-limiter\"));\nconst lru_cache_1 = __importDefault(require(\"lru-cache\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst INVALID_RESPONSE = \"Invalid response from fork provider: \";\nconst INVALID_AUTH_ERROR = \"Authentication via both username/password (Basic) and JWT (Bearer) is not possible\";\nconst WINDOW_SECONDS = 30;\nclass BaseHandler {\n    constructor(options, abortSignal) {\n        this.id = 1;\n        this.requestCache = new Map();\n        this.fireForget = new Set();\n        const forkingOptions = options.fork;\n        const { requestsPerSecond, url, userAgent, origin } = forkingOptions;\n        this.abortSignal = abortSignal;\n        this.limiter = new rate_limiter_1.default(\n        // convert `requestsPerSecond` to \"requests per window\"\n        requestsPerSecond * WINDOW_SECONDS, WINDOW_SECONDS * 1000, abortSignal);\n        this.valueCache = new lru_cache_1.default({\n            max: 1073741824,\n            length: (value, key) => {\n                return value.length + key.length;\n            }\n        });\n        // we don't need header-related things if we are using a provider\n        // instead of a url since we aren't in charge of sending requests at the\n        // header level.\n        if (url) {\n            const headers = {\n                \"user-agent\": userAgent\n            };\n            if (origin) {\n                headers[\"origin\"] = origin;\n            }\n            // we set our own Authentication headers, so username and password must be\n            // removed from the url. (The values have already been copied to the options)\n            url.password = url.username = \"\";\n            const isInfura = url.host.endsWith(\".infura.io\");\n            BaseHandler.setAuthHeaders(forkingOptions, headers);\n            BaseHandler.setUserHeaders(forkingOptions, headers, !isInfura);\n            this.headers = headers;\n        }\n    }\n    setCache(cache) {\n        this.persistentCache = cache;\n    }\n    /**\n     * Adds Authorization headers from the given options to the provided `headers`\n     * object. Overwrites an existing `Authorization` header value.\n     *\n     * @param options -\n     * @param headers -\n     */\n    static setAuthHeaders(options, headers) {\n        if (options.username != null || options.password != null) {\n            if (options.jwt != null)\n                throw new Error(INVALID_AUTH_ERROR);\n            headers.authorization = `Basic ${Buffer.from(`${options.username || \"\"}:${options.password || \"\"}`).toString(\"base64\")}`;\n        }\n        else if (options.jwt) {\n            headers.authorization = `Bearer ${options.jwt}`;\n        }\n    }\n    /**\n     * Adds user provided headers to the provided `headers`\n     * object.\n     *\n     * If the headers already contain an existing `Authorization` header\n     * value and the incoming values have compatible schemes\n     * (Bearer===Bearer, Basic===Basic) the values are merged. Note: if the\n     * `permitMultiAuth` option is `false` Bearer tokens can not be merged.\n     *\n     * @param options -\n     * @param headers -\n     * @param permitMultiAuth -\n     */\n    static setUserHeaders(options, headers, permitMultiAuth) {\n        // copy the user-provided headers over to the connection's headers\n        const userHeaders = options.headers;\n        if (userHeaders) {\n            for (let i = 0, l = userHeaders.length; i < l; i++) {\n                let { name, value } = userHeaders[i];\n                const key = name.toLowerCase();\n                // if the user specified multiple Authentication headers (.e.g, via\n                // username/password or the jwt field) we need to join them when\n                // they are both of the same scheme, otherwise we throw an exception.\n                if (key === \"authorization\" && \"authorization\" in headers) {\n                    if (!permitMultiAuth) {\n                        throw new Error(`Authentication with multiple auth-params is not allowed.`);\n                    }\n                    const currentScheme = headers.authorization.split(\" \", 1)[0];\n                    const [incomingScheme, authParams] = value.split(/\\.(?:.+)/);\n                    if (incomingScheme.toLowerCase() === currentScheme.toLowerCase()) {\n                        headers.authorization += \",\" + authParams;\n                    }\n                    else {\n                        throw new Error(`Authentication via both ${currentScheme} and ${incomingScheme} is not allowed.`);\n                    }\n                }\n                else {\n                    headers[key] = value;\n                }\n            }\n        }\n    }\n    getFromMemCache(key) {\n        const cachedRequest = this.requestCache.get(key);\n        if (cachedRequest !== undefined)\n            return cachedRequest;\n        const cachedValue = this.valueCache.get(key);\n        if (cachedValue !== undefined)\n            return JSON.parse(cachedValue).result;\n    }\n    async getFromSlowCache(method, params, key) {\n        if (!this.persistentCache)\n            return;\n        const raw = await this.persistentCache.get(method, params, key).catch(e => {\n            if (e.notFound)\n                return null;\n            // I/O or other error, throw as things are getting weird and the cache may\n            // have lost integrity\n            throw e;\n        });\n        if (raw != null)\n            return { result: JSON.parse(raw).result, raw };\n    }\n    async queueRequest(method, params, key, send, options = { disableCache: false }) {\n        if (!options.disableCache) {\n            const memCached = this.getFromMemCache(key);\n            if (memCached !== undefined)\n                return memCached;\n            const diskCached = await this.getFromSlowCache(method, params, key);\n            if (diskCached !== undefined) {\n                this.valueCache.set(key, Buffer.from(diskCached.raw));\n                return diskCached.result;\n            }\n        }\n        const promise = this.limiter\n            .handle(send)\n            .then(async ({ response, raw }) => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if ((0, utils_1.hasOwn)(response, \"result\")) {\n                if (!options.disableCache) {\n                    // cache non-error responses only\n                    this.valueCache.set(key, raw);\n                    // swallow errors for the persistentCache, since it's not vital that\n                    // it always works\n                    if (this.persistentCache) {\n                        const prom = this.persistentCache\n                            .put(method, params, key, typeof raw === \"string\" ? Buffer.from(raw) : raw)\n                            .catch(_ => {\n                            // the cache.put may fail if the db is closed while a request\n                            // is in flight. This is a \"fire and forget\" method.\n                        });\n                        // track these unawaited `puts`\n                        this.fireForget.add(prom);\n                        // clean up once complete\n                        prom.finally(() => {\n                            this.fireForget.delete(prom);\n                        });\n                    }\n                }\n                return response.result;\n            }\n            else if ((0, utils_1.hasOwn)(response, \"error\") && response.error != null) {\n                const { error } = response;\n                throw new ethereum_utils_1.CodedError(error.message, error.code);\n            }\n            throw new Error(`${INVALID_RESPONSE}\\`${JSON.stringify(response)}\\``);\n        });\n        this.requestCache.set(key, promise);\n        return await promise;\n    }\n    async close() {\n        await Promise.all(this.fireForget.keys());\n        this.persistentCache && (await this.persistentCache.close());\n    }\n}\nexports.BaseHandler = BaseHandler;\nBaseHandler.JSONRPC_PREFIX = '{\"jsonrpc\":\"2.0\",\"id\":';\n//# sourceMappingURL=base-handler.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\n// TODO: support http2\n// Issue: https://github.com/trufflesuite/ganache/issues/3474\nconst http_1 = __importStar(require(\"http\"));\nconst https_1 = __importStar(require(\"https\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass HttpHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.url = options.fork.url;\n        this.headers.accept = this.headers[\"content-type\"] = \"application/json\";\n        if (this.url.protocol === \"http:\") {\n            this._request = http_1.default.request;\n            this.agent = new http_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n        else {\n            this._request = https_1.default.request;\n            this.agent = new https_1.Agent({\n                keepAlive: true,\n                scheduling: \"fifo\"\n            });\n        }\n    }\n    async handleLengthedResponse(res, length) {\n        return await new Promise((resolve, reject) => {\n            const buffer = Buffer.allocUnsafe(length);\n            let offset = 0;\n            function data(message) {\n                const messageLength = message.length;\n                // note: Node will NOT send us more data than the content-length header\n                // denotes, so we don't have to worry about it.\n                message.copy(buffer, offset, 0, messageLength);\n                offset += messageLength;\n            }\n            function end() {\n                // note: Node doesn't check if the content-length matches (we might\n                // receive less data than expected), so we do that here\n                if (offset !== length) {\n                    // if we didn't receive enough data, throw\n                    reject(new Error(\"content-length mismatch\"));\n                }\n                else {\n                    resolve(buffer);\n                }\n            }\n            res.on(\"data\", data);\n            res.on(\"end\", end);\n            res.on(\"error\", reject);\n        });\n    }\n    async handleChunkedResponse(res) {\n        const chunks = [];\n        let totalLength = 0;\n        for await (let chunk of res) {\n            chunks.push(chunk);\n            totalLength += chunk.length;\n        }\n        return chunks.length === 1 ? chunks[0] : Buffer.concat(chunks, totalLength);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        const key = JSON.stringify({ method, params });\n        const { protocol, hostname: host, port, pathname, search } = this.url;\n        const requestOptions = {\n            protocol,\n            host,\n            port,\n            path: pathname + search,\n            headers: this.headers,\n            method: \"POST\",\n            agent: this.agent,\n            // Node v15 supports AbortSignals directly\n            signal: this.abortSignal\n        };\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const deferred = (0, deferred_1.default)();\n            const postData = `${JSONRPC_PREFIX}${this.id++},${key.slice(1)}`;\n            this.headers[\"content-length\"] = postData.length;\n            const req = this._request(requestOptions);\n            req.on(\"response\", res => {\n                const { headers } = res;\n                let buffer;\n                // in the browser we can't detect if the response is compressed (gzip),\n                // but it doesn't matter since the browser has decompressed already\n                // anyway\n                if (process.env.IS_BROWSER) {\n                    buffer = this.handleChunkedResponse(res);\n                }\n                else {\n                    // if we have a transfer-encoding we don't care about \"content-length\"\n                    // (per HTTP spec). We also don't care about invalid lengths\n                    if (\"transfer-encoding\" in headers) {\n                        buffer = this.handleChunkedResponse(res);\n                    }\n                    else {\n                        const length = headers[\"content-length\"] / 1;\n                        if (isNaN(length) || length <= 0) {\n                            buffer = this.handleChunkedResponse(res);\n                        }\n                        else {\n                            // we have a content-length; use it to pre-allocate the required memory\n                            buffer = this.handleLengthedResponse(res, length);\n                        }\n                    }\n                }\n                // TODO: handle invalid JSON (throws on parse)?\n                // Issue: https://github.com/trufflesuite/ganache/issues/3475\n                buffer.then(buffer => {\n                    try {\n                        deferred.resolve({\n                            response: JSON.parse(buffer),\n                            raw: buffer\n                        });\n                    }\n                    catch {\n                        const resStr = buffer.toString();\n                        let shortStr;\n                        if (resStr.length > 340) {\n                            // truncate long errors so we don't blow up the user's logs\n                            shortStr = resStr.slice(0, 320) + \"…\";\n                        }\n                        else {\n                            shortStr = resStr;\n                        }\n                        let msg = `Invalid JSON response from fork provider:\\n\\n ${shortStr}`;\n                        if ((resStr.startsWith(\"invalid project id\") ||\n                            resStr.startsWith(\"project id required in the url\")) &&\n                            this.url.host.endsWith(\"infura.io\")) {\n                            msg += `\\n\\nThe provided fork url, ${this.url}, may be an invalid or incorrect Infura endpoint.`;\n                            msg += `\\nVisit https://infura.io/docs/ethereum for Infura documentation.`;\n                        }\n                        deferred.reject(new Error(msg));\n                    }\n                });\n            });\n            // after 5 seconds of idle abort the request\n            req.setTimeout(5000, req.abort.bind(req, null));\n            req.on(\"error\", deferred.reject);\n            req.write(postData);\n            req.end();\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n}\nexports.HttpHandler = HttpHandler;\n//# sourceMappingURL=http-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderHandler = void 0;\nconst base_handler_1 = require(\"./base-handler\");\nclass ProviderHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        const provider = options.fork.provider;\n        if (typeof provider.request === \"function\") {\n            this._request = async (method, params) => {\n                try {\n                    const result = await provider.request({ method, params });\n                    const response = { result };\n                    return { response, raw: JSON.stringify(response) };\n                }\n                catch (error) {\n                    // if this doesn't appear to be a JSON-RPC \"coded\" error it might be\n                    // a network level error, or something else we don't know how to\n                    // handle. Throw so stack traces are preserved.\n                    if (typeof error.code !== \"number\")\n                        throw error;\n                    return {\n                        response: { error },\n                        raw: null\n                    };\n                }\n            };\n        }\n        else if (typeof provider.send === \"function\") {\n            this._request = async (method, params) => {\n                return await new Promise((resolve, reject) => {\n                    const request = {\n                        id: this.id++,\n                        jsonrpc: \"2.0\",\n                        method,\n                        params\n                    };\n                    provider.send(request, (err, response) => {\n                        if (err)\n                            return void reject(err);\n                        resolve({\n                            response,\n                            raw: JSON.stringify(response)\n                        });\n                    });\n                });\n            };\n        }\n        else {\n            throw new Error(\"Forking `provider` must be EIP-1193 compatible\");\n        }\n    }\n    async request(method, params, options = { disableCache: false }) {\n        // format params via JSON stringification because the params might\n        // be Quantity or Data, which aren't valid as `params` themselves,\n        // but when JSON stringified they are\n        const strParams = JSON.stringify(params);\n        return await this.queueRequest(method, params, `${method}:${strParams}`, () => this._request(method, JSON.parse(strParams)), options);\n    }\n}\nexports.ProviderHandler = ProviderHandler;\n//# sourceMappingURL=provider-handler.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WsHandler = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ws_1 = __importDefault(require(\"ws\"));\nconst base_handler_1 = require(\"./base-handler\");\nconst deferred_1 = __importDefault(require(\"../deferred\"));\nconst { JSONRPC_PREFIX } = base_handler_1.BaseHandler;\nclass WsHandler extends base_handler_1.BaseHandler {\n    constructor(options, abortSignal) {\n        super(options, abortSignal);\n        this.inFlightRequests = new Map();\n        const { fork: { url, origin }, logging } = options;\n        this.connection = new ws_1.default(url.toString(), {\n            origin,\n            headers: this.headers\n        });\n        // `nodebuffer` is already the default, but I just wanted to be explicit\n        // here because when `nodebuffer` is the binaryType the `message` event's\n        // data type is guaranteed to be a `Buffer`. We don't need to check for\n        // different types of data.\n        // I mention all this because if `arraybuffer` or `fragment` is used for the\n        // binaryType the `\"message\"` event's `data` may end up being\n        // `ArrayBuffer | Buffer`, or `Buffer[] | Buffer`, respectively.\n        // If you need to change this, you probably need to change our `onMessage`\n        // handler too.\n        this.connection.binaryType = \"nodebuffer\";\n        this.open = this.connect(this.connection, logging);\n        this.connection.onclose = () => {\n            // try to connect again...\n            // Issue: https://github.com/trufflesuite/ganache/issues/3476\n            // TODO: backoff and eventually fail\n            // Issue: https://github.com/trufflesuite/ganache/issues/3477\n            this.open = this.connect(this.connection, logging);\n        };\n        this.abortSignal.addEventListener(\"abort\", () => {\n            this.connection.onclose = null;\n            this.connection.close(1000);\n        });\n        this.connection.onmessage = this.onMessage.bind(this);\n    }\n    async request(method, params, options = { disableCache: false }) {\n        await this.open;\n        if (this.abortSignal.aborted)\n            return Promise.reject(new ethereum_utils_1.AbortError());\n        const key = JSON.stringify({ method, params });\n        const send = () => {\n            if (this.abortSignal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            const messageId = this.id++;\n            const deferred = (0, deferred_1.default)();\n            // TODO: timeout an in-flight request after some amount of time\n            // Issue: https://github.com/trufflesuite/ganache/issues/3478\n            this.inFlightRequests.set(messageId, deferred);\n            this.connection.send(`${JSONRPC_PREFIX}${messageId},${key.slice(1)}`);\n            return deferred.promise.finally(() => this.requestCache.delete(key));\n        };\n        return await this.queueRequest(method, params, key, send, options);\n    }\n    onMessage(event) {\n        if (event.type !== \"message\")\n            return;\n        // data is always a `Buffer` because the websocket's binaryType is set to\n        // `nodebuffer`\n        const raw = event.data;\n        // TODO: handle invalid JSON (throws on parse)?\n        // Issue: https://github.com/trufflesuite/ganache/issues/3479\n        const response = JSON.parse(raw);\n        const id = response.id;\n        const prom = this.inFlightRequests.get(id);\n        if (prom) {\n            this.inFlightRequests.delete(id);\n            prom.resolve({ response, raw: raw });\n        }\n    }\n    connect(connection, logging) {\n        let open = new Promise((resolve, reject) => {\n            connection.onopen = resolve;\n            connection.onerror = reject;\n        });\n        open.then(() => {\n            connection.onopen = null;\n            connection.onerror = null;\n        }, err => {\n            logging.logger.log(err);\n        });\n        return open;\n    }\n    async close() {\n        await super.close();\n        this.connection.close();\n    }\n}\nexports.WsHandler = WsHandler;\n//# sourceMappingURL=ws-handler.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encode = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction encode(parts) {\n    const l = parts.length;\n    let totalLength = 0;\n    const pieces = [];\n    for (let i = 0; i < l; i++) {\n        const part = parts[i];\n        if (part === null) {\n            totalLength += 2; // {length of the length} (`1`) + {length} (`0`)\n            pieces.push([utils_1.BUFFER_ZERO, utils_1.BUFFER_EMPTY]);\n        }\n        else {\n            const length = part.length;\n            const lengthBuffer = utils_1.Quantity.toBuffer(length);\n            const lengthLength = lengthBuffer.length;\n            totalLength += 1 + lengthLength + length;\n            pieces.push([lengthBuffer, part]);\n        }\n    }\n    const encoded = Buffer.allocUnsafe(totalLength);\n    let offset = 0;\n    for (let i = 0; i < l; i++) {\n        const [lengthBuffer, part] = pieces[i];\n        const lengthLength = lengthBuffer.length;\n        encoded[offset++] = lengthLength;\n        lengthBuffer.copy(encoded, offset, 0, lengthLength);\n        part.copy(encoded, (offset += lengthLength), 0, part.length);\n        offset += part.length;\n    }\n    return encoded;\n}\nexports.encode = encode;\nfunction decode(encoded) {\n    const parts = [];\n    for (let i = 0, l = encoded.length; i < l;) {\n        const lengthLength = encoded[i++];\n        const length = utils_1.Quantity.from(encoded.slice(i, (i += lengthLength))).toNumber();\n        parts.push(encoded.slice(i, (i += length)));\n    }\n    return parts;\n}\nexports.decode = decode;\n//# sourceMappingURL=lexicographic-key-codec.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Ancestry = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nclass Ancestry {\n    constructor(db, parent) {\n        /**\n         * Prevents fetching the same key from the database simultaneously.\n         */\n        this.cacheLock = new Map();\n        this.db = db;\n        if (parent == null) {\n            this.next = null;\n            this.knownAncestors = new Set();\n        }\n        else {\n            this.next = parent.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n                ? null\n                : parent.closestKnownAncestor;\n            this.knownAncestors = new Set([parent.hash.toString(\"hex\")]);\n        }\n    }\n    async loadNextAncestor(next) {\n        const k = next.toString(\"hex\");\n        if (this.cacheLock.has(k)) {\n            throw new Error(\"couldn't load next ancestor as it is locked\");\n        }\n        let resolver;\n        this.cacheLock.set(k, new Promise(resolve => {\n            resolver = resolve;\n        }));\n        const value = await this.db.get(next);\n        const node = tree_1.Tree.deserialize(next, value);\n        this.next = node.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)\n            ? null\n            : node.closestKnownAncestor;\n        this.knownAncestors.add(node.hash.toString(\"hex\"));\n        this.cacheLock.delete(k);\n        resolver();\n    }\n    async has(key) {\n        const strKey = key.toString(\"hex\");\n        if (this.knownAncestors.has(strKey)) {\n            return true;\n        }\n        else if (this.next) {\n            const cacheLock = this.cacheLock.get(this.next.toString(\"hex\"));\n            if (cacheLock) {\n                await cacheLock;\n                return this.has(key);\n            }\n            await this.loadNextAncestor(this.next);\n            return this.has(key);\n        }\n        else {\n            return false;\n        }\n    }\n}\nexports.Ancestry = Ancestry;\n//# sourceMappingURL=ancestry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getBlockByNumber = exports.findClosestDescendants = exports.findClosestAncestor = exports.findRelated = exports.resolveTargetAndClosestAncestor = exports.setDbVersion = exports.getBlockNumberFromParams = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst tree_1 = require(\"./tree\");\nfunction getBlockNumberFromParams(method, params) {\n    // get the request's block number\n    switch (method) {\n        case \"eth_getBlockByNumber\":\n            return params[0];\n        case \"eth_getTransactionCount\":\n        case \"eth_getCode\":\n        case \"eth_getBalance\":\n            return params[1];\n        case \"eth_getStorageAt\":\n            return params[2];\n        default:\n            return null;\n    }\n}\nexports.getBlockNumberFromParams = getBlockNumberFromParams;\nasync function setDbVersion(db, version) {\n    // set the version if the DB was just created, or error if we already have\n    // a version, but it isn't what we expected\n    try {\n        const recordedVersion = await db.get(utils_1.VERSION_KEY);\n        if (!version.equals(recordedVersion)) {\n            // in the future this is where database migrations would go\n            throw new Error(`Persistent cache version \"${version.toString()}\"\" is not understood.`);\n        }\n    }\n    catch (e) {\n        if (!e.notFound)\n            throw e;\n        // if we didn't have a `version` key we need to set one\n        await db.put(utils_1.VERSION_KEY, version);\n    }\n}\nexports.setDbVersion = setDbVersion;\nasync function resolveTargetAndClosestAncestor(db, request, targetHeight, targetHash) {\n    let targetBlock;\n    let closestAncestor;\n    let previousClosestAncestor;\n    try {\n        const key = tree_1.Tree.encodeKey(targetHeight, targetHash);\n        targetBlock = tree_1.Tree.deserialize(key, await db.get(key));\n        if (targetBlock.closestKnownAncestor.equals(utils_1.BUFFER_EMPTY)) {\n            // we are the genesis/earliest block\n            closestAncestor = null;\n            previousClosestAncestor = null;\n        }\n        else {\n            previousClosestAncestor = tree_1.Tree.deserialize(targetBlock.closestKnownAncestor, await db.get(targetBlock.closestKnownAncestor));\n            // check if we are still the closest known ancestor\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, previousClosestAncestor.key)) || previousClosestAncestor;\n        }\n    }\n    catch (e) {\n        // something bad happened (I/O failure?), bail\n        if (!e.notFound)\n            throw e;\n        previousClosestAncestor = null;\n        // we couldn't find our target block in the database so we need to figure\n        // out it's relationships via the blockchain.\n        // In order to avoid requesting the \"earliest\" block unnecessarily, we\n        // assume the \"earliest\" block can't be before block 0 (which seems like a\n        // reasonable assumption to me!).\n        // If our target is block `0` then we can't have a closest ancestor since\n        // we are the first block\n        if (targetHeight.toBigInt() === 0n) {\n            closestAncestor = null;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash);\n        }\n        else {\n            const earliestBlock = await getBlockByNumber(request, ethereum_utils_1.Tag.earliest);\n            if (!earliestBlock)\n                throw new Error('Could not find \"earliest\" block.');\n            const { hash: earliestHash, number: earliestNumber } = earliestBlock;\n            const hash = utils_1.Data.from(earliestHash, 32);\n            const earliest = new tree_1.Tree(utils_1.Quantity.from(earliestNumber), hash);\n            closestAncestor =\n                (await findClosestAncestor(db, request, targetHeight, earliest.key)) ||\n                    earliest;\n            targetBlock = new tree_1.Tree(targetHeight, targetHash, closestAncestor.key);\n        }\n    }\n    return {\n        targetBlock,\n        closestAncestor,\n        previousClosestAncestor\n    };\n}\nexports.resolveTargetAndClosestAncestor = resolveTargetAndClosestAncestor;\nasync function* findRelated(db, request, options) {\n    const readStream = db.createReadStream({\n        keys: true,\n        values: true,\n        ...options\n    });\n    for await (const pair of readStream) {\n        const { key, value } = pair;\n        const node = tree_1.Tree.deserialize(key, value);\n        const { height: candidateHeight } = node.decodeKey();\n        const block = await getBlockByNumber(request, candidateHeight);\n        // if the chain has a block at this height, and the hash of the\n        // block is the same as the one in the db we've found our closest\n        // ancestor!\n        if (block != null && block.hash === utils_1.Data.toString(node.hash)) {\n            yield node;\n        }\n    }\n}\nexports.findRelated = findRelated;\n/**\n *\n * @param height - Search only before this block height (exclusive)\n * @param upTo - Search up to this key (inclusive)\n * @returns the closest known ancestor, or `upTo` if we know of no ancestors\n */\nasync function findClosestAncestor(db, request, height, upTo) {\n    const generator = findRelated(db, request, {\n        gte: upTo,\n        lt: tree_1.Tree.encodeKey(height, utils_1.Data.Empty),\n        reverse: true\n    });\n    const first = await generator.next();\n    await generator.return();\n    return first.value;\n}\nexports.findClosestAncestor = findClosestAncestor;\n/**\n *\n * @param height - Search only after this block height (exclusive)\n * @returns the closest known descendants, or null\n */\nasync function* findClosestDescendants(db, request, height) {\n    const generator = findRelated(db, request, {\n        gte: tree_1.Tree.encodeKey(utils_1.Quantity.from(height.toBigInt() + 1n), utils_1.Data.Empty),\n        reverse: false\n    });\n    for await (const node of generator) {\n        yield node;\n    }\n}\nexports.findClosestDescendants = findClosestDescendants;\nasync function getBlockByNumber(request, blockNumber) {\n    return await request(\"eth_getBlockByNumber\", [blockNumber.toString(), false]);\n}\nexports.getBlockByNumber = getBlockByNumber;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersistentCache = void 0;\nconst tree_1 = require(\"./tree\");\nconst fs_1 = require(\"fs\");\nconst env_paths_1 = __importDefault(require(\"env-paths\"));\nconst leveldown_1 = __importDefault(require(\"leveldown\"));\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst encoding_down_1 = __importDefault(require(\"encoding-down\"));\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ancestry_1 = require(\"./ancestry\");\nconst helpers_1 = require(\"./helpers\");\nconst levelup = require(\"levelup\");\nconst levelupOptions = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nconst leveldownOpts = { prefix: \"\" };\nconst maxValueByteBuffer = Buffer.from([0xff]);\n/**\n * A leveldb-backed cache that enables associating immutable data as it existed\n * at a specific height on a blockchain.\n *\n * The design affords faster db reads (one read to get known closest ancestors\n * and descendants) and fast db writes (one write per node in a relationship).\n */\nclass PersistentCache {\n    constructor() {\n        this.version = utils_1.BUFFER_ZERO;\n        /**\n         * `reBalancePromise` is used at shutdown to ensure we are done balancing the\n         * tree\n         *\n         */\n        this._reBalancePromise = null;\n        this.status = \"open\";\n    }\n    static async deleteDb(dbSuffix) {\n        return new Promise((resolve, reject) => {\n            const directory = PersistentCache.getDbDirectory(dbSuffix);\n            leveldown_1.default.destroy(directory, err => {\n                if (err)\n                    return void reject(err);\n                resolve(void 0);\n            });\n        });\n    }\n    /**\n     * Serializes the entire database world state into a JSON tree\n     */\n    static async serializeDb(dbSuffix) {\n        const cache = await PersistentCache.create(dbSuffix);\n        return await new Promise(async (resolve) => {\n            const rs = cache.ancestorDb.createReadStream({\n                gte: utils_1.BUFFER_ZERO,\n                keys: true,\n                values: true\n            });\n            const tree = {};\n            const collection = {};\n            for await (const data of rs) {\n                const { key, value } = data;\n                const node = tree_1.Tree.deserialize(key, value);\n                node.height = node.decodeKey().height.toNumber();\n                const keyHex = key.toString(\"hex\");\n                const parentKeyHex = node.closestKnownAncestor.toString(\"hex\");\n                collection[keyHex] = node;\n                if (node.closestKnownAncestor.length === 0) {\n                    tree[keyHex] = node;\n                }\n                else {\n                    const descendants = collection[parentKeyHex].descendants || {};\n                    descendants[keyHex] = node;\n                    collection[parentKeyHex].descendants = descendants;\n                }\n                node.hash = utils_1.Data.toString(node.hash);\n                node.parent =\n                    node.closestKnownAncestor.length > 0\n                        ? utils_1.Data.toString(collection[parentKeyHex].hash)\n                        : null;\n                delete node.key;\n                // delete node.hash;\n                delete node.closestKnownDescendants;\n                delete node.closestKnownAncestor;\n            }\n            await cache.close();\n            resolve(JSON.parse(JSON.stringify(tree)));\n        });\n    }\n    static getDbDirectory(suffix = \"\") {\n        const { data: directory } = (0, env_paths_1.default)(\"Ganache/db\", {\n            suffix\n        });\n        return directory;\n    }\n    static async create(dbSuffix) {\n        const cache = new PersistentCache();\n        const directory = PersistentCache.getDbDirectory(dbSuffix);\n        await fs_1.promises.mkdir(directory, { recursive: true });\n        const store = (0, encoding_down_1.default)((0, leveldown_1.default)(directory, leveldownOpts), levelupOptions);\n        const db = await new Promise((resolve, reject) => {\n            const db = levelup(store, (err) => {\n                if (err)\n                    return void reject(err);\n                resolve(db);\n            });\n        });\n        cache.db = db;\n        cache.cacheDb = (0, subleveldown_1.default)(db, \"c\", levelupOptions);\n        cache.ancestorDb = (0, subleveldown_1.default)(db, \"a\", levelupOptions);\n        await cache.cacheDb.open();\n        await cache.ancestorDb.open();\n        await (0, helpers_1.setDbVersion)(cache.db, cache.version);\n        return cache;\n    }\n    async initialize(height, hash, request) {\n        this.hashBuffer = hash.toBuffer();\n        this.request = request;\n        const { targetBlock, closestAncestor, previousClosestAncestor } = await (0, helpers_1.resolveTargetAndClosestAncestor)(this.ancestorDb, this.request, height, hash);\n        this.ancestry = new ancestry_1.Ancestry(this.ancestorDb, closestAncestor);\n        const atomicBatch = this.ancestorDb.batch();\n        // if we changed closest ancestors remove our targetBlock from the previous\n        // ancestor so our target block doesn't appear in the database more than\n        // once, and update our targetBlock to point to this new ancestor\n        if (previousClosestAncestor &&\n            !previousClosestAncestor.key.equals(closestAncestor.key)) {\n            targetBlock.closestKnownAncestor = closestAncestor.key;\n            const index = previousClosestAncestor.closestKnownDescendants.findIndex(buf => buf.equals(targetBlock.key));\n            previousClosestAncestor.closestKnownDescendants.splice(index, 1);\n            atomicBatch.put(previousClosestAncestor.key, previousClosestAncestor.serialize());\n        }\n        let allKnownDescendants = [...targetBlock.closestKnownDescendants];\n        // if we don't have a closestAncestor it because the target block is block 0\n        if (closestAncestor == null) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        }\n        else {\n            const ancestorsDescendants = [targetBlock.key];\n            await Promise.all(closestAncestor.closestKnownDescendants.map(async (descendantKey) => {\n                // don't match ourself\n                if (descendantKey.equals(targetBlock.key))\n                    return;\n                const { height: descendantHeight } = tree_1.Tree.decodeKey(descendantKey);\n                // if the block number is less than our own it can't be our descendant\n                if (descendantHeight.toBigInt() <= height.toBigInt()) {\n                    ancestorsDescendants.push(descendantKey);\n                    return;\n                }\n                const descendantValue = await this.ancestorDb.get(descendantKey);\n                const descendantNode = tree_1.Tree.deserialize(descendantKey, descendantValue);\n                const descendantRawBlock = await this.getBlock(descendantHeight);\n                // if the block doesn't exist on our chain, it can't be our child,\n                // keep it in the parent\n                if (descendantRawBlock == null ||\n                    descendantRawBlock.hash !== utils_1.Data.toString(descendantNode.hash, 32)) {\n                    ancestorsDescendants.push(descendantKey);\n                }\n                else {\n                    targetBlock.closestKnownDescendants.push(descendantNode.key);\n                    // keep track of *all* known descendants so we don't bother\n                    // checking if they are a known closest descendant later on\n                    allKnownDescendants.push(...descendantNode.closestKnownDescendants);\n                    descendantNode.closestKnownAncestor = targetBlock.key;\n                    // update the descendant node with its newly assigned\n                    // closestKnownAncestor\n                    atomicBatch.put(descendantNode.key, descendantNode.serialize());\n                }\n            }));\n            closestAncestor.closestKnownDescendants = ancestorsDescendants;\n            atomicBatch.put(closestAncestor.key, closestAncestor.serialize());\n        }\n        // TODO(perf): we always re-save the targetBlock but could optimize to only\n        // resave if it is needed.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3485\n        atomicBatch.put(targetBlock.key, targetBlock.serialize());\n        await atomicBatch.write();\n        // we DO want to re-balance the descendants, but we don't want to wait for\n        // it because it can't effect our current fork block's cache results since\n        // these caches will be for blocks higher than our own fork block\n        // Do not `await` this.\n        this._reBalancePromise = this.reBalanceDescendantTree(height, targetBlock, allKnownDescendants)\n            // we don't care if it fails because this is an optimization that only\n            // matters for _future_ runs of ganache for blocks beyond our current fork\n            // block\n            .catch(_ => { })\n            .finally(() => {\n            this._reBalancePromise = null;\n        });\n    }\n    async getBlock(height) {\n        return await (0, helpers_1.getBlockByNumber)(this.request, height);\n    }\n    async reBalanceDescendantTree(height, targetBlock, allKnownDescendants) {\n        const atomicBatch = this.ancestorDb.batch();\n        const closestKnownDescendants = targetBlock.closestKnownDescendants;\n        const startSize = closestKnownDescendants.length;\n        for await (const maybeDescendant of (0, helpers_1.findClosestDescendants)(this.ancestorDb, this.request, height)) {\n            const key = maybeDescendant.key;\n            // don't match with our own self\n            if (targetBlock.key.equals(key))\n                continue;\n            // this possibleDescendent's descendants can't be our direct descendants\n            // because trees can't merge\n            allKnownDescendants.push(...maybeDescendant.closestKnownDescendants);\n            // if this already is a descendent of ours we can skip it\n            if (closestKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // if this already is a descendent of one of our descendants skip it\n            if (allKnownDescendants.some(d => d.equals(key)))\n                continue;\n            // move the descendant from the parent to the target\n            const parentTree = tree_1.Tree.deserialize(maybeDescendant.closestKnownAncestor, await this.ancestorDb.get(maybeDescendant.closestKnownAncestor));\n            parentTree.closestKnownDescendants.splice(parentTree.closestKnownDescendants.findIndex(d => d.equals(key)), 1);\n            maybeDescendant.closestKnownAncestor = targetBlock.key;\n            closestKnownDescendants.push(maybeDescendant.key);\n            atomicBatch.put(parentTree.key, parentTree.serialize());\n            atomicBatch.put(maybeDescendant.key, maybeDescendant.serialize());\n            // if the cache has been closed stop doing work so we can flush what we\n            // have to the database; descendant resolution shouldn't prevent us from\n            // fulling closing.\n            if (this.status === \"closed\") {\n                break;\n            }\n        }\n        // only write if we have changes to write\n        if (startSize !== closestKnownDescendants.length) {\n            atomicBatch.put(targetBlock.key, targetBlock.serialize());\n            // check `this.ancestorDb.isOpen()` as we don't need to try to write if\n            // the db was shutdown in the meantime. This can happen if ganache was\n            // closed while we were still updating the descendants\n            if (atomicBatch.length > 0 && this.ancestorDb.isOpen())\n                await atomicBatch.write();\n        }\n    }\n    async get(method, params, key) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return;\n        const height = utils_1.Quantity.from(blockNumber);\n        const bufKey = Buffer.from(key);\n        const start = lexico.encode([height.toBuffer(), bufKey]);\n        const end = Buffer.concat([start, maxValueByteBuffer]);\n        const readStream = this.cacheDb.createReadStream({\n            gt: start,\n            lt: end,\n            keys: true,\n            values: true\n        });\n        for await (const data of readStream) {\n            const { key: k, value } = data;\n            const [_height, _key, blockHash] = lexico.decode(k);\n            // if our key no longer matches make sure we don't keep searching\n            if (!_key.equals(bufKey))\n                return;\n            if (this.hashBuffer.equals(blockHash) ||\n                (await this.ancestry.has(blockHash))) {\n                return value;\n            }\n        }\n    }\n    async put(method, params, key, value) {\n        const blockNumber = (0, helpers_1.getBlockNumberFromParams)(method, params);\n        if (blockNumber == null)\n            return false;\n        const height = utils_1.Quantity.from(blockNumber);\n        const dbKey = lexico.encode([\n            height.toBuffer(),\n            Buffer.from(key),\n            this.hashBuffer\n        ]);\n        await this.cacheDb.put(dbKey, value);\n        return true;\n    }\n    async close() {\n        if (this.status === \"closed\")\n            return;\n        this.status = \"closed\";\n        if (this.cacheDb) {\n            await this.cacheDb.close();\n        }\n        if (this.ancestorDb) {\n            await this._reBalancePromise;\n            await this.ancestorDb.close();\n        }\n        if (this.db) {\n            await this.db.close();\n        }\n    }\n}\nexports.PersistentCache = PersistentCache;\n//# sourceMappingURL=persistent-cache.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tree = void 0;\nconst lexico = __importStar(require(\"../lexicographic-key-codec\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp = __importStar(require(\"@ganache/rlp\"));\n/**\n * A tree: https://en.wikipedia.org/wiki/Rose_tree\n * One parent, multiple children\n */\nclass Tree {\n    constructor(height, hash, closestKnownAncestor = utils_1.BUFFER_EMPTY) {\n        this.closestKnownDescendants = [];\n        this.key = Tree.encodeKey(height, hash);\n        this.hash = hash.toBuffer();\n        this.closestKnownAncestor = closestKnownAncestor;\n    }\n    serialize() {\n        return rlp.encode([\n            this.hash,\n            this.closestKnownAncestor,\n            this.closestKnownDescendants\n        ]);\n    }\n    decodeKey() {\n        return Tree.decodeKey(this.key);\n    }\n    static decodeKey(key) {\n        const [height, hash] = lexico.decode(key);\n        return {\n            height: utils_1.Quantity.from(height),\n            hash: utils_1.Data.from(hash)\n        };\n    }\n    static deserialize(key, value) {\n        const [hash, parent, children] = rlp.decode(value);\n        const tree = Object.create(Tree.prototype);\n        tree.key = key;\n        tree.hash = hash;\n        tree.closestKnownAncestor = parent;\n        tree.closestKnownDescendants = children;\n        return tree;\n    }\n    static encodeKey(height, hash) {\n        return lexico.encode([height.toBuffer(), hash.toBuffer()]);\n    }\n}\nexports.Tree = Tree;\n//# sourceMappingURL=tree.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LimitCounter = void 0;\n/**\n * @param timestamp -\n * @returns the milliseconds that have elapsed since `timestamp`\n */\nfunction timeSince(timestamp) {\n    return Date.now() - timestamp;\n}\nclass LimitCounter {\n    constructor(windowLength) {\n        this.counters = new Map();\n        this.windowLength = windowLength;\n    }\n    evict() {\n        const d = this.windowLength * 3;\n        if (timeSince(this.lastEvict) < d) {\n            return;\n        }\n        this.lastEvict = Date.now();\n        const counters = this.counters;\n        counters.forEach((v, k) => {\n            if (timeSince(v.updatedAt) >= d) {\n                counters.delete(k);\n            }\n        });\n    }\n    increment(currentWindow) {\n        this.evict();\n        let v = this.counters.get(currentWindow);\n        if (v == null) {\n            this.counters.set(currentWindow, { value: 1, updatedAt: Date.now() });\n        }\n        else {\n            v.value += 1;\n            v.updatedAt = Date.now();\n        }\n    }\n    get(currentWindow, previousWindow) {\n        let curr = this.counters.get(currentWindow);\n        if (curr == null) {\n            curr = { value: 0, updatedAt: Date.now() };\n        }\n        let prev = this.counters.get(previousWindow);\n        if (prev == null) {\n            prev = { value: 0, updatedAt: Date.now() };\n        }\n        return [curr.value, prev.value];\n    }\n}\nexports.LimitCounter = LimitCounter;\n//# sourceMappingURL=limit-counter.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst semaphore_1 = __importDefault(require(\"semaphore\"));\nconst limit_counter_1 = require(\"./limit-counter\");\n/**\n * Sleeps the specified number of milliseconds, then resolves the Promise.\n * Rejects with an `AbortError` if the provided `signal` is already aborted. If\n * the signal's `\"abort\"` event is invoked while sleeping, the the promise\n * rejects with an `AbortError`.\n *\n * @param ms - the number of milliseconds to wait before resolving\n * @param abortSignal - the\n * @returns a promise that resolves when `ms`milliseconds have elapsed, or\n * rejects if the `signal` is aborted.\n */\nconst sleep = (ms, signal) => {\n    if (signal.aborted)\n        return Promise.reject(new ethereum_utils_1.AbortError());\n    return new Promise((resolve, reject) => {\n        function abort() {\n            clearTimeout(timer);\n            signal.removeEventListener(\"abort\", abort);\n            reject(new ethereum_utils_1.AbortError());\n        }\n        const timer = setTimeout(() => {\n            signal.removeEventListener(\"abort\", abort);\n            resolve();\n        }, ms);\n        signal.addEventListener(\"abort\", abort);\n    });\n};\n/**\n * @param timestamp -\n * @param duration -\n * @returns the result of rounding `timestamp` toward zero to a multiple of\n * `duration`.\n */\nfunction timeTruncate(timestamp, duration) {\n    return timestamp - (timestamp % duration);\n}\n/**\n * @param result -\n * @returns true if the result is a JSON-RPC LIMIT_EXCEEDED error\n */\nfunction isExceededLimitError(response) {\n    return ((0, utils_1.hasOwn)(response, \"error\") &&\n        response.error != null &&\n        response.error.code === utils_1.JsonRpcErrorCode.LIMIT_EXCEEDED);\n}\n/**\n * A sliding window rate limiter.\n *\n * Rate estimation from\n * https://blog.cloudflare.com/counting-things-a-lot-of-different-things/\n *\n * Let's say we set a limit of 50 requests per minute. The counter can be\n * thought of like this:\n *\n * ```ascii\n *         ╔══════════════════════════════════╗\n *         ║   sampling period: 60 seconds    ║\n * ╭───────╫────────────────────────┬─────────╫──────────────────────╮\n * │       ║previous minute         │         current minute         │\n * │       ║  42 requests           │         ║18 requests           │\n * ╰───────╫────────────────────────┼─────────╫──────────────────────╯\n *         ║         45 secs        │ 15 secs ║\n *         ╚════════════════════════╧═════════╝\n * ```\n *\n * In this situation, we did 18 requests during the current minute, which\n * started 15 seconds ago, and 42 requests during the entire previous minute.\n * Based on this information, the rate approximation is calculated like this:\n *\n * ```javascript\n * rate = (42 * (45 / 60)) + 18\n *      = (42 * 0.75) + 18\n *      = 49.5 // requests\n *\n *      = 59.5 // requests\n * ```\n *\n * One more request during the next second and the rate limiter will kick in.\n *\n * This algorithm assumes a constant rate of requests during the previous\n * sampling period (which can be any time span), so the result is only\n * an approximation of the actual rate, but it is quick to calculate and\n * lightweight.\n */\nclass RateLimiter {\n    constructor(requestLimit, windowSizeMs, abortSignal) {\n        this.sem = (0, semaphore_1.default)(1);\n        this.take = () => new Promise(resolve => this.sem.take(resolve));\n        this.mustBackoff = null;\n        this.counter = 0;\n        this.requestLimit = requestLimit;\n        // the rate limiter splits the window in 2 to measure the RPS\n        this.windowSizeMs = windowSizeMs / 2;\n        this.limitCounter = new limit_counter_1.LimitCounter(this.windowSizeMs);\n        this.abortSignal = abortSignal;\n    }\n    /**\n     * @param now -\n     * @param currentWindow -\n     * @returns the current request rate and the allowed execution time of the\n     * next request\n     */\n    status(now, currentWindow) {\n        const limit = this.requestLimit;\n        const windowSizeMs = this.windowSizeMs;\n        const currWindow = currentWindow;\n        const prevWindow = currWindow - windowSizeMs;\n        const [currCount, prevCount] = this.limitCounter.get(currWindow, prevWindow);\n        let rate;\n        if (prevCount === 0) {\n            rate = currCount;\n        }\n        else {\n            // use the average for the previous window, plus everything for this\n            // window\n            rate =\n                prevCount * ((windowSizeMs - (now - currWindow)) / windowSizeMs) +\n                    currCount;\n        }\n        // limit <= 0 means the limiter is disabled\n        if (limit > 0 && rate + 1 > limit) {\n            const nextCount = currCount + 1;\n            const nextLimit = limit + 1;\n            const next = prevCount === 0\n                ? currWindow + windowSizeMs + windowSizeMs / nextLimit\n                : (windowSizeMs * (prevCount + nextCount - nextLimit)) / prevCount +\n                    currWindow;\n            return { rate, next };\n        }\n        return { rate, next: now };\n    }\n    /**\n     * Executes the given fn within the confines of the configured rate limit. If\n     * the function's return value is a JSON-RPC LIMIT_EXCEEDED error, it will\n     * automatically retry with the given `backoff_seconds`\n     * @param fn -\n     */\n    async handle(fn) {\n        // allow scheduling one fn at a time\n        await this.take();\n        try {\n            return await this.schedule(fn);\n        }\n        finally {\n            this.sem.leave();\n        }\n    }\n    async schedule(fn) {\n        const signal = this.abortSignal;\n        while (true) {\n            if (signal.aborted)\n                return Promise.reject(new ethereum_utils_1.AbortError());\n            if (this.mustBackoff)\n                await this.mustBackoff;\n            const now = Date.now();\n            const currentWindow = timeTruncate(now, this.windowSizeMs);\n            const { rate, next } = this.status(now, currentWindow);\n            // process.stdout.write(\n            //   `rate: ${rate}, wait: ${next - now}              \\r`\n            // );\n            // if this request would be over the rate limit and the amount of time\n            // we'd need to back off is > 1ms we need to schedule this in the future\n            if (rate + 1 > this.requestLimit && next > now) {\n                await sleep(Date.now() - next, signal);\n            }\n            else {\n                this.limitCounter.increment(currentWindow);\n                const result = await fn();\n                if (isExceededLimitError(result.response)) {\n                    if ((0, utils_1.hasOwn)(result.response.error.data, \"rate\")) {\n                        const backoffSeconds = result.response.error.data.rate.backoff_seconds;\n                        // console.log(`backing off for ${backoffSeconds}`);\n                        // console.log(result.error.data.rate);\n                        // TODO: I need to make all in-flight requests that will soon return\n                        // a LIMIT_EXCEEDED error behave, otherwise we'll just send ALL\n                        // requests back to Infura simultaneously after their initial 30\n                        // backoff_seconds have elapsed.\n                        // Issue: https://github.com/trufflesuite/ganache/issues/3480\n                        //\n                        // When we are *not* self-rate limited (meaning fork.rps isn't set)\n                        // we need to be able to go at full speed until we are, and THEN we\n                        // need to go at whatever infura wants.\n                        //\n                        // TODO: TODO: ask infura to add the X-Rate-Limit* headers to all\n                        // HTTP responses so we can poll for info to help us avoid ever\n                        // getting rate limited in the first place.\n                        // this is part of an attempt at solving the above comment\n                        this.requestLimit =\n                            result.response.error.data.rate.allowed_rps *\n                                (this.windowSizeMs / 1000);\n                        const limiter = (this.mustBackoff = sleep(backoffSeconds * 1000, signal));\n                        await this.mustBackoff;\n                        if (this.mustBackoff === limiter) {\n                            this.mustBackoff = null;\n                        }\n                        continue;\n                    }\n                    else {\n                        // we don't know how to parse this error, so we do nothing, I guess?\n                    }\n                }\n                return result;\n            }\n        }\n    }\n}\nexports.default = RateLimiter;\n//# sourceMappingURL=rate-limiter.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkStateManager = void 0;\nconst rlp_1 = require(\"@ganache/rlp\");\nconst cache_1 = require(\"./cache\");\nconst state_manager_1 = require(\"../state-manager\");\n/**\n * Interface for getting and setting data from an underlying\n * state trie.\n */\nclass ForkStateManager extends state_manager_1.GanacheStateManager {\n    /**\n     * Instantiate the StateManager interface.\n     */\n    constructor(opts) {\n        super(opts);\n        this._cache = new cache_1.ForkCache(opts.trie);\n        this.prefixCodeHashes = opts.prefixCodeHashes || false;\n    }\n    /**\n     * Copies the current instance of the `StateManager`\n     * at the last fully committed point, i.e. as if all current\n     * checkpoints were reverted.\n     */\n    copy() {\n        return new ForkStateManager({\n            trie: this._trie.copy(false),\n            prefixCodeHashes: this.prefixCodeHashes\n        });\n    }\n    /**\n     * Creates a storage trie from the primary storage trie\n     * for an account and saves this in the storage cache.\n     * @private\n     */\n    async _lookupStorageTrie(address) {\n        // from state trie\n        const account = await this.getAccount(address);\n        const storageTrie = this._trie.copy(true);\n        storageTrie.setContext(account.storageRoot, address.buf, storageTrie.blockNumber);\n        // we copy checkpoints over only for the metadata checkpoints, not the trie\n        // checkpoints.\n        storageTrie.database().checkpoints = [];\n        return storageTrie;\n    }\n    /**\n     * Gets the storage value associated with the provided `address` and `key`.\n     * This method returns the shortest representation of the stored value.\n     * @param address - Address of the account to get the storage for\n     * @param key - Key in the account's storage to get the value for. Must be 32\n     * bytes long.\n     * @returns {Promise<Buffer>} - The storage value for the account\n     * corresponding to the provided address at the provided key. If this does not\n     * exist an empty `Buffer` is returned.\n     */\n    async getContractStorage(address, key) {\n        const trie = (await this._getStorageTrie(address));\n        const value = await trie.get(key);\n        return (0, rlp_1.decode)(value);\n    }\n}\nexports.ForkStateManager = ForkStateManager;\n//# sourceMappingURL=state-manager.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkTrie = void 0;\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"../helpers/trie\");\nconst trie_2 = require(\"@ethereumjs/trie\");\nconst lexico = __importStar(require(\"./lexicographic-key-codec\"));\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst trie_db_1 = require(\"../trie-db\");\nconst DELETED_VALUE = Buffer.allocUnsafe(1).fill(1);\nconst GET_CODE = \"eth_getCode\";\nconst GET_NONCE = \"eth_getTransactionCount\";\nconst GET_BALANCE = \"eth_getBalance\";\nconst GET_STORAGE_AT = \"eth_getStorageAt\";\nconst MetadataSingletons = new WeakMap();\nconst LEVELDOWN_OPTIONS = {\n    keyEncoding: \"binary\",\n    valueEncoding: \"binary\"\n};\nfunction isEqualKey(encodedKey, address, key) {\n    const decodedKey = lexico.decode(encodedKey);\n    const [_, keyAddress, deletedKey] = decodedKey;\n    return keyAddress.equals(address) && deletedKey.equals(key);\n}\nclass ForkTrie extends trie_1.GanacheTrie {\n    constructor(db, root, blockchain) {\n        super(db, root, blockchain);\n        this.address = null;\n        this.isPreForkBlock = false;\n        /**\n         * Gets an account from the fork/fallback.\n         *\n         * @param address - the address of the account\n         * @param blockNumber - the block number at which to query the fork/fallback.\n         * @param stateRoot - the state root at the given blockNumber\n         */\n        this.accountFromFallback = async (address, blockNumber) => {\n            const { fallback } = this.blockchain;\n            const number = this.blockchain.fallback.selectValidForkBlockNumber(blockNumber);\n            // get nonce, balance, and code from the fork/fallback\n            const codeProm = fallback.request(GET_CODE, [address, number]);\n            const promises = [\n                fallback.request(GET_NONCE, [address, number]),\n                fallback.request(GET_BALANCE, [address, number]),\n                null\n            ];\n            // create an account so we can serialize everything later\n            const account = new ethereum_utils_1.Account(address);\n            // because code requires additional asynchronous processing, we await and\n            // process it ASAP\n            try {\n                const codeHex = await codeProm;\n                if (codeHex !== \"0x\") {\n                    const code = utils_1.Data.toBuffer(codeHex);\n                    // the codeHash is just the keccak hash of the code itself\n                    account.codeHash = (0, utils_1.keccak)(code);\n                    if (!account.codeHash.equals(util_1.KECCAK256_NULL)) {\n                        // insert the code directly into the database with a key of `codeHash`\n                        promises[2] = this.db.put(account.codeHash, code);\n                    }\n                }\n            }\n            catch (e) {\n                // Since we fired off some promises that may throw themselves we need to\n                // catch these errors and discard them.\n                Promise.all(promises).catch(e => { });\n                throw e;\n            }\n            // finally, set the `nonce` and `balance` on the account before returning\n            // the serialized data\n            const [nonce, balance] = await Promise.all(promises);\n            account.nonce =\n                nonce === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(nonce, true);\n            account.balance =\n                balance === \"0x0\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(balance);\n            return account.serialize();\n        };\n        this.storageFromFallback = async (address, key, blockNumber) => {\n            const result = await this.blockchain.fallback.request(GET_STORAGE_AT, [\n                `0x${address.toString(\"hex\")}`,\n                `0x${key.toString(\"hex\")}`,\n                this.blockchain.fallback.selectValidForkBlockNumber(blockNumber)\n            ]);\n            if (!result)\n                return null;\n            // remove the `0x` and all leading 0 pairs:\n            const compressed = result.replace(/^0x(00)*/, \"\");\n            const buf = Buffer.from(compressed, \"hex\");\n            return (0, rlp_1.encode)(buf);\n        };\n        this.accounts = blockchain.accounts;\n        this.blockNumber = this.blockchain.fallback.blockNumber;\n        this.forkBlockNumber = this.blockNumber.toBigInt();\n        let metadataDB = MetadataSingletons.get(db);\n        if (!metadataDB) {\n            metadataDB = db.sublevel(\"f\", LEVELDOWN_OPTIONS);\n            MetadataSingletons.set(db, metadataDB);\n        }\n        this.metadataDB = metadataDB;\n        this.checkpointedMetadata = new trie_2.CheckpointDB(new trie_db_1.TrieDB(this.metadataDB));\n    }\n    checkpoint() {\n        super.checkpoint();\n        this.checkpointedMetadata.checkpoint(this.root());\n    }\n    async commit() {\n        await Promise.all([super.commit(), this.checkpointedMetadata.commit()]);\n    }\n    async revert() {\n        await Promise.all([super.revert(), this.checkpointedMetadata.revert()]);\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this._root = stateRoot;\n        this.address = address;\n        this.blockNumber = blockNumber;\n        this.isPreForkBlock = blockNumber.toBigInt() < this.forkBlockNumber;\n    }\n    async put(key, val) {\n        return super.put(key, val);\n    }\n    /**\n     * Removes saved metadata from the given block range (inclusive)\n     * @param startBlockNumber - (inclusive)\n     * @param endBlockNumber - (inclusive)\n     */\n    async revertMetaData(startBlockNumber, endBlockNumber) {\n        const db = this.metadataDB;\n        const stream = db.createKeyStream({\n            gte: lexico.encode([startBlockNumber.toBuffer()]),\n            lt: lexico.encode([\n                utils_1.Quantity.from(endBlockNumber.toBigInt() + 1n).toBuffer()\n            ])\n        });\n        const batch = db.batch();\n        for await (const key of stream) {\n            batch.del(key);\n        }\n        await batch.write();\n    }\n    createDelKey(key) {\n        const blockNum = this.blockNumber.toBuffer();\n        return lexico.encode([blockNum, this.address, key]);\n    }\n    /**\n     * Checks if the key was deleted (locally -- not on the fork)\n     * @param key -\n     */\n    async keyWasDeleted(key) {\n        const selfAddress = this.address === null ? utils_1.BUFFER_EMPTY : this.address;\n        // check the uncommitted checkpoints for deleted keys before\n        // checking the database itself\n        // TODO(perf): there is probably a better/faster way of doing this for the\n        // common case.\n        // Issue: https://github.com/trufflesuite/ganache/issues/3483\n        const { checkpoints } = this.checkpointedMetadata;\n        for (let i = checkpoints.length - 1; i >= 0; i--) {\n            for (let [encodedKeyStr, value] of checkpoints[i].keyValueMap.entries()) {\n                if (!value || !value.equals(DELETED_VALUE))\n                    continue;\n                const encodedKey = Buffer.from(encodedKeyStr, \"binary\");\n                if (isEqualKey(encodedKey, selfAddress, key))\n                    return true;\n            }\n        }\n        // since we didn't find proof of deletion in a checkpoint let's check the\n        // database for it.\n        // We start searching from our database key (blockNum + address + key)\n        // down to the earliest block we know about.\n        // TODO(perf): this is just going to be slow once we get lots of keys\n        // because it just checks every single key we've ever deleted (before this\n        // one).\n        // Issue: https://github.com/trufflesuite/ganache/issues/3484\n        const db = this.metadataDB;\n        const stream = db.createReadStream({\n            lte: this.createDelKey(key),\n            reverse: true\n        });\n        for await (const data of stream) {\n            const { key: encodedKey, value } = data;\n            if (!value || !value.equals(DELETED_VALUE))\n                continue;\n            if (isEqualKey(encodedKey, selfAddress, key))\n                return true;\n        }\n        // we didn't find proof of deletion so we return `false`\n        return false;\n    }\n    // note: this function is a slightly modified version of\n    // https://github.com/ethereumjs/ethereumjs-monorepo/blob/34f3dcdf37d2fbeffeb41dc3de693f59b91c46bc/packages/trie/src/trie/trie.ts#L218\n    async del(key) {\n        await this._lock.acquire();\n        // we only track if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock) {\n            const delKey = this.createDelKey(key);\n            const metaDataPutPromise = this.checkpointedMetadata.put(delKey, DELETED_VALUE);\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node) {\n                await this._deleteNode(hash, stack);\n                await this.persistRoot();\n            }\n            await metaDataPutPromise;\n        }\n        else {\n            const hash = (0, utils_1.keccak)(key);\n            const { node, stack } = await this.findPath(hash);\n            if (node) {\n                await this._deleteNode(hash, stack);\n                await this.persistRoot();\n            }\n        }\n        this._lock.release();\n    }\n    async get(key) {\n        const value = await super.get(key);\n        if (value != null)\n            return value;\n        // since we don't have this key in our local trie check if we've have\n        // deleted it (locally)\n        // we only check if the key was deleted (locally) for state tries _after_\n        // the fork block because we can't possibly delete keys _before_ the fork\n        // block, since those happened before ganache was even started\n        // This little optimization can cut debug_traceTransaction time _in half_.\n        if (!this.isPreForkBlock && (await this.keyWasDeleted(key)))\n            return null;\n        if (this.address === null) {\n            // if the trie context's address isn't set, our key represents an address:\n            return this.accountFromFallback(ethereum_address_1.Address.from(key), this.blockNumber);\n        }\n        else {\n            // otherwise the key represents storage at the given address:\n            return this.storageFromFallback(this.address, key, this.blockNumber);\n        }\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of ForkTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will\n     * contain the checkpointing metadata and will use the same scratch as\n     * underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const secureTrie = new ForkTrie(this.db.copy(), this.root(), this.blockchain);\n        secureTrie.accounts = this.accounts;\n        secureTrie.address = this.address;\n        secureTrie.blockNumber = this.blockNumber;\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            secureTrie._db.checkpoints = [...this._db.checkpoints];\n            // Our metadata checkpoints need to be the same reference to the\n            // parent's metadata checkpoints so that we can continue to track these\n            // changes on this copy, otherwise deletions made to a contract's storage\n            // may not be tracked.\n            // Note: db.checkpoints don't need this same treatment because of the way\n            // the statemanager uses a contract's trie: it doesn't ever save to it.\n            // Instead, it saves to its own internal cache, which eventually gets\n            // reverted or committed (flushed). Our metadata doesn't utilize a central\n            // cache.\n            secureTrie.checkpointedMetadata.checkpoints =\n                this.checkpointedMetadata.checkpoints;\n        }\n        return secureTrie;\n    }\n}\nexports.ForkTrie = ForkTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deriveFromIndex = exports.deriveFromPath = exports.createAccountFromSeed = exports.createAccountGeneratorFromSeedAndPath = void 0;\nconst crypto_1 = require(\"crypto\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst HARDENED_OFFSET = 0x80000000;\nconst MASTER_SECRET = Buffer.from(\"Bitcoin seed\", \"utf8\");\nfunction createAccountGeneratorFromSeedAndPath(seedBuffer, hdPath) {\n    const parent = createAccountFromSeed(seedBuffer);\n    const path = deriveFromPath(hdPath, parent);\n    return (index) => {\n        return deriveFromIndex(index, path);\n    };\n}\nexports.createAccountGeneratorFromSeedAndPath = createAccountGeneratorFromSeedAndPath;\nfunction createAccountFromSeed(seedBuffer) {\n    const I = (0, crypto_1.createHmac)(\"sha512\", MASTER_SECRET).update(seedBuffer).digest();\n    const privateKey = I.slice(0, 32);\n    const chainCode = I.slice(32);\n    const publicKey = makePublicKey(privateKey);\n    return {\n        privateKey,\n        chainCode,\n        publicKey\n    };\n}\nexports.createAccountFromSeed = createAccountFromSeed;\nfunction deriveFromPath(fullPath, child) {\n    fullPath.forEach(function (c, i) {\n        if (i === 0) {\n            if (!/^[mM]{1}/.test(c)) {\n                throw new Error('Path must start with \"m\" or \"M\"');\n            }\n            return;\n        }\n        const hardened = c.length > 1 && c[c.length - 1] === \"'\";\n        let childIndex = parseInt(c, 10);\n        if (childIndex >= HARDENED_OFFSET)\n            throw new Error(\"Invalid index\");\n        if (hardened)\n            childIndex += HARDENED_OFFSET;\n        child = deriveChild(childIndex, hardened, child.privateKey, child.publicKey, child.chainCode);\n    });\n    return child;\n}\nexports.deriveFromPath = deriveFromPath;\nfunction deriveFromIndex(index, child) {\n    if (index >= HARDENED_OFFSET)\n        throw new Error(\"Invalid index\");\n    return deriveChild(index, false, child.privateKey, child.publicKey, child.chainCode);\n}\nexports.deriveFromIndex = deriveFromIndex;\nfunction makePublicKey(privateKey) {\n    const publicKey = Buffer.allocUnsafe(33);\n    switch (secp256k1_1.default.publicKeyCreate(publicKey, privateKey)) {\n        case 0:\n            return publicKey;\n        case 1:\n            throw new Error(\"Private Key is invalid\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n}\n/**\n * A buffer of size 4 that can be reused as long as all changes are consumed\n * within the same event loop.\n */\nconst SHARED_BUFFER_4 = Buffer.allocUnsafe(4);\nfunction deriveChild(index, isHardened, privateKey, publicKey, chainCode) {\n    const indexBuffer = SHARED_BUFFER_4;\n    indexBuffer.writeUInt32BE(index, 0);\n    let data;\n    const privateKeyLength = privateKey.length;\n    if (isHardened) {\n        // Hardened child\n        // privateKeyLength + 1 (BUFFER_ZERO.length) + 4 (indexBuffer.length)\n        const dataLength = privateKeyLength + 1 + 4;\n        data = Buffer.concat([utils_1.BUFFER_ZERO, privateKey, indexBuffer], dataLength);\n    }\n    else {\n        // Normal child\n        data = Buffer.concat([publicKey, indexBuffer], publicKey.length + 4);\n    }\n    const I = (0, crypto_1.createHmac)(\"sha512\", chainCode).update(data).digest();\n    const IL = I.slice(0, 32);\n    try {\n        const newPrivK = Buffer.allocUnsafe(privateKeyLength);\n        privateKey.copy(newPrivK, 0, 0, privateKeyLength);\n        switch (secp256k1_1.default.privateKeyTweakAdd(newPrivK, IL)) {\n            case 0:\n                return {\n                    privateKey: newPrivK,\n                    publicKey: makePublicKey(newPrivK),\n                    chainCode: I.slice(32)\n                };\n            case 1:\n                throw new Error(\"The tweak was out of range or the resulted private key is invalid\");\n        }\n    }\n    catch {\n        return deriveChild(index + 1, isHardened, privateKey, publicKey, chainCode);\n    }\n}\n//# sourceMappingURL=hdkey.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertArgLength = void 0;\nfunction assertArgLength(min, max = min) {\n    return function (target, propertyKey, descriptor) {\n        const original = descriptor.value;\n        descriptor.value = function () {\n            const length = arguments.length;\n            if (length < min || length > max) {\n                throw new Error(`Incorrect number of arguments. '${String(propertyKey)}' requires ${min === max\n                    ? `exactly ${min} ${min === 1 ? \"argument\" : \"arguments\"}.`\n                    : `between ${min} and ${max} arguments.`}`);\n            }\n            return Reflect.apply(original, this, arguments);\n        };\n        return descriptor;\n    };\n}\nexports.assertArgLength = assertArgLength;\n//# sourceMappingURL=assert-arg-length.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferify = void 0;\nconst PARTS = Buffer.from('[]{},\"\":null');\nconst SQUARE_BRACKET_PAIR = PARTS.slice(0, 2);\nconst SQUARE_BRACKET_OPEN = SQUARE_BRACKET_PAIR.slice(0, 1);\nconst SQUARE_BRACKET_CLOSE = SQUARE_BRACKET_PAIR.slice(1, 2);\nconst CURLY_BRACKET_PAIR = PARTS.slice(2, 4);\nconst CURLY_BRACKET_OPEN = CURLY_BRACKET_PAIR.slice(0, 1);\nconst CURLY_BRACKET_CLOSE = CURLY_BRACKET_PAIR.slice(1, 2);\nconst COMMA_QUOTE = PARTS.slice(4, 6);\nconst COMMA = COMMA_QUOTE.slice(0, 1);\nconst QUOTE_PAIR = PARTS.slice(5, 7);\nconst QUOTE_COLON = PARTS.slice(6, 8);\nconst COLON = QUOTE_COLON.slice(1, 2);\nconst NULL = PARTS.slice(8, 12);\nconst _EMPTY = PARTS.slice(0, 0);\nconst toStr = Object.prototype.toString;\nconst isObj = (val) => toStr.call(val) === \"[object Object]\";\nfunction numberToBuffer(value) {\n    const str = value.toString();\n    const { length } = str;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length);\n        buf.utf8Write(str, 0, length);\n        return buf;\n    }\n    else {\n        return _EMPTY;\n    }\n}\nfunction stringToQuotedBuffer(value) {\n    const { length } = value;\n    if (length > 0) {\n        const buf = Buffer.allocUnsafe(length + 2); // + 2 for the quotation marks\n        buf[0] = 34; // DOUBLE QUOTE\n        buf[length + 1] = 34; // DOUBLE QUOTE\n        buf.utf8Write(value, 1, length);\n        return buf;\n    }\n    else {\n        return QUOTE_PAIR;\n    }\n}\nfunction* arrayToBuffer(value) {\n    const { length } = value;\n    if (length === 0) {\n        yield SQUARE_BRACKET_PAIR;\n        return;\n    }\n    else {\n        yield SQUARE_BRACKET_OPEN;\n        // sends the first array value:\n        for (const chunkified of bufferify(value[0], \"0\")) {\n            // if the value ends up being nothing (undefined), return null\n            yield chunkified.length === 0 ? NULL : chunkified;\n        }\n        // sends the rest of the array values:\n        for (let i = 1; i < length; i++) {\n            yield COMMA;\n            for (const chunkified of bufferify(value[i], i.toString())) {\n                // if the value ends up being nothing (undefined), return null\n                yield chunkified.length === 0 ? NULL : chunkified;\n            }\n        }\n        yield SQUARE_BRACKET_CLOSE;\n        return;\n    }\n}\nfunction bufferToQuotedBuffer(value) {\n    const { length } = value;\n    const buf = Buffer.allocUnsafe(length + 2);\n    buf[0] = 34;\n    value.copy(buf, 1, 0, length);\n    buf[length + 1] = 34;\n    return buf;\n}\nfunction* objectToBuffer(obj, nameOrIndex) {\n    if (\"toJSON\" in obj) {\n        yield* bufferify(obj.toJSON(nameOrIndex), nameOrIndex);\n        return;\n    }\n    let yieldedOpen = false;\n    for (const key in obj) {\n        const value = obj[key];\n        let yieldPrefix = true;\n        for (const chunkified of bufferify(value, key)) {\n            // if the chunkified value ends up being nothing (undefined) ignore\n            // the property\n            const chunkLength = chunkified.length;\n            if (chunkLength === 0)\n                continue;\n            // only yield the prefix once per `key`\n            if (yieldPrefix) {\n                yieldPrefix = false;\n                const quotedKey = stringToQuotedBuffer(key);\n                if (!yieldedOpen) {\n                    yield Buffer.concat([\n                        CURLY_BRACKET_OPEN,\n                        quotedKey,\n                        COLON,\n                        chunkified\n                    ]);\n                    yieldedOpen = true;\n                }\n                else {\n                    yield Buffer.concat([COMMA, quotedKey, COLON, chunkified]);\n                }\n            }\n            else {\n                yield chunkified;\n            }\n        }\n    }\n    // if we yielded the\n    if (yieldedOpen) {\n        yield CURLY_BRACKET_CLOSE;\n        return;\n    }\n    else {\n        yield CURLY_BRACKET_PAIR;\n        return;\n    }\n}\n/**\n * Converts a JavaScript value to a JavaScript Object Notation (JSON) Buffer\n * (utf-8 encoded).\n *\n * This is a hack. It:\n *  * Does not support circular references.\n *  * Does not support double quotes within Object keys; only alphanumerics are\n *    considered safe to use\n *  * Probably doesn't support non-ASCII characters\n *  * Is only tested on transaction traces\n *\n * Only useful if the `JSON.stringify`ed version would create a string larger\n * than what the JavaScript engine can handle.\n *\n * What is the maximum string size in Node/V8? It depends on the version! Some\n * versions are 256MB, some are ~1GB, and others are ~0.5GB.\n * See: https://stackoverflow.com/a/47781288/160173\n *\n * CAUTION: This method is approx 3 - 20 times slower than using:\n * `Buffer.from(JSON.stringify(value), \"utf-8\")`\n *\n * @param value - A JavaScript value, usually an object or array, to be converted.\n * @param nameOrIndex - JSON.stringify calls an object's toJSON method, and this\n * property is used by internal recursive calls to bufferify.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify#tojson_behavior\n */\nfunction* bufferify(value, nameOrIndex) {\n    const type = typeof value;\n    if (type === \"number\" || type === \"boolean\") {\n        yield numberToBuffer(value);\n    }\n    else if (type === \"string\") {\n        yield stringToQuotedBuffer(value);\n    }\n    else if (Buffer.isBuffer(value)) {\n        yield bufferToQuotedBuffer(value);\n    }\n    else if (Array.isArray(value)) {\n        yield* arrayToBuffer(value);\n    }\n    else if (isObj(value)) {\n        yield* objectToBuffer(value, nameOrIndex);\n    }\n    else if (value === null) {\n        yield NULL;\n    }\n    else if (type === \"undefined\") {\n        // nothing is returned for undefined\n        yield _EMPTY;\n    }\n    else if (\"toJSON\" in value && typeof value.toJSON === \"function\") {\n        yield* bufferify(value.toJSON(), nameOrIndex);\n    }\n    else {\n        throw new Error(\"unsupported value in bufferify\");\n    }\n}\nexports.bufferify = bufferify;\n//# sourceMappingURL=bufferify.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.changeCommonParamValue = exports.removeEIP3860InitCodeSizeLimitCheck = void 0;\n/**\n * Effectively removes the 3860 InitCode Size Limit check by increasing the init\n * code size to Number.MAX_SAFE_INTEGER.\n *\n * This number works because an initcode can practically never be that large\n * (approx 9 PetaBytes!).\n *\n * @param common\n * @returns\n */\nfunction removeEIP3860InitCodeSizeLimitCheck(common) {\n    // this is a hack until EJS ships `allowUnlimitedInitCodeSize` option https://github.com/ethereumjs/ethereumjs-monorepo/issues/2588\n    return changeCommonParamValue(common, 3860, \"vm\", \"maxInitCodeSize\", \n    // we'd use Infinity if we could, but that's not a valid BigInt\n    BigInt(Number.MAX_SAFE_INTEGER));\n}\nexports.removeEIP3860InitCodeSizeLimitCheck = removeEIP3860InitCodeSizeLimitCheck;\nfunction changeCommonParamValue(common, eip, topic, name, value) {\n    const original = common.paramByEIP.bind(common);\n    common.paramByEIP = function (paramTopic, paramName, paramEip) {\n        if (paramTopic === topic && paramName === name && paramEip === eip) {\n            return value;\n        }\n        return original.call(common, paramTopic, paramName, paramEip);\n    };\n}\nexports.changeCommonParamValue = changeCommonParamValue;\n//# sourceMappingURL=common-helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseFilter = exports.parseFilterRange = exports.parseFilterDetails = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseFilterDetails(filter) {\n    // `filter.address` may be a single address or an array\n    const addresses = filter.address\n        ? (Array.isArray(filter.address) ? filter.address : [filter.address]).map(a => ethereum_address_1.Address.from(a.toLowerCase()).toBuffer())\n        : [];\n    const topics = filter.topics ? filter.topics : [];\n    return { addresses, topics };\n}\nexports.parseFilterDetails = parseFilterDetails;\nfunction parseFilterRange(filter, blockchain) {\n    const latestBlock = blockchain.blocks.latest.header.number;\n    const fromBlock = blockchain.blocks.getEffectiveNumber(filter.fromBlock || ethereum_utils_1.Tag.latest);\n    const latestBlockNumber = latestBlock.toNumber();\n    const toBlock = blockchain.blocks.getEffectiveNumber(filter.toBlock || ethereum_utils_1.Tag.latest);\n    let toBlockNumber;\n    // don't search after the \"latest\" block, unless it's \"pending\", of course.\n    if (toBlock > latestBlock) {\n        toBlockNumber = latestBlockNumber;\n    }\n    else {\n        toBlockNumber = toBlock.toNumber();\n    }\n    return {\n        fromBlock,\n        toBlock,\n        toBlockNumber\n    };\n}\nexports.parseFilterRange = parseFilterRange;\nfunction parseFilter(filter = { address: [], topics: [] }, blockchain) {\n    const { addresses, topics } = parseFilterDetails(filter);\n    const { fromBlock, toBlock, toBlockNumber } = parseFilterRange(filter, blockchain);\n    return {\n        addresses,\n        fromBlock,\n        toBlock,\n        toBlockNumber,\n        topics\n    };\n}\nexports.parseFilter = parseFilter;\n//# sourceMappingURL=filter-parsing.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst bn = (val = 0) => new bn_js_1.default(val);\nconst STIPEND = bn(2300);\nconst bigIntToBN = (val) => {\n    return new bn_js_1.default(val.toString());\n};\nconst MULTIPLE = 64 / 63;\nconst check = (set) => (opname) => set.has(opname);\nconst isCall = check(new Set([\"CALL\", \"DELEGATECALL\", \"STATICCALL\", \"CALLCODE\"]));\nconst isCallOrCallcode = check(new Set([\"CALL\", \"CALLCODE\"]));\nconst isCreate = check(new Set([\"CREATE\", \"CREATE2\"]));\nconst isTerminator = check(new Set([\"STOP\", \"RETURN\", \"REVERT\", \"INVALID\", \"SELFDESTRUCT\"]));\nconst stepTracker = () => {\n    const sysOps = [];\n    const allOps = [];\n    const preCompile = new Set();\n    let preCompileCheck = false;\n    let precompileCallDepth = 0;\n    return {\n        collect: (info) => {\n            if (preCompileCheck) {\n                if (info.depth === precompileCallDepth) {\n                    // If the current depth is unchanged.\n                    // we record its position.\n                    preCompile.add(allOps.length - 1);\n                }\n                // Reset the flag immediately here\n                preCompileCheck = false;\n            }\n            if (isCall(info.opcode.name)) {\n                info.stack = [...info.stack];\n                preCompileCheck = true;\n                precompileCallDepth = info.depth;\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            else if (isCreate(info.opcode.name) || isTerminator(info.opcode.name)) {\n                sysOps.push({\n                    index: allOps.length,\n                    depth: info.depth,\n                    name: info.opcode.name\n                });\n            }\n            // This goes last so we can use the length for the index ^\n            allOps.push(info);\n        },\n        isPrecompile: (index) => preCompile.has(index),\n        done: () => !allOps.length ||\n            sysOps.length < 2 ||\n            !isTerminator(allOps[allOps.length - 1].opcode.name),\n        ops: allOps,\n        systemOps: sysOps\n    };\n};\nconst estimateGas = async (generateVM, runArgs, callback) => {\n    const vm = await generateVM();\n    exactimate(vm, runArgs, (err, result) => {\n        if (err)\n            return callback(err);\n        binSearch(generateVM, runArgs, result, (err, result) => {\n            if (err)\n                return callback(err);\n            callback(null, result);\n        });\n    });\n};\nconst binSearch = async (generateVM, runArgs, result, callback) => {\n    const MAX = bigIntToBN(runArgs.block.header.gasLimit);\n    const gasRefund = result.execResult.gasRefund;\n    const startingGas = gasRefund\n        ? bigIntToBN(result.gasEstimate + gasRefund)\n        : bigIntToBN(result.gasEstimate);\n    const range = { lo: startingGas, hi: startingGas };\n    const isEnoughGas = async (gas) => {\n        const vm = await generateVM(); // Generate fresh VM\n        runArgs.tx.gasLimit = utils_1.Quantity.toBigInt(gas.toArrayLike(Buffer));\n        await vm.stateManager.checkpoint();\n        const result = await vm\n            .runTx(runArgs)\n            .catch(vmerr => ({ vmerr }));\n        await vm.stateManager.revert();\n        return !(\"vmerr\" in result) && !result.execResult.exceptionError;\n    };\n    if (!(await isEnoughGas(range.hi))) {\n        do {\n            range.hi = range.hi.muln(MULTIPLE);\n        } while (!(await isEnoughGas(range.hi)));\n        while (range.lo.addn(1).lt(range.hi)) {\n            const mid = range.lo.add(range.hi).divn(2);\n            if (await isEnoughGas(mid)) {\n                range.hi = mid;\n            }\n            else {\n                range.lo = mid;\n            }\n        }\n        if (range.hi.gte(MAX)) {\n            if (!(await isEnoughGas(range.hi))) {\n                return callback(new Error(\"gas required exceeds allowance or always failing transaction\"));\n            }\n        }\n    }\n    result.gasEstimate = utils_1.Quantity.toBigInt(range.hi.toArrayLike(Buffer));\n    callback(null, result);\n};\nconst exactimate = async (vm, runArgs, callback) => {\n    const steps = stepTracker();\n    vm.evm.events.on(\"step\", steps.collect);\n    const Context = (index, fee) => {\n        const base = index === 0;\n        let start = index;\n        let stop = 0;\n        const cost = bn();\n        let sixtyFloorths = bn();\n        const op = steps.ops[index];\n        const next = steps.ops[index + 1];\n        const intermediateCost = bigIntToBN(op.gasLeft - next.gasLeft);\n        const callingFee = fee || bn();\n        let compositeContext = false;\n        function addGas(val) {\n            // Add to our current context, but accounted for in sixtyfloorths\n            if (sixtyFloorths.gtn(0)) {\n                if (val.gte(sixtyFloorths)) {\n                    sixtyFloorths = bn();\n                }\n                else {\n                    sixtyFloorths.isub(val);\n                }\n            }\n            cost.iadd(val);\n        }\n        return {\n            start: () => start,\n            stop: () => stop,\n            setStart: (val) => {\n                start = val;\n                compositeContext = true;\n            },\n            setStop: (val) => {\n                stop = val;\n            },\n            getCost: () => ({ cost, sixtyFloorths }),\n            transfer: ctx => {\n                const values = ctx.getCost();\n                addGas(values.cost);\n                sixtyFloorths.iadd(values.sixtyFloorths);\n            },\n            addSixtyFloorth: (sixtyFloorth) => {\n                sixtyFloorths.iadd(sixtyFloorth);\n            },\n            addRange: (fee = bn()) => {\n                const range = steps.ops[base || compositeContext ? start : start + 1].gasLeft -\n                    steps.ops[stop].gasLeft;\n                // only occurs on stack increasing ops\n                addGas(bigIntToBN(range).add(fee));\n            },\n            finalizeRange: () => {\n                let range;\n                // if we have a composite context and we are NOT at the final terminator\n                if (compositeContext && stop !== steps.ops.length - 1) {\n                    range = bigIntToBN(steps.ops[start].gasLeft - steps.ops[stop - 1].gasLeft);\n                    addGas(range);\n                    const tail = bigIntToBN(steps.ops[stop - 1].gasLeft - steps.ops[stop].gasLeft);\n                    range = tail.add(intermediateCost);\n                }\n                else {\n                    range = bigIntToBN(steps.ops[start].gasLeft - steps.ops[stop].gasLeft);\n                }\n                range.isub(callingFee);\n                addGas(range);\n                if (isCallOrCallcode(op.opcode.name) &&\n                    !(op.stack[op.stack.length - 3] === 0n)) {\n                    cost.iadd(sixtyFloorths);\n                    const innerCost = bigIntToBN(next.gasLeft - steps.ops[stop - 1].gasLeft);\n                    if (innerCost.gt(STIPEND)) {\n                        sixtyFloorths = cost.divn(63);\n                    }\n                    else if (innerCost.lte(STIPEND)) {\n                        sixtyFloorths = STIPEND.sub(innerCost);\n                    }\n                }\n                else if (stop !== steps.ops.length - 1) {\n                    cost.iadd(sixtyFloorths);\n                    sixtyFloorths = cost.divn(63);\n                }\n            }\n        };\n    };\n    const getTotal = () => {\n        const sysops = steps.systemOps;\n        const ops = steps.ops;\n        const opIndex = cursor => sysops[cursor].index;\n        const stack = [];\n        let cursor = 0;\n        let context = Context(0);\n        while (cursor < sysops.length) {\n            const currentIndex = opIndex(cursor);\n            const current = ops[currentIndex];\n            const name = current.opcode.name;\n            if (isCall(name) || isCreate(name)) {\n                if (steps.isPrecompile(currentIndex)) {\n                    context.setStop(currentIndex + 1);\n                    context.addRange();\n                    context.setStart(currentIndex + 1);\n                    context.addSixtyFloorth(STIPEND);\n                }\n                else {\n                    context.setStop(currentIndex);\n                    const feeBn = bn(current.opcode.fee);\n                    context.addRange(feeBn);\n                    stack.push(context);\n                    context = Context(currentIndex, feeBn); // setup next context\n                }\n            }\n            else if (isTerminator(name)) {\n                // only on the last operation\n                context.setStop(currentIndex + 1 < steps.ops.length ? currentIndex + 1 : currentIndex);\n                context.finalizeRange();\n                const ctx = stack.pop();\n                if (ctx) {\n                    ctx.transfer(context);\n                    context = ctx;\n                    context.setStart(currentIndex + 1);\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                throw new Error(\"INVALID OPCODE\");\n            }\n            cursor++;\n        }\n        const gas = context.getCost();\n        return gas.cost.add(gas.sixtyFloorths);\n    };\n    await vm.stateManager.checkpoint();\n    const result = await vm\n        .runTx(runArgs)\n        .catch(vmerr => ({ vmerr }));\n    await vm.stateManager.revert();\n    if (\"vmerr\" in result) {\n        const vmerr = result.vmerr;\n        return callback(vmerr);\n    }\n    else if (result.execResult.exceptionError) {\n        const error = new ethereum_utils_1.RuntimeError(\n        // erroneous gas estimations don't have meaningful hashes\n        utils_1.Quantity.Empty, result, ethereum_utils_1.RETURN_TYPES.RETURN_VALUE);\n        return callback(error, result);\n    }\n    else {\n        const ret = result;\n        if (steps.done()) {\n            const estimate = result.totalGasSpent;\n            ret.gasEstimate = estimate;\n        }\n        else {\n            const gasLeftStart = steps.ops[0].gasLeft;\n            const gasLeftEnd = steps.ops[steps.ops.length - 1].gasLeft;\n            const actualUsed = bigIntToBN(gasLeftStart - gasLeftEnd);\n            const sixtyFloorths = getTotal().sub(actualUsed);\n            ret.gasEstimate =\n                result.totalGasSpent +\n                    utils_1.Quantity.toBigInt(sixtyFloorths.toArrayLike(Buffer));\n        }\n        callback(null, ret);\n    }\n};\nexports.default = estimateGas;\n//# sourceMappingURL=gas-estimator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.warmPrecompiles = exports.activatePrecompiles = void 0;\nconst NUM_PRECOMPILES = 18;\n/**\n * An account with a balance of 1\n */\nconst SERIALIZED_PRECOMPILE = Uint8Array.from([\n    248, 68, 128, 1, 160, 86, 232, 31, 23, 27, 204, 85, 166, 255, 131, 69, 230,\n    146, 192, 248, 110, 91, 72, 224, 27, 153, 108, 173, 192, 1, 98, 47, 181, 227,\n    99, 180, 33, 160, 197, 210, 70, 1, 134, 247, 35, 60, 146, 126, 125, 178, 220,\n    199, 3, 192, 229, 0, 182, 83, 202, 130, 39, 59, 123, 250, 216, 4, 93, 133,\n    164, 112\n]);\nconst PRECOMPILED_ACCOUNT = {\n    serialize: () => SERIALIZED_PRECOMPILE\n};\nconst accountCache = [];\nconst makeAccount = (i) => {\n    if (accountCache[i])\n        return accountCache[i];\n    // 20 bytes, the first 19 are 0, the last byte is the address\n    const buf = Buffer.allocUnsafe(20).fill(0, 0, 19);\n    buf[19] = i;\n    return (accountCache[i] = { buf });\n};\n/**\n * Puts the precompile accounts into the state tree\n * @param eei -\n */\nconst activatePrecompiles = async (eei) => {\n    await eei.checkpoint();\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        eei.putAccount(account, PRECOMPILED_ACCOUNT);\n    }\n    await eei.commit();\n};\nexports.activatePrecompiles = activatePrecompiles;\n/**\n * Puts the precompile accounts into the warmed addresses\n * @param eei -\n */\nconst warmPrecompiles = async (eei) => {\n    for (let i = 1; i <= NUM_PRECOMPILES; i++) {\n        const account = makeAccount(i);\n        eei.addWarmedAddress(account.buf);\n    }\n};\nexports.warmPrecompiles = warmPrecompiles;\n//# sourceMappingURL=precompiles.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.applySimulationOverrides = exports.runCall = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst util_1 = require(\"@ethereumjs/util\");\n/**\n * Executes a message/transaction against the vm.\n * @param vm -\n * @param transaction -\n * @param gasLeft -\n * @returns\n */\nfunction runCall(vm, transaction, gasLeft) {\n    const caller = transaction.from;\n    const to = transaction.to ?? null;\n    const value = transaction.value == null ? 0n : transaction.value.toBigInt();\n    vm.evm.runCall({\n        origin: caller,\n        block: transaction.block,\n        gasPrice: transaction.gasPrice.toBigInt(),\n        caller,\n        gasLimit: gasLeft,\n        to,\n        value,\n        data: transaction.data && transaction.data.toBuffer()\n    });\n}\nexports.runCall = runCall;\nconst validateStorageOverride = (slot, value, fieldName) => {\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof slot === \"string\" && slot !== \"\" && slot.indexOf(\"0x\") === 0) {\n        // assume we're starting with 0x cause Quantity will verify if not\n        if (slot.length != 66) {\n            throw new Error(`${fieldName} override slot must be a 64 character hex string. Received ${slot.length - 2} character string.`);\n        }\n    }\n    if (value === null || value === undefined) {\n        throw new Error(`${fieldName} override data not valid. Received: ${value}`);\n    }\n    // assume Quantity will handle other types, these are just special string cases\n    if (typeof value === \"string\" && value !== \"\" && value.indexOf(\"0x\") === 0) {\n        if (value.length != 66) {\n            throw new Error(`${fieldName} override data must be a 64 character hex string. Received ${value.length - 2} character string.`);\n        }\n    }\n};\nasync function applySimulationOverrides(stateTrie, vm, overrides) {\n    const eei = vm.eei;\n    for (const address in overrides) {\n        if (!(0, utils_1.hasOwn)(overrides, address))\n            continue;\n        const { balance, nonce, code, state, stateDiff } = overrides[address];\n        const vmAddr = ethereum_address_1.Address.from(address);\n        // group together overrides that update the account\n        if (nonce != null || balance != null || code != null) {\n            const account = await eei.getAccount(vmAddr);\n            if (nonce != null) {\n                account.nonce = nonce === \"\" ? 0n : utils_1.Quantity.toBigInt(nonce);\n            }\n            if (balance != null) {\n                account.balance = balance === \"\" ? 0n : utils_1.Quantity.toBigInt(balance);\n            }\n            if (code != null) {\n                // geth treats empty strings as \"0x\" code for overrides\n                const codeBuffer = utils_1.Data.toBuffer(code === \"\" ? \"0x\" : code);\n                // The ethereumjs-vm StateManager does not allow to set empty code,\n                // therefore we will manually set the code hash when \"clearing\" the contract code\n                const codeHash = codeBuffer.length > 0 ? (0, utils_1.keccak)(codeBuffer) : util_1.KECCAK256_NULL;\n                account.codeHash = codeHash;\n                await stateTrie.database().put(codeHash, codeBuffer);\n            }\n            await eei.putAccount(vmAddr, account);\n        }\n        // group together overrides that update storage\n        if (state || stateDiff) {\n            if (state) {\n                // state and stateDiff fields are mutually exclusive\n                if (stateDiff) {\n                    throw new Error(\"both state and stateDiff overrides specified\");\n                }\n                // it's possible that the user fed an override with a valid address\n                // and slot, but not a value we can actually set in the storage. if\n                // so, we don't want to set the storage, and we also don't want to\n                // clear it out\n                let clearedState = false;\n                for (const slot in state) {\n                    if (!(0, utils_1.hasOwn)(state, slot))\n                        continue;\n                    const value = state[slot];\n                    validateStorageOverride(slot, value, \"State\");\n                    if (!clearedState) {\n                        // override.state clears all storage and sets just the specified slots\n                        await eei.clearContractStorage(vmAddr);\n                        clearedState = true;\n                    }\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await eei.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n            else {\n                for (const slot in stateDiff) {\n                    // don't set storage for invalid values\n                    if (!(0, utils_1.hasOwn)(stateDiff, slot))\n                        continue;\n                    const value = stateDiff[slot];\n                    validateStorageOverride(slot, value, \"StateDiff\");\n                    const slotBuf = utils_1.Data.toBuffer(slot, 32);\n                    const valueBuf = utils_1.Data.toBuffer(value);\n                    await eei.putContractStorage(vmAddr, slotBuf, valueBuf);\n                }\n            }\n        }\n    }\n}\nexports.applySimulationOverrides = applySimulationOverrides;\n//# sourceMappingURL=run-call.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dumpTrieStorageDetails = exports.getStorage = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\n/**\n * Compares `a` with `b` and returns a boolean indicating whether `a` comes\n * before `b` in sort order. Comparison is based on the actual sequence of bytes\n * in each `Buffer`.\n *\n * * `true` is returned if `a` comes before `b`\n * * `false` is returned if `a` is equal to, or comes after `b`\n *\n * @param a A `Buffer` with which to compare `b`.\n * @param b A `Buffer` with which to compare `a`.\n */\nconst compare = (a, b) => a.compare(b) < 0;\n/**\n * Iterates over all keys in the trie, drops keys that sort before `startKey`,\n * sorts them, and then returns them in sorted order, along with their values.\n *\n * The `keys` and `values` fields may contain more than `maxKeys` records. The\n * `length` property must be used determine which keys are relevant.\n *\n * The value property is the raw value, it has not been RLP decoded.\n *\n * `nextKey` is set if there are more than `maxKeys` after `startKey`.\n *\n * @param trie\n * @param startKey\n * @param maxKeys\n * @returns\n */\nasync function getHashedKeysWithValues(trie, startKey, maxKeys) {\n    return await new Promise((resolve, reject) => {\n        const keys = [];\n        const values = [];\n        trie\n            .createReadStream()\n            .on(\"data\", function onData({ key, value }) {\n            // ignore anything that comes before our starting point\n            if (startKey.compare(key) > 0)\n                return;\n            // insert the key exactly where it needs to go in the array\n            const position = (0, utils_1.findInsertPosition)(keys, key, compare);\n            // ignore if the value couldn't possibly be relevant (array is full, and\n            // this element sorts after the last element we already have)\n            // note we _want_ to collect 1 more key than `maxKeys` so we can return\n            // `nextKey` if necessary\n            if (position > maxKeys)\n                return;\n            keys.splice(position, 0, key);\n            values.splice(position, 0, value);\n        })\n            .on(\"end\", function onEnd() {\n            const length = keys.length;\n            if (length > maxKeys) {\n                // we have too many keys, set the `length` to `maxKeys` and return a\n                // `nextKey`:\n                const nextKey = utils_1.Data.from(keys[maxKeys]);\n                resolve({\n                    keys,\n                    length: maxKeys,\n                    nextKey,\n                    values\n                });\n            }\n            else {\n                resolve({\n                    keys,\n                    length,\n                    nextKey: null,\n                    values\n                });\n            }\n        })\n            .on(\"error\", reject);\n    });\n}\n/**\n * Given an array of keccak256 hashed `keys` and RLP encoded `values` pairs,\n * look up the \"raw\" (unhashed) key in the given `database` for each pair,\n * returning a `Record` of `StorageRecord`s for each pair where the Record key\n * is the hashed key and the `Record`'s value is another `Record` where the key\n * is the \"raw\" key and the value is the RLP decoded `value`.\n *\n * @param hashedKeys - the hash keys\n * @param values - the RLP encode values\n * @param count - the number of pairs from hashedKeys/values to process\n * @param database - the database containing the `hashedKey -> rawKey` index.\n */\nasync function getStorage(hashedKeys, values, count, database) {\n    const storage = {};\n    const promises = [];\n    for (let i = 0; i < count; i++) {\n        const hashedKey = hashedKeys[i];\n        promises.push(\n        // get the \"raw\" key using the *hashed* key\n        database.get(hashedKey).then((rawKey) => {\n            storage[utils_1.Data.toString(hashedKey, 32)] = {\n                key: utils_1.Data.from(rawKey, 32),\n                value: utils_1.Data.from((0, rlp_1.decode)(values[i]), 32)\n            };\n        }));\n    }\n    await Promise.all(promises);\n    return storage;\n}\nexports.getStorage = getStorage;\n/**\n * Returns storage within the given `storageTrie` given a `startKey` and max\n * number of entries to return (`maxKeys`).\n *\n * `ethereumjs-vm` has a `dumpStorage(account)` method, but we need to honor\n * `startKey` and `maxKeys`, and we do that by not loading every key and\n * value into memory, which `dumpStorage` would do.\n *\n * @param startKey\n * @param maxKeys\n * @param storageTrie\n * @param database\n */\nasync function dumpTrieStorageDetails(startKey, maxKeys, storageTrie, database) {\n    const { keys, length, nextKey, values } = await getHashedKeysWithValues(storageTrie, startKey, maxKeys);\n    return {\n        storage: await getStorage(keys, values, length, database),\n        nextKey\n    };\n}\nexports.dumpTrieStorageDetails = dumpTrieStorageDetails;\n//# sourceMappingURL=storage-range-at.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GanacheTrie = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst trie_1 = require(\"@ethereumjs/trie\");\nconst keyHashingFunction = (msg) => {\n    return (0, utils_1.keccak)(Buffer.from(msg.buffer, msg.byteOffset, msg.length));\n};\nclass GanacheTrie extends trie_1.Trie {\n    constructor(db, root, blockchain) {\n        super({\n            db,\n            root,\n            useRootPersistence: true,\n            useKeyHashing: true,\n            useKeyHashingFunction: keyHashingFunction\n        });\n        this.blockchain = blockchain;\n        this.db = db;\n    }\n    setContext(stateRoot, address, blockNumber) {\n        this.root(stateRoot);\n    }\n    /**\n     * Returns a copy of the underlying trie with the interface of GanacheTrie.\n     * @param includeCheckpoints - If true and during a checkpoint, the copy will contain the checkpointing metadata and will use the same scratch as underlying db.\n     */\n    copy(includeCheckpoints = true) {\n        const secureTrie = new GanacheTrie(this.db.copy(), this.root(), this.blockchain);\n        if (includeCheckpoints && this.hasCheckpoints()) {\n            secureTrie._db.checkpoints = [...this._db.checkpoints];\n        }\n        return secureTrie;\n    }\n}\nexports.GanacheTrie = GanacheTrie;\n//# sourceMappingURL=trie.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Miner_currentlyExecutingPrice, _Miner_origins, _Miner_pending, _Miner_isBusy, _Miner_paused, _Miner_resumer, _Miner_currentBlockBaseFeePerGas, _Miner_resolver, _Miner_emitStepEvent, _Miner_executables, _Miner_options, _Miner_vm, _Miner_createBlock, _Miner_priced, _Miner_mine, _Miner_mineTxs, _Miner_runTx, _Miner_removeBestAndOrigin, _Miner_reset, _Miner_setPricedHeap, _Miner_updatePricedHeap;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Capacity = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst trie_1 = require(\"@ethereumjs/trie\");\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst replace_from_heap_1 = __importDefault(require(\"./replace-from-heap\"));\nconst ethereum_transaction_1 = require(\"@ganache/ethereum-transaction\");\nconst provider_events_1 = require(\"../provider-events\");\nconst console_log_1 = require(\"@ganache/console.log\");\n/**\n * How many transactions should be in the block.\n */\nvar Capacity;\n(function (Capacity) {\n    /**\n     * Keep mining transactions until there are no more transactions that can fit\n     * in the block, or there are no transactions left to mine.\n     */\n    Capacity[Capacity[\"FillBlock\"] = -1] = \"FillBlock\";\n    /**\n     * Mine an empty block, even if there are executable transactions available to\n     * mine.\n     */\n    Capacity[Capacity[\"Empty\"] = 0] = \"Empty\";\n    /**\n     * Mine a block with a single transaction, or empty if there are no executable\n     * transactions available to mine.\n     */\n    Capacity[Capacity[\"Single\"] = 1] = \"Single\";\n})(Capacity = exports.Capacity || (exports.Capacity = {}));\nconst updateBloom = (blockBloom, bloom) => {\n    let i = 256;\n    while (--i)\n        blockBloom[i] |= bloom[i];\n};\nconst sortByPrice = (values, a, b) => values[a].effectiveGasPrice > values[b].effectiveGasPrice;\nconst refresher = (item, context) => item.updateEffectiveGasPrice(context);\nclass Miner extends emittery_1.default {\n    /*\n     * @param executables - A live Map of pending transactions from the transaction\n     * pool. The miner will update this Map by removing the best transactions\n     * and putting them in new blocks.\n     */\n    constructor(options, executables, vm, createBlock) {\n        super();\n        _Miner_currentlyExecutingPrice.set(this, 0n);\n        _Miner_origins.set(this, new Set());\n        _Miner_pending.set(this, void 0);\n        _Miner_isBusy.set(this, false);\n        _Miner_paused.set(this, false);\n        _Miner_resumer.set(this, void 0);\n        _Miner_currentBlockBaseFeePerGas.set(this, void 0);\n        _Miner_resolver.set(this, void 0);\n        /**\n         * Because step events are expensive, CPU-wise, to create and emit we only do\n         * it conditionally.\n         */\n        _Miner_emitStepEvent.set(this, false);\n        _Miner_executables.set(this, void 0);\n        _Miner_options.set(this, void 0);\n        _Miner_vm.set(this, void 0);\n        _Miner_createBlock.set(this, void 0);\n        // create a Heap that sorts by gasPrice\n        _Miner_priced.set(this, new utils_1.Heap(sortByPrice, refresher));\n        _Miner_mine.set(this, async (block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) => {\n            const { block: lastBlock, transactions } = await __classPrivateFieldGet(this, _Miner_mineTxs, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            // if there are more txs to mine, start mining them without awaiting their\n            // result.\n            if (__classPrivateFieldGet(this, _Miner_pending, \"f\")) {\n                __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n                __classPrivateFieldSet(this, _Miner_pending, false, \"f\");\n                if (!onlyOneBlock && __classPrivateFieldGet(this, _Miner_priced, \"f\").length > 0) {\n                    const nextBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, lastBlock);\n                    await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, nextBlock, maxTransactions);\n                }\n            }\n            return transactions;\n        });\n        _Miner_mineTxs.set(this, async (runtimeBlock, maxTransactions, onlyOneBlock) => {\n            let block;\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            const { pending, inProgress } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const options = __classPrivateFieldGet(this, _Miner_options, \"f\");\n            let keepMining = true;\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const storageKeys = new Map();\n            let blockTransactions;\n            do {\n                keepMining = false;\n                __classPrivateFieldSet(this, _Miner_isBusy, true, \"f\");\n                blockTransactions = [];\n                const transactionsTrie = new trie_1.Trie();\n                const receiptTrie = new trie_1.Trie();\n                // don't mine anything at all if maxTransactions is `0`\n                if (maxTransactions === Capacity.Empty) {\n                    await vm.stateManager.checkpoint();\n                    await vm.stateManager.commit();\n                    const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root(), receiptTrie.root(), utils_1.BUFFER_256_ZERO, vm.stateManager._trie.root(), 0n, // gas used\n                    options.extraData, [], storageKeys);\n                    this.emit(\"block\", finalizedBlockData);\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    return { block: finalizedBlockData.block, transactions: [] };\n                }\n                let numTransactions = 0;\n                let blockGasLeft = options.blockGasLimit.toBigInt();\n                let blockGasUsed = 0n;\n                const blockBloom = Buffer.allocUnsafe(256).fill(0);\n                const promises = [];\n                // Set a block-level checkpoint so our unsaved trie doesn't update the\n                // vm's \"live\" trie.\n                await vm.stateManager.checkpoint();\n                const TraceData = (0, ethereum_utils_1.TraceDataFactory)();\n                // We need to listen for any SSTORE opcodes so we can grab the raw, unhashed version\n                // of the storage key and save it to the db along with it's keccak hashed version of\n                // the storage key. Why you might ask? So we can reference the raw version in\n                // debug_storageRangeAt.\n                const stepListener = (event) => {\n                    if (event.opcode.name === \"SSTORE\") {\n                        const key = TraceData.from(utils_1.Quantity.toBuffer(event.stack[event.stack.length - 1])).toBuffer();\n                        const hashedKey = (0, utils_1.keccak)(key);\n                        storageKeys.set(hashedKey.toString(), { key, hashedKey });\n                    }\n                };\n                vm.evm.events.on(\"step\", stepListener);\n                // Run until we run out of items, or until the inner loop stops us.\n                // we don't call `shift()` here because we will may need to `replace`\n                // this `best` transaction with the next best transaction from the same\n                // origin later.\n                let best;\n                while ((best = priced.peek())) {\n                    const origin = best.from.toString();\n                    if (best.calculateIntrinsicGas() > blockGasLeft) {\n                        // if the current best transaction can't possibly fit in this block\n                        // go ahead and run the next best transaction, ignoring all other\n                        // pending transactions from this account for this block.\n                        //  * We don't replace this \"best\" transaction with another from the\n                        // same account.\n                        //  * We do \"unlock\" this transaction in the transaction pool's `pending`\n                        // queue so it can be replaced, if needed.\n                        best.locked = false;\n                        __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                        continue;\n                    }\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, best.effectiveGasPrice.toBigInt(), \"f\");\n                    // Set a transaction-level checkpoint so we can undo state changes in\n                    // the case where the transaction is rejected by the VM.\n                    await vm.stateManager.checkpoint();\n                    // Set the internal trie's block number (for forking)\n                    vm.stateManager._trie.blockNumber = utils_1.Quantity.from(runtimeBlock.header.number);\n                    const result = await __classPrivateFieldGet(this, _Miner_runTx, \"f\").call(this, best, runtimeBlock, origin, pending);\n                    if (result !== null) {\n                        const gasUsed = result.totalGasSpent;\n                        if (blockGasLeft >= gasUsed) {\n                            // if the transaction will fit in the block, commit it!\n                            await vm.stateManager.commit();\n                            blockTransactions[numTransactions] = best;\n                            blockGasLeft -= gasUsed;\n                            blockGasUsed += gasUsed;\n                            // calculate receipt and tx tries\n                            const txKey = (0, rlp_1.encode)(numTransactions === 0\n                                ? utils_1.BUFFER_EMPTY\n                                : (0, utils_1.uintToBuffer)(numTransactions));\n                            promises.push(transactionsTrie.put(txKey, best.serialized));\n                            const receipt = best.fillFromResult(result, blockGasUsed);\n                            promises.push(receiptTrie.put(txKey, receipt));\n                            // update the block's bloom\n                            updateBloom(blockBloom, result.bloom.bitvector);\n                            numTransactions++;\n                            const pendingOrigin = pending.get(origin);\n                            inProgress.add(best);\n                            best.once(\"finalized\").then(() => {\n                                // it is in the database (or thrown out) so delete it from the\n                                // `inProgress` Set\n                                inProgress.delete(best);\n                            });\n                            // since this transaction was successful, remove it from the \"pending\"\n                            // transaction pool.\n                            const hasMoreFromOrigin = pendingOrigin.removeBest();\n                            if (hasMoreFromOrigin) {\n                                // remove the newest (`best`) tx from this account's pending queue\n                                // as we know we can fit another transaction in the block. Stick\n                                // this tx into our `priced` heap.\n                                keepMining = (0, replace_from_heap_1.default)(priced, pendingOrigin);\n                            }\n                            else {\n                                // since we don't have any more txs from this account, just get the\n                                // next best transaction sorted in our `priced` heap.\n                                keepMining = __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                            }\n                            // if we:\n                            //  * don't have enough gas left for even the smallest of transactions\n                            //  * Or if we've mined enough transactions\n                            // we're done with this block!\n                            // notice: when `maxTransactions` is `-1` (AKA infinite), `numTransactions === maxTransactions`\n                            // will always return false, so this comparison works out fine.\n                            if (blockGasLeft <= ethereum_transaction_1.Params.TRANSACTION_GAS ||\n                                numTransactions === maxTransactions) {\n                                break;\n                            }\n                        }\n                        else {\n                            // didn't fit in the current block\n                            await vm.stateManager.revert();\n                            // unlock the transaction so the transaction pool can reconsider this\n                            // transaction\n                            best.locked = false;\n                            // didn't fit. remove it from the priced transactions without replacing\n                            // it with another from the account. This transaction will have to be\n                            // run again in another block.\n                            keepMining = priced.removeBest();\n                        }\n                    }\n                    else {\n                        // no result means the transaction is an \"always failing tx\", so we\n                        // revert its changes here.\n                        // Note: we don't clean up (`removeBest`, etc) because `runTx`'s\n                        // error handler does the clean up itself.\n                        await vm.stateManager.revert();\n                    }\n                }\n                await Promise.all(promises);\n                await vm.stateManager.commit();\n                vm.evm.events.removeListener(\"step\", stepListener);\n                const finalizedBlockData = runtimeBlock.finalize(transactionsTrie.root(), receiptTrie.root(), blockBloom, vm.stateManager._trie.root(), blockGasUsed, options.extraData, blockTransactions, storageKeys);\n                block = finalizedBlockData.block;\n                this.emit(\"block\", finalizedBlockData);\n                if (onlyOneBlock) {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    break;\n                }\n                else {\n                    __classPrivateFieldSet(this, _Miner_currentlyExecutingPrice, 0n, \"f\");\n                    __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n                    if (priced.length !== 0) {\n                        runtimeBlock = __classPrivateFieldGet(this, _Miner_createBlock, \"f\").call(this, block);\n                        // if baseFeePerGas is undefined, we are pre london hard fork.\n                        // no need to refresh the order of the heap because all Txs only have gasPrice.\n                        if (__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\") !== undefined) {\n                            priced.refresh(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                        }\n                    }\n                    else {\n                        // reset the miner\n                        __classPrivateFieldGet(this, _Miner_reset, \"f\").call(this);\n                    }\n                }\n            } while (keepMining);\n            return { block, transactions: blockTransactions };\n        });\n        _Miner_runTx.set(this, async (tx, block, origin, pending) => {\n            const context = {};\n            const vm = __classPrivateFieldGet(this, _Miner_vm, \"f\");\n            this.emit(\"ganache:vm:tx:before\", { context });\n            // we always listen to the step event even if `#emitStepEvent` is false in\n            // case the user starts listening in the middle of the transaction.\n            const stepListener = (event) => {\n                const logs = (0, console_log_1.maybeGetLogs)(event);\n                if (logs)\n                    this.emit(\"ganache:vm:tx:console.log\", { context, logs });\n                if (!__classPrivateFieldGet(this, _Miner_emitStepEvent, \"f\"))\n                    return;\n                this.emit(\"ganache:vm:tx:step\", (0, provider_events_1.makeStepEvent)(context, event));\n            };\n            vm.evm.events.on(\"step\", stepListener);\n            try {\n                return await vm.runTx({\n                    skipHardForkValidation: true,\n                    tx: tx.toVmTransaction(),\n                    block: block\n                });\n            }\n            catch (err) {\n                const errorMessage = err.message;\n                // We do NOT want to re-run this transaction.\n                // Update the `priced` heap with the next best transaction from this\n                // account\n                const pendingOrigin = pending.get(origin);\n                if (pendingOrigin.removeBest()) {\n                    (0, replace_from_heap_1.default)(__classPrivateFieldGet(this, _Miner_priced, \"f\"), pendingOrigin);\n                }\n                else {\n                    // if there are no more transactions from this origin remove this tx\n                    // from the priced heap and clear out it's origin so it can accept new\n                    // transactions from this origin.\n                    __classPrivateFieldGet(this, _Miner_removeBestAndOrigin, \"f\").call(this, origin);\n                }\n                const e = {\n                    execResult: {\n                        runState: { programCounter: 0 },\n                        exceptionError: { error: errorMessage },\n                        returnValue: utils_1.BUFFER_EMPTY\n                    }\n                };\n                const error = new ethereum_utils_1.RuntimeError(tx.hash, e, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n                tx.finalize(\"rejected\", error);\n                return null;\n            }\n            finally {\n                vm.evm.events.removeListener(\"step\", stepListener);\n                this.emit(\"ganache:vm:tx:after\", { context });\n            }\n        });\n        _Miner_removeBestAndOrigin.set(this, (origin) => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").delete(origin);\n            return __classPrivateFieldGet(this, _Miner_priced, \"f\").removeBest();\n        });\n        _Miner_reset.set(this, () => {\n            __classPrivateFieldGet(this, _Miner_origins, \"f\").clear();\n            // HACK: see: https://github.com/trufflesuite/ganache/issues/3093\n            //\n            //When the priced heap is reset, meaning we're clearing out the heap\n            // and origins list to be set again when the miner is called, loop over\n            // the priced heap transactions and \"unlock\" them (set tx.locked = false)\n            //\n            // The real fix would include fixing the use of locked, as it's\n            // currently overloaded to mean \"is in priced heap\" and also \"is being\n            // mined\".\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            const length = priced.length;\n            const pricedArray = priced.array;\n            for (let i = 0; i < length; i++) {\n                const bestFromOrigin = pricedArray[i];\n                bestFromOrigin.locked = false;\n            }\n            priced.clear();\n            __classPrivateFieldSet(this, _Miner_isBusy, false, \"f\");\n        });\n        /**\n         * Adds one transaction from each origin into the \"priced\" heap, which\n         * sorts each tx by gasPrice (high to low)\n         */\n        _Miner_setPricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const origin = next.from.toString();\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        /**\n         * Updates the \"priced\" heap with transactions from origins it doesn't yet\n         * contain.\n         */\n        _Miner_updatePricedHeap.set(this, () => {\n            const { pending } = __classPrivateFieldGet(this, _Miner_executables, \"f\");\n            const origins = __classPrivateFieldGet(this, _Miner_origins, \"f\");\n            const priced = __classPrivateFieldGet(this, _Miner_priced, \"f\");\n            // Note: the `pending` Map passed here is \"live\", meaning it is constantly\n            // being updated by the `transactionPool`. This allows us to begin\n            // processing a block with the _current_ pending transactions, and while\n            // that is processing, to receive new transactions, updating our `priced`\n            // heap with these new pending transactions.\n            for (let mapping of pending) {\n                const heap = mapping[1];\n                const next = heap.peek();\n                if (next && !next.locked) {\n                    const price = next.effectiveGasPrice.toBigInt();\n                    if (__classPrivateFieldGet(this, _Miner_currentlyExecutingPrice, \"f\") > price) {\n                        // don't insert a transaction into the miner's `priced` heap\n                        // if it will be better than its last\n                        continue;\n                    }\n                    const origin = next.from.toString();\n                    if (origins.has(origin)) {\n                        // don't insert a transaction into the miner's `priced` heap if it\n                        // has already queued up transactions for that origin\n                        continue;\n                    }\n                    origins.add(origin);\n                    next.updateEffectiveGasPrice(__classPrivateFieldGet(this, _Miner_currentBlockBaseFeePerGas, \"f\"));\n                    priced.push(next);\n                    next.locked = true;\n                }\n            }\n        });\n        __classPrivateFieldSet(this, _Miner_vm, vm, \"f\");\n        __classPrivateFieldSet(this, _Miner_options, options, \"f\");\n        __classPrivateFieldSet(this, _Miner_executables, executables, \"f\");\n        __classPrivateFieldSet(this, _Miner_createBlock, (previousBlock) => {\n            const newBlock = createBlock(previousBlock);\n            __classPrivateFieldSet(this, _Miner_currentBlockBaseFeePerGas, newBlock.header.baseFeePerGas, \"f\");\n            return newBlock;\n        }, \"f\");\n        // initialize the heap with an empty array\n        __classPrivateFieldGet(this, _Miner_priced, \"f\").init([]);\n    }\n    async pause() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            __classPrivateFieldSet(this, _Miner_paused, true, \"f\");\n            __classPrivateFieldSet(this, _Miner_resumer, new Promise(resolve => {\n                __classPrivateFieldSet(this, _Miner_resolver, resolve, \"f\");\n            }), \"f\");\n        }\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            await this.once(\"idle\");\n        }\n    }\n    resume() {\n        if (!__classPrivateFieldGet(this, _Miner_paused, \"f\"))\n            return;\n        __classPrivateFieldSet(this, _Miner_paused, false, \"f\");\n        __classPrivateFieldGet(this, _Miner_resolver, \"f\").call(this);\n    }\n    /**\n     * @param maxTransactions: - maximum number of transactions per block. If `-1`,\n     * unlimited.\n     * @param onlyOneBlock: - set to `true` if only 1 block should be mined.\n     *\n     * @returns the transactions mined in the _first_ block\n     */\n    async mine(block, maxTransactions = Capacity.FillBlock, onlyOneBlock = false) {\n        if (__classPrivateFieldGet(this, _Miner_paused, \"f\")) {\n            await __classPrivateFieldGet(this, _Miner_resumer, \"f\");\n        }\n        // only allow mining a single block at a time (per miner)\n        if (__classPrivateFieldGet(this, _Miner_isBusy, \"f\")) {\n            // if we are currently mining a block, set the `pending` property\n            // so the miner knows it can immediately start mining another block once\n            // it is done with its current work.\n            __classPrivateFieldSet(this, _Miner_pending, true, \"f\");\n            __classPrivateFieldGet(this, _Miner_updatePricedHeap, \"f\").call(this);\n            return;\n        }\n        else {\n            __classPrivateFieldSet(this, _Miner_currentBlockBaseFeePerGas, block.header.baseFeePerGas, \"f\");\n            __classPrivateFieldGet(this, _Miner_setPricedHeap, \"f\").call(this);\n            const result = await __classPrivateFieldGet(this, _Miner_mine, \"f\").call(this, block, maxTransactions, onlyOneBlock);\n            this.emit(\"idle\");\n            return result;\n        }\n    }\n    toggleStepEvent(enable) {\n        __classPrivateFieldSet(this, _Miner_emitStepEvent, enable, \"f\");\n    }\n}\nexports.default = Miner;\n_Miner_currentlyExecutingPrice = new WeakMap(), _Miner_origins = new WeakMap(), _Miner_pending = new WeakMap(), _Miner_isBusy = new WeakMap(), _Miner_paused = new WeakMap(), _Miner_resumer = new WeakMap(), _Miner_currentBlockBaseFeePerGas = new WeakMap(), _Miner_resolver = new WeakMap(), _Miner_emitStepEvent = new WeakMap(), _Miner_executables = new WeakMap(), _Miner_options = new WeakMap(), _Miner_vm = new WeakMap(), _Miner_createBlock = new WeakMap(), _Miner_priced = new WeakMap(), _Miner_mine = new WeakMap(), _Miner_mineTxs = new WeakMap(), _Miner_runTx = new WeakMap(), _Miner_removeBestAndOrigin = new WeakMap(), _Miner_reset = new WeakMap(), _Miner_setPricedHeap = new WeakMap(), _Miner_updatePricedHeap = new WeakMap();\n//# sourceMappingURL=miner.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction replaceFromHeap(priced, source) {\n    // get the next best for this account, removing from the source Heap:\n    const next = source.peek();\n    if (next) {\n        // remove the current best priced transaction from this account and replace\n        // it with the account's next lowest nonce transaction:\n        priced.replaceBest(next);\n        next.locked = true;\n        return true;\n    }\n    else {\n        // since we don't have a next, just remove this item from priced\n        return priced.removeBest();\n    }\n}\nexports.default = replaceFromHeap;\n//# sourceMappingURL=replace-from-heap.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.makeStepEvent = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nfunction normalizeEvent(event) {\n    const { account, memory: originalMemory, opcode } = event;\n    const memoryLength = originalMemory.length;\n    // We need to copy some buffers so the user can't mutate them on us:\n    // Instead of making a bunch of individual buffers, we just make 1 and then\n    // fill it in as needed.\n    const sharedBuffer = Buffer.allocUnsafe(104 + memoryLength);\n    account.storageRoot.copy(sharedBuffer, 0, 0, 32); // always 32 bytes\n    account.codeHash.copy(sharedBuffer, 32, 0, 32); // always 32 bytes\n    event.address.buf.copy(sharedBuffer, 64, 0, 20); // always 20 bytes\n    event.codeAddress.buf.copy(sharedBuffer, 84, 0, 20); // always 20 bytes\n    const stateRoot = sharedBuffer.slice(0, 32);\n    const codeHash = sharedBuffer.slice(32, 64);\n    const address = sharedBuffer.slice(64, 84);\n    const codeAddress = sharedBuffer.slice(84, 104);\n    let memory;\n    if (memoryLength !== 0) {\n        originalMemory.copy(sharedBuffer, 104, 0, memoryLength);\n        memory = sharedBuffer.slice(104, 104 + memoryLength);\n    }\n    else {\n        memory = utils_1.BUFFER_ZERO;\n    }\n    return {\n        account: {\n            nonce: account.nonce,\n            balance: account.balance,\n            stateRoot,\n            codeHash\n        },\n        address,\n        codeAddress,\n        depth: BigInt(event.depth),\n        gasLeft: event.gasLeft,\n        gasRefund: event.gasRefund,\n        memory,\n        memoryWordCount: event.memoryWordCount,\n        opcode: {\n            name: opcode.name,\n            fee: opcode.fee\n        },\n        pc: BigInt(event.pc),\n        returnStack: event.returnStack.map(r => r),\n        stack: event.stack.map(s => s)\n    };\n}\nfunction makeStepEvent(context, event) {\n    return {\n        context,\n        data: normalizeEvent(event)\n    };\n}\nexports.makeStepEvent = makeStepEvent;\n//# sourceMappingURL=provider-events.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _EthereumProvider_options, _EthereumProvider_api, _EthereumProvider_wallet, _EthereumProvider_executor, _EthereumProvider_blockchain, _EthereumProvider_send, _EthereumProvider_logRequest, _EthereumProvider_legacySendPayloads, _EthereumProvider_legacySendPayload;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProvider = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst api_1 = __importDefault(require(\"./api\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst lodash_clonedeep_1 = __importDefault(require(\"lodash.clonedeep\"));\nconst wallet_1 = __importDefault(require(\"./wallet\"));\nconst blockchain_1 = __importDefault(require(\"./blockchain\"));\nconst fork_1 = require(\"./forking/fork\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nfunction parseCoinbase(coinbase, initialAccounts) {\n    switch (typeof coinbase) {\n        case \"object\":\n            return coinbase;\n        case \"number\":\n            const account = initialAccounts[coinbase];\n            if (account) {\n                return account.address;\n            }\n            else {\n                throw new Error(`invalid coinbase address index: ${coinbase}`);\n            }\n        case \"string\":\n            return ethereum_address_1.Address.from(coinbase);\n        default: {\n            throw new Error(`coinbase address must be string or number, received: ${coinbase}`);\n        }\n    }\n}\n/**\n * Detects when a ganache:vm:tx:step listener is active and signals the onChange\n * function when the status changes\n * @param provider -\n * @param onChange -\n */\nfunction hookEventSystem(provider, onChange) {\n    let listenerCount = 0;\n    provider.on(emittery_1.default.listenerAdded, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            if (listenerCount === 0) {\n                onChange(true);\n            }\n            listenerCount++;\n        }\n    });\n    provider.on(emittery_1.default.listenerRemoved, ({ eventName }) => {\n        if (eventName === \"ganache:vm:tx:step\" || eventName === undefined) {\n            listenerCount--;\n            if (listenerCount === 0) {\n                onChange(false);\n            }\n        }\n    });\n}\nclass EthereumProvider extends emittery_1.default {\n    constructor(options = {}, executor) {\n        super();\n        _EthereumProvider_options.set(this, void 0);\n        _EthereumProvider_api.set(this, void 0);\n        _EthereumProvider_wallet.set(this, void 0);\n        _EthereumProvider_executor.set(this, void 0);\n        _EthereumProvider_blockchain.set(this, void 0);\n        /**\n         * Remove an event subscription\n         */\n        this.removeListener = this.off;\n        _EthereumProvider_send.set(this, (arg1, arg2) => {\n            let method;\n            let params;\n            let response;\n            if (typeof arg1 === \"string\") {\n                // this signature is (not) non-standard and is only a ganache thing!!!\n                // we should probably remove it, but I really like it so I haven't yet.\n                method = arg1;\n                params = arg2;\n                response = this.request({ method, params });\n            }\n            else if (typeof arg2 === \"function\") {\n                // handle backward compatibility with callback-style ganache-core\n                if (Array.isArray(arg1)) {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayloads, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n                else {\n                    const callback = arg2;\n                    __classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\").call(this, arg1).then(({ error, result }) => {\n                        callback(error, result);\n                    });\n                }\n            }\n            else {\n                throw new Error(\"No callback provided to provider's send function. As of web3 1.0, provider.send \" +\n                    \"is no longer synchronous and must be passed a callback as its final argument.\");\n            }\n            return response;\n        });\n        _EthereumProvider_logRequest.set(this, (method, params) => {\n            const options = __classPrivateFieldGet(this, _EthereumProvider_options, \"f\");\n            if (options.logging.verbose) {\n                options.logging.logger.log(`   >  ${method}: ${params == null\n                    ? params\n                    : JSON.stringify(params, null, 2).split(\"\\n\").join(\"\\n   > \")}`);\n            }\n            else {\n                options.logging.logger.log(method);\n            }\n        });\n        /**\n         * Disconnect the provider instance. This will cause the underlying blockchain to be stopped, and any pending\n         * tasks to be rejected. Emits a `disconnect` event once successfully disconnected.\n         * @returns Fullfills with `undefined` once the provider has been disconnected.\n         */\n        this.disconnect = async () => {\n            // executor.stop() will stop accepting new tasks, but will not wait for inflight tasks. These may reject with\n            // (unhelpful) internal errors. See https://github.com/trufflesuite/ganache/issues/3499\n            __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").stop();\n            await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").stop();\n            __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").end();\n            this.emit(\"disconnect\");\n        };\n        //#region legacy\n        _EthereumProvider_legacySendPayloads.set(this, (payloads) => {\n            return Promise.all(payloads.map(__classPrivateFieldGet(this, _EthereumProvider_legacySendPayload, \"f\"))).then(results => {\n                let mainError = null;\n                const responses = [];\n                results.forEach(({ error, result }, i) => {\n                    responses.push(result);\n                    if (error) {\n                        if (mainError == null) {\n                            mainError = new Error(\"Batch error:\");\n                        }\n                        mainError.errors[i] = error;\n                    }\n                });\n                return { error: mainError, result: responses };\n            });\n        });\n        _EthereumProvider_legacySendPayload.set(this, async (payload) => {\n            const method = payload.method;\n            const params = payload.params;\n            try {\n                const result = await this.request({ method, params });\n                return {\n                    error: null,\n                    result: (0, utils_1.makeResponse)(payload.id, JSON.parse(JSON.stringify(result)))\n                };\n            }\n            catch (error) {\n                let result;\n                // In order to provide `vmErrorsOnRPCResponse`, the `error` might have\n                // a `result` property that we need to move to the result field. Yes,\n                // it's super weird behavior!\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    result = error.result;\n                    delete error.result;\n                }\n                return { error, result: (0, utils_1.makeError)(payload.id, error, result) };\n            }\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_executor, executor, \"f\");\n        const providerOptions = (__classPrivateFieldSet(this, _EthereumProvider_options, ethereum_options_1.EthereumOptionsConfig.normalize(options), \"f\"));\n        const wallet = (__classPrivateFieldSet(this, _EthereumProvider_wallet, new wallet_1.default(providerOptions.wallet, providerOptions.logging), \"f\"));\n        const accounts = wallet.initialAccounts;\n        const fork = providerOptions.fork.url ||\n            providerOptions.fork.provider ||\n            providerOptions.fork.network;\n        const fallback = fork ? new fork_1.Fork(providerOptions, accounts) : null;\n        const coinbase = parseCoinbase(providerOptions.miner.coinbase, accounts);\n        const blockchain = new blockchain_1.default(providerOptions, coinbase, fallback);\n        __classPrivateFieldSet(this, _EthereumProvider_blockchain, blockchain, \"f\");\n        blockchain.on(\"ganache:vm:tx:before\", event => {\n            this.emit(\"ganache:vm:tx:before\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:step\", event => {\n            this.emit(\"ganache:vm:tx:step\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:after\", event => {\n            this.emit(\"ganache:vm:tx:after\", event);\n        });\n        blockchain.on(\"ganache:vm:tx:console.log\", event => {\n            this.emit(\"ganache:vm:tx:console.log\", event);\n        });\n        hookEventSystem(this, (enable) => {\n            blockchain.toggleStepEvent(enable);\n        });\n        __classPrivateFieldSet(this, _EthereumProvider_api, new api_1.default(providerOptions, wallet, blockchain), \"f\");\n    }\n    async initialize() {\n        await __classPrivateFieldGet(this, _EthereumProvider_blockchain, \"f\").initialize(__classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").initialAccounts);\n        this.emit(\"connect\");\n    }\n    /**\n     * Returns the options, including defaults and generated, used to start Ganache.\n     */\n    getOptions() {\n        return (0, lodash_clonedeep_1.default)(__classPrivateFieldGet(this, _EthereumProvider_options, \"f\"));\n    }\n    /**\n     * Returns the unlocked accounts\n     */\n    getInitialAccounts() {\n        const accounts = {};\n        const wallet = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\");\n        const unlockedAccounts = __classPrivateFieldGet(this, _EthereumProvider_wallet, \"f\").unlockedAccounts;\n        wallet.initialAccounts.forEach(account => {\n            const address = account.address.toString();\n            accounts[address] = {\n                secretKey: account.privateKey.toString(),\n                balance: account.balance.toBigInt(),\n                unlocked: unlockedAccounts.has(address)\n            };\n        });\n        return accounts;\n    }\n    send(arg1, arg2) {\n        return __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    sendAsync(arg1, arg2) {\n        __classPrivateFieldGet(this, _EthereumProvider_send, \"f\").call(this, arg1, arg2);\n    }\n    /**\n     * EIP-1193 style request method\n     * @param args -\n     * @returns A Promise that resolves with the method's result or rejects with a CodedError\n     * @EIP [1193](https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1193.md)\n     */\n    async request(args) {\n        const rawResult = await this._requestRaw(args);\n        const value = await rawResult.value;\n        return JSON.parse(JSON.stringify(value));\n    }\n    /**\n     * INTERNAL. Used when the caller wants to access the original `PromiEvent`,\n     * which would otherwise be flattened into a regular Promise through the\n     * Promise chain.\n     * @param request - the request\n     */\n    async _requestRaw({ method, params }) {\n        __classPrivateFieldGet(this, _EthereumProvider_logRequest, \"f\").call(this, method, params);\n        const result = await __classPrivateFieldGet(this, _EthereumProvider_executor, \"f\").execute(__classPrivateFieldGet(this, _EthereumProvider_api, \"f\"), method, params);\n        const promise = result.value;\n        if (promise instanceof utils_1.PromiEvent) {\n            promise.on(\"message\", data => {\n                const normalizedData = JSON.parse(JSON.stringify(data));\n                // EIP-1193\n                this.emit(\"message\", normalizedData);\n                // legacy\n                this.emit(\"data\", {\n                    jsonrpc: \"2.0\",\n                    method: \"eth_subscription\",\n                    params: normalizedData.data\n                });\n            });\n        }\n        const value = promise.catch((error) => {\n            if (__classPrivateFieldGet(this, _EthereumProvider_options, \"f\").chain.vmErrorsOnRPCResponse) {\n                if ((0, utils_1.hasOwn)(error, \"result\")) {\n                    // stringify the result here\n                    // TODO: not sure why the stringification is even needed.\n                    error.result = JSON.parse(JSON.stringify(error.result));\n                }\n            }\n            // then rethrow\n            throw error;\n        });\n        return { value: value };\n    }\n}\nexports.EthereumProvider = EthereumProvider;\n_EthereumProvider_options = new WeakMap(), _EthereumProvider_api = new WeakMap(), _EthereumProvider_wallet = new WeakMap(), _EthereumProvider_executor = new WeakMap(), _EthereumProvider_blockchain = new WeakMap(), _EthereumProvider_send = new WeakMap(), _EthereumProvider_logRequest = new WeakMap(), _EthereumProvider_legacySendPayloads = new WeakMap(), _EthereumProvider_legacySendPayload = new WeakMap();\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GanacheStateManager = void 0;\nconst statemanager_1 = require(\"@ethereumjs/statemanager\");\nclass GanacheStateManager extends statemanager_1.DefaultStateManager {\n    async getStorageTrie(address) {\n        return await this._getStorageTrie({ buf: address });\n    }\n}\nexports.GanacheStateManager = GanacheStateManager;\n//# sourceMappingURL=state-manager.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _TransactionPool_options, _TransactionPool_priceBump, _TransactionPool_blockchain, _TransactionPool_accountPromises, _TransactionPool_validateTransaction;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TriageOption = void 0;\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst ethereum_block_1 = require(\"@ganache/ethereum-block\");\n/**\n * Checks if the `replacer` is eligible to replace the `replacee` transaction\n * in the transaction pool queue. Replacement eligibility requires that\n * the transactions have the same nonce and the `replacer` has a gas price\n * that is `gasPrice * priceBump` better than our `replacee`.\n * @param replacee -\n * @param replaceeNonce -\n * @param replacerNonce -\n * @param replacerGasPrice -\n * @param priceBump -\n */\nfunction shouldReplace(replacee, replacerNonce, replacer, priceBump) {\n    const replaceeNonce = replacee.nonce.toBigInt();\n    // if the nonces differ, our replacer is not eligible to replace\n    if (replaceeNonce !== replacerNonce) {\n        return false;\n    }\n    // if the transaction being replaced is in the middle of being mined, we can't\n    // replpace it so let's back out early\n    if (replacee.locked) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.TRANSACTION_LOCKED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    const replacerTip = \"maxPriorityFeePerGas\" in replacer\n        ? replacer.maxPriorityFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replacerMaxFee = \"maxFeePerGas\" in replacer\n        ? replacer.maxFeePerGas.toBigInt()\n        : replacer.effectiveGasPrice.toBigInt();\n    const replaceeTip = \"maxPriorityFeePerGas\" in replacee\n        ? replacee.maxPriorityFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const replaceeMaxFee = \"maxFeePerGas\" in replacee\n        ? replacee.maxFeePerGas.toBigInt()\n        : replacee.effectiveGasPrice.toBigInt();\n    const tipPremium = replaceeTip + (replaceeTip * priceBump) / 100n;\n    const maxFeePremium = replaceeMaxFee + (replaceeMaxFee * priceBump) / 100n;\n    // if both the tip and max fee of the new transaction aren't\n    // `priceBumpPercent` more than the existing transaction, this transaction is\n    // underpriced\n    if (replacerTip < tipPremium || replacerMaxFee < maxFeePremium) {\n        throw new ethereum_utils_1.CodedError(ethereum_utils_1.UNDERPRICED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n    }\n    else {\n        return true;\n    }\n}\nfunction byNonce(values, a, b) {\n    return ((values[b].nonce.toBigInt() || 0n) > (values[a].nonce.toBigInt() || 0n));\n}\n/**\n * Used to track a transaction's placement in the transaction pool based off\n * of the its nonce.\n */\nvar TriageOption;\n(function (TriageOption) {\n    /**\n     * Default value. A tx will be added to the future queue if it is not yet\n     * executable based off of the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"FutureQueue\"] = 0] = \"FutureQueue\";\n    /**\n     * The transaction is currently executable based off the transaction's nonce.\n     */\n    TriageOption[TriageOption[\"Executable\"] = 1] = \"Executable\";\n    /**\n     * The transaction is currently executable, has the same nonce as a pending\n     * transaction of the same origin, and has a gas price that is high enough to\n     * replace the currently pending transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesPendingExecutable\"] = 2] = \"ReplacesPendingExecutable\";\n    /**\n     * The transaction is not currently executable but has the same nonce as a\n     * future queued transaction of the same origin and has a gas price that is\n     * high enough to replace the future queued transaction.\n     */\n    TriageOption[TriageOption[\"ReplacesFutureTransaction\"] = 3] = \"ReplacesFutureTransaction\";\n})(TriageOption = exports.TriageOption || (exports.TriageOption = {}));\nclass TransactionPool extends emittery_1.default {\n    constructor(options, blockchain, origins = new Map()) {\n        super();\n        _TransactionPool_options.set(this, void 0);\n        /**\n         * Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\n         */\n        _TransactionPool_priceBump.set(this, void 0);\n        _TransactionPool_blockchain.set(this, void 0);\n        this.executables = {\n            inProgress: new Set(),\n            pending: new Map()\n        };\n        _TransactionPool_accountPromises.set(this, new Map());\n        this.drain = () => {\n            // notify listeners (the blockchain, then the miner, eventually) that we\n            // have executable transactions ready\n            this.emit(\"drain\");\n        };\n        _TransactionPool_validateTransaction.set(this, (transaction) => {\n            // Check the transaction doesn't exceed the current block limit gas.\n            if (transaction.gas > __classPrivateFieldGet(this, _TransactionPool_options, \"f\").miner.blockGasLimit) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.GAS_LIMIT, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            // Should supply enough intrinsic gas\n            const gas = transaction.calculateIntrinsicGas();\n            if (gas === -1n || transaction.gas.toBigInt() < gas) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.INTRINSIC_GAS_TOO_LOW, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            if (transaction.to == null &&\n                transaction.data &&\n                __classPrivateFieldGet(this, _TransactionPool_options, \"f\").chain.allowUnlimitedInitCodeSize === false &&\n                __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").common.isActivatedEIP(3860) &&\n                // this is contract creation transaction and it is subject to EIP-3860\n                // which limits the size of initcode to 49152\n                transaction.data.valueOf().length > 49152) {\n                return new ethereum_utils_1.CodedError(ethereum_utils_1.INITCODE_TOO_LARGE, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            return null;\n        });\n        __classPrivateFieldSet(this, _TransactionPool_blockchain, blockchain, \"f\");\n        __classPrivateFieldSet(this, _TransactionPool_options, options, \"f\");\n        this.origins = origins;\n        __classPrivateFieldSet(this, _TransactionPool_priceBump, options.miner.priceBump, \"f\");\n    }\n    /**\n     * Inserts a transaction into the pending queue, if executable, or future pool\n     * if not.\n     *\n     * @param transaction -\n     * @param secretKey -\n     * @returns data that can be used to drain the queue\n     */\n    async prepareTransaction(transaction, secretKey) {\n        let err;\n        err = __classPrivateFieldGet(this, _TransactionPool_validateTransaction, \"f\").call(this, transaction);\n        if (err != null) {\n            throw err;\n        }\n        const from = transaction.from;\n        let txNonce;\n        if (!transaction.nonce.isNull()) {\n            txNonce = transaction.nonce.toBigInt();\n        }\n        const origin = from.toString();\n        // We await the `transactorNoncePromise` async request to ensure we process\n        // transactions in FIFO order *by account*. We look up accounts because\n        // ganache fills in missing nonces automatically, and we need to do it in\n        // order.\n        // The trick here is that we might actually get the next nonce from the\n        // account's pending executable transactions, not the account...\n        // But another transaction might currently be getting the nonce from the\n        // account, if it is, we need to wait for it to be done doing that. Hence:\n        let transactorPromise = __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").get(origin);\n        if (transactorPromise) {\n            await transactorPromise;\n        }\n        // if the user called sendTransaction or sendRawTransaction, effectiveGasPrice\n        // hasn't been set yet on the tx. calculating the effectiveGasPrice requires\n        // the block context, so we need to set it outside of the transaction. this\n        // value is updated in the miner as we're more sure of what block the tx will\n        // actually go on, but we still need to set it here to check for valid\n        // transaction replacements of same origin/nonce transactions\n        if (!transaction.effectiveGasPrice &&\n            __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").common.isActivatedEIP(1559)) {\n            const baseFeePerGas = ethereum_block_1.Block.calcNextBaseFee(__classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").blocks.latest);\n            transaction.updateEffectiveGasPrice(baseFeePerGas);\n        }\n        // we should _probably_ cache `highestNonce`, but it's actually a really hard thing to cache as the current highest\n        // nonce might be invalidated (like if the sender doesn't have enough funds), so we'd have to go back to the previous\n        // highest nonce... but what if that previous highest nonce was also invalidated?! we have to go back to the... you\n        // get the picture.\n        // So... we currently do things sub-optimally:\n        // if we currently have txs in `executableOriginTransactions`, we iterate over them to find the highest nonce\n        // and use that. Otherwise, we just fetch it from the database.\n        // Beware! There might still be race conditions here:\n        //  * if the highest tx executes, which causes it to be removed from the `executableOriginTransactions` heap,\n        // then a new tx comes in _before_ the block is persisted to the database, the nonce might be of the second\n        // tx would be too low.\n        //  * rough idea for a fix: transactions have a `finalize` method that is called _after_ the tx is saved. Maybe\n        // when tx's are executed their nonce is moved to a `highNonceByOrigin` map? We'd check this map in addition to the\n        // `executableOriginTransactions` map, always taking the highest of the two.\n        let highestNonce = 0n;\n        if (!transactorPromise) {\n            transactorPromise = __classPrivateFieldGet(this, _TransactionPool_blockchain, \"f\").accounts.getNonceAndBalance(from);\n            __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").set(origin, transactorPromise);\n            transactorPromise.then(() => {\n                __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").delete(origin);\n            });\n        }\n        const transactor = await transactorPromise;\n        const cost = transaction.gas.toBigInt() * transaction.maxGasPrice().toBigInt() +\n            transaction.value.toBigInt();\n        if (transactor.balance.toBigInt() < cost) {\n            throw new ethereum_utils_1.CodedError(ethereum_utils_1.INSUFFICIENT_FUNDS, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED);\n        }\n        const origins = this.origins;\n        const queuedOriginTransactions = origins.get(origin);\n        let transactionPlacement = TriageOption.FutureQueue;\n        const executables = this.executables.pending;\n        let executableOriginTransactions = executables.get(origin);\n        const priceBump = __classPrivateFieldGet(this, _TransactionPool_priceBump, \"f\");\n        let length;\n        if (executableOriginTransactions &&\n            (length = executableOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // executables queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const pendingArray = executableOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const pendingTx = pendingArray[i];\n                if (shouldReplace(pendingTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    pendingArray[i] = transaction;\n                    // we don't want to mark this transaction as \"executable\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesPendingExecutable;\n                    pendingTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n                // track the highest nonce for all transactions pending from this\n                // origin. If this transaction can't be used as a replacement, it will\n                // use this next highest nonce.\n                const pendingTxNonce = pendingTx.nonce.toBigInt();\n                if (pendingTxNonce > highestNonce)\n                    highestNonce = pendingTxNonce;\n            }\n            if (txNonce === void 0) {\n                // if we aren't signed and don't have a transactionNonce yet set it now\n                txNonce = highestNonce + 1n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce === highestNonce + 1n) {\n                // if our transaction's nonce is 1 higher than the last transaction in the\n                // origin's heap we are executable.\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        else {\n            // since we don't have any executable transactions at the moment, we need\n            // to find our nonce from the account itself...\n            const transactorNonce = transactor.nonce.toBigInt();\n            if (txNonce === void 0) {\n                // if we don't have a transactionNonce, just use the account's next\n                // nonce and mark as executable\n                txNonce = transactorNonce ? transactorNonce : 0n;\n                transaction.nonce = utils_2.Quantity.from(txNonce);\n                transactionPlacement = TriageOption.Executable;\n            }\n            else if (txNonce < transactorNonce) {\n                // it's an error if the transaction's nonce is <= the persisted nonce\n                throw new ethereum_utils_1.CodedError(`the tx doesn't have the correct nonce. account has nonce of: ${transactorNonce} tx has nonce of: ${txNonce}`, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n            }\n            else if (txNonce === transactorNonce) {\n                transactionPlacement = TriageOption.Executable;\n            }\n        }\n        // we have future transactions for this origin, this transaction is not yet\n        // executable, and this transaction is not replacing a previously queued/\n        // executable transaction, then this is potentially eligible to replace a\n        // future transaction\n        if (queuedOriginTransactions &&\n            transactionPlacement !== TriageOption.Executable &&\n            transactionPlacement !== TriageOption.ReplacesPendingExecutable &&\n            (length = queuedOriginTransactions.length)) {\n            // check if a transaction with the same nonce is in the origin's\n            // future queue already. Replace the matching transaction or throw this\n            // new transaction away as necessary.\n            const queuedArray = queuedOriginTransactions.array;\n            // Notice: we're iterating over the raw heap array, which isn't\n            // necessarily sorted\n            for (let i = 0; i < length; i++) {\n                const queuedTx = queuedArray[i];\n                if (shouldReplace(queuedTx, txNonce, transaction, priceBump)) {\n                    // do an in-place replace without triggering a re-sort because we\n                    // already know where this transaction should go in this \"byNonce\"\n                    // heap.\n                    queuedArray[i] = transaction;\n                    // we don't want to mark this transaction as \"FutureQueue\" and thus\n                    // have it added to the pool again. so use this flag to skip\n                    // a re-queue.\n                    transactionPlacement = TriageOption.ReplacesFutureTransaction;\n                    queuedTx.finalize(\"rejected\", new ethereum_utils_1.CodedError(ethereum_utils_1.REPLACED, utils_2.JsonRpcErrorCode.TRANSACTION_REJECTED));\n                    break;\n                }\n            }\n        }\n        // now that we know we have a transaction nonce we can sign the transaction\n        // (if we have the secret key)\n        if (secretKey) {\n            transaction.signAndHash(secretKey.toBuffer());\n        }\n        switch (transactionPlacement) {\n            case TriageOption.Executable:\n                // if it is executable add it to the executables queue\n                if (executableOriginTransactions) {\n                    executableOriginTransactions.push(transaction);\n                }\n                else {\n                    // if we don't yet have an executables queue for this origin make one now\n                    executableOriginTransactions = utils_1.Heap.from(transaction, byNonce);\n                    executables.set(origin, executableOriginTransactions);\n                }\n                // Now we need to drain any queued transactions that were previously\n                // not executable due to nonce gaps into the origin's queue...\n                if (queuedOriginTransactions) {\n                    let nextExpectedNonce = txNonce + 1n;\n                    while (true) {\n                        const nextTx = queuedOriginTransactions.peek();\n                        const nextTxNonce = nextTx.nonce.toBigInt() || 0n;\n                        if (nextTxNonce !== nextExpectedNonce) {\n                            break;\n                        }\n                        // we've got a an executable nonce! Put it in the executables queue.\n                        executableOriginTransactions.push(nextTx);\n                        // And then remove this transaction from its origin's queue\n                        if (!queuedOriginTransactions.removeBest()) {\n                            // removeBest() returns `false` when there are no more items after\n                            // the removed item. Let's do some cleanup when that happens.\n                            origins.delete(origin);\n                            break;\n                        }\n                        nextExpectedNonce += 1n;\n                    }\n                }\n                return true;\n            case TriageOption.FutureQueue:\n                // otherwise, put it in the future queue\n                if (queuedOriginTransactions) {\n                    queuedOriginTransactions.push(transaction);\n                }\n                else {\n                    origins.set(origin, utils_1.Heap.from(transaction, byNonce));\n                }\n                return false;\n            case TriageOption.ReplacesPendingExecutable:\n                // we've replaced the best transaction from this origin for this nonce,\n                // and it is executable\n                return true;\n            case TriageOption.ReplacesFutureTransaction:\n                // we've replaced the best transaction from this origin for a future\n                // nonce, so this one isn't executable\n                return false;\n        }\n    }\n    clear() {\n        this.origins.clear();\n        __classPrivateFieldGet(this, _TransactionPool_accountPromises, \"f\").clear();\n        this.executables.pending.clear();\n    }\n    /**\n     * Returns the transaction matching the given hash.\n     *\n     * This isn't the fastest thing... but querying for pending transactions is\n     * likely rare, so leaving this slow so other code paths can be faster might\n     * be okay.\n     *\n     * @param transactionHash -\n     */\n    find(transactionHash) {\n        const { pending, inProgress } = this.executables;\n        // first search pending transactions\n        for (let [_, transactions] of this.origins) {\n            if (transactions === undefined)\n                continue;\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // then transactions eligible for execution\n        for (let [_, transactions] of pending) {\n            const arr = transactions.array;\n            for (let i = 0; i < transactions.length; i++) {\n                const tx = arr[i];\n                if (tx.hash.toBuffer().equals(transactionHash)) {\n                    return tx;\n                }\n            }\n        }\n        // and finally transactions that have just been processed, but not yet saved\n        for (let tx of inProgress) {\n            if (tx.hash.toBuffer().equals(transactionHash)) {\n                return tx;\n            }\n        }\n        return null;\n    }\n}\nexports.default = TransactionPool;\n_TransactionPool_options = new WeakMap(), _TransactionPool_priceBump = new WeakMap(), _TransactionPool_blockchain = new WeakMap(), _TransactionPool_accountPromises = new WeakMap(), _TransactionPool_validateTransaction = new WeakMap();\n//# sourceMappingURL=transaction-pool.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TrieDB = void 0;\nconst subleveldown_1 = __importDefault(require(\"subleveldown\"));\nconst ENCODING_OPTS = { keyEncoding: \"binary\", valueEncoding: \"binary\" };\n/**\n * `@ethereumjs/trie` requires that any database passed to it implements a `DB`.\n * The `DB` interface defines the minimum set of database access methods that\n * ethereumjs needs internally. We implement that interface in `TrieDB`, as well\n * as a few other methods that we use in Ganache internally.\n */\nclass TrieDB {\n    constructor(db) {\n        this._db = db;\n    }\n    async get(key) {\n        let value = null;\n        try {\n            value = await this._db.get(key, ENCODING_OPTS);\n        }\n        catch (error) {\n            if (error.notFound) {\n                // not found, returning null\n            }\n            else {\n                throw error;\n            }\n        }\n        return value;\n    }\n    async put(key, val) {\n        await this._db.put(key, val, ENCODING_OPTS);\n    }\n    async del(key) {\n        await this._db.del(key, ENCODING_OPTS);\n    }\n    async batch(opStack) {\n        await this._db.batch(opStack, ENCODING_OPTS);\n    }\n    copy() {\n        return new TrieDB(this._db);\n    }\n    async close() {\n        await this._db.close();\n    }\n    sublevel(prefix, options) {\n        return (0, subleveldown_1.default)(this._db, prefix, options);\n    }\n    createReadStream(options) {\n        return this._db.createReadStream(options);\n    }\n}\nexports.TrieDB = TrieDB;\n//# sourceMappingURL=trie-db.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Wallet_randomRng, _Wallet_randomBytes, _Wallet_initializeAccounts, _Wallet_intializeAccountFromKey, _Wallet_initializeAccountWithoutKey, _Wallet_initializeAccount, _Wallet_lockAccount;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst hdkey_1 = require(\"./hdkey\");\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst secp256k1_1 = __importStar(require(\"@ganache/secp256k1\"));\nconst bip39_1 = require(\"bip39\");\nconst seedrandom_1 = require(\"seedrandom\");\nconst crypto_1 = __importDefault(require(\"crypto\"));\nconst fs_1 = require(\"fs\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst TWELVE_255s = Buffer.allocUnsafe(12).fill(255);\n//#region Constants\nconst SCRYPT_PARAMS = {\n    dklen: 32,\n    n: 1024,\n    p: 8,\n    r: 1\n};\nconst CIPHER = \"aes-128-ctr\";\nconst MAX_ACCOUNTS = 100000;\nconst scrypt = (...args) => {\n    return new Promise((resolve, reject) => {\n        crypto_1.default.scrypt.call(crypto_1.default, ...args, (err, derivedKey) => {\n            if (err) {\n                return void reject(err);\n            }\n            return resolve(derivedKey);\n        });\n    });\n};\nconst scryptSync = (...args) => {\n    return crypto_1.default.scryptSync.call(crypto_1.default, ...args);\n};\n/**\n * A Buffer that can be reused by `uncompressedPublicKeyToAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst uncompressedPublicKeyToAddress = (uncompressedPublicKey) => {\n    const status = secp256k1_1.default.publicKeyConvert(SHARED_BUFFER, uncompressedPublicKey);\n    switch (status) {\n        case 0:\n            return ethereum_address_1.Address.from((0, utils_1.keccak)(SHARED_BUFFER.slice(1)).slice(-20));\n        case 1:\n            throw new Error(\"Public Key could not be parsed\");\n        case 2:\n            throw new Error(\"Public Key serialization error\");\n    }\n};\nconst asUUID = (uuid) => {\n    return `${uuid.toString(\"hex\", 0, 4)}-${uuid.toString(\"hex\", 4, 6)}-${uuid.toString(\"hex\", 6, 8)}-${uuid.toString(\"hex\", 8, 10)}-${uuid.toString(\"hex\", 10)}`;\n};\nclass Wallet {\n    constructor(opts, logging) {\n        this.knownAccounts = new Set();\n        this.keyFiles = new Map();\n        this.unlockedAccounts = new Map();\n        this.lockTimers = new Map();\n        _Wallet_randomRng.set(this, void 0);\n        _Wallet_randomBytes.set(this, (length) => {\n            // Since this is a mock RPC library, the rng doesn't need to be\n            // cryptographically secure, and determinism is desired.\n            const buf = Buffer.allocUnsafe(length);\n            const rand = __classPrivateFieldGet(this, _Wallet_randomRng, \"f\");\n            for (let i = 0; i < length; i++) {\n                buf[i] = (rand() * 256) | 0; // generates a random number from 0 to 255\n            }\n            return buf;\n        });\n        _Wallet_initializeAccounts.set(this, (options) => {\n            const makeAccountAtIndex = (0, hdkey_1.createAccountGeneratorFromSeedAndPath)((0, bip39_1.mnemonicToSeedSync)(options.mnemonic, null), options.hdPath);\n            // convert a potentially fractional balance of Ether to WEI\n            const balanceParts = options.defaultBalance.toString().split(\".\", 2);\n            const significand = BigInt(balanceParts[0]);\n            const fractionalStr = balanceParts[1] || \"0\";\n            const fractional = BigInt(fractionalStr);\n            const magnitude = 10n ** BigInt(fractionalStr.length);\n            const defaultBalanceInWei = utils_1.WEI * significand + fractional * (utils_1.WEI / magnitude);\n            const etherInWei = utils_1.Quantity.from(defaultBalanceInWei);\n            const accounts = new Map();\n            const givenAccounts = options.accounts;\n            let accountsLength;\n            if (givenAccounts && (accountsLength = givenAccounts.length) !== 0) {\n                for (let i = 0; i < accountsLength; i++) {\n                    const givenAccount = givenAccounts[i];\n                    const secretKey = givenAccount.secretKey;\n                    let account;\n                    if (secretKey) {\n                        const balance = utils_1.Quantity.from(givenAccount.balance);\n                        account = __classPrivateFieldGet(this, _Wallet_intializeAccountFromKey, \"f\").call(this, balance, secretKey, options);\n                    }\n                    else {\n                        const acct = makeAccountAtIndex(i);\n                        account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                    }\n                    accounts.set(account.address.toString(), account);\n                }\n            }\n            else {\n                const numberOfAccounts = options.totalAccounts;\n                if (numberOfAccounts != null) {\n                    for (let i = 0; i < numberOfAccounts; i++) {\n                        const acct = makeAccountAtIndex(i);\n                        const account = __classPrivateFieldGet(this, _Wallet_initializeAccountWithoutKey, \"f\").call(this, etherInWei, acct, options);\n                        accounts.set(account.address.toString(), account);\n                    }\n                }\n            }\n            return accounts;\n        });\n        _Wallet_intializeAccountFromKey.set(this, (balance, secretKey, options) => {\n            const privateKey = utils_1.Data.from(secretKey);\n            const account = Wallet.createAccountFromPrivateKey(privateKey);\n            account.balance = balance;\n            const address = account.address;\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccountWithoutKey.set(this, (balance, acct, options) => {\n            const address = uncompressedPublicKeyToAddress(acct.publicKey);\n            const privateKey = utils_1.Data.from(acct.privateKey);\n            const account = Wallet.createAccount(balance, privateKey, address);\n            __classPrivateFieldGet(this, _Wallet_initializeAccount, \"f\").call(this, address, privateKey, options);\n            return account;\n        });\n        _Wallet_initializeAccount.set(this, (address, privateKey, options) => {\n            const { passphrase, lock: lockAccounts } = options;\n            const knownAccounts = this.knownAccounts;\n            this.addToKeyFileSync(address, privateKey, passphrase, lockAccounts);\n            const strAddress = address.toString();\n            knownAccounts.add(strAddress);\n            // if the `lock` option has been not been set, we're safe to add this\n            // account to unlockedAccounts\n            if (!lockAccounts) {\n                this.unlockedAccounts.set(strAddress, privateKey);\n            }\n        });\n        _Wallet_lockAccount.set(this, (lowerAddress) => {\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        });\n        if (opts.totalAccounts > MAX_ACCOUNTS) {\n            logging.logger.log(`wallet.totalAccounts exceeds MAX_ACCOUNTS (${MAX_ACCOUNTS}) and may affect performance.`);\n        }\n        // create a RNG from our initial starting conditions (opts.mnemonic)\n        __classPrivateFieldSet(this, _Wallet_randomRng, (0, seedrandom_1.alea)(\"ganache \" + opts.mnemonic), \"f\");\n        const initialAccounts = __classPrivateFieldGet(this, _Wallet_initializeAccounts, \"f\").call(this, opts);\n        this.initialAccounts = Array.from(initialAccounts.values());\n        this.addresses = Array.from(initialAccounts.keys());\n        const l = this.initialAccounts.length;\n        const unlockedAccounts = this.unlockedAccounts;\n        //#region Unlocked Accounts\n        const givenUnlockedAccounts = opts.unlockedAccounts;\n        if (givenUnlockedAccounts) {\n            const ul = givenUnlockedAccounts.length;\n            for (let i = 0; i < ul; i++) {\n                let arg = givenUnlockedAccounts[i];\n                let address;\n                let privateKey;\n                switch (typeof arg) {\n                    case \"string\":\n                        // `toLowerCase` so we handle uppercase `0X` formats\n                        const addressOrIndex = arg.toLowerCase();\n                        if (addressOrIndex.indexOf(\"0x\") === 0) {\n                            address = addressOrIndex;\n                            const account = initialAccounts.get(address);\n                            if (account) {\n                                privateKey = account.privateKey;\n                            }\n                            else {\n                                // this wasn't one of our initial accounts, so make a priv key.\n                                privateKey = this.createFakePrivateKey(address);\n                                // add the account to the list of addresses because we want\n                                // `eth_accounts` to return this account.\n                                this.addresses.push(address);\n                            }\n                            break;\n                        }\n                        else {\n                            // try to convert the arg string to a number.\n                            // don't use parseInt because strings like `\"123abc\"` parse\n                            // to `123`, and there is probably an error on the user's side we'd\n                            // want to uncover.\n                            const index = arg - 0;\n                            // if we don't have a valid number, or the number isn't a valid JS\n                            // integer (no bigints or decimals, please), throw an error.\n                            if (!Number.isSafeInteger(index)) {\n                                throw new Error(`Invalid value in wallet.unlockedAccounts: ${arg}`);\n                            }\n                            arg = index;\n                            // not `break`ing here because I want this to fall through to the\n                            //  `\"number\"` case below.\n                            // Refactor it if you want.\n                            // break; // no break, please.\n                        }\n                    case \"number\":\n                        const account = this.initialAccounts[arg];\n                        if (account == null) {\n                            throw new Error(`Account at index ${arg} not found. Max index available is ${l - 1}.`);\n                        }\n                        address = account.address.toString().toLowerCase();\n                        privateKey = account.privateKey;\n                        break;\n                    default:\n                        throw new Error(`Invalid value specified in unlocked_accounts`);\n                }\n                if (unlockedAccounts.has(address))\n                    continue;\n                unlockedAccounts.set(address, privateKey);\n            }\n        }\n        //#endregion\n        //#region save accounts to disk\n        if (opts.accountKeysPath != null) {\n            const fileData = {\n                addresses: {},\n                private_keys: {}\n            };\n            unlockedAccounts.forEach((privateKey, address) => {\n                fileData.addresses[address] = address;\n                fileData.private_keys[address] = privateKey;\n            });\n            // WARNING: Do not turn this to an async method without\n            // making a Wallet.initialize() function and calling it via\n            // Provider.initialize(). No async methods in constructors.\n            // writeFileSync here is acceptable.\n            (0, fs_1.writeFileSync)(opts.accountKeysPath, JSON.stringify(fileData));\n        }\n        //#endregion\n    }\n    async encrypt(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = await scrypt(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    /**\n     * Syncronous version of the `encrypt` function.\n     * @param privateKey -\n     * @param passphrase -\n     */\n    encryptSync(privateKey, passphrase) {\n        const random = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 32 + 16 + 16);\n        const salt = random.slice(0, 32); // first 32 bytes\n        const iv = random.slice(32, 32 + 16); // next 16 bytes\n        const uuid = random.slice(32 + 16); // last 16 bytes\n        const derivedKey = scryptSync(passphrase, salt, SCRYPT_PARAMS.dklen, {\n            ...SCRYPT_PARAMS,\n            N: SCRYPT_PARAMS.n\n        });\n        return this.finishEncryption(derivedKey, privateKey, salt, iv, uuid);\n    }\n    finishEncryption(derivedKey, privateKey, salt, iv, uuid) {\n        const cipher = crypto_1.default.createCipheriv(CIPHER, derivedKey.slice(0, 16), iv);\n        const ciphertext = Buffer.concat([\n            cipher.update(privateKey.toBuffer()),\n            cipher.final()\n        ]);\n        const mac = (0, utils_1.keccak)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n        return {\n            crypto: {\n                cipher: CIPHER,\n                ciphertext: utils_1.Data.from(ciphertext),\n                cipherparams: {\n                    iv: utils_1.Data.from(iv)\n                },\n                kdf: \"scrypt\",\n                kdfParams: {\n                    ...SCRYPT_PARAMS,\n                    salt: utils_1.Data.from(salt)\n                },\n                mac: utils_1.Data.from(mac)\n            },\n            id: asUUID(uuid),\n            version: 3\n        };\n    }\n    async decrypt(keyfile, passphrase) {\n        const crypt = keyfile.crypto;\n        if (crypt.cipher !== CIPHER) {\n            throw new Error(`keyfile cypher must be \"${CIPHER}\"`);\n        }\n        if (crypt.kdf !== \"scrypt\") {\n            throw new Error(`keyfile kdf must be \"script\"`);\n        }\n        const kdfParams = crypt.kdfParams;\n        const salt = kdfParams.salt;\n        const mac = crypt.mac;\n        const ciphertext = crypt.ciphertext.toBuffer();\n        let derivedKey;\n        let localMac;\n        if (passphrase != null) {\n            try {\n                derivedKey = await scrypt(passphrase, salt.toBuffer(), kdfParams.dklen, { ...kdfParams, N: kdfParams.n });\n                localMac = (0, utils_1.keccak)(Buffer.concat([derivedKey.slice(16, 32), ciphertext]));\n            }\n            catch {\n                localMac = null;\n            }\n        }\n        if (!localMac || !mac.toBuffer().equals(localMac)) {\n            throw new Error(\"could not decrypt key with given passphrase\");\n        }\n        const decipher = crypto_1.default.createDecipheriv(crypt.cipher, derivedKey.slice(0, 16), crypt.cipherparams.iv.toBuffer());\n        const plaintext = decipher.update(ciphertext);\n        return plaintext;\n    }\n    /**\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    async addToKeyFile(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: await this.encrypt(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Synchronus version of `addToKeyFile`.\n     * Stores a mapping of addresses to either encrypted (if a passphrase is used\n     * or the user specified --lock option) or unencrypted private keys.\n     * @param address - The address whose private key is being stored.\n     * @param privateKey - The passphrase to store.\n     * @param passphrase - The passphrase to use to encrypt the private key. If\n     * passphrase is empty, the private key will not be encrypted.\n     * @param lock - Flag to specify that accounts should be encrypted regardless\n     * of if the passphrase is empty.\n     */\n    addToKeyFileSync(address, privateKey, passphrase, lock) {\n        // NOTE: we are avoiding encrypting the keys for an account if the\n        // passphrase is blank purely for startup performance reasons.\n        if (passphrase || lock) {\n            this.keyFiles.set(address.toString(), {\n                encrypted: true,\n                key: this.encryptSync(privateKey, passphrase)\n            });\n        }\n        else {\n            this.keyFiles.set(address.toString(), {\n                encrypted: false,\n                key: privateKey.toBuffer()\n            });\n        }\n    }\n    /**\n     * Fetches the private key for a specific address. If the keyFile is encrypted\n     * for the address, the passphrase is used to decrypt.\n     * @param address - The address whose private key is to be fetched.\n     * @param passphrase - The passphrase used to decrypt the private key.\n     */\n    async getFromKeyFile(address, passphrase) {\n        const keyFile = this.keyFiles.get(address.toString());\n        if (keyFile === undefined || keyFile === null) {\n            throw new Error(\"no key for given address or file\");\n        }\n        if (keyFile.encrypted === true) {\n            return this.decrypt(keyFile.key, passphrase);\n        }\n        else {\n            // if the keyFile is not marked as encrypted, they should provide no\n            // passphrase. so we'll make it look like they gave the \"wrong\" passphrase\n            // by throwing the same error that's thrown when decrypting\n            if (passphrase) {\n                throw new Error('could not decrypt key with given passphrase (default passphrase for accounts created at startup is \"\")');\n            }\n            else {\n                return keyFile.key;\n            }\n        }\n    }\n    static createAccount(balance, privateKey, address) {\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        account.balance = balance;\n        return account;\n    }\n    static createAccountFromPrivateKey(privateKey) {\n        const address = ethereum_address_1.Address.from((0, util_1.privateToAddress)(privateKey.toBuffer()));\n        const account = new ethereum_utils_1.Account(address);\n        account.privateKey = privateKey;\n        return account;\n    }\n    createRandomAccount() {\n        // create some seeded deterministic psuedo-randomness based on the chain's\n        // initial starting conditions\n        const seed = __classPrivateFieldGet(this, _Wallet_randomBytes, \"f\").call(this, 128);\n        const acct = (0, hdkey_1.createAccountFromSeed)(seed);\n        const address = uncompressedPublicKeyToAddress(acct.publicKey);\n        const privateKey = utils_1.Data.from(acct.privateKey);\n        return Wallet.createAccount(utils_1.Quantity.Zero, privateKey, address);\n    }\n    async unlockAccount(address, passphrase, duration) {\n        const lowerAddress = address.toString();\n        const secretKey = await this.getFromKeyFile(address, passphrase);\n        const existingTimer = this.lockTimers.get(lowerAddress);\n        if (existingTimer) {\n            clearTimeout(existingTimer);\n        }\n        // a duration <= 0 will remain unlocked\n        const durationMs = (duration * 1000) | 0;\n        if (durationMs > 0) {\n            const timeout = setTimeout(__classPrivateFieldGet(this, _Wallet_lockAccount, \"f\"), durationMs, lowerAddress);\n            (0, utils_1.unref)(timeout);\n            this.lockTimers.set(lowerAddress, timeout);\n        }\n        this.unlockedAccounts.set(lowerAddress, utils_1.Data.from(secretKey));\n        return true;\n    }\n    async addUnknownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we \"know\" about this account, it cannot be added this way\n        if (this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        // this is an unknown account, so we do not have a private key. instead,\n        // we'll need to create a fake one.\n        const privateKey = this.createFakePrivateKey(lowerAddress);\n        await this.addToKeyFile(address, privateKey, passphrase, true);\n        this.knownAccounts.add(lowerAddress);\n        this.addresses.push(lowerAddress);\n        return true;\n    }\n    async removeKnownAccount(address, passphrase) {\n        const lowerAddress = address.toString();\n        // if we don't \"know\" about this account, it cannot be removed\n        if (!this.knownAccounts.has(lowerAddress)) {\n            return false;\n        }\n        const privateKey = await this.getFromKeyFile(address, passphrase);\n        // we don't actually care what the private key is, we just need to know that\n        // the passphrase they supplied is the right one. (empty string is a valid\n        // privateKey for added, previously unknown accounts)\n        if (privateKey != null) {\n            this.keyFiles.delete(lowerAddress);\n            this.knownAccounts.delete(lowerAddress);\n            this.addresses.splice(this.addresses.indexOf(lowerAddress), 1);\n            this.lockTimers.delete(lowerAddress);\n            this.unlockedAccounts.delete(lowerAddress);\n            return true;\n        }\n        else {\n            throw new Error(\"could not find private key for address/passphrase combination\");\n        }\n    }\n    createFakePrivateKey(address) {\n        let fakePrivateKey;\n        const addressBuf = ethereum_address_1.Address.from(address).toBuffer();\n        if (addressBuf.equals(utils_1.ACCOUNT_ZERO)) {\n            // allow signing with the 0x0 address...\n            // always sign with the same fake key, a 31 `0`s followed by a single\n            // `1`. The key is arbitrary. It just must not be all `0`s and must be\n            // deterministic.\n            // see: https://github.com/ethereumjs/ethereumjs-monorepo/issues/829#issue-674385636\n            fakePrivateKey = Buffer.allocUnsafe(32).fill(0, 0, 31);\n            fakePrivateKey[31] = 1;\n        }\n        else {\n            // Private keys must not be greater than *or equal to*:\n            // 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141, and\n            // if they are that large then signing of the transaction (ecdsaSign) will\n            // fail.\n            // Historically, we've just concatenated the address with part of itself,\n            // to make something long enough to use as a private key, so we can't\n            // change the default/legacy behavior now. But for addresses that would\n            // generate an invalid private key we must use a different approach. If\n            // the legacy way of generating a private key results in a key that is too\n            // large\n            //\n            const first12 = addressBuf.slice(0, 12);\n            fakePrivateKey = Buffer.concat([addressBuf, first12]);\n            // BigInt is slow, so only do it if we might need to, which we usually\n            // never will.\n            // Since we already have a slice of the first 12 bytes let's use it to\n            // help check if we might overflow the max secp256k1 key value. If the\n            // first 12 bytes, the most significant digits of the key, are all `255`\n            // then there is a chance that the fakePrivateKey will be too large.\n            // `Buffer.compare` is a native method in V8, so it should be pretty fast.\n            // example: the address `0xffffffffffff{anything can go here}` generates a\n            // bad fakePrivateKey but, `0xfffffffffffe{anything can go here}` never\n            // will. There are obviously many chances for a false positive, but the\n            // next condition in the `while` loop will catch those.\n            if (first12.compare(TWELVE_255s) === 0) {\n                while (BigInt(`0x${fakePrivateKey.toString(\"hex\")}`) >= secp256k1_1.SECP256K1_N) {\n                    // keccak returns a 32 byte hash of the input data, which is the exact\n                    // length we need for a private key.\n                    // note: if keccak can return its own input as its output, then this\n                    // loops forever. The chances of this happening are impossibly low, so\n                    // it's not worth the effort to check, but it would be interesting if\n                    // someone reported an issue that can cause this for a specific\n                    // address!\n                    fakePrivateKey = (0, utils_1.keccak)(fakePrivateKey);\n                }\n            }\n        }\n        return utils_1.Data.from(fakePrivateKey);\n    }\n    lockAccount(lowerAddress) {\n        if (!this.unlockedAccounts.has(lowerAddress))\n            return false;\n        clearTimeout(this.lockTimers.get(lowerAddress));\n        return __classPrivateFieldGet(this, _Wallet_lockAccount, \"f\").call(this, lowerAddress);\n    }\n}\nexports.default = Wallet;\n_Wallet_randomRng = new WeakMap(), _Wallet_randomBytes = new WeakMap(), _Wallet_initializeAccounts = new WeakMap(), _Wallet_intializeAccountFromKey = new WeakMap(), _Wallet_initializeAccountWithoutKey = new WeakMap(), _Wallet_initializeAccount = new WeakMap(), _Wallet_lockAccount = new WeakMap();\n//# sourceMappingURL=wallet.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-options\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst HARDFORKS = [\n    \"constantinople\",\n    \"byzantium\",\n    \"petersburg\",\n    \"istanbul\",\n    \"muirGlacier\",\n    \"berlin\",\n    \"london\",\n    \"arrowGlacier\",\n    \"grayGlacier\",\n    \"merge\",\n    \"shanghai\"\n];\nexports.ChainOptions = {\n    allowUnlimitedContractSize: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Allows unlimited contract sizes. Setting this to `true` will cause ganache to behave differently than production environments.\",\n        default: () => false,\n        legacyName: \"allowUnlimitedContractSize\",\n        cliType: \"boolean\"\n    },\n    allowUnlimitedInitCodeSize: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Allows unlimited initcode (`transaction.data`) sizes. Setting this to `true` will cause ganache to behave differently than production environments.\",\n        default: () => false,\n        cliType: \"boolean\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        legacyName: \"asyncRequestProcessing\",\n        cliType: \"boolean\"\n    },\n    chainId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The currently configured chain id.\",\n        default: () => 1337,\n        legacyName: \"chainId\",\n        cliType: \"number\"\n    },\n    networkId: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The id of the network returned by the RPC method `net_version`.\",\n        default: () => Date.now(),\n        defaultDescription: \"System time at process start or Network ID of forked blockchain if configured.\",\n        legacyName: \"network_id\",\n        cliAliases: [\"i\", \"networkId\"],\n        cliType: \"number\"\n    },\n    time: {\n        normalize: rawInput => (rawInput !== undefined ? new Date(rawInput) : null),\n        cliDescription: \"Date that the first block should start.\",\n        legacyName: \"time\",\n        cliAliases: [\"t\", \"time\"],\n        cliType: \"string\",\n        cliCoerce: (input) => {\n            // try parsing the input as a number, if it works use the number\n            // otherwise pass the string along\n            const asNum = input / 1;\n            if (isNaN(asNum)) {\n                return input;\n            }\n            else {\n                return asNum;\n            }\n        }\n    },\n    hardfork: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set the hardfork rules for the EVM.\",\n        default: () => \"shanghai\",\n        legacyName: \"hardfork\",\n        cliAliases: [\"k\", \"hardfork\"],\n        cliType: \"string\",\n        cliChoices: HARDFORKS\n    },\n    vmErrorsOnRPCResponse: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Whether to report runtime errors from EVM code as RPC errors.\",\n        default: () => false,\n        legacyName: \"vmErrorsOnRPCResponse\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        legacyName: \"db\",\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        legacyName: \"db_path\",\n        cliAliases: [\"db\", \"db_path\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ForkOptions = exports.KNOWN_NETWORKS = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst url_1 = require(\"url\");\nconst version = process.env.VERSION || \"DEV\";\n// we aren't going to treat block numbers as a bigint, so we don't want to\n// accept block numbers we can't add to\nconst MAX_BLOCK_NUMBER = Math.floor(Number.MAX_SAFE_INTEGER / 2);\nexports.KNOWN_NETWORKS = [\n    \"mainnet\",\n    \"goerli\",\n    \"görli\",\n    \"sepolia\"\n];\nconst reColonSplit = /:\\s?(?:.+)/;\nfunction coerceHeaders(headers, input) {\n    // split *1* time on the first colon, this also ignores leading whitespace\n    // from the value per RFC7230\n    const [name, value] = input.split(reColonSplit);\n    headers.push({ name, value });\n    return headers;\n}\nconst ALLOWED_PROTOCOLS = [\"ws:\", \"wss:\", \"http:\", \"https:\"];\nconst arrayToOxfordList = (arr, conjunction = \"and\") => {\n    const last = arr.pop();\n    switch (arr.length) {\n        case 0:\n            return \"\";\n        case 1:\n            return last;\n        case 2:\n            return arr[0] + ` ${conjunction} ` + last;\n        default:\n            return arr.join(\", \") + `, ${conjunction} ` + last;\n    }\n};\nexports.ForkOptions = {\n    // url's definition _must_ come before blockNumber, username, and password\n    // as the defaults are processed in order, and they rely on the `fork.url`\n    url: {\n        normalize: rawInput => {\n            // because `url` is an alias of `fork`, along with `provider` and\n            // `network` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput !== \"string\" ||\n                exports.KNOWN_NETWORKS.includes(rawInput)) {\n                // if the string matches a network name ignore it\n                return;\n            }\n            let url = new url_1.URL(rawInput);\n            const path = url.pathname + url.search;\n            const lastIndex = path.lastIndexOf(\"@\");\n            // pull the blockNumber out of the URL\n            if (lastIndex !== -1) {\n                // remove everything after the last @\n                url = new url_1.URL(path.substr(0, lastIndex), url);\n                const blockNumber = path.substr(lastIndex + 1);\n                if (blockNumber && blockNumber !== ethereum_utils_1.Tag.latest) {\n                    // don't use parseInt because strings like `\"123abc\"` parse\n                    // to `123`, and there is probably an error on the user's side we'd\n                    // want to uncover.\n                    const asNum = blockNumber - 0;\n                    // don't allow invalid, negative, or decimals\n                    if (isNaN(asNum) ||\n                        asNum < 0 ||\n                        (asNum | 0) !== asNum ||\n                        asNum > MAX_BLOCK_NUMBER) {\n                        console.warn(`Ignoring invalid block number in fork url: \"${blockNumber}\". Block number must be an integer from [0 - ${MAX_BLOCK_NUMBER}].`);\n                    }\n                    else {\n                        url._blockNumber = asNum;\n                    }\n                }\n                if (!ALLOWED_PROTOCOLS.includes(url.protocol)) {\n                    throw new Error(`Invalid protocol for fork url: ${url.protocol}. Supported protocols are: ${arrayToOxfordList(ALLOWED_PROTOCOLS)}.`);\n                }\n            }\n            return url;\n        },\n        cliDescription: `Fork from another currently running Ethereum client at a given block. Input should be the URL of the node, e.g. \\`\"http://localhost:1337\"\\`. You can optionally specify the block to fork from using an @ sign: \\`\"http://localhost:1337@8675309\"\\`.\n\nYou can specify Basic Authentication credentials in the URL as well. e.g., \\`\"wss://user:password@example.com/\"\\`. If you need to use an Infura Project Secret, you would use it like this: \\`\"wss://:{YOUR-PROJECT-SECRET}@mainnet.infura.com/...\"\\`\n\nAlternatively, you can use the \\`fork.username\\` and \\`fork.password\\` options.`,\n        legacyName: \"fork\",\n        cliAliases: [\"f\", \"fork\"],\n        conflicts: [\"provider\", \"network\"]\n    },\n    provider: {\n        normalize: rawInput => {\n            // because `provider` is an alias of `fork`, along with `network` and\n            // `url` the runtime type isn't always going to match the TypeScript type.\n            // if rawInput is a string it will be handled by the `url` or `network`\n            // handlers.\n            if (typeof rawInput === \"string\" || // like `--fork http://url` (url shorthand)\n                (typeof rawInput === \"object\" &&\n                    (typeof rawInput.url === \"string\" || // like `--fork.url http://url`\n                        typeof rawInput.url === \"boolean\" || // like `--fork` (implied \"mainnet\" network shorthand)\n                        typeof rawInput.network === \"string\" || // like `--fork.network mainnet`\n                        typeof rawInput.network === \"boolean\")) // like `--fork.network true`\n            ) {\n                return;\n            }\n            else {\n                return rawInput;\n            }\n        },\n        cliDescription: \"Specify an EIP-1193 provider to use instead of a url.\",\n        disableInCLI: true,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"network\"]\n    },\n    network: {\n        normalize: rawInput => {\n            // because `network` is an alias of `fork`, along with `provider` and\n            // `url` the runtime type isn't always going to be `\"string\"`\n            if (typeof rawInput === \"string\" && exports.KNOWN_NETWORKS.includes(rawInput))\n                return rawInput;\n            if (\n            // handle `ganache --fork` case, which gets weird because both url\n            // and network can use the `--fork` flag (the `url` handler ignores\n            // non-strings, like `true` and strings that match our known networks)\n            typeof rawInput === \"object\") {\n                if (\"url\" in rawInput) {\n                    const { url } = rawInput;\n                    if (url === true) {\n                        return \"mainnet\";\n                    }\n                    else if (exports.KNOWN_NETWORKS.includes(url)) {\n                        return rawInput.url;\n                    }\n                }\n            }\n        },\n        cliDescription: `A network name to fork from; uses Infura's archive nodes.\n\nUse the shorthand command \\`ganache --fork\\` to automatically fork from Mainnet at the latest block.\n`,\n        cliChoices: exports.KNOWN_NETWORKS,\n        legacyName: \"fork\",\n        conflicts: [\"url\", \"provider\"]\n    },\n    blockNumber: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Block number the provider should fork from.\",\n        legacyName: \"fork_block_number\",\n        default: ({ url, provider, network }) => {\n            if (url) {\n                // use the url's _blockNumber, if present, otherwise use \"latest\"\n                if (url._blockNumber) {\n                    return url._blockNumber;\n                }\n                else {\n                    return ethereum_utils_1.Tag.latest;\n                }\n            }\n            else if (provider || network) {\n                return ethereum_utils_1.Tag.latest;\n            }\n            else {\n                return;\n            }\n        },\n        defaultDescription: `Latest block number`\n        //implies: [\"url\"]\n    },\n    preLatestConfirmations: {\n        normalize: helpers_1.normalize,\n        cliDescription: 'When the `fork.blockNumber` is set to \"latest\" (default), the number of blocks before the remote node\\'s \"latest\" block to fork from.',\n        default: () => 5,\n        defaultDescription: \"5\",\n        cliType: \"number\"\n    },\n    username: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Username to use for Basic Authentication. Does not require setting \\`fork.password\\`.\n    \nWhen combined with \\`fork.password\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's username, if present\n            if (url) {\n                if (url.username) {\n                    return url.username;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    password: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Password to use for Basic Authentication. Does not require setting \\`fork.username\\`.\n\nWhen combined with \\`fork.username\\`, is shorthand for \\`fork: { headers: { \"Authorization\": \"Basic {ENCODED-BASIC-HEADER}\" } }\\`\n\nIf the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ this Basic token.`,\n        default: ({ url }) => {\n            // use the url's password, if present\n            if (url) {\n                if (url.password) {\n                    return url.password;\n                }\n            }\n        },\n        defaultDescription: \"\"\n        //implies: [\"url\"]\n    },\n    jwt: {\n        normalize: helpers_1.normalize,\n        cliDescription: `_Encoded_ JSON Web Token (JWT) used for authenticating to some servers.\n\nShorthand for \\`fork: { headers: { \"Authorization\": \"Bearer {YOUR-ENCODED-JWT}\" } }\\`\n\n If the \\`fork.headers\\` option specifies an \"Authorization\" header, it will be be inserted _after_ the JWT Bearer token.`\n        //implies: [\"url\"]\n    },\n    userAgent: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The User-Agent header sent to the fork on each request.\n\nSent as Api-User-Agent when used in the browser.\n \nWill be overridden by a \\`\"User-Agent\"\\` defined in the \\`fork.headers\\` option, if provided.`,\n        default: () => {\n            return `Ganache/${version} (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)`;\n        }\n        // implies: [\"url\"]\n    },\n    origin: {\n        normalize: helpers_1.normalize,\n        cliDescription: `The Origin header sent to the fork on each request.\n\nIgnored in the browser.\n\nWill be overridden by an \\`\"Origin\"\\` value defined in the \\`fork.headers\\` option, if provided.`\n        //implies: [\"url\"]\n    },\n    headers: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Headers to supply on each request to the forked provider.\n\nHeaders set here override headers set by other options, unless otherwise specified.\n\nDefaults to: \\`[\"User-Agent: Ganache/VERSION (https://www.trufflesuite.com/ganache; ganache<at>trufflesuite.com)\"]\\``,\n        cliType: \"array:string\",\n        implies: [\"url\"],\n        cliCoerce: rawInput => rawInput.reduce(coerceHeaders, [])\n    },\n    requestsPerSecond: {\n        normalize(rawValue) {\n            if (rawValue < 0) {\n                throw new Error(`fork.requestsPerSecond is invalid: \"${rawValue}\"; must be a positive number`);\n            }\n            return rawValue;\n        },\n        default: () => 0,\n        cliDescription: \"Restrict the number of requests per second sent to the fork provider. `0` means no limit is applied.\",\n        cliType: \"number\"\n        //implies: [\"url\"]\n    },\n    disableCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Disables caching of all forking requests.\",\n        cliType: \"boolean\"\n    },\n    deleteCache: {\n        normalize: helpers_1.normalize,\n        default: () => false,\n        cliDescription: \"Deletes the persistent cache before starting.\",\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=fork-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumOptionsConfig = exports.EthereumDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst fork_options_1 = require(\"./fork-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.EthereumDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions,\n    fork: fork_options_1.ForkOptions\n};\nexports.EthereumOptionsConfig = new options_1.OptionsConfig(exports.EthereumDefaults);\n__exportStar(require(\"./chain-options\"), exports);\n__exportStar(require(\"./database-options\"), exports);\n__exportStar(require(\"./helpers\"), exports);\n__exportStar(require(\"./logging-options\"), exports);\n__exportStar(require(\"./miner-options\"), exports);\n__exportStar(require(\"./wallet-options\"), exports);\n__exportStar(require(\"./fork-options\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.LoggingOptions = {\n    debug: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log EVM opcodes.\",\n        default: () => false,\n        legacyName: \"debug\",\n        cliType: \"boolean\"\n    },\n    quiet: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to disable logging.\",\n        default: () => false,\n        cliAliases: [\"q\", \"quiet\"],\n        cliType: \"boolean\"\n    },\n    logger: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        // disable the default logger if `quiet` is `true`\n        default: config => ({\n            log: config.quiet ? () => { } : console.log\n        }),\n        legacyName: \"logger\"\n    },\n    verbose: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Set to `true` to log detailed RPC requests.\",\n        default: () => false,\n        legacyName: \"verbose\",\n        cliAliases: [\"v\", \"verbose\"],\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\n/**\n * Attempts to convert strings that don't start with `0x` to a BigInt\n *\n * @param str - a string that represents a bigint, number, or hexadecimal value\n */\nconst toBigIntOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return BigInt(str);\n    }\n};\n/**\n * Handles defaultTransactionGasLimit special case of 'estimate' for tx value.\n *\n * @param str - the string literal 'estimate' or string that that represents a bigint, number, or hexadecimal value.\n */\nconst estimateOrToBigIntOrString = (str) => {\n    if (str === \"estimate\") {\n        return str;\n    }\n    else {\n        return toBigIntOrString(str);\n    }\n};\n/**\n * Attempts to convert strings that don't start with `0x` to a number\n *\n * @param str - a string that represents a number, or hexadecimal value\n */\nconst toNumberOrString = (str) => {\n    if (str.startsWith(\"0x\")) {\n        return str;\n    }\n    else {\n        return parseInt(str);\n    }\n};\nexports.MinerOptions = {\n    blockTime: {\n        normalize: rawInput => {\n            if (rawInput < 0) {\n                throw new Error(\"miner.blockTime must be 0 or a positive number.\");\n            }\n            return rawInput;\n        },\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A blockTime of `0` enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        legacyName: \"blockTime\",\n        cliAliases: [\"b\", \"blockTime\"],\n        cliType: \"number\"\n    },\n    timestampIncrement: {\n        normalize: rawType => rawType === \"clock\" ? \"clock\" : utils_1.Quantity.from(BigInt(rawType)),\n        cliDescription: 'The amount of time, in seconds, to add to the `timestamp` of each new block header. By default the value is `\"clock\"`, which uses your system clock time as the timestamp for each block.',\n        default: () => \"clock\",\n        cliType: \"string\"\n    },\n    defaultGasPrice: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the default gas price in WEI for transactions if not otherwise specified.\",\n        default: () => utils_1.Quantity.from(2000000000),\n        legacyName: \"gasPrice\",\n        cliAliases: [\"g\", \"gasPrice\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    blockGasLimit: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the block gas limit in WEI.\",\n        default: () => utils_1.Quantity.from(30000000),\n        legacyName: \"gasLimit\",\n        cliAliases: [\"l\", \"gasLimit\"],\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    defaultTransactionGasLimit: {\n        normalize: rawType => rawType === \"estimate\" ? utils_1.Quantity.Empty : utils_1.Quantity.from(rawType),\n        cliDescription: 'Sets the default transaction gas limit in WEI. Set to \"estimate\" to use an estimate (slows down transaction execution by 40%+).',\n        default: () => utils_1.Quantity.from(90000),\n        cliType: \"string\",\n        cliCoerce: estimateOrToBigIntOrString\n    },\n    difficulty: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the block difficulty. Value is always 0 after the merge hardfork.\",\n        default: () => utils_1.Quantity.One,\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    callGasLimit: {\n        normalize: utils_1.Quantity.from,\n        cliDescription: \"Sets the transaction gas limit in WEI for `eth_call` and `eth_estimateGas` calls.\",\n        default: () => utils_1.Quantity.from(50000000),\n        legacyName: \"callGasLimit\",\n        cliType: \"string\",\n        cliCoerce: toBigIntOrString\n    },\n    instamine: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Set the instamine mode to either \"eager\" (default) or \"strict\".\n * In \"eager\" mode a transaction will be included in a block before its hash is returned to the caller.\n * In \"strict\" mode a transaction's hash is returned to the caller before the transaction is included in a block.\n\\`instamine\\` has no effect if \\`blockTime\\` is *not* \\`0\\` (the default).`,\n        default: () => \"eager\",\n        legacyName: \"instamine\",\n        cliAliases: [\"instamine\"],\n        cliType: \"string\",\n        cliChoices: [\"eager\", \"strict\"]\n    },\n    coinbase: {\n        normalize: rawType => {\n            return typeof rawType === \"number\" ? rawType : ethereum_address_1.Address.from(rawType);\n        },\n        cliDescription: \"Sets the address where mining rewards will go.\",\n        cliType: \"string\",\n        cliCoerce: toNumberOrString,\n        default: () => ethereum_address_1.Address.from(utils_1.ACCOUNT_ZERO)\n    },\n    extraData: {\n        normalize: (extra) => {\n            const bytes = utils_1.Data.from(extra);\n            if (bytes.toBuffer().length > 32) {\n                throw new Error(`extra exceeds max length. ${bytes.toBuffer().length} > 32`);\n            }\n            return bytes;\n        },\n        cliDescription: \"Set the extraData block header field a miner can include.\",\n        default: () => utils_1.Data.Empty,\n        cliType: \"string\"\n    },\n    priceBump: {\n        normalize: BigInt,\n        cliDescription: \"Minimum price bump percentage needed to replace a transaction that already exists in the transaction pool.\",\n        default: () => 10n,\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst bip39_1 = require(\"bip39\");\nconst options_1 = require(\"@ganache/options\");\nconst unseededRng = (0, seedrandom_1.default)();\n/**\n * WARNING: to maintain compatibility with ganache v2 this RNG only generates\n * numbers from 0-254 instead of 0-255! Hence the name, `notVeryRandomBytes`\n * @param length -\n * @param rng -\n */\nfunction notVeryRandomBytes(length, rng) {\n    const buf = Buffer.allocUnsafe(length);\n    for (let i = 0; i < length; i++) {\n        buf[i] = (rng() * 255) | 0;\n    }\n    return buf;\n}\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    accounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: `Account data in the form \\`<private_key>,<initial_balance>\\`, can be specified multiple times. Note that private keys are 64 characters long and must be entered as an 0x-prefixed hex string. Balance can either be input as an integer, or as a 0x-prefixed hex string with either form specifying the initial balance in wei.`,\n        legacyName: \"accounts\",\n        cliAliases: [\"account\"],\n        cliType: \"array:string\",\n        cliCoerce: rawInput => {\n            return rawInput.map(accountString => {\n                // split *1* time on the first comma\n                const [secretKey, balance] = accountString.split(/,(.+)/);\n                return {\n                    secretKey,\n                    balance: BigInt(balance)\n                };\n            });\n        },\n        conflicts: [\"totalAccounts\"]\n    },\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: config => (config.accounts == null ? 10 : 0),\n        legacyName: \"total_accounts\",\n        cliAliases: [\"a\", \"accounts\"],\n        cliType: \"number\",\n        conflicts: [\"accounts\"]\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\", \"deterministic\"],\n        cliType: \"boolean\",\n        conflicts: [\"mnemonic\", \"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? options_1.DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        defaultDescription: \"Random value, unless wallet.deterministic is specified\",\n        legacyName: \"seed\",\n        cliAliases: [\"s\", \"seed\"],\n        cliType: \"string\",\n        conflicts: [\"mnemonic\", \"deterministic\"]\n    },\n    mnemonic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use a specific HD wallet mnemonic to generate initial addresses.\",\n        // The order of the options matter here! `wallet.seed`\n        // needs to be prior to `wallet.mnemonic` for `config.seed`\n        // below to be set correctly\n        default: config => (0, bip39_1.entropyToMnemonic)(notVeryRandomBytes(16, (0, seedrandom_1.default)(config.seed))),\n        defaultDescription: \"Generated from wallet.seed\",\n        legacyName: \"mnemonic\",\n        cliAliases: [\"m\", \"mnemonic\"],\n        cliType: \"string\",\n        conflicts: [\"seed\", \"deterministic\"]\n    },\n    unlockedAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Array of addresses or address indexes specifying which accounts should be unlocked.\",\n        legacyName: \"unlocked_accounts\",\n        cliAliases: [\"u\", \"unlock\"],\n        cliType: \"array:string\"\n    },\n    lock: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Lock available accounts by default (good for third party transaction signing).\",\n        default: () => false,\n        legacyName: \"secure\",\n        cliAliases: [\"n\", \"secure\", \"lock\"],\n        cliType: \"boolean\"\n    },\n    passphrase: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Passphrase to use when locking accounts.\",\n        default: () => \"\",\n        cliAliases: [\"passphrase\"],\n        cliType: \"string\"\n    },\n    accountKeysPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specifies a file to save accounts and private keys to, for testing.\",\n        legacyName: \"account_keys_path\",\n        cliAliases: [\"account_keys_path\", \"acctKeys\"],\n        cliType: \"string\"\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in ether.\",\n        default: () => 1000,\n        legacyName: \"default_balance_ether\",\n        cliAliases: [\"e\", \"defaultBalanceEther\"],\n        cliType: \"number\"\n    },\n    hdPath: {\n        normalize: (path) => {\n            return path.split(\"/\");\n        },\n        cliDescription: \"The hierarchical deterministic path to use when generating accounts.\",\n        default: () => [\"m\", \"44'\", \"60'\", \"0'\", \"0\"],\n        legacyName: \"hd_path\",\n        cliType: \"string\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-transaction\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/eip2930-access-list-transaction\"), exports);\n__exportStar(require(\"./src/eip1559-fee-market-transaction\"), exports);\n__exportStar(require(\"./src/base-transaction\"), exports);\n__exportStar(require(\"./src/hardfork\"), exports);\n__exportStar(require(\"./src/legacy-transaction\"), exports);\n__exportStar(require(\"./src/params\"), exports);\n__exportStar(require(\"./src/raw\"), exports);\n__exportStar(require(\"./src/signing\"), exports);\n__exportStar(require(\"./src/rpc-transaction\"), exports);\n__exportStar(require(\"./src/runtime-transaction\"), exports);\n__exportStar(require(\"./src/transaction-receipt\"), exports);\n__exportStar(require(\"./src/transaction-factory\"), exports);\n__exportStar(require(\"./src/transaction-types\"), exports);\n__exportStar(require(\"./src/vm-transaction\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AccessLists = exports.isAccessList = void 0;\nconst tx_1 = require(\"@ethereumjs/tx\");\nvar tx_2 = require(\"@ethereumjs/tx\");\nObject.defineProperty(exports, \"isAccessList\", { enumerable: true, get: function () { return tx_2.isAccessList; } });\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst STORAGE_KEY_LENGTH = 32;\n/*\n  As per https://github.com/ethereum/EIPs/blob/master/EIPS/eip-2930.md\n\n  AccessLists must be in the form of:\n  [[{20 bytes}, [{32 bytes}...]]...]\n  where ... implies \"zero or more of the thing to the left\"\n*/\nclass AccessLists {\n    static getAccessListData(accessList) {\n        let AccessListJSON;\n        let bufferAccessList;\n        let slots = 0;\n        const accessListStorageKeyCost = params_1.Params.ACCESS_LIST_STORAGE_KEY_GAS;\n        const accessListAddressCost = params_1.Params.ACCESS_LIST_ADDRESS_GAS;\n        if (accessList && (0, tx_1.isAccessList)(accessList)) {\n            AccessListJSON = accessList;\n            const newAccessList = [];\n            for (let i = 0; i < accessList.length; i++) {\n                const item = accessList[i];\n                const addressBuffer = ethereum_address_1.Address.toBuffer(item.address);\n                const storageItems = [];\n                const storageKeysLength = item.storageKeys.length;\n                slots += storageKeysLength;\n                for (let index = 0; index < storageKeysLength; index++) {\n                    storageItems.push(utils_1.Data.toBuffer(item.storageKeys[index], STORAGE_KEY_LENGTH));\n                }\n                newAccessList.push([addressBuffer, storageItems]);\n            }\n            bufferAccessList = newAccessList;\n        }\n        else {\n            bufferAccessList = accessList ? accessList : [];\n            // build the JSON\n            const json = [];\n            for (let i = 0; i < bufferAccessList.length; i++) {\n                const data = bufferAccessList[i];\n                const address = ethereum_address_1.Address.toString(data[0]);\n                const storageKeys = [];\n                const storageKeysLength = data[1].length;\n                slots += storageKeysLength;\n                for (let item = 0; item < storageKeysLength; item++) {\n                    storageKeys.push(utils_1.Data.toString(data[1][item], STORAGE_KEY_LENGTH));\n                }\n                const jsonItem = {\n                    address,\n                    storageKeys\n                };\n                json.push(jsonItem);\n            }\n            AccessListJSON = json;\n        }\n        const dataFee = BigInt(bufferAccessList.length * accessListAddressCost +\n            slots * accessListStorageKeyCost);\n        return {\n            AccessListJSON,\n            accessList: bufferAccessList,\n            dataFeeEIP2930: dataFee\n        };\n    }\n}\nexports.AccessLists = AccessLists;\n//# sourceMappingURL=access-lists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseTransaction = exports.calculateIntrinsicGas = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst params_1 = require(\"./params\");\nconst MAX_UINT64 = 1n << (64n - 1n);\n/**\n * Compute the 'intrinsic gas' for a message with the given data.\n * @param data - The transaction's data\n * @param hasToAddress - boolean,\n * @param common - The Common use to determine gas costs\n * @returns The absolute minimum amount of gas this transaction will consume,\n * or `-1` if the data in invalid (gas consumption would exceed `MAX_UINT64`\n * (`(2n ** 64n) - 1n`).\n */\nconst calculateIntrinsicGas = (data, hasToAddress, common) => {\n    const hardfork = common.hardfork();\n    let gas;\n    // set the starting gas for the transaction\n    if (hasToAddress) {\n        gas = params_1.Params.TRANSACTION_GAS;\n    }\n    else {\n        // if it doesn't have a \"to\" address this is a contract creation and it costs\n        // `TRANSACTION_CREATION_GAS`.\n        gas = params_1.Params.TRANSACTION_CREATION_GAS;\n    }\n    if (data) {\n        const input = data.toBuffer();\n        // Bump the required gas by the amount of transactional data\n        const dataLength = input.byteLength;\n        if (dataLength > 0) {\n            const TRANSACTION_DATA_NON_ZERO_GAS = params_1.Params.TRANSACTION_DATA_NON_ZERO_GAS.get(hardfork);\n            const TRANSACTION_DATA_ZERO_GAS = params_1.Params.TRANSACTION_DATA_ZERO_GAS;\n            // Zero and non-zero bytes are priced differently\n            let nonZeroBytes = 0n;\n            for (const b of input) {\n                if (b !== 0) {\n                    nonZeroBytes++;\n                }\n            }\n            // Make sure we don't exceed uint64 for all data combinations.\n            // TODO: make sure these upper-bound checks are safe to remove, then\n            // remove if so.\n            // Issue: https://github.com/trufflesuite/ganache/issues/3486\n            // NOTE: This is an upper-bounds limit ported from geth that doesn't\n            // make sense for Ethereum, as exceeding the upper bound would require\n            // something like 200+ Petabytes of data.\n            // https://github.com/ethereum/go-ethereum/blob/cf856ea1ad96ac39ea477087822479b63417036a/core/state_transition.go#L106-L141\n            //\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS` is the maximum\n            // number of \"non-zero bytes\" geth can handle.\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_NON_ZERO_GAS < nonZeroBytes) {\n                return -1n;\n            }\n            gas += nonZeroBytes * TRANSACTION_DATA_NON_ZERO_GAS;\n            const bigDataLength = BigInt(dataLength);\n            const zeroBytes = bigDataLength - nonZeroBytes;\n            // explanation:\n            // `(MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS` is the maximum number\n            // of \"zero bytes\" geth can handle after subtracting out the cost of\n            // the \"non-zero bytes\"\n            if ((MAX_UINT64 - gas) / TRANSACTION_DATA_ZERO_GAS < zeroBytes) {\n                return -1n;\n            }\n            gas += zeroBytes * TRANSACTION_DATA_ZERO_GAS;\n            // after shanghai contract creation costs a little more\n            if (!hasToAddress && common.isActivatedEIP(3860)) {\n                const lenWords = (bigDataLength + 31n) / 32n;\n                gas += lenWords * params_1.Params.INITCODE_WORD_GAS;\n            }\n        }\n    }\n    return gas;\n};\nexports.calculateIntrinsicGas = calculateIntrinsicGas;\nclass BaseTransaction {\n    constructor(common, extra) {\n        this.common = common;\n        if (extra) {\n            this.setExtra(extra);\n        }\n    }\n    setExtra(raw) {\n        const [from, hash, blockHash, blockNumber, index, effectiveGasPrice] = raw;\n        this.from = ethereum_address_1.Address.from(from);\n        this.hash = utils_1.Data.from(hash, 32);\n        this.blockHash = utils_1.Data.from(blockHash, 32);\n        this.blockNumber = utils_1.Quantity.from(blockNumber);\n        this.index = utils_1.Quantity.from(index);\n        this.effectiveGasPrice = utils_1.Quantity.from(effectiveGasPrice);\n    }\n    calculateIntrinsicGas() {\n        const hasToAddress = this.to != null && !this.to.toBuffer().equals(utils_1.BUFFER_EMPTY);\n        return (0, exports.calculateIntrinsicGas)(this.data, hasToAddress, this.common);\n    }\n}\nexports.BaseTransaction = BaseTransaction;\n//# sourceMappingURL=base-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP1559FeeMarketTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst bigIntMin = (...args) => args.reduce((m, e) => (e < m ? e : m));\nconst CAPABILITIES = [2718, 2930, 1559];\nclass EIP1559FeeMarketTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x2\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data[2]);\n            this.maxFeePerGas = utils_1.Quantity.from(data[3]);\n            this.gas = utils_1.Quantity.from(data[4]);\n            this.to = data[5].length == 0 ? null : ethereum_address_1.Address.from(data[5]);\n            this.value = utils_1.Quantity.from(data[6]);\n            this.data = utils_1.Data.from(data[7]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[8]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.v = utils_1.Quantity.from(data[9]);\n            this.r = utils_1.Quantity.from(data[10]);\n            this.s = utils_1.Quantity.from(data[11]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainId());\n            }\n            this.maxPriorityFeePerGas = utils_1.Quantity.from(data.maxPriorityFeePerGas);\n            this.maxFeePerGas = utils_1.Quantity.from(data.maxFeePerGas);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.maxFeePerGas;\n    }\n    toJSON(_common) {\n        return {\n            type: this.type,\n            hash: this.hash,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n            maxFeePerGas: this.maxFeePerGas,\n            gasPrice: this.effectiveGasPrice,\n            gas: this.gas,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP1559FeeMarketTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            common: this.common,\n            maxPriorityFeePerGas: this.maxPriorityFeePerGas.toBigInt(),\n            maxFeePerGas: this.maxFeePerGas.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: (baseFee = 0n) => {\n                const { gas, maxPriorityFeePerGas, maxFeePerGas, value } = this;\n                const maxPriorityFeePerGasBI = maxPriorityFeePerGas.toBigInt();\n                const maxFeePerGasBI = maxFeePerGas.toBigInt();\n                const gasLimitBI = gas.toBigInt();\n                const valueBI = value.toBigInt();\n                const inclusionFeePerGas = bigIntMin(maxPriorityFeePerGasBI, maxFeePerGasBI - baseFee);\n                const gasPrice = inclusionFeePerGas + baseFee;\n                return gasLimitBI * gasPrice + valueBI;\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    calculateIntrinsicGas() {\n        return super.calculateIntrinsicGas() + this.accessListDataFee;\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 0, 9);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)((0, signing_1.digestWithPrefix)(2, [data.output], dataLength));\n        const sig = (0, utils_1.ecsign)(msgHash, privateKey);\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[9] = this.v.toBuffer();\n        raw[10] = this.r.toBuffer();\n        raw[11] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n        const ranges = [data.output, encodedSignature.output];\n        const length = dataLength + encodedSignature.length;\n        // serialized is type concatenated with the rest of the data rlp encoded\n        this.serialized = (0, signing_1.digestWithPrefix)(2, ranges, length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.maxPriorityFeePerGas.toBuffer(),\n            this.maxFeePerGas.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsFeeMarketTx)(v, raw);\n    }\n    updateEffectiveGasPrice(baseFeePerGas) {\n        const maxFeePerGas = this.maxFeePerGas.toBigInt();\n        const maxPriorityFeePerGas = this.maxPriorityFeePerGas.toBigInt();\n        const a = maxFeePerGas - baseFeePerGas;\n        const tip = a < maxPriorityFeePerGas ? a : maxPriorityFeePerGas;\n        this.effectiveGasPrice = utils_1.Quantity.from(baseFeePerGas + tip);\n    }\n}\nexports.EIP1559FeeMarketTransaction = EIP1559FeeMarketTransaction;\n//# sourceMappingURL=eip1559-fee-market-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EIP2930AccessListTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst access_lists_1 = require(\"./access-lists\");\nconst signing_1 = require(\"./signing\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst CAPABILITIES = [2718, 2930];\nclass EIP2930AccessListTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x1\");\n        if (Array.isArray(data)) {\n            this.chainId = utils_1.Quantity.from(data[0]);\n            this.nonce = utils_1.Quantity.from(data[1]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[2]);\n            this.gas = utils_1.Quantity.from(data[3]);\n            this.to = data[4].length == 0 ? null : ethereum_address_1.Address.from(data[4]);\n            this.value = utils_1.Quantity.from(data[5]);\n            this.data = utils_1.Data.from(data[6]);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data[7]);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.v = utils_1.Quantity.from(data[8]);\n            this.r = utils_1.Quantity.from(data[9]);\n            this.s = utils_1.Quantity.from(data[10]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): we use the presence of `extra` to determine if this data\n                // come from the \"database\" or not. Transactions that come from the\n                // database must not be validated since they may come from a fork.\n                if (common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toBigInt()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n                const { from, serialized, hash } = this.computeIntrinsics(this.v, this.raw);\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n            }\n        }\n        else {\n            if (data.chainId) {\n                this.chainId = utils_1.Quantity.from(data.chainId);\n                if (this.common.chainId() !== this.chainId.toBigInt()) {\n                    throw new ethereum_utils_1.CodedError(`Invalid chain id (${this.chainId.toNumber()}) for chain with id ${common.chainId()}.`, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n                }\n            }\n            else {\n                this.chainId = utils_1.Quantity.from(common.chainId());\n            }\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            const accessListData = access_lists_1.AccessLists.getAccessListData(data.accessList);\n            this.accessList = accessListData.accessList;\n            this.accessListJSON = accessListData.AccessListJSON;\n            this.accessListDataFee = accessListData.dataFeeEIP2930;\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(_common) {\n        return {\n            hash: this.hash,\n            type: this.type,\n            chainId: this.chainId,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            accessList: this.accessListJSON,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n    }\n    static fromTxData(data, common, extra) {\n        return new EIP2930AccessListTransaction(data, common, extra);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            nonce: this.nonce.toBigInt(),\n            common: this.common,\n            gasPrice: this.gasPrice.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            AccessListJSON: this.accessListJSON,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                return gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n            },\n            supports: (capability) => {\n                return CAPABILITIES.includes(capability);\n            }\n        };\n    }\n    calculateIntrinsicGas() {\n        return super.calculateIntrinsicGas() + this.accessListDataFee;\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        const raw = this.toEthRawTransaction(utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO, utils_1.BUFFER_ZERO);\n        const data = (0, rlp_1.encodeRange)(raw, 0, 8);\n        const dataLength = data.length;\n        const msgHash = (0, utils_1.keccak)((0, signing_1.digestWithPrefix)(1, [data.output], dataLength));\n        const sig = (0, utils_1.ecsign)(msgHash, privateKey);\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[8] = this.v.toBuffer();\n        raw[9] = this.r.toBuffer();\n        raw[10] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 8, 3);\n        const ranges = [data.output, encodedSignature.output];\n        const length = dataLength + encodedSignature.length;\n        // serialized is type concatenated with the rest of the data rlp encoded\n        this.serialized = (0, signing_1.digestWithPrefix)(1, ranges, length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.chainId.toBuffer(),\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            this.accessList,\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw) {\n        return (0, signing_1.computeIntrinsicsAccessListTx)(v, raw);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.EIP2930AccessListTransaction = EIP2930AccessListTransaction;\n//# sourceMappingURL=eip2930-access-list-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hardfork.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LegacyTransaction = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst runtime_transaction_1 = require(\"./runtime-transaction\");\nconst signing_1 = require(\"./signing\");\nclass LegacyTransaction extends runtime_transaction_1.RuntimeTransaction {\n    constructor(data, common, extra) {\n        super(data, common, extra);\n        this.type = utils_1.Quantity.from(\"0x0\");\n        if (Array.isArray(data)) {\n            this.nonce = utils_1.Quantity.from(data[0]);\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data[1]);\n            this.gas = utils_1.Quantity.from(data[2]);\n            this.to = data[3].length == 0 ? null : ethereum_address_1.Address.from(data[3]);\n            this.value = utils_1.Quantity.from(data[4]);\n            this.data = utils_1.Data.from(data[5]);\n            this.v = utils_1.Quantity.from(data[6]);\n            this.r = utils_1.Quantity.from(data[7]);\n            this.s = utils_1.Quantity.from(data[8]);\n            this.raw = data;\n            if (!extra) {\n                // TODO(hack): Transactions that come from the database must not be\n                // validated since they may come from a fork.\n                const { from, serialized, hash } = this.computeIntrinsics(this.v, this.raw, this.common.chainId());\n                this.from = from;\n                this.serialized = serialized;\n                this.hash = hash;\n            }\n        }\n        else {\n            this.gasPrice = this.effectiveGasPrice = utils_1.Quantity.from(data.gasPrice);\n            this.validateAndSetSignature(data);\n        }\n    }\n    maxGasPrice() {\n        return this.gasPrice;\n    }\n    toJSON(common) {\n        const json = {\n            hash: this.hash,\n            type: this.type,\n            nonce: this.nonce,\n            blockHash: this.blockHash ? this.blockHash : null,\n            blockNumber: this.blockNumber ? this.blockNumber : null,\n            transactionIndex: this.index ? this.index : null,\n            from: this.from,\n            to: this.to,\n            value: this.value,\n            gas: this.gas,\n            gasPrice: this.gasPrice,\n            input: this.data,\n            v: this.v,\n            r: this.r,\n            s: this.s\n        };\n        if ((this.common || common).isActivatedEIP(2718)) {\n            json.type = this.type;\n        }\n        return json;\n    }\n    static fromTxData(data, common, extra) {\n        return new LegacyTransaction(data, common, extra);\n    }\n    static fromEIP2930AccessListTransaction(data, common) {\n        if (Array.isArray(data)) {\n            // remove 1st item, chainId, and 7th item, accessList\n            return new LegacyTransaction(data.slice(1, 7).concat(data.slice(8)), common);\n        }\n        return new LegacyTransaction(data, common);\n    }\n    toVmTransaction() {\n        const data = this.data.toBuffer();\n        return {\n            hash: () => utils_1.BUFFER_32_ZERO,\n            common: this.common,\n            nonce: this.nonce.toBigInt(),\n            gasPrice: this.gasPrice.toBigInt(),\n            gasLimit: this.gas.toBigInt(),\n            to: this.to,\n            value: this.value.toBigInt(),\n            data,\n            getSenderAddress: () => this.from,\n            /**\n             * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n             */\n            getBaseFee: () => {\n                return this.calculateIntrinsicGas();\n            },\n            getUpfrontCost: () => {\n                const { gas, gasPrice, value } = this;\n                return gas.toBigInt() * gasPrice.toBigInt() + value.toBigInt();\n            },\n            supports: (capability) => {\n                return false;\n            }\n        };\n    }\n    /**\n     * sign a transaction with a given private key, then compute and set the `hash`.\n     *\n     * @param privateKey - Must be 32 bytes in length\n     */\n    signAndHash(privateKey) {\n        if (this.v != null) {\n            throw new Error(\"Internal Error: RuntimeTransaction `sign` called but transaction has already been signed\");\n        }\n        // only legacy transactions can work with EIP-155 deactivated.\n        // (EIP-2930 and EIP-1559 made EIP-155 obsolete and this logic isn't needed\n        // for those transactions)\n        const eip155IsActive = this.common.gteHardfork(\"spuriousDragon\");\n        let chainId;\n        let raw;\n        let data;\n        let dataLength;\n        let sig;\n        if (eip155IsActive) {\n            chainId = utils_1.Quantity.toBuffer(this.common.chainId());\n            raw = this.toEthRawTransaction(chainId, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const ending = (0, rlp_1.encodeRange)(raw, 6, 3);\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output, ending.output], dataLength + ending.length));\n            sig = (0, utils_1.ecsignLegacy)(msgHash, privateKey, this.common.chainId());\n        }\n        else {\n            raw = this.toEthRawTransaction(utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY);\n            data = (0, rlp_1.encodeRange)(raw, 0, 6);\n            dataLength = data.length;\n            const msgHash = (0, utils_1.keccak)((0, rlp_1.digest)([data.output], dataLength));\n            sig = (0, utils_1.ecsignLegacy)(msgHash, privateKey);\n        }\n        this.v = utils_1.Quantity.from(sig.v);\n        this.r = utils_1.Quantity.from(sig.r);\n        this.s = utils_1.Quantity.from(sig.s);\n        raw[6] = this.v.toBuffer();\n        raw[7] = this.r.toBuffer();\n        raw[8] = this.s.toBuffer();\n        this.raw = raw;\n        const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n        const ranges = [data.output, encodedSignature.output];\n        const length = dataLength + encodedSignature.length;\n        // serialized is the rlp encoded raw data\n        this.serialized = (0, rlp_1.digest)(ranges, length);\n        this.hash = utils_1.Data.from((0, utils_1.keccak)(this.serialized));\n    }\n    toEthRawTransaction(v, r, s) {\n        return [\n            this.nonce.toBuffer(),\n            this.gasPrice.toBuffer(),\n            this.gas.toBuffer(),\n            this.to ? this.to.toBuffer() : utils_1.BUFFER_EMPTY,\n            this.value.toBuffer(),\n            this.data.toBuffer(),\n            v,\n            r,\n            s\n        ];\n    }\n    computeIntrinsics(v, raw, chainId) {\n        return (0, signing_1.computeIntrinsicsLegacyTx)(v, raw, chainId);\n    }\n    updateEffectiveGasPrice() { }\n}\nexports.LegacyTransaction = LegacyTransaction;\n//# sourceMappingURL=legacy-transaction.js.map","\"use strict\";\n// NOTE these params may need to be changed at each hardfork\n// they can be tracked here: https://github.com/ethereumjs/ethereumjs-vm/blob/master/packages/common/src/hardforks/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Params = void 0;\nexports.Params = {\n    /**\n     *  Per transaction not creating a contract. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_GAS: 21000n,\n    /**\n     * Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions.\n     * Ganache supports eth_call and debuging old transactions that should be run\n     * in the context of their original hardfork, so hardforks we don't support\n     * are listed here.\n     */\n    TRANSACTION_DATA_NON_ZERO_GAS: new Map([\n        [\"chainstart\", 68n],\n        [\"homestead\", 68n],\n        [\"dao\", 68n],\n        [\"tangerineWhistle\", 68n],\n        [\"spuriousDragon\", 68n],\n        [\"byzantium\", 68n],\n        [\"constantinople\", 68n],\n        [\"petersburg\", 68n],\n        [\"istanbul\", 16n],\n        [\"muirGlacier\", 16n],\n        [\"berlin\", 16n],\n        [\"london\", 16n],\n        [\"arrowGlacier\", 16n],\n        [\"grayGlacier\", 16n],\n        [\"merge\", 16n],\n        [\"shanghai\", 16n]\n    ]),\n    /**\n     * Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions.\n     */\n    TRANSACTION_DATA_ZERO_GAS: 4n,\n    /**\n     * Fee for creation a transaction (includes base fee of `TRANSACTION_GAS`)\n     */\n    TRANSACTION_CREATION_GAS: 53000n,\n    /**\n     * Only used after shanghai hardFork, `initcode` per byte cost is 0.0625.\n     * While fractional gas costs are not permitted in the EVM, we can approximate\n     * it by charging per-word.\n     */\n    INITCODE_WORD_GAS: 2n,\n    /**\n     * Gas cost per address in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_ADDRESS_GAS: 2400,\n    /**\n     * Gas cost per storage key in an EIP-2930 Access List transaction\n     */\n    ACCESS_LIST_STORAGE_KEY_GAS: 1900\n};\n//# sourceMappingURL=params.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=raw.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=rpc-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeTransaction = exports.hasPartialSignature = exports.toValidLengthAddress = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst base_transaction_1 = require(\"./base-transaction\");\nconst transaction_receipt_1 = require(\"./transaction-receipt\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst toValidLengthAddress = (address, fieldName) => {\n    const buffer = utils_1.Data.toBuffer(address);\n    if (buffer.byteLength !== ethereum_address_1.Address.ByteLength) {\n        throw new Error(`The field ${fieldName} must have byte length of ${ethereum_address_1.Address.ByteLength}`);\n    }\n    return ethereum_address_1.Address.from(buffer);\n};\nexports.toValidLengthAddress = toValidLengthAddress;\nconst hasPartialSignature = (data) => {\n    return data[\"v\"] != null || data[\"r\"] != null || data[\"s\"] != null;\n};\nexports.hasPartialSignature = hasPartialSignature;\nconst ONE_BUFFER = utils_1.Quantity.One.toBuffer();\n/**\n * A RuntimeTransaction can be changed; its hash is not finalized and it is not\n * yet part of a block.\n */\nclass RuntimeTransaction extends base_transaction_1.BaseTransaction {\n    constructor(data, common, extra) {\n        super(common, extra);\n        /**\n         * used by the miner to mark if this transaction is eligible for reordering or\n         * removal\n         */\n        this.locked = false;\n        this.validateAndSetSignature = (data) => {\n            // If we have v, r, or s validate and use them\n            if ((0, exports.hasPartialSignature)(data)) {\n                if (data.v == null || data.r == null || data.s == null) {\n                    throw new Error(\"Transaction signature is incomplete; v, r, and s are required.\");\n                }\n                // if we have a signature the `nonce` field is required\n                if (data.nonce == null) {\n                    throw new Error(\"Signed transaction is incomplete; nonce is required.\");\n                }\n                this.v = utils_1.Quantity.from(data.v, true);\n                this.r = utils_1.Quantity.from(data.r, true);\n                this.s = utils_1.Quantity.from(data.s, true);\n                // compute the `hash` and the `from` address\n                const raw = this.toEthRawTransaction(this.v.toBuffer(), this.r.toBuffer(), this.s.toBuffer());\n                this.raw = raw;\n                if (!this.from) {\n                    const { from, serialized, hash } = this.computeIntrinsics(this.v, raw, this.common.chainId());\n                    // if the user specified a `from` address in addition to the  `v`, `r`,\n                    //  and `s` values, make sure the `from` address matches\n                    if (data.from !== null) {\n                        const userFrom = (0, exports.toValidLengthAddress)(data.from, \"from\");\n                        if (!from.toBuffer().equals(userFrom.toBuffer())) {\n                            throw new Error(\"Transaction is signed and contains a `from` field, but the signature doesn't match.\");\n                        }\n                    }\n                    this.from = from;\n                    this.serialized = serialized;\n                    this.hash = hash;\n                }\n            }\n            else if (data.from != null) {\n                // we don't have a signature yet, so we just need to record the `from`\n                // address for now. The TransactionPool will fill in the `hash` and\n                // `raw` fields during signing\n                this.from = (0, exports.toValidLengthAddress)(data.from, \"from\");\n            }\n        };\n        let finalizer;\n        this.finalized = new Promise(resolve => {\n            finalizer = (...args) => process.nextTick(resolve, ...args);\n        });\n        this.finalizer = finalizer;\n        if (!Array.isArray(data)) {\n            // handle JSON\n            this.nonce = utils_1.Quantity.from(data.nonce, true);\n            this.gas = utils_1.Quantity.from(data.gas == null ? data.gasLimit : data.gas);\n            this.to = data.to == null ? null : (0, exports.toValidLengthAddress)(data.to, \"to\");\n            this.value = utils_1.Quantity.from(data.value || 0);\n            const dataVal = data.data == null\n                ? data.input == null\n                    ? \"0x\"\n                    : data.input\n                : data.data;\n            this.data = utils_1.Data.from(dataVal);\n        }\n    }\n    serializeForDb(blockHash, blockNumber, transactionIndex) {\n        const legacy = this.raw.length === 9;\n        // todo(perf):make this work with encodeRange and digest\n        const txAndExtraData = [\n            // todo: this is encoded differently in the tx table than it is in the\n            // block table. we should migrate the tx table to use the same format as\n            // the block (`Buffer.concat([type, encode(raw)])`) so that we can avoid\n            // block it twice for each block save step.\n            legacy ? this.raw : [this.type.toBuffer(), ...this.raw],\n            [\n                this.from.toBuffer(),\n                this.hash.toBuffer(),\n                blockHash.toBuffer(),\n                blockNumber.toBuffer(),\n                transactionIndex.toBuffer(),\n                this.effectiveGasPrice.toBuffer()\n            ]\n        ];\n        return (0, rlp_1.encode)(txAndExtraData);\n    }\n    /**\n     * Initializes the receipt and logs\n     * @param result -\n     * @returns RLP encoded data for use in a transaction trie\n     */\n    fillFromResult(result, cumulativeGasUsed) {\n        const vmResult = result.execResult;\n        const execException = vmResult.exceptionError;\n        let status;\n        if (execException) {\n            status = utils_1.BUFFER_ZERO;\n            this.execException = new ethereum_utils_1.RuntimeError(this.hash, result, ethereum_utils_1.RETURN_TYPES.TRANSACTION_HASH);\n        }\n        else {\n            status = ONE_BUFFER;\n        }\n        const receipt = (this.receipt = transaction_receipt_1.InternalTransactionReceipt.fromValues(status, utils_1.Quantity.toBuffer(cumulativeGasUsed), result.bloom.bitvector, (this.logs = vmResult.logs || []), utils_1.Quantity.toBuffer(result.totalGasSpent), result.createdAddress ? result.createdAddress.buf : null, this.type));\n        return receipt.serialize(false);\n    }\n    getReceipt() {\n        return this.receipt;\n    }\n    getLogs() {\n        return this.logs;\n    }\n    /**\n     * Returns a Promise that is resolved with the confirmation status and, if\n     * appropriate, an error property.\n     *\n     * Note: it is possible to be confirmed AND have an error\n     *\n     * @param _event - \"finalized\"\n     */\n    once(_event) {\n        return this.finalized;\n    }\n    /**\n     * Mark this transaction as finalized, notifying all past and future\n     * \"finalized\" event subscribers.\n     *\n     * Note:\n     *\n     * @param status -\n     * @param error -\n     */\n    finalize(status, error = null) {\n        // resolves the `#finalized` promise\n        this.finalizer({ status, error });\n    }\n}\nexports.RuntimeTransaction = RuntimeTransaction;\n//# sourceMappingURL=runtime-transaction.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeIntrinsicsFeeMarketTx = exports.computeIntrinsicsAccessListTx = exports.digestWithPrefix = exports.encodeWithPrefix = exports.computeIntrinsicsLegacyTx = exports.computeFromAddress = exports.publicKeyConvert = exports.ecdsaRecover = exports.isValidSigRecovery = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\n/**\n * Copies `length` bytes from `source` to the `target`, filling remaining\n * bytes beyond `length - source.length` with `0`. Fills to the left.\n *\n * ```typescript\n * const source = Buffer.from([1, 2, 3]);\n * const target = Buffer.from([9, 9, 9, 9, 9, 9]);\n * copyOrFill(source, target, 1, 4);\n * // target.equals(Buffer.from([9, 0, 1, 2, 3, 9]));\n * //                               ^  ^  ^  ^\n * ```\n *\n * @param source - A Buffer to copy from.\n * @param target - A Buffer to copy into.\n * @param targetStart - The offset within `target` at which to begin writing.\n * @param length - The amount of bytes to copy or fill into the `target`.\n */\nfunction copyOrFill(source, target, targetStart, length) {\n    if (source.byteLength > length)\n        throw new Error(\"Invalid signature\");\n    // first, copy zeroes\n    const numZeroes = length - source.byteLength;\n    const endZeroes = targetStart + numZeroes;\n    let i = targetStart;\n    for (; i < endZeroes; i++) {\n        target[i] = 0;\n    }\n    // then copy the source into the target:\n    let end = targetStart + length;\n    const sourceOffset = targetStart + numZeroes;\n    for (; i < end; i++) {\n        target[i] = source[i - sourceOffset];\n    }\n}\nconst isValidSigRecovery = (recovery) => {\n    return recovery === 1 || recovery === 0;\n};\nexports.isValidSigRecovery = isValidSigRecovery;\n/**\n *\n * @param sharedBuffer - A Buffer, where bytes 0 - 97 are to be used by this function\n * @param r -\n * @param s -\n * @param msgHash -\n * @param recovery -\n */\nconst ecdsaRecover = (partialRlp, sharedBuffer, v, chainId, rBuf, sBuf) => {\n    let data;\n    let recid;\n    const eip155V = chainId * 2n + 35n;\n    const isEip155 = v === eip155V || v === eip155V + 1n;\n    if (isEip155) {\n        const chainBuf = (0, utils_1.bigIntToBuffer)(chainId);\n        const extras = [chainBuf, utils_1.BUFFER_EMPTY, utils_1.BUFFER_EMPTY];\n        const epilogue = (0, rlp_1.encodeRange)(extras, 0, 3);\n        data = (0, rlp_1.digest)([partialRlp.output, epilogue.output], partialRlp.length + epilogue.length);\n        recid = Number(v - eip155V);\n    }\n    else {\n        data = (0, rlp_1.digest)([partialRlp.output], partialRlp.length);\n        recid = Number(v) - 27;\n    }\n    return _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid);\n};\nexports.ecdsaRecover = ecdsaRecover;\nfunction _ecdsaRecover(data, sharedBuffer, rBuf, sBuf, recid) {\n    if (!(0, exports.isValidSigRecovery)(recid)) {\n        throw new Error(\"Invalid signature v value\");\n    }\n    const message = (0, utils_1.keccak)(data);\n    const signature = sharedBuffer.slice(0, 64);\n    copyOrFill(rBuf, signature, 0, 32);\n    copyOrFill(sBuf, signature, 32, 32);\n    const output = sharedBuffer.slice(0, 33);\n    const success = secp256k1_1.default.ecdsaRecover(output, signature, recid, message);\n    if (success !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return output;\n}\n/**\n *\n * @param sharedBuffer - A Buffer, bytes 0 - 65 will be overwritten\n * @param senderPubKey -\n */\nconst publicKeyConvert = (sharedBuffer, senderPubKey) => {\n    const publicKey = sharedBuffer.slice(0, 65);\n    const result = secp256k1_1.default.publicKeyConvert(publicKey, senderPubKey);\n    if (result !== 0) {\n        throw new Error(\"Invalid Signature\");\n    }\n    return publicKey;\n};\nexports.publicKeyConvert = publicKeyConvert;\n/**\n * A Buffer that can be reused by `computeFromAddress`.\n */\nconst SHARED_BUFFER = Buffer.allocUnsafe(65);\nconst computeFromAddress = (partialRlp, v, rBuf, sBuf, chainId) => {\n    const senderPubKey = (0, exports.ecdsaRecover)(partialRlp, SHARED_BUFFER, v, chainId, rBuf, sBuf);\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    return ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n};\nexports.computeFromAddress = computeFromAddress;\nconst computeIntrinsicsLegacyTx = (v, raw, chainId) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 6);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 6, 3);\n    const ranges = [encodedData.output, encodedSignature.output];\n    const length = encodedData.length + encodedSignature.length;\n    const serialized = (0, rlp_1.digest)(ranges, length);\n    return {\n        from: (0, exports.computeFromAddress)(encodedData, v.toBigInt(), raw[7], raw[8], chainId),\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized\n    };\n};\nexports.computeIntrinsicsLegacyTx = computeIntrinsicsLegacyTx;\n/**\n * Allocates a buffer of size + 1, to be used by `digest`.\n * The extra byte is used to store the transaction type.\n * The tx type is stored in the first byte of the buffer.\n * @param size\n * @returns\n */\nconst allocUnsafePrefix = (size) => Buffer.allocUnsafe(size + 1);\n/**\n * Encodes the given `raw` data and prepends the `prefix` to the output Buffer.\n * @param prefix must be smaller than 0x7f https://eips.ethereum.org/EIPS/eip-2718#transactiontype-only-goes-up-to-0x7f\n * @param raw\n * @returns\n */\nconst encodeWithPrefix = (prefix, raw) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, raw.length);\n    const ranges = [encodedData.output];\n    const length = encodedData.length;\n    return (0, exports.digestWithPrefix)(prefix, ranges, length);\n};\nexports.encodeWithPrefix = encodeWithPrefix;\n/**\n * Digests the rlp `ranges` and prepends the `prefix` to the output Buffer.\n *\n * This function avoids the need to copy the output of `digest` into a new\n * prefixed buffer by over provisioning the initial output buffer.\n * @param prefix must be smaller than 0x7f https://eips.ethereum.org/EIPS/eip-2718#transactiontype-only-goes-up-to-0x7f\n * @param ranges\n * @param length\n * @returns\n */\nconst digestWithPrefix = (prefix, ranges, length) => {\n    // digest the ranges using the provided allocUnsafe function at an offset of `1`\n    const output = (0, rlp_1.digest)(ranges, length, 1, allocUnsafePrefix);\n    // set the first byte to the prefix\n    output[0] = prefix;\n    return output;\n};\nexports.digestWithPrefix = digestWithPrefix;\nconst computeIntrinsicsAccessListTx = (v, raw) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 8);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 8, 3);\n    const ranges = [encodedData.output, encodedSignature.output];\n    const length = encodedData.length + encodedSignature.length;\n    const serialized = (0, exports.digestWithPrefix)(1, ranges, length);\n    const data = (0, exports.digestWithPrefix)(1, [encodedData.output], encodedData.length);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[9], raw[10], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.subarray(1)).subarray(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized\n    };\n};\nexports.computeIntrinsicsAccessListTx = computeIntrinsicsAccessListTx;\nconst computeIntrinsicsFeeMarketTx = (v, raw) => {\n    const encodedData = (0, rlp_1.encodeRange)(raw, 0, 9);\n    const encodedSignature = (0, rlp_1.encodeRange)(raw, 9, 3);\n    const ranges = [encodedData.output, encodedSignature.output];\n    const length = encodedData.length + encodedSignature.length;\n    const serialized = (0, exports.digestWithPrefix)(2, ranges, length);\n    const data = (0, exports.digestWithPrefix)(2, [encodedData.output], encodedData.length);\n    const senderPubKey = _ecdsaRecover(data, SHARED_BUFFER, raw[10], raw[11], v.toNumber());\n    const publicKey = (0, exports.publicKeyConvert)(SHARED_BUFFER, senderPubKey);\n    const from = ethereum_address_1.Address.from((0, utils_1.keccak)(publicKey.slice(1)).slice(-20));\n    return {\n        from: from,\n        hash: utils_1.Data.from((0, utils_1.keccak)(serialized), 32),\n        serialized\n    };\n};\nexports.computeIntrinsicsFeeMarketTx = computeIntrinsicsFeeMarketTx;\n//# sourceMappingURL=signing.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TransactionFactory = exports.TransactionType = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst legacy_transaction_1 = require(\"./legacy-transaction\");\nconst eip2930_access_list_transaction_1 = require(\"./eip2930-access-list-transaction\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst eip1559_fee_market_transaction_1 = require(\"./eip1559-fee-market-transaction\");\nconst secp256k1_1 = require(\"@ganache/secp256k1\");\n/**\n * @param common\n * @param tx\n * @throws\n */\nfunction assertValidTransactionSValue(common, tx) {\n    // Transaction signatures whose s-value is greater than secp256k1n/2 are\n    // invalid after EIP-2 hardfork (homestead). See: https://eips.ethereum.org/EIPS/eip-2\n    if (tx.s &&\n        tx.s.toBigInt() >= secp256k1_1.SECP256K1_MAX_PRIVATE_KEY_DIV_2 &&\n        // EIP-2 is in homestead, but we can't use isActivatedEIP(2) because\n        // Common doesn't have that information for this hardfork.\n        common.gteHardfork(\"homestead\")) {\n        throw new Error(\"Invalid Signature: s-values greater than secp256k1n/2 are considered invalid\");\n    }\n}\nvar TransactionType;\n(function (TransactionType) {\n    TransactionType[TransactionType[\"Legacy\"] = 0] = \"Legacy\";\n    TransactionType[TransactionType[\"EIP2930AccessList\"] = 1] = \"EIP2930AccessList\";\n    TransactionType[TransactionType[\"EIP1559AccessList\"] = 2] = \"EIP1559AccessList\";\n})(TransactionType = exports.TransactionType || (exports.TransactionType = {}));\nclass TransactionFactory {\n    constructor(raw, common) {\n        const [txData, extra] = (0, rlp_1.decode)(raw);\n        this.tx = TransactionFactory.fromDatabaseTx(txData, common, extra);\n    }\n    /**\n     * Validates the txType against active hardforks and EIPs. May\n     * coerce transactions to a transaction type that differs from the specified\n     * txType. For example, if the txType is EIP2930AccessList but the hardfork\n     * is before EIP-2930 is activated, the txType will be coerced to Legacy.\n     *\n     * @param txData\n     * @param txType\n     * @param common\n     * @param extra\n     * @returns\n     */\n    static _fromUnsafeUserData(txData, txType, common, extra) {\n        // if tx type envelope isn't available yet on this HF,\n        // return legacy txs as is and convert typed txs to legacy\n        if (!common.isActivatedEIP(2718)) {\n            return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n        }\n        else if (!common.isActivatedEIP(1559)) {\n            if (txType === TransactionType.Legacy) {\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            }\n            else if (txType === TransactionType.EIP2930AccessList) {\n                if (common.isActivatedEIP(2930)) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData((txData), common, extra);\n                }\n                else {\n                    // TODO: I believe this is unreachable with current architecture.\n                    // If 2718 is supported, so is 2930.\n                    // Issue: https://github.com/trufflesuite/ganache/issues/3487\n                    throw new ethereum_utils_1.CodedError(`EIP 2930 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n                }\n            }\n            else if (txType === TransactionType.EIP1559AccessList) {\n                throw new ethereum_utils_1.CodedError(`EIP 1559 is not activated.`, utils_1.JsonRpcErrorCode.INVALID_PARAMS);\n            }\n        }\n        // eip 1559, 2930, and 2718 are activated\n        else {\n            // we can assume that all database transactions came from us, so\n            // the type doesn't need to be normalized.\n            if (Array.isArray(txData)) {\n                if (txType === TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP2930AccessList) {\n                    return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP1559AccessList) {\n                    return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                }\n            }\n            else {\n                const toEIP1559 = (txType === TransactionType.Legacy ||\n                    txType === TransactionType.EIP2930AccessList) &&\n                    txData.gasPrice === undefined;\n                if (txType === TransactionType.EIP1559AccessList || toEIP1559) {\n                    const tx = eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n                    if (toEIP1559) {\n                        // they didn't specify the type as eip-1559 (type 2), so we are\n                        // upgrading it. BUT, there's still a chance they sent us this data,\n                        // so we don't want to overwrite it.\n                        if (!txData.maxFeePerGas) {\n                            tx.maxFeePerGas = utils_1.Quantity.from(null);\n                        }\n                        if (!txData.maxPriorityFeePerGas) {\n                            tx.maxPriorityFeePerGas = utils_1.Quantity.Gwei;\n                        }\n                    }\n                    return tx;\n                }\n                else if (txType === TransactionType.Legacy) {\n                    return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                }\n                else if (txType === TransactionType.EIP2930AccessList) {\n                    // if no access list is provided, we convert to legacy\n                    if (txData.accessList === undefined) {\n                        return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n                    }\n                    else {\n                        return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n                    }\n                }\n            }\n        }\n        throw new ethereum_utils_1.CodedError(`Tx instantiation with supplied type not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The rpc transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromRpc(txData, common, extra) {\n        const txType = this.typeOfRPC(txData);\n        const tx = this._fromUnsafeUserData(txData, txType, common, extra);\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * @param txData - The raw transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromDatabaseTx(txData, common, extra) {\n        const txType = this.typeOfRaw(txData);\n        switch (txType) {\n            case TransactionType.EIP1559AccessList:\n                return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData.slice(1), common, extra);\n            case TransactionType.Legacy:\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            case TransactionType.EIP2930AccessList:\n                return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData.slice(1), common, extra);\n            default:\n                throw new ethereum_utils_1.CodedError(`Transactions with supplied type ${txType} not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Create a transaction from a `txData` object without the type field in the first position (for type 1 and 2 txs)\n     *\n     * This method should only be used with \"safe\" data that doesn't need to be validated against the active hardforks or\n     * EIPs. In other words: it should come from a fork, or from the database.\n     *\n     * @tparam txTYpe - The type of txData. Throws if the the type is not supported.\n     * @param txData - The raw transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     * @param extra\n     */\n    static fromSafeTypeAndTxData(txType, txData, common, extra) {\n        switch (txType) {\n            case TransactionType.EIP1559AccessList:\n                return eip1559_fee_market_transaction_1.EIP1559FeeMarketTransaction.fromTxData(txData, common, extra);\n            case TransactionType.Legacy:\n                return legacy_transaction_1.LegacyTransaction.fromTxData(txData, common, extra);\n            case TransactionType.EIP2930AccessList:\n                return eip2930_access_list_transaction_1.EIP2930AccessListTransaction.fromTxData(txData, common, extra);\n            default:\n                throw new ethereum_utils_1.CodedError(`Transactions with supplied type ${txType} not supported`, utils_1.JsonRpcErrorCode.METHOD_NOT_FOUND);\n        }\n    }\n    /**\n     * Create a transaction from a `txData` object\n     *\n     * When transaction types are activated (EIP 2718) the txData will be checked\n     * for a transaction envelope (first byte < 192) before determining the\n     * decoding strategy, otherwise it will be decoded as a Legacy Transaction. If\n     * the transaction contains a transaction envelop, but EIP 2718 is not active\n     * decoding will fail and an exception will be thrown.\n     *\n     * @param txData - The raw hex string transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n     * @param common - Options to pass on to the constructor of the transaction\n     */\n    static fromString(txData, common) {\n        let data = utils_1.Data.toBuffer(txData);\n        const type = data[0];\n        const txType = this.typeOf(type);\n        let tx;\n        if (common.isActivatedEIP(2718)) {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(txType === TransactionType.Legacy ? data : data.slice(1));\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromUnsafeUserData(raw, txType, common);\n        }\n        else {\n            let raw;\n            try {\n                raw = (0, rlp_1.decode)(data);\n            }\n            catch (e) {\n                throw new Error(\"Could not decode transaction: \" + e.message);\n            }\n            tx = this._fromUnsafeUserData(raw, TransactionType.Legacy, common);\n        }\n        assertValidTransactionSValue(common, tx);\n        return tx;\n    }\n    static typeOf(type) {\n        if (type === TransactionType.EIP1559AccessList ||\n            type === TransactionType.EIP2930AccessList) {\n            return type;\n        }\n        else {\n            return TransactionType.Legacy;\n        }\n    }\n    /**\n     * Pulls the type out of the raw transaction data, which is the first byte of\n     * the raw data, unless the data is a legacy transaction (raw.length === 9),\n     * in which case the type is `0`.\n     *\n     * This does not validate the type, it just returns it.\n     *\n     * @param raw\n     * @returns\n     */\n    static typeOfRaw(raw) {\n        // LegacyTransactions won't have the type up front to parse\n        if (raw.length === 9) {\n            return TransactionType.Legacy;\n        }\n        return raw[0][0];\n    }\n    static typeOfRPC(rpc) {\n        if (!(\"type\" in rpc) || rpc.type === undefined) {\n            return TransactionType.Legacy;\n        }\n        else {\n            // The type must be a hex value\n            const txType = parseInt(rpc.type, 16);\n            return this.typeOf(txType);\n        }\n    }\n}\nexports.TransactionFactory = TransactionFactory;\n//# sourceMappingURL=transaction-factory.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _InternalTransactionReceipt_init;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InternalTransactionReceipt = void 0;\nconst ethereum_utils_1 = require(\"@ganache/ethereum-utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst utils_1 = require(\"@ganache/utils\");\nconst STATUSES = [utils_1.Quantity.Zero, utils_1.Quantity.One];\nclass InternalTransactionReceipt {\n    constructor(data) {\n        _InternalTransactionReceipt_init.set(this, (status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress = null, type = null) => {\n            this.raw = [status, cumulativeGasUsed, logsBloom, logs];\n            this.contractAddress = contractAddress;\n            this.gasUsed = gasUsed;\n            this.txType = type;\n        });\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            __classPrivateFieldGet(this, _InternalTransactionReceipt_init, \"f\").call(this, decoded[0], decoded[1], decoded[2], decoded[3], decoded[4], decoded[5]);\n        }\n    }\n    static fromValues(status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type = null) {\n        const receipt = new InternalTransactionReceipt();\n        __classPrivateFieldGet(receipt, _InternalTransactionReceipt_init, \"f\").call(receipt, status, cumulativeGasUsed, logsBloom, logs, gasUsed, contractAddress, type);\n        return receipt;\n    }\n    serialize(all) {\n        if (this.encoded == null) {\n            this.encoded = (0, rlp_1.encodeRange)(this.raw, 0, 4);\n        }\n        if (all) {\n            // the database format includes gasUsed and the contractAddress:\n            const extras = [\n                this.gasUsed,\n                this.contractAddress\n            ];\n            const epilogue = (0, rlp_1.encodeRange)(extras, 0, 2);\n            return (0, rlp_1.digest)([this.encoded.output, epilogue.output], this.encoded.length + epilogue.length);\n        }\n        else {\n            // receipt trie format:\n            const serialized = (0, rlp_1.digest)([this.encoded.output], this.encoded.length);\n            return this.txType\n                ? Buffer.concat([this.txType.toBuffer(), serialized])\n                : serialized;\n        }\n    }\n    toJSON(transaction, common) {\n        const raw = this.raw;\n        const contractAddress = this.contractAddress.length === 0\n            ? null\n            : utils_1.Data.from(this.contractAddress);\n        const { blockHash, blockNumber } = transaction;\n        const blockLog = ethereum_utils_1.BlockLogs.create(blockHash);\n        const transactionHash = transaction.hash;\n        const transactionIndex = transaction.index;\n        blockLog.blockNumber = blockNumber;\n        raw[3].forEach(l => blockLog.append(transactionIndex, transactionHash, l));\n        const logs = [...blockLog.toJSON()];\n        const json = {\n            transactionHash,\n            transactionIndex,\n            blockNumber,\n            blockHash,\n            from: transaction.from,\n            to: contractAddress ? null : transaction.to,\n            cumulativeGasUsed: utils_1.Quantity.from(raw[1]),\n            gasUsed: utils_1.Quantity.from(this.gasUsed),\n            contractAddress,\n            logs,\n            logsBloom: utils_1.Data.from(raw[2], 256),\n            status: STATUSES[raw[0][0]],\n            effectiveGasPrice: transaction.effectiveGasPrice\n        };\n        if (transaction.type && common.isActivatedEIP(2718)) {\n            json.type = transaction.type;\n        }\n        return json;\n    }\n}\nexports.InternalTransactionReceipt = InternalTransactionReceipt;\n_InternalTransactionReceipt_init = new WeakMap();\n//# sourceMappingURL=transaction-receipt.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=transaction-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=vm-transaction.js.map","\"use strict\";\n/*!\n * @ganache/ethereum-utils\n *\n * @author David Murdoch <david@trufflesuite.com> (https://davidmurdoch.com)\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbortError = void 0;\nclass AbortError extends Error {\n    constructor() {\n        super(\"The user aborted a request.\");\n    }\n}\nexports.AbortError = AbortError;\n//# sourceMappingURL=abort-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CallError = void 0;\nconst errors_1 = require(\"./errors\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nclass CallError extends coded_error_1.CodedError {\n    constructor(result) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_1.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = utils_2.Data.toString(returnValue);\n    }\n}\nexports.CallError = CallError;\n//# sourceMappingURL=call-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CodedError = void 0;\nconst ethereumjs_abi_1 = require(\"ethereumjs-abi\");\nconst REVERT_REASON = Buffer.from(\"08c379a0\", \"hex\"); // keccak(\"Error(string)\").slice(0, 4)\nclass CodedError extends Error {\n    constructor(message, code) {\n        super(message);\n        CodedError.captureStackTraceExtended.bind(this, message);\n        this.code = code;\n    }\n    static from(error, code) {\n        const codedError = new CodedError(error.message, code);\n        codedError.stack = error.stack;\n        return codedError;\n    }\n    static nonEnumerableProperty(value) {\n        // The field `enumerable` is `false` by default.\n        return {\n            value: value,\n            writable: true,\n            configurable: true\n        };\n    }\n    static captureStackTraceExtended(message) {\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        }\n        else {\n            // Generic way to set the error stack trace.\n            Object.defineProperty(this, \"stack\", CodedError.nonEnumerableProperty(Error(message).stack));\n            // Use the `+` operator with an empty string to implicitly type cast the\n            // `message` argument into a string.\n            Object.defineProperty(this, \"message\", CodedError.nonEnumerableProperty(message !== void 0 ? \"\" + message : \"\"));\n        }\n    }\n    static createRevertReason(returnValue) {\n        let reason;\n        if (returnValue.length > 4 &&\n            REVERT_REASON.compare(returnValue, 0, 4) === 0) {\n            try {\n                // it is possible for the `returnValue` to be gibberish that can't be\n                // decoded. See: https://github.com/trufflesuite/ganache/pull/452\n                reason = (0, ethereumjs_abi_1.rawDecode)([\"bytes\"], returnValue.slice(4))[0].toString();\n            }\n            catch {\n                // ignore error since reason string recover is impossible\n                reason = null;\n            }\n        }\n        else {\n            reason = null;\n        }\n        return reason;\n    }\n}\nexports.CodedError = CodedError;\n//# sourceMappingURL=coded-error.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.INSUFFICIENT_FUNDS = exports.TRANSACTION_LOCKED = exports.VM_EXCEPTIONS = exports.VM_EXCEPTION = exports.GAS_LIMIT = exports.INITCODE_TOO_LARGE = exports.INTRINSIC_GAS_TOO_LOW = exports.REPLACED = exports.UNDERPRICED = exports.NONCE_TOO_LOW = exports.INVALID_SENDER = void 0;\n/**\n * Returned if the transaction contains an invalid signature.\n */\nexports.INVALID_SENDER = \"invalid sender\";\n/**\n * Returned if the nonce of a transaction is lower than the one present in the local chain.\n */\nexports.NONCE_TOO_LOW = \"nonce too low\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.UNDERPRICED = \"transaction underpriced\";\n/**\n * Returned if a transaction's gas price is below the minimum configured for the transaction pool.\n */\nexports.REPLACED = \"transaction replaced by better transaction\";\n/**\n * Returned if the transaction is specified to use less gas than required to start the invocation.\n */\nexports.INTRINSIC_GAS_TOO_LOW = \"intrinsic gas too low\";\n/**\n * Returned if the transaction's `to` address is empty and its `data`/`input` field is greater than the EIP-3860 limit of\n * 49152 bytes. Can be bypassed by setting the `--chain.allowUnlimitedInitCodeSize` flag to `true`.\n */\nexports.INITCODE_TOO_LARGE = \"Transaction's `data`/`input` field is greater than 49152 bytes, which isn't allowed as of EIP-3860. To bypass this restriction set the `--chain.allowUnlimitedInitCodeSize` flag to `true`.\";\n/**\n * Returned if a transaction's requested gas limit exceeds the maximum allowance of the current block.\n */\nexports.GAS_LIMIT = \"exceeds block gas limit\";\n/**\n * Prefix for a single VM Exception occurring when running a transaction or block\n */\nexports.VM_EXCEPTION = \"VM Exception while processing transaction: \";\n/**\n * Prefix for multiple VM Exceptions occurring when running transactions or a block\n */\nexports.VM_EXCEPTIONS = \"Multiple VM Exceptions while processing transactions: : \\n\\n\";\n/**\n * Returned if a replacement transaction is sent while the potentially replaced transaction is being mined.\n */\nexports.TRANSACTION_LOCKED = \"transaction can't be replaced, mining has already started. (please open an issue with reproduction steps: https://github.com/trufflesuite/ganache/issues/new)\";\n/**\n * Returned if a transaction may require more funds than than account currently has available.\n */\nexports.INSUFFICIENT_FUNDS = \"insufficient funds for gas * price + value\";\n//# sourceMappingURL=errors.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RuntimeError = exports.RETURN_TYPES = void 0;\nconst errors_1 = require(\"./errors\");\nconst utils_1 = require(\"@ganache/utils\");\nconst coded_error_1 = require(\"./coded-error\");\nconst utils_2 = require(\"@ganache/utils\");\nvar RETURN_TYPES;\n(function (RETURN_TYPES) {\n    RETURN_TYPES[RETURN_TYPES[\"TRANSACTION_HASH\"] = 0] = \"TRANSACTION_HASH\";\n    RETURN_TYPES[RETURN_TYPES[\"RETURN_VALUE\"] = 1] = \"RETURN_VALUE\";\n})(RETURN_TYPES = exports.RETURN_TYPES || (exports.RETURN_TYPES = {}));\nclass RuntimeError extends coded_error_1.CodedError {\n    constructor(transactionHash, result, returnType) {\n        const execResult = result.execResult;\n        const error = execResult.exceptionError.error;\n        let message = errors_1.VM_EXCEPTION + error;\n        super(message, utils_2.JsonRpcErrorCode.INVALID_INPUT);\n        coded_error_1.CodedError.captureStackTraceExtended.bind(this, message);\n        this.name = this.constructor.name;\n        const hash = transactionHash.toString();\n        const { returnValue } = execResult;\n        const reason = coded_error_1.CodedError.createRevertReason(returnValue);\n        this.message = reason ? message + \" \" + reason : message;\n        this.data = {\n            hash: hash,\n            // in some failure scenarios, like when the initcode is too large,\n            // `runState` is undefined. In that case, we'll use `undefined` for the\n            // programCounter.\n            programCounter: execResult.runState?.programCounter,\n            result: returnType === RETURN_TYPES.TRANSACTION_HASH\n                ? hash\n                : utils_1.Data.toString(returnValue || \"0x\"),\n            reason: reason,\n            message: error\n        };\n    }\n}\nexports.RuntimeError = RuntimeError;\n//# sourceMappingURL=runtime-error.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors/coded-error\"), exports);\n__exportStar(require(\"./errors/errors\"), exports);\n__exportStar(require(\"./errors/runtime-error\"), exports);\n__exportStar(require(\"./errors/call-error\"), exports);\n__exportStar(require(\"./errors/abort-error\"), exports);\n__exportStar(require(\"./things/account\"), exports);\n__exportStar(require(\"./things/blocklogs\"), exports);\n__exportStar(require(\"./things/tags\"), exports);\n__exportStar(require(\"./things/trace-data\"), exports);\n__exportStar(require(\"./things/trace-storage-map\"), exports);\n__exportStar(require(\"./types/debug-storage\"), exports);\n__exportStar(require(\"./types/extract-values-from-types\"), exports);\n__exportStar(require(\"./types/filters\"), exports);\n__exportStar(require(\"./types/hex-datatypes\"), exports);\n__exportStar(require(\"./types/shh\"), exports);\n__exportStar(require(\"./types/subscriptions\"), exports);\n__exportStar(require(\"./types/trace-transaction\"), exports);\n__exportStar(require(\"./types/tuple-from-union\"), exports);\n__exportStar(require(\"./types/account-proof\"), exports);\n__exportStar(require(\"./types/fee-history\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Account = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst util_1 = require(\"@ethereumjs/util\");\nconst rlp_1 = require(\"@ganache/rlp\");\nclass Account {\n    constructor(address) {\n        this.storageRoot = util_1.KECCAK256_RLP;\n        this.codeHash = util_1.KECCAK256_NULL;\n        this.address = address;\n        this.balance = utils_1.Quantity.Empty;\n        this.nonce = utils_1.Quantity.Empty;\n    }\n    static fromBuffer(buffer) {\n        const account = Object.create(Account.prototype);\n        const raw = (0, rlp_1.decode)(buffer);\n        account.nonce = utils_1.Quantity.from(raw[0]);\n        account.balance = utils_1.Quantity.from(raw[1]);\n        account.storageRoot = raw[2];\n        account.codeHash = raw[3];\n        return account;\n    }\n    serialize() {\n        return (0, rlp_1.encode)([\n            this.nonce.toBuffer(),\n            this.balance.toBuffer(),\n            this.storageRoot,\n            this.codeHash\n        ]);\n    }\n}\nexports.Account = Account;\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BlockLogs = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst utils_2 = require(\"@ganache/utils\");\nconst rlp_1 = require(\"@ganache/rlp\");\nconst ethereum_address_1 = require(\"@ganache/ethereum-address\");\nconst _raw = Symbol(\"raw\");\nconst _logs = Symbol(\"logs\");\nconst filterByTopic = (expectedTopics, logTopics) => {\n    // Exclude log if its number of topics is less than the number expected\n    if (expectedTopics.length > logTopics.length)\n        return false;\n    // for every expectedTopic, we must much the log topic in the same position\n    return expectedTopics.every((expectedTopic, logPosition) => {\n        // a `null` topic means \"anything\"\n        if (expectedTopic === null)\n            return true;\n        let expectedTopicSet;\n        if (!Array.isArray(expectedTopic)) {\n            return logTopics[logPosition].equals(utils_1.Data.toBuffer(expectedTopic));\n        }\n        // an empty rule set means \"anything\"\n        if (expectedTopic.length === 0)\n            return true;\n        expectedTopicSet = expectedTopic;\n        const logTopic = logTopics[logPosition];\n        // \"OR\" logic, e.g., [[A, B]] means log topic in the first position matching either \"A\" OR \"B\":\n        return expectedTopicSet.some(expectedTopic => logTopic.equals(utils_1.Data.toBuffer(expectedTopic)));\n    });\n};\nclass BlockLogs {\n    constructor(data) {\n        if (data) {\n            const decoded = (0, rlp_1.decode)(data);\n            this[_raw] = decoded;\n        }\n    }\n    /**\n     *\n     * @param blockHash - Creates an BlogLogs entity with an empty internal logs\n     * array.\n     */\n    static create(blockHash) {\n        const blockLog = Object.create(BlockLogs.prototype);\n        blockLog[_raw] = [blockHash.toBuffer(), []];\n        return blockLog;\n    }\n    /**\n     * rlpEncode's the blockHash and logs array for db storage\n     */\n    serialize() {\n        return (0, rlp_1.encode)(this[_raw]);\n    }\n    /**\n     * Appends the data to the internal logs array\n     * @param transactionIndex -\n     * @param transactionHash -\n     * @param log -\n     */\n    append(\n    /*removed: boolean, */ transactionIndex, transactionHash, log) {\n        this[_raw][1].push([\n            utils_2.BUFFER_ZERO,\n            transactionIndex.toBuffer(),\n            transactionHash.toBuffer(),\n            log[0],\n            log[1],\n            log[2] // `data`\n        ]);\n    }\n    /**\n     * Returns the number of logs in the internal logs array.\n     */\n    get length() {\n        return this[_raw][1].length;\n    }\n    static fromJSON(json) {\n        if (!json || json.length === 0) {\n            return null;\n        }\n        const blockHash = json[0].blockHash;\n        const blockNumber = json[0].blockNumber;\n        const blockLogs = BlockLogs.create(utils_1.Data.from(blockHash, 32));\n        blockLogs.blockNumber = utils_1.Quantity.from(blockNumber);\n        json.forEach(log => {\n            const address = ethereum_address_1.Address.from(log.address);\n            const blockNumber = log.blockNumber;\n            const data = Array.isArray(log.data)\n                ? log.data.map(d => utils_1.Data.toBuffer(d))\n                : utils_1.Data.toBuffer(log.data);\n            const logIndex = log.logIndex;\n            const removed = log.removed === false ? utils_2.BUFFER_ZERO : utils_1.Quantity.One.toBuffer();\n            const topics = Array.isArray(log.topics)\n                ? log.topics.map(t => utils_1.Data.toBuffer(t, 32))\n                : utils_1.Data.toBuffer(log.topics, 32);\n            const transactionHash = utils_1.Data.from(log.transactionHash, 32);\n            const transactionIndex = utils_1.Quantity.from(log.transactionIndex);\n            blockLogs.append(transactionIndex, transactionHash, [\n                address.toBuffer(),\n                topics,\n                data\n            ]);\n        });\n        return blockLogs;\n    }\n    toJSON() {\n        return this[_logs]().toJSON();\n    }\n    [_logs]() {\n        const blockNumber = this.blockNumber;\n        const raw = this[_raw];\n        const logs = raw[1];\n        const l = this.length;\n        const blockHash = utils_1.Data.from(raw[0]);\n        return {\n            toJSON() {\n                return {\n                    *[Symbol.iterator]() {\n                        for (let i = 0; i < l; i++) {\n                            yield BlockLogs.logToJSON(logs[i], utils_1.Quantity.from(i), blockHash, blockNumber);\n                        }\n                    }\n                };\n            },\n            *[Symbol.iterator]() {\n                for (let i = 0; i < l; i++) {\n                    const log = logs[i];\n                    const address = log[3];\n                    const topics = log[4];\n                    yield {\n                        address,\n                        topics,\n                        toJSON: () => BlockLogs.logToJSON(log, utils_1.Quantity.from(i), blockHash, blockNumber)\n                    };\n                }\n            }\n        };\n    }\n    /**\n     *\n     * @param log -\n     * @param logIndex - The index this log appears in the block\n     * @param blockHash - The hash of the block\n     * @param blockNumber - The block number\n     */\n    static logToJSON(log, logIndex, blockHash, blockNumber) {\n        const topics = log[4];\n        const data = log[5];\n        return {\n            address: ethereum_address_1.Address.from(log[3]),\n            blockHash,\n            blockNumber,\n            data: Array.isArray(data)\n                ? data.map(d => utils_1.Data.from(d, d.length))\n                : utils_1.Data.from(data, data.length),\n            logIndex,\n            removed: log[0].equals(utils_2.BUFFER_ZERO) ? false : true,\n            topics: Array.isArray(topics)\n                ? topics.map(t => utils_1.Data.from(t, 32))\n                : utils_1.Data.from(topics, 32),\n            transactionHash: utils_1.Data.from(log[2], 32),\n            transactionIndex: utils_1.Quantity.from(log[1])\n        };\n    }\n    /**\n     * Note: you must set `this.blockNumber: Quantity` first!\n     *\n     * Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic\n     * filters:\n     *  ▸ [] \"anything\"\n     *  ▸ [A] \"A in first position (and anything after)\"\n     *  ▸ [null, B] \"anything in first position AND B in second position (and anything after)\"\n     *  ▸ [A, B] \"A\" in first position AND B in second position (and anything after)\"\n     *  ▸ [[A, B], [A, B]] \"(A OR B) in first position AND (A OR B) in second position (and anything after)\"\n     * @param expectedAddresses -\n     * @param expectedTopics -\n     * @returns JSON representation of the filtered logs\n     */\n    *filter(expectedAddresses, expectedTopics) {\n        const logs = this[_logs]();\n        if (expectedAddresses.length !== 0) {\n            if (expectedTopics.length === 0) {\n                for (const log of logs) {\n                    if (expectedAddresses.some(address => address.equals(log.address)))\n                        yield log.toJSON();\n                }\n            }\n            else {\n                for (const log of logs) {\n                    if (!expectedAddresses.some(address => address.equals(log.address)))\n                        continue;\n                    if (filterByTopic(expectedTopics, log.topics))\n                        yield log.toJSON();\n                }\n            }\n        }\n        else if (expectedTopics.length !== 0) {\n            for (const log of logs) {\n                if (filterByTopic(expectedTopics, log.topics))\n                    yield log.toJSON();\n            }\n        }\n        else {\n            yield* logs.toJSON();\n        }\n    }\n}\nexports.BlockLogs = BlockLogs;\n//# sourceMappingURL=blocklogs.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Tag = exports.InternalTag = void 0;\nvar InternalTag;\n(function (InternalTag) {\n    InternalTag[\"earliest\"] = \"earliest\";\n    InternalTag[\"finalized\"] = \"finalized\";\n    InternalTag[\"latest\"] = \"latest\";\n    InternalTag[\"safe\"] = \"safe\";\n    InternalTag[\"pending\"] = \"pending\";\n})(InternalTag = exports.InternalTag || (exports.InternalTag = {}));\nvar Tag;\n(function (Tag) {\n    Tag.earliest = \"earliest\";\n    Tag.finalized = \"finalized\";\n    Tag.latest = \"latest\";\n    Tag.safe = \"safe\";\n    Tag.pending = \"pending\";\n})(Tag = exports.Tag || (exports.Tag = {}));\n//# sourceMappingURL=tags.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceDataFactory = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst BYTE_LENGTH = 32;\n/**\n * Precomputed 32-byte prefixes to make stringification a faster\n */\nconst PREFIXES = [\n    \"\",\n    \"00\",\n    \"0000\",\n    \"000000\",\n    \"00000000\",\n    \"0000000000\",\n    \"000000000000\",\n    \"00000000000000\",\n    \"0000000000000000\",\n    \"000000000000000000\",\n    \"00000000000000000000\",\n    \"0000000000000000000000\",\n    \"000000000000000000000000\",\n    \"00000000000000000000000000\",\n    \"0000000000000000000000000000\",\n    \"000000000000000000000000000000\",\n    \"00000000000000000000000000000000\",\n    \"0000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000\",\n    \"000000000000000000000000000000000000000000000000000000000000\",\n    \"00000000000000000000000000000000000000000000000000000000000000\",\n    \"0000000000000000000000000000000000000000000000000000000000000000\"\n];\nconst TraceDataFactory = () => {\n    const traceDataLookup = new Map();\n    const TraceData = {\n        from: (value) => {\n            // Remove all leading zeroes from keys.\n            const key = (0, utils_1.bufferToMinHexKey)(value);\n            const existing = traceDataLookup.get(key);\n            if (existing) {\n                return existing;\n            }\n            let buffer;\n            let str;\n            const data = {\n                /**\n                 * Returns a 32-byte 0-padded Buffer\n                 */\n                toBuffer: () => {\n                    if (buffer) {\n                        return buffer;\n                    }\n                    const length = value.byteLength;\n                    if (length === BYTE_LENGTH) {\n                        buffer = value;\n                    }\n                    else {\n                        // convert the buffer into the appropriately sized buffer.\n                        const lengthDiff = BYTE_LENGTH - length;\n                        buffer = Buffer.allocUnsafe(BYTE_LENGTH).fill(0, 0, lengthDiff);\n                        value.copy(buffer, lengthDiff, 0, length);\n                    }\n                    return buffer;\n                },\n                /**\n                 * Returns a 32-byte hex-string representation\n                 */\n                toJSON: () => {\n                    if (str) {\n                        return str;\n                    }\n                    // convert a hex key like \"ab01\" into \"00...00ab01\"\n                    return (str = `${PREFIXES[BYTE_LENGTH - key.length / 2]}${key}`);\n                }\n            };\n            traceDataLookup.set(key, data);\n            return data;\n        }\n    };\n    return TraceData;\n};\nexports.TraceDataFactory = TraceDataFactory;\n//# sourceMappingURL=trace-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TraceStorageMap = void 0;\nclass TraceStorageMap extends Map {\n    toJSON() {\n        const obj = {};\n        for (const [key, value] of this) {\n            obj[key.toJSON()] = value;\n        }\n        return obj;\n    }\n}\nexports.TraceStorageMap = TraceStorageMap;\n//# sourceMappingURL=trace-storage-map.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=account-proof.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=debug-storage.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=extract-values-from-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=fee-history.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilterTypes = void 0;\nvar FilterTypes;\n(function (FilterTypes) {\n    FilterTypes[FilterTypes[\"log\"] = 0] = \"log\";\n    FilterTypes[FilterTypes[\"block\"] = 1] = \"block\";\n    FilterTypes[FilterTypes[\"pendingTransaction\"] = 2] = \"pendingTransaction\";\n})(FilterTypes = exports.FilterTypes || (exports.FilterTypes = {}));\n//# sourceMappingURL=filters.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=hex-datatypes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=shh.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscriptions.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=trace-transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=tuple-from-union.js.map","\"use strict\";\n/*!\n * @ganache/filecoin-options\n *\n * @author Tim Coulter\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilecoinDefaults = exports.FilecoinOptionsConfig = void 0;\nconst src_1 = require(\"./src\");\nvar src_2 = require(\"./src\");\nObject.defineProperty(exports, \"FilecoinOptionsConfig\", { enumerable: true, get: function () { return src_2.FilecoinOptionsConfig; } });\nObject.defineProperty(exports, \"FilecoinDefaults\", { enumerable: true, get: function () { return src_2.FilecoinDefaults; } });\nexports.default = {\n    FilecoinDefaults: src_1.FilecoinDefaults,\n    FilecoinOptionsConfig: src_1.FilecoinOptionsConfig\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChainOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.ChainOptions = {\n    ipfsHost: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The IPFS simulator host name/address to listen on.\",\n        default: () => \"127.0.0.1\",\n        cliType: \"string\"\n    },\n    ipfsPort: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The IPFS simulator port.\",\n        default: () => 5001,\n        cliType: \"number\"\n    },\n    asyncRequestProcessing: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"When set to `false` only one request will be processed at a time.\",\n        default: () => true,\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=chain-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DatabaseOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.DatabaseOptions = {\n    db: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify an alternative database instance, like MemDOWN\",\n        disableInCLI: true,\n        conflicts: [\"dbPath\"]\n    },\n    dbPath: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Specify a path to a directory to save the chain database.\",\n        cliAliases: [\"db\"],\n        cliType: \"string\",\n        conflicts: [\"db\"]\n    }\n};\n//# sourceMappingURL=database-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalize = void 0;\nconst normalize = (rawInput) => rawInput;\nexports.normalize = normalize;\n//# sourceMappingURL=helpers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FilecoinOptionsConfig = exports.FilecoinDefaults = void 0;\nconst chain_options_1 = require(\"./chain-options\");\nconst database_options_1 = require(\"./database-options\");\nconst logging_options_1 = require(\"./logging-options\");\nconst miner_options_1 = require(\"./miner-options\");\nconst wallet_options_1 = require(\"./wallet-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.FilecoinDefaults = {\n    chain: chain_options_1.ChainOptions,\n    database: database_options_1.DatabaseOptions,\n    logging: logging_options_1.LoggingOptions,\n    miner: miner_options_1.MinerOptions,\n    wallet: wallet_options_1.WalletOptions\n};\nexports.FilecoinOptionsConfig = new options_1.OptionsConfig(exports.FilecoinDefaults);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LoggingOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst logger = { log: console.log };\nexports.LoggingOptions = {\n    logger: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"An object, like `console`, that implements a `log` function.\",\n        disableInCLI: true,\n        default: () => logger\n    }\n};\n//# sourceMappingURL=logging-options.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MinerOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nexports.MinerOptions = {\n    blockTime: {\n        normalize: value => Math.max(0, value),\n        cliDescription: 'Sets the `blockTime` in seconds for automatic mining. A `blockTime` of `0` or a negative number enables \"instamine mode\", where new executable transactions will be mined instantly.',\n        default: () => 0,\n        cliType: \"number\"\n    },\n    mine: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Enable mining. Set to `false` to pause the miner.\",\n        default: () => true,\n        cliType: \"boolean\"\n    }\n};\n//# sourceMappingURL=miner-options.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WalletOptions = void 0;\nconst helpers_1 = require(\"./helpers\");\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nconst options_1 = require(\"@ganache/options\");\nconst unseededRng = (0, seedrandom_1.default)();\nconst randomAlphaNumericString = (() => {\n    const alphabet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const alphabetLength = alphabet.length;\n    return (length, rng) => {\n        let text = \"\";\n        for (let i = 0; i < length; i++) {\n            text += alphabet[(rng() * alphabetLength) | 0];\n        }\n        return text;\n    };\n})();\nexports.WalletOptions = {\n    totalAccounts: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Number of accounts to generate at startup.\",\n        default: () => 10,\n        cliAliases: [\"a\"],\n        cliType: \"number\"\n    },\n    deterministic: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Use pre-defined, deterministic seed.\",\n        default: () => false,\n        cliAliases: [\"d\"],\n        cliType: \"boolean\",\n        conflicts: [\"seed\"]\n    },\n    seed: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"Seed to use to generate a mnemonic.\",\n        // The order of the options matter here! `wallet.deterministic`\n        // needs to be prior to `wallet.seed` for `config.deterministic`\n        // below to be set correctly\n        default: config => config.deterministic === true\n            ? options_1.DeterministicSeedPhrase\n            : randomAlphaNumericString(10, unseededRng),\n        cliAliases: [\"s\"],\n        cliType: \"string\",\n        conflicts: [\"deterministic\"]\n    },\n    defaultBalance: {\n        normalize: helpers_1.normalize,\n        cliDescription: \"The default account balance, specified in FIL.\",\n        default: () => 100,\n        cliAliases: [\"b\"],\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=wallet-options.js.map","\"use strict\";\n/*!\n * @ganache/colors\n *\n * @author David Murdoch\n * @license MIT\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TruffleColors = void 0;\nexports.TruffleColors = {\n    /**\n     * Ganache orange\n     */\n    porsche: \"#e4a663\",\n    /**\n     * Truffle blue/turquoise\n     */\n    turquoise: \"#3fe0c5\",\n    /**\n     * Infura orange\n     */\n    infura: \"#ff6b4a\"\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.__experimental_info = exports.provider = exports.server = exports._DefaultServerOptions = exports.ServerStatus = exports.Server = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst connector_loader_1 = __importDefault(require(\"./src/connector-loader\"));\nconst server_1 = __importDefault(require(\"./src/server\"));\nvar server_2 = require(\"./src/server\");\nObject.defineProperty(exports, \"Server\", { enumerable: true, get: function () { return server_2.Server; } });\nObject.defineProperty(exports, \"ServerStatus\", { enumerable: true, get: function () { return server_2.ServerStatus; } });\nObject.defineProperty(exports, \"_DefaultServerOptions\", { enumerable: true, get: function () { return server_2._DefaultServerOptions; } });\nconst version = process.env.VERSION || \"DEV\";\n/**\n * @public\n */\nconst Ganache = {\n    /**\n     * Creates a Ganache server instance that creates and\n     * serves an underlying Ganache provider. Initialization\n     * doesn't begin until `server.listen(...)` is called.\n     * `server.listen(...)` returns a promise that resolves\n     * when initialization is finished.\n     *\n     * @param options - Configuration options for the server;\n     * `options` includes provider based options as well.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    server: (options) => new server_1.default(options),\n    /**\n     * Initializes a Web3 provider for a Ganache instance.\n     * This function starts an asynchronous task, but does not\n     * finish it by the time the function returns. Listen to\n     * `provider.on(\"connect\", () => {...})` or wait for\n     * `await provider.once(\"connect\")` for initialization to\n     * finish. You may start sending requests to the provider\n     * before initialization finishes however; these requests\n     * will start being consumed after initialization finishes.\n     *\n     * @param options - Configuration options for the provider.\n     * @returns A provider instance for the flavor\n     * `options.flavor` which defaults to `ethereum`.\n     */\n    provider: (options) => {\n        const loader = connector_loader_1.default.initialize(options);\n        return loader.connector.provider;\n    },\n    /**\n     *\n     * @experimental\n     */\n    __experimental_info() {\n        return {\n            version,\n            fork: {\n                knownChainIds: Array.from(utils_1.KNOWN_CHAINIDS)\n            }\n        };\n    }\n};\n/**\n * @public\n */\nexports.server = Ganache.server;\n/**\n * @public\n */\nexports.provider = Ganache.provider;\n/**\n * @experimental\n */\nexports.__experimental_info = Ganache.__experimental_info;\n/**\n * @public\n */\nexports.default = Ganache;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = require(\"@ganache/utils\");\nconst flavors_1 = require(\"@ganache/flavors\");\nconst flavors_2 = require(\"@ganache/flavors\");\nconst initialize = (options = {\n    flavor: flavors_1.DefaultFlavor,\n    chain: { asyncRequestProcessing: true }\n}) => {\n    const flavor = (options.flavor || flavors_1.DefaultFlavor);\n    // Set up our request coordinator to either use FIFO or or async request\n    // processing. The RequestCoordinator _can_ be used to coordinate the number\n    // of requests being processed, but we don't use it for that (yet), instead\n    // of \"all\" (0) or just 1 as we are doing here:\n    let asyncRequestProcessing;\n    if (\"chain\" in options && \"asyncRequestProcessing\" in options[\"chain\"]) {\n        asyncRequestProcessing = options.chain.asyncRequestProcessing;\n    }\n    else if (\"asyncRequestProcessing\" in options) {\n        asyncRequestProcessing = options.asyncRequestProcessing;\n    }\n    else {\n        asyncRequestProcessing = true;\n    }\n    const requestCoordinator = new utils_1.RequestCoordinator(asyncRequestProcessing ? 0 : 1);\n    // The Executor is responsible for actually executing the method on the\n    // chain/API. It performs some safety checks to ensure \"safe\" method\n    //  execution before passing it to a RequestCoordinator.\n    const executor = new utils_1.Executor(requestCoordinator);\n    const connector = (0, flavors_2.GetConnector)(flavor, options, executor);\n    // Purposely not awaiting on this to prevent a breaking change\n    // to the `Ganache.provider()` method\n    // TODO: remove the `connector.connect ? ` check and just use\n    // `connector.connect()` after publishing the `@ganache/filecoin` with the\n    // connector.connect interface\n    const connectPromise = connector.connect\n        ? connector.connect()\n        : connector.initialize();\n    // The request coordinator is initialized in a \"paused\" state; when the\n    // provider is ready we unpause.. This lets us accept queue requests before\n    // we've even fully initialized.\n    // The function referenced by requestcoordinator.resume will be changed when\n    // requestCoordinator.stop() is called. Ensure that no references to the\n    // function are held, otherwise internal errors may be surfaced.\n    return {\n        connector,\n        promise: connectPromise.then(() => requestCoordinator.resume())\n    };\n};\n/**\n * Loads the connector specified by the given `flavor`\n */\nexports.default = {\n    initialize\n};\n//# sourceMappingURL=connector-loader.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serverOptionsConfig = exports.serverDefaults = void 0;\nconst server_options_1 = require(\"./server-options\");\nconst options_1 = require(\"@ganache/options\");\nexports.serverDefaults = {\n    server: server_options_1.ServerOptions\n};\nexports.serverOptionsConfig = new options_1.OptionsConfig(exports.serverDefaults);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServerOptions = void 0;\nconst flavors_1 = require(\"@ganache/flavors\");\nconst buffer_1 = require(\"buffer\");\nconst normalize = (rawInput) => rawInput;\nexports.ServerOptions = {\n    ws: {\n        normalize,\n        cliDescription: \"Enable a websocket server.\",\n        default: () => true,\n        legacyName: \"ws\",\n        cliType: \"boolean\"\n    },\n    wsBinary: {\n        normalize,\n        cliDescription: \"Whether or not websockets should response with binary data (ArrayBuffers) or strings.\",\n        default: () => \"auto\",\n        cliChoices: [\"true\", \"false\", \"auto\"]\n    },\n    rpcEndpoint: {\n        normalize,\n        cliDescription: \"Defines the endpoint route the HTTP and WebSocket servers will listen on.\",\n        default: (config, flavor) => {\n            switch (flavor) {\n                case flavors_1.FilecoinFlavorName:\n                    return \"/rpc/v0\";\n                case flavors_1.DefaultFlavor:\n                default:\n                    return \"/\";\n            }\n        },\n        defaultDescription: '\"/\" (Ethereum), \"/rpc/v0\" (Filecoin)'\n    },\n    chunkSize: {\n        normalize: number => {\n            if (number < 0 || number > buffer_1.kMaxLength) {\n                throw new Error(`--server.chunkSize must be >= 0 and <= ${buffer_1.kMaxLength}`);\n            }\n            return number;\n        },\n        cliDescription: \"For memory and performance reasons ganache may respond with chunked transfer-encoding over HTTP and fragmented send over WebSockets. This option allows you to control the approximate size of each chunk.\",\n        default: () => 1024 * 1024,\n        cliType: \"number\"\n    }\n};\n//# sourceMappingURL=server-options.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _Server_options, _Server_providerOptions, _Server_status, _Server_app, _Server_httpServer, _Server_listenSocket, _Server_host, _Server_connector, _Server_websocketServer, _Server_initializer;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Server = exports._DefaultServerOptions = exports.ServerStatus = void 0;\nconst options_1 = require(\"./options\");\nconst aggregate_error_1 = __importDefault(require(\"aggregate-error\"));\nconst uws_js_unofficial_1 = require(\"@trufflesuite/uws-js-unofficial\");\n// Set the \"silent\" config option so we don't output the \"uwebsockets\" header\n// we check for truthiness because `uws` is omitted from the browser build\nuws_js_unofficial_1._cfg &&\n    (0, uws_js_unofficial_1._cfg)(new Uint8Array([115, 105, 108, 101, 110, 116]));\nconst flavors_1 = require(\"@ganache/flavors\");\nconst connector_loader_1 = __importDefault(require(\"./connector-loader\"));\nconst ws_server_1 = __importDefault(require(\"./servers/ws-server\"));\nconst http_server_1 = __importDefault(require(\"./servers/http-server\"));\nconst emittery_1 = __importDefault(require(\"emittery\"));\n// not using the \"net\" node package in order to avoid having to polyfill this\n// for the browser build.\n// isIPv4 taken from https://github.com/nodejs/node/blob/01323d50c4b24cf730a651d06ba20633905ecbed/lib/internal/net.js#L31\nconst v4Seg = \"(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\";\nconst IPv4Reg = new RegExp(`^(${v4Seg}[.]){3}${v4Seg}$`);\nconst isIPv4 = (s) => IPv4Reg.test(s);\nconst DEFAULT_HOST = \"127.0.0.1\";\n/**\n * Server ready state constants.\n *\n * These are bit flags. This means that you can check if the status is:\n *  * ready: `status === ServerStatus.ready` or `status & ServerStatus.ready !== 0`\n *  * opening: `status === ServerStatus.opening` or `status & ServerStatus.opening !== 0`\n *  * open: `status === ServerStatus.open` or `status & ServerStatus.open !== 0`\n *  * opening || open: `status & ServerStatus.openingOrOpen !== 0` or `status & (ServerStatus.opening | ServerStatus.open) !== 0`\n *  * closing: `status === ServerStatus.closing` or `status & ServerStatus.closing !== 0`\n *  * closed: `status === ServerStatus.closed` or `status & ServerStatus.closed !== 0`\n *  * closing || closed: `status & ServerStatus.closingOrClosed !== 0` or `status & (ServerStatus.closing | ServerStatus.closed) !== 0`\n */\nvar ServerStatus;\n(function (ServerStatus) {\n    /**\n     * The Server is in an unknown state; perhaps construction didn't succeed\n     */\n    ServerStatus[ServerStatus[\"unknown\"] = 0] = \"unknown\";\n    /**\n     * The Server has been constructed and is ready to be opened.\n     */\n    ServerStatus[ServerStatus[\"ready\"] = 1] = \"ready\";\n    /**\n     * The Server has started to open, but has not yet finished initialization.\n     */\n    ServerStatus[ServerStatus[\"opening\"] = 2] = \"opening\";\n    /**\n     * The Server is open and ready for connection.\n     */\n    ServerStatus[ServerStatus[\"open\"] = 4] = \"open\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"openingOrOpen\"] = 6] = \"openingOrOpen\";\n    /**\n     * The Server is in the process of closing.\n     */\n    ServerStatus[ServerStatus[\"closing\"] = 8] = \"closing\";\n    /**\n     * The Server is closed and not accepting new connections.\n     */\n    ServerStatus[ServerStatus[\"closed\"] = 16] = \"closed\";\n    /**\n     * The Server is either opening or is already open\n     */\n    ServerStatus[ServerStatus[\"closingOrClosed\"] = 24] = \"closingOrClosed\";\n})(ServerStatus = exports.ServerStatus || (exports.ServerStatus = {}));\n/**\n * For private use. May change in the future.\n * I don't don't think these options should be held in this `core` package.\n * @ignore\n * @internal\n */\nexports._DefaultServerOptions = options_1.serverDefaults;\n/**\n * @public\n */\nclass Server extends emittery_1.default {\n    constructor(providerAndServerOptions = {\n        flavor: flavors_1.DefaultFlavor\n    }) {\n        super();\n        _Server_options.set(this, void 0);\n        _Server_providerOptions.set(this, void 0);\n        _Server_status.set(this, ServerStatus.unknown);\n        _Server_app.set(this, null);\n        _Server_httpServer.set(this, null);\n        _Server_listenSocket.set(this, null);\n        _Server_host.set(this, null);\n        _Server_connector.set(this, void 0);\n        _Server_websocketServer.set(this, null);\n        _Server_initializer.set(this, void 0);\n        __classPrivateFieldSet(this, _Server_options, options_1.serverOptionsConfig.normalize(providerAndServerOptions), \"f\");\n        __classPrivateFieldSet(this, _Server_providerOptions, providerAndServerOptions, \"f\");\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.ready, \"f\");\n        // we need to start initializing now because `initialize` sets the\n        // `provider` property... and someone might want to do:\n        //   const server = Ganache.server();\n        //   const provider = server.provider;\n        //   await server.listen(8545)\n        const loader = connector_loader_1.default.initialize(__classPrivateFieldGet(this, _Server_providerOptions, \"f\"));\n        const connector = (__classPrivateFieldSet(this, _Server_connector, loader.connector, \"f\"));\n        // Since the ConnectorLoader starts an async promise that we intentionally\n        // don't await yet we keep the promise around for something else to handle\n        // later.\n        __classPrivateFieldSet(this, _Server_initializer, Promise.all([\n            loader.promise,\n            this.initialize(connector)\n        ]), \"f\");\n    }\n    get provider() {\n        return __classPrivateFieldGet(this, _Server_connector, \"f\").provider;\n    }\n    get status() {\n        return __classPrivateFieldGet(this, _Server_status, \"f\");\n    }\n    async initialize(connector) {\n        const _app = (__classPrivateFieldSet(this, _Server_app, (0, uws_js_unofficial_1.App)(), \"f\"));\n        if (__classPrivateFieldGet(this, _Server_options, \"f\").server.ws) {\n            __classPrivateFieldSet(this, _Server_websocketServer, new ws_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        }\n        __classPrivateFieldSet(this, _Server_httpServer, new http_server_1.default(_app, connector, __classPrivateFieldGet(this, _Server_options, \"f\").server), \"f\");\n        await connector.once(\"ready\");\n    }\n    listen(port, host, callback) {\n        if (typeof host === \"function\") {\n            callback = host;\n            host = null;\n        }\n        const callbackIsFunction = typeof callback === \"function\";\n        // Method signature specifies port: number, but we parse a string if provided\n        // inspiration taken from nodejs internal port validator\n        // https://github.com/nodejs/node/blob/8c4b8b201ada6b76d5306c9c7f352e45087fb4a9/lib/internal/validators.js#L208-L219\n        if ((typeof port !== \"number\" && typeof port !== \"string\") ||\n            (typeof port === \"string\" && port.trim().length === 0) ||\n            +port !== +port >>> 0 ||\n            port > 0xffff) {\n            const err = new Error(`Port should be >= 0 and < 65536. Received ${port}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        const portNumber = +port;\n        const status = __classPrivateFieldGet(this, _Server_status, \"f\");\n        if (status === ServerStatus.closing) {\n            // if closing\n            const err = new Error(`Cannot start server while it is closing.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        else if ((status & ServerStatus.openingOrOpen) !== 0) {\n            // if opening or open\n            const err = new Error(`Server is already open, or is opening, on port: ${portNumber}.`);\n            return callbackIsFunction\n                ? process.nextTick(callback, err)\n                : Promise.reject(err);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.opening, \"f\");\n        const promise = Promise.allSettled([\n            __classPrivateFieldGet(this, _Server_initializer, \"f\"),\n            new Promise((resolve) => {\n                // Make sure we have *exclusive* use of this port.\n                // https://github.com/uNetworking/uSockets/commit/04295b9730a4d413895fa3b151a7337797dcb91f#diff-79a34a07b0945668e00f805838601c11R51\n                const LIBUS_LISTEN_EXCLUSIVE_PORT = 1;\n                host\n                    ? __classPrivateFieldGet(this, _Server_app, \"f\").listen(host, portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve)\n                    : __classPrivateFieldGet(this, _Server_app, \"f\").listen(portNumber, LIBUS_LISTEN_EXCLUSIVE_PORT, resolve);\n            }).then(listenSocket => {\n                if (listenSocket) {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.open, \"f\");\n                    __classPrivateFieldSet(this, _Server_listenSocket, listenSocket, \"f\");\n                    __classPrivateFieldSet(this, _Server_host, host || DEFAULT_HOST, \"f\");\n                }\n                else {\n                    __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n                    const err = new Error(`listen EADDRINUSE: address already in use ${host || DEFAULT_HOST}:${portNumber}.`);\n                    // emulate part of node's EADDRINUSE error:\n                    err.code = \"EADDRINUSE\";\n                    throw err;\n                }\n            })\n        ]).then(async (promiseResults) => {\n            const errors = [];\n            if (promiseResults[0].status === \"rejected\") {\n                errors.push(promiseResults[0].reason);\n            }\n            if (promiseResults[1].status === \"rejected\") {\n                errors.push(promiseResults[1].reason);\n            }\n            if (errors.length === 0) {\n                this.emit(\"open\");\n            }\n            else {\n                __classPrivateFieldSet(this, _Server_status, ServerStatus.unknown, \"f\");\n                try {\n                    await this.close();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n                if (errors.length > 1) {\n                    throw new aggregate_error_1.default(errors);\n                }\n                else {\n                    throw errors[0];\n                }\n            }\n        });\n        if (callbackIsFunction) {\n            promise.then(() => callback(null)).catch(callback);\n        }\n        else {\n            return promise;\n        }\n    }\n    address() {\n        if (__classPrivateFieldGet(this, _Server_listenSocket, \"f\")) {\n            const address = __classPrivateFieldGet(this, _Server_host, \"f\");\n            return {\n                address,\n                family: isIPv4(address) ? \"IPv4\" : \"IPv6\",\n                port: (0, uws_js_unofficial_1.us_socket_local_port)(__classPrivateFieldGet(this, _Server_listenSocket, \"f\"))\n            };\n        }\n        else {\n            return null;\n        }\n    }\n    async close() {\n        if (__classPrivateFieldGet(this, _Server_status, \"f\") === ServerStatus.opening) {\n            // if opening\n            throw new Error(`Cannot close server while it is opening.`);\n        }\n        else if ((__classPrivateFieldGet(this, _Server_status, \"f\") & ServerStatus.closingOrClosed) !== 0) {\n            // if closing or closed\n            throw new Error(`Server is already closing or closed.`);\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closing, \"f\");\n        // clean up the websocket objects\n        const _listenSocket = __classPrivateFieldGet(this, _Server_listenSocket, \"f\");\n        __classPrivateFieldSet(this, _Server_listenSocket, null, \"f\");\n        // close the socket to prevent any more connections\n        if (_listenSocket !== null) {\n            (0, uws_js_unofficial_1.us_listen_socket_close)(_listenSocket);\n        }\n        // close all the connected websockets:\n        if (__classPrivateFieldGet(this, _Server_websocketServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_websocketServer, \"f\").close();\n        }\n        // and do all http cleanup, if any\n        if (__classPrivateFieldGet(this, _Server_httpServer, \"f\") !== null) {\n            __classPrivateFieldGet(this, _Server_httpServer, \"f\").close();\n        }\n        // cleanup the connector, provider, etc.\n        if (__classPrivateFieldGet(this, _Server_connector, \"f\") !== null) {\n            await __classPrivateFieldGet(this, _Server_connector, \"f\").close();\n        }\n        __classPrivateFieldSet(this, _Server_status, ServerStatus.closed, \"f\");\n        __classPrivateFieldSet(this, _Server_app, null, \"f\");\n        await this.emit(\"close\");\n    }\n}\nexports.Server = Server;\n_Server_options = new WeakMap(), _Server_providerOptions = new WeakMap(), _Server_status = new WeakMap(), _Server_app = new WeakMap(), _Server_httpServer = new WeakMap(), _Server_listenSocket = new WeakMap(), _Server_host = new WeakMap(), _Server_connector = new WeakMap(), _Server_websocketServer = new WeakMap(), _Server_initializer = new WeakMap();\nexports.default = Server;\n//# sourceMappingURL=server.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _HttpServer_connector, _HttpServer_options, _HttpServer_isClosing, _HttpServer_handlePost, _HttpServer_handleOptions;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst content_types_1 = __importDefault(require(\"./utils/content-types\"));\nconst http_response_codes_1 = __importDefault(require(\"./utils/http-response-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nconst noop = () => { };\n/**\n * uWS doesn't let us use the request after the request method has completed.\n * But we can't set headers until after the statusCode is set. But we don't\n * know the status code until the provider returns asynchronously.\n * So this does request-related work immediately and returns a function to do the\n * rest of the work later.\n * @param method -\n * @param request -\n */\nfunction prepareCORSResponseHeaders(method, request) {\n    // https://fetch.spec.whatwg.org/#http-requests\n    const origin = request.getHeader(\"origin\");\n    const acrh = request.getHeader(\"access-control-request-headers\");\n    return (response) => {\n        const isCORSRequest = origin !== \"\";\n        if (isCORSRequest) {\n            // OPTIONS preflight requests need a little extra treatment\n            if (method === \"OPTIONS\") {\n                // we only allow POST requests, so it doesn't matter which method the request is asking for\n                response.writeHeader(\"Access-Control-Allow-Methods\", \"POST\");\n                // echo all requested access-control-request-headers back to the response\n                if (acrh !== \"\") {\n                    response.writeHeader(\"Access-Control-Allow-Headers\", acrh);\n                }\n                // Make browsers and compliant clients cache the OPTIONS preflight response for 10\n                // minutes (this is the maximum time Chromium allows)\n                response.writeHeader(\"Access-Control-Max-Age\", \"600\"); // seconds\n            }\n            // From the spec: https://fetch.spec.whatwg.org/#http-responses\n            // \"For a CORS-preflight request, request’s credentials mode is always \"omit\",\n            // but for any subsequent CORS requests it might not be. Support therefore\n            // needs to be indicated as part of the HTTP response to the CORS-preflight request as well.\", so this\n            // header is added to all requests.\n            // Additionally, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Access-Control-Allow-Credentials,\n            // states that there aren't any HTTP Request headers that indicate you whether or not Request.withCredentials\n            // is set. Because web3@1.0.0-beta.35-? always sets `request.withCredentials = true` while Safari requires it be\n            // returned even when no credentials are set in the browser this header must always be return on all requests.\n            // (I've found that Chrome and Firefox don't actually require the header when credentials aren't set)\n            //  Regression Commit: https://github.com/ethereum/web3.js/pull/1722\n            //  Open Web3 Issue: https://github.com/ethereum/web3.js/issues/1802\n            response.writeHeader(\"Access-Control-Allow-Credentials\", \"true\");\n            // From the spec: \"It cannot be reliably identified as participating in the CORS protocol\n            // as the `Origin` header is also included for all requests whose method is neither\n            // `GET` nor `HEAD`.\"\n            // Explicitly set the origin instead of using *, since credentials\n            // can't be used in conjunction with *. This will always be set\n            /// for valid preflight requests.\n            response.writeHeader(\"Access-Control-Allow-Origin\", origin);\n        }\n    };\n}\nfunction sendResponse(response, closeConnection, statusCode, contentType, data, writeHeaders = noop) {\n    response.cork(() => {\n        response.writeStatus(statusCode);\n        writeHeaders(response);\n        if (contentType != null) {\n            response.writeHeader(\"Content-Type\", contentType);\n        }\n        if (data !== null) {\n            response.end(data, closeConnection);\n        }\n        else {\n            // in the case that body is not provided, it must specifically be <undefined> and not <null>\n            response.end(undefined, closeConnection);\n        }\n    });\n}\nfunction sendChunkedResponse(response, closeConnection, statusCode, contentType, data, chunkSize, writeHeaders = noop) {\n    const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n    // get our first fragment\n    const { value: firstFragment } = fragments.next();\n    // check if there is any more fragments after this one\n    let { value: nextFragment, done } = fragments.next();\n    // if there are no more fragments send the \"firstFragment\" via `sendResponse`,\n    // as we don't need to chunk it.\n    if (done) {\n        sendResponse(response, closeConnection, statusCode, contentType, firstFragment, writeHeaders);\n    }\n    else {\n        response.cork(() => {\n            response.writeStatus(statusCode);\n            writeHeaders(response);\n            response.writeHeader(\"Content-Type\", contentType);\n            // since we have at least two fragments send both now\n            response.write(firstFragment);\n            response.write(nextFragment);\n            // and then keep sending the rest\n            for (nextFragment of fragments) {\n                response.write(nextFragment);\n            }\n            response.end(undefined, closeConnection);\n        });\n    }\n}\nclass HttpServer {\n    constructor(app, connector, options) {\n        _HttpServer_connector.set(this, void 0);\n        _HttpServer_options.set(this, void 0);\n        _HttpServer_isClosing.set(this, false);\n        _HttpServer_handlePost.set(this, (response, request) => {\n            // handle JSONRPC post requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"POST\", request);\n            // TODO(perf): pre-allocate the buffer if we know the Content-Length\n            let buffer;\n            let aborted = false;\n            response.onAborted(() => {\n                aborted = true;\n            });\n            response.onData((message, isLast) => {\n                const chunk = Buffer.from(message);\n                if (isLast) {\n                    // we have to use any here because typescript isn't smart enough\n                    // to understand the ambiguity of RequestFormat and ReturnType\n                    // on the Connector interface must match up appropriately\n                    const connector = __classPrivateFieldGet(this, _HttpServer_connector, \"f\");\n                    let payload;\n                    try {\n                        const message = buffer\n                            ? Buffer.concat([buffer, chunk], buffer.length + chunk.length)\n                            : chunk;\n                        payload = connector.parse(message);\n                    }\n                    catch (e) {\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request: \" + e.message, writeHeaders);\n                        return;\n                    }\n                    connector\n                        .handle(payload, request)\n                        .then(({ value }) => value)\n                        .then(result => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.format(result, payload);\n                        if (util_1.types.isGeneratorObject(data)) {\n                            sendChunkedResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, __classPrivateFieldGet(this, _HttpServer_options, \"f\").chunkSize, writeHeaders);\n                        }\n                        else {\n                            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                        }\n                    })\n                        .catch(error => {\n                        if (aborted) {\n                            // if the request has been aborted don't try sending (it'll\n                            // cause an `Unhandled promise rejection` if we try)\n                            return;\n                        }\n                        const data = connector.formatError(error, payload);\n                        sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.OK, content_types_1.default.JSON, data, writeHeaders);\n                    });\n                }\n                else {\n                    if (buffer) {\n                        buffer = Buffer.concat([buffer, chunk], buffer.length + chunk.length);\n                    }\n                    else {\n                        buffer = Buffer.concat([chunk], chunk.length);\n                    }\n                }\n            });\n        });\n        _HttpServer_handleOptions.set(this, (response, request) => {\n            // handle CORS preflight requests...\n            const writeHeaders = prepareCORSResponseHeaders(\"OPTIONS\", request);\n            // OPTIONS responses don't have a body, so respond with `204 No Content`...\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NO_CONTENT, null, null, writeHeaders);\n        });\n        __classPrivateFieldSet(this, _HttpServer_connector, connector, \"f\");\n        __classPrivateFieldSet(this, _HttpServer_options, options, \"f\");\n        // JSON-RPC routes...\n        app\n            .post(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handlePost, \"f\"))\n            .options(options.rpcEndpoint, __classPrivateFieldGet(this, _HttpServer_handleOptions, \"f\"));\n        // because Easter Eggs are fun...\n        app.get(\"/418\", response => {\n            sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.IM_A_TEAPOT, content_types_1.default.PLAIN, \"418 I'm a teapot\");\n        });\n        // fallback routes...\n        app.any(\"/*\", (response, request) => {\n            const connectionHeader = request.getHeader(\"connection\");\n            if (connectionHeader && connectionHeader.toLowerCase() === \"upgrade\") {\n                // if we got here it means the websocket server wasn't enabled but\n                // a client tried to connect via websocket. This is a Bad Request.\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.BAD_REQUEST, content_types_1.default.PLAIN, \"400 Bad Request\");\n            }\n            else {\n                // all other requests don't mean anything to us, so respond with `404 Not Found`...\n                sendResponse(response, __classPrivateFieldGet(this, _HttpServer_isClosing, \"f\"), http_response_codes_1.default.NOT_FOUND, content_types_1.default.PLAIN, \"404 Not Found\");\n            }\n        });\n    }\n    close() {\n        // flags the server as closing, indicating the connection should be closed with subsequent responses\n        // as there is no way presently to close existing connections outside of the request/response context\n        // see discussion: https://github.com/uNetworking/uWebSockets.js/issues/663#issuecomment-1026283415\n        __classPrivateFieldSet(this, _HttpServer_isClosing, true, \"f\");\n    }\n}\nexports.default = HttpServer;\n_HttpServer_connector = new WeakMap(), _HttpServer_options = new WeakMap(), _HttpServer_isClosing = new WeakMap(), _HttpServer_handlePost = new WeakMap(), _HttpServer_handleOptions = new WeakMap();\n//# sourceMappingURL=http-server.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentTypes;\n(function (ContentTypes) {\n    ContentTypes[\"PLAIN\"] = \"text/plain\";\n    ContentTypes[\"JSON\"] = \"application/json\";\n})(ContentTypes || (ContentTypes = {}));\nexports.default = ContentTypes;\n//# sourceMappingURL=content-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getFragmentGenerator = void 0;\nfunction* getFragmentGenerator(data, bufferSize) {\n    // Use a large buffer to reduce round-trips\n    let buf = Buffer.allocUnsafe(bufferSize);\n    let offset = 0;\n    for (const value of data) {\n        const { byteLength } = value;\n        // if we don't have enough space in the buffer for this next value `yield`\n        // the buffer as is.\n        if (offset > 0 && byteLength + offset > bufferSize) {\n            yield buf.subarray(0, offset);\n            // Reset the buffer. Since `uws` sends packets asynchronously,\n            // it is important that we allocate a new buffer for the next\n            // frame. This avoids overwriting data before it is sent. The\n            // reason we need to do this is likely because we do not yet\n            // handle backpressure. Part of handling backpressure will\n            // involve the drain event and only sending while\n            // `ws.getBufferedAmount() < ACCEPTABLE_BACKPRESSURE`.\n            // See https://github.com/trufflesuite/ganache/issues/2790\n            buf = null;\n            offset = 0;\n        }\n        // Store value in buffer if it fits (but don't store it if it is the exact\n        // same size as bufferSize)\n        if (byteLength < bufferSize) {\n            // copy from value into buffer\n            if (buf === null)\n                buf = Buffer.allocUnsafe(bufferSize);\n            value.copy(buf, offset, 0, byteLength);\n            offset += byteLength;\n        }\n        else {\n            // Cannot fit this value in buffer, send it directly.\n            // Buffer has just been flushed (since the condition `byteLength + offset > bufferSize`\n            // will always be true here, which will have triggered the flush above) so\n            // we do not need to worry about out-of-order send.\n            yield value;\n        }\n    }\n    // If we've got anything buffered at this point, send it.\n    if (offset > 0)\n        yield buf.subarray(0, offset);\n    return void 0;\n}\nexports.getFragmentGenerator = getFragmentGenerator;\n//# sourceMappingURL=fragment-generator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * HTTP/1.1 Response Status-Codes, including the _required_ space character.\n *\n * e.g., `\"200 \"` or `\"404 \"`\n *\n * RFC Grammar:\n *\n * ```ebnf\n * Status-Line = HTTP-Version SP Status-Code SP Reason-Phrase CRLF\n * ```\n *\n * The Status-Codes defined here fullfill the `Status-Code SP` part of the above\n * grammar.\n *\n * See https://datatracker.ietf.org/doc/html/rfc2616#section-6.1 for details.\n */\nvar HttpResponseCodes;\n(function (HttpResponseCodes) {\n    HttpResponseCodes[\"OK\"] = \"200 \";\n    HttpResponseCodes[\"NO_CONTENT\"] = \"204 \";\n    HttpResponseCodes[\"BAD_REQUEST\"] = \"400 \";\n    HttpResponseCodes[\"NOT_FOUND\"] = \"404 \";\n    HttpResponseCodes[\"METHOD_NOT_ALLOWED\"] = \"405 \";\n    HttpResponseCodes[\"IM_A_TEAPOT\"] = \"418 \";\n})(HttpResponseCodes || (HttpResponseCodes = {}));\nexports.default = HttpResponseCodes;\n//# sourceMappingURL=http-response-codes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar WebSocketCloseCodes;\n(function (WebSocketCloseCodes) {\n    /**\n     * Normal closure; the connection successfully completed whatever purpose for\n     * which it was created.\n     */\n    WebSocketCloseCodes[WebSocketCloseCodes[\"CLOSE_NORMAL\"] = 1000] = \"CLOSE_NORMAL\";\n    /**\n     * Indicates that an endpoint is \"going away\", such as a server going down or\n     * a browser having navigated away from a page.\n     */\n    // CLOSE_GOING_AWAY = 1001\n    // CLOSE_PROTOCOL_ERROR = 1002,\n    // CLOSE_ABNORMAL = 1006\n})(WebSocketCloseCodes || (WebSocketCloseCodes = {}));\nexports.default = WebSocketCloseCodes;\n//# sourceMappingURL=websocket-close-codes.js.map","\"use strict\";\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _WebsocketServer_connections;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PAYLOAD_SIZE = exports.sendFragmented = void 0;\nconst websocket_close_codes_1 = __importDefault(require(\"./utils/websocket-close-codes\"));\nconst util_1 = require(\"util\");\nconst fragment_generator_1 = require(\"./utils/fragment-generator\");\nfunction sendFragmented(ws, data, useBinary, chunkSize) {\n    ws.cork(() => {\n        // fragment send: https://github.com/uNetworking/uWebSockets.js/issues/635\n        const shouldCompress = false;\n        const fragments = (0, fragment_generator_1.getFragmentGenerator)(data, chunkSize);\n        // get our first fragment\n        const { value: firstFragment } = fragments.next();\n        // check if there is any more fragments after this one\n        let { value: maybeLastFragment, done } = fragments.next();\n        // if there are no more fragments send the \"firstFragment\" via `send`, as\n        // we don't need to chunk it.\n        if (done) {\n            ws.send(firstFragment, useBinary);\n        }\n        else {\n            // since we have at least two fragments send the first one now that it\n            // is \"full\"\n            ws.sendFirstFragment(firstFragment, useBinary);\n            // at this point `maybeLastFragment` is the next fragment that should be\n            // sent. We iterate over all fragments, sending the _previous_ fragment\n            // (`maybeLastFragment`) then cache the current fragment (`fragment`)\n            // in the `maybeLastFragment` variable, which will be sent in the next\n            // iteration, or via `sendLastFragment`, below, if `fragment` was also the\n            // very last one.\n            for (const fragment of fragments) {\n                // definitely not the last fragment, send it!\n                ws.sendFragment(maybeLastFragment, shouldCompress);\n                maybeLastFragment = fragment;\n            }\n            ws.sendLastFragment(\n            // definitely the last fragment at this point\n            maybeLastFragment, shouldCompress);\n        }\n    });\n}\nexports.sendFragmented = sendFragmented;\n// matches geth's limit of 15 MebiBytes: https://github.com/ethereum/go-ethereum/blob/3526f690478482a02a152988f4d31074c176b136/rpc/websocket.go#L40\nexports.MAX_PAYLOAD_SIZE = 15 * 1024 * 1024;\nclass WebsocketServer {\n    constructor(app, connector, options) {\n        _WebsocketServer_connections.set(this, new Map());\n        const connections = __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\");\n        const wsBinary = options.wsBinary;\n        const autoBinary = wsBinary === \"auto\";\n        app.ws(options.rpcEndpoint, {\n            /* WS Options */\n            maxPayloadLength: exports.MAX_PAYLOAD_SIZE,\n            idleTimeout: 120,\n            // Note that compression is disabled (the default option)\n            // due to not being able to link against electron@12\n            // with compression included\n            /* Handlers */\n            open: (ws) => {\n                ws.closed = false;\n                connections.set(ws, new Set());\n            },\n            message: async (ws, message, isBinary) => {\n                // We have to use type any instead of ReturnType<typeof connector.parse>\n                // on `payload` because Typescript isn't smart enough to understand the\n                // ambiguity doesn't actually exist\n                let payload;\n                const useBinary = autoBinary ? isBinary : wsBinary;\n                try {\n                    payload = connector.parse(Buffer.from(message));\n                }\n                catch (err) {\n                    const response = connector.formatError(err, payload);\n                    ws.send(response, useBinary);\n                    return;\n                }\n                let data;\n                try {\n                    const { value } = await connector.handle(payload, ws);\n                    // The socket may have closed while we were waiting for the response\n                    // Don't bother trying to send to it if it was.\n                    if (ws.closed)\n                        return;\n                    const resultEmitter = value;\n                    const result = await resultEmitter;\n                    if (ws.closed)\n                        return;\n                    data = connector.format(result, payload);\n                    // if the result is an emitter listen to its `\"message\"` event\n                    // We check if `on` is a function rather than check if\n                    // `resultEmitter instanceof PromiEvent` because `@ganache/filecoin`\n                    // and `ganache` webpack `@ganache/utils` separately. This causes\n                    // instanceof to fail here. Since we know `resultEmitter` is MergePromiseT\n                    // we can safely assume that if `on` is a function, then we have a PromiEvent\n                    if (typeof resultEmitter[\"on\"] === \"function\") {\n                        const resultEmitterPromiEvent = resultEmitter;\n                        resultEmitterPromiEvent.on(\"message\", (result) => {\n                            // note: we _don't_ need to check if `ws.closed` here because when\n                            // `ws.closed` is set we remove this event handler anyway.\n                            const message = JSON.stringify({\n                                jsonrpc: \"2.0\",\n                                method: result.type,\n                                params: result.data\n                            });\n                            ws.send(message, isBinary);\n                        });\n                        // keep track of listeners to dispose off when the ws disconnects\n                        connections.get(ws).add(resultEmitterPromiEvent.dispose);\n                    }\n                }\n                catch (err) {\n                    // ensure the connector's `handle` fn doesn't throw outside of a Promise\n                    if (ws.closed)\n                        return;\n                    data = connector.formatError(err, payload);\n                }\n                if (util_1.types.isGeneratorObject(data)) {\n                    sendFragmented(ws, data, useBinary, options.chunkSize);\n                }\n                else {\n                    ws.send(data, useBinary);\n                }\n            },\n            drain: (ws) => {\n                // This is there so tests can detect if a small amount of backpressure\n                // is happening and that things will still work if it does. We actually\n                // don't do anything to manage excessive backpressure.\n                // TODO: handle back pressure for real!\n                // options.logger.log(\"WebSocket backpressure: \" + ws.getBufferedAmount());\n            },\n            close: (ws) => {\n                ws.closed = true;\n                connections.get(ws).forEach(dispose => dispose());\n                connections.delete(ws);\n            }\n        });\n    }\n    close() {\n        __classPrivateFieldGet(this, _WebsocketServer_connections, \"f\").forEach((_, ws) => ws.end(websocket_close_codes_1.default.CLOSE_NORMAL, \"Server closed by client\"));\n    }\n}\nexports.default = WebsocketServer;\n_WebsocketServer_connections = new WeakMap();\n//# sourceMappingURL=ws-server.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetConnector = exports.DefaultOptionsByName = exports.DefaultFlavor = exports.FilecoinFlavorName = exports.EthereumFlavorName = void 0;\nconst ethereum_1 = require(\"@ganache/ethereum\");\nconst ethereum_options_1 = require(\"@ganache/ethereum-options\");\nconst filecoin_options_1 = require(\"@ganache/filecoin-options\");\nconst colors_1 = require(\"@ganache/colors\");\nconst chalk_1 = __importDefault(require(\"chalk\"));\n// we need \"@ganache/options\" in order for TS to properly infer types for `DefaultOptionsByName`\nrequire(\"@ganache/options\");\nconst NEED_HELP = \"Need help? Reach out to the Truffle community at\";\nconst COMMUNITY_LINK = \"https://trfl.io/support\";\nexports.EthereumFlavorName = \"ethereum\";\nexports.FilecoinFlavorName = \"filecoin\";\nexports.DefaultFlavor = exports.EthereumFlavorName;\nexports.DefaultOptionsByName = {\n    [exports.EthereumFlavorName]: ethereum_options_1.EthereumDefaults,\n    [exports.FilecoinFlavorName]: filecoin_options_1.FilecoinDefaults\n};\nfunction GetConnector(flavor, providerOptions, executor) {\n    if (flavor === exports.DefaultFlavor) {\n        return new ethereum_1.Connector(providerOptions, executor);\n    }\n    try {\n        switch (flavor) {\n            case exports.FilecoinFlavorName: {\n                flavor = \"@ganache/filecoin\";\n                // TODO: remove the `typeof f.default != \"undefined\" ? ` check once the\n                // published filecoin plugin is updated to\n                const f = eval(\"require\")(flavor);\n                const Connector = typeof f.default != \"undefined\" ? f.default.Connector : f.Connector;\n                // @ts-ignore\n                return new Connector(providerOptions, executor);\n            }\n            default: {\n                // for future plugin compat\n                const { Connector } = require(flavor);\n                return new Connector(providerOptions, executor);\n            }\n        }\n    }\n    catch (e) {\n        if (e.message.includes(`Cannot find module '${flavor}'`)) {\n            // we print and exit rather than throw to prevent webpack output from being\n            // spat out for the line number\n            console.warn((0, chalk_1.default) `\\n\\n{red.bold ERROR:} Could not find Ganache flavor \"{bold filecoin}\" (${flavor}); ` +\n                `it probably\\nneeds to be installed.\\n` +\n                ` ▸ if you're using Ganache as a library run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install ${flavor}}\\n` +\n                ` ▸ if you're using Ganache as a CLI run: \\n` +\n                (0, chalk_1.default) `   {blue.bold $ npm install --global ${flavor}}\\n\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.porsche}\").bold ${NEED_HELP}}\\n` +\n                (0, chalk_1.default) `{hex(\"${colors_1.TruffleColors.turquoise}\") ${COMMUNITY_LINK}}\\n\\n`);\n            process.exit(1);\n        }\n        else {\n            throw e;\n        }\n    }\n}\nexports.GetConnector = GetConnector;\n//# sourceMappingURL=index.js.map","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = () => ([]);\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 836;\nmodule.exports = webpackEmptyContext;","export const debug = () => () => {};\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./src/base\"), exports);\n__exportStar(require(\"./src/exclusive\"), exports);\n__exportStar(require(\"./src/definition\"), exports);\n__exportStar(require(\"./src/create\"), exports);\n__exportStar(require(\"./src/constants\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=base.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeterministicSeedPhrase = void 0;\n// Don't change! We need maintain original determinism since the beginning\nexports.DeterministicSeedPhrase = \"TestRPC is awesome!\";\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _OptionsConfig_defaults, _OptionsConfig_namespaces;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OptionsConfig = void 0;\nconst utils_1 = require(\"@ganache/utils\");\nconst checkForConflicts = (name, namespace, suppliedOptions, conflicts) => {\n    if (!conflicts)\n        return;\n    for (const conflict of conflicts) {\n        if (suppliedOptions.has(conflict)) {\n            throw new Error(`Values for both \"${namespace}.${name}\" and ` +\n                `\"${namespace}.${conflict}\" cannot ` +\n                `be specified; they are mutually exclusive.`);\n        }\n    }\n};\nfunction fill(defaults, options, target, namespace) {\n    const def = defaults[namespace];\n    const config = (target[namespace] = target[namespace] || {});\n    const flavor = options.flavor;\n    const suppliedOptions = new Set();\n    const keys = Object.keys(def);\n    if ((0, utils_1.hasOwn)(options, namespace)) {\n        const namespaceOptions = options[namespace];\n        for (let i = 0, l = keys.length; i < l; i++) {\n            const key = keys[i];\n            const propDefinition = def[key];\n            let value = namespaceOptions[key];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(namespaceOptions[key]);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else {\n                const legacyName = propDefinition.legacyName || key;\n                value = options[legacyName];\n                if (value !== undefined) {\n                    const normalized = propDefinition.normalize(value);\n                    if (normalized !== undefined) {\n                        checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                        config[key] = normalized;\n                        suppliedOptions.add(key);\n                    }\n                }\n                else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                    config[key] = propDefinition.default(config, flavor);\n                }\n            }\n        }\n    }\n    else {\n        for (let i = 0, l = keys.length; i < l; i++) {\n            const key = keys[i];\n            const propDefinition = def[key];\n            const legacyName = propDefinition.legacyName || key;\n            const value = options[legacyName];\n            if (value !== undefined) {\n                const normalized = propDefinition.normalize(value);\n                if (normalized !== undefined) {\n                    checkForConflicts(key, namespace, suppliedOptions, propDefinition.conflicts);\n                    config[key] = normalized;\n                    suppliedOptions.add(key);\n                }\n            }\n            else if ((0, utils_1.hasOwn)(propDefinition, \"default\")) {\n                config[key] = propDefinition.default(config, flavor);\n            }\n        }\n    }\n}\nclass OptionsConfig {\n    constructor(defaults) {\n        _OptionsConfig_defaults.set(this, void 0);\n        _OptionsConfig_namespaces.set(this, void 0);\n        __classPrivateFieldSet(this, _OptionsConfig_defaults, defaults, \"f\");\n        __classPrivateFieldSet(this, _OptionsConfig_namespaces, Object.keys(defaults), \"f\");\n    }\n    normalize(options) {\n        const defaults = __classPrivateFieldGet(this, _OptionsConfig_defaults, \"f\");\n        const out = {};\n        __classPrivateFieldGet(this, _OptionsConfig_namespaces, \"f\").forEach(namespace => {\n            fill(defaults, options, out, namespace);\n        });\n        return out;\n    }\n}\nexports.OptionsConfig = OptionsConfig;\n_OptionsConfig_defaults = new WeakMap(), _OptionsConfig_namespaces = new WeakMap();\n//# sourceMappingURL=create.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion Definition helpers\n//# sourceMappingURL=definition.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//#endregion\n//# sourceMappingURL=exclusive.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _PromiseQueue_queue, _PromiseQueue_tryResolve, _PromiseQueue_tryResolveChain;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst entry_1 = __importDefault(require(\"./src/entry\"));\nconst emitteryMethods = [\"emit\", \"once\"];\n/**\n * Creates a FIFO queue that ensures promises are _resolved_ in the order\n * they were added.\n *\n * This is different than a FIFO queue that _executes_ functions that\n * return promises; this queue is for the promises themselves.\n *\n * @example\n * ```javascript\n * const queue = new PromiseQueue();\n *\n * const slow = new Promise(resolve => setTimeout(resolve, 1000, \"slow\"));\n * const fast = Promise.resolve(\"fast\");\n *\n * await Promise.race([\n *   queue.add(slow),\n *   queue.add(fast)\n * ]); // returns \"slow\"\n *\n * // Additionally, the queued promise chain can be cleared via `queue.clear(value)`.\n * // This will cause the chain of promises to all resolve immediately with the\n * // given value. *\n * //\n * // * note: whatever the promise starting doing when it was created will still\n * // happen, no promises are aborted; rather, the return value is ignored.\n * ```\n */\nlet PromiseQueue = class PromiseQueue {\n    constructor() {\n        // TODO(perf): a singly linked list is probably a better option here\n        _PromiseQueue_queue.set(this, []);\n        _PromiseQueue_tryResolve.set(this, (queue, entry) => {\n            // if this is now the highest priority entry, resolve the outer\n            // Promise\n            if (entry === queue[0]) {\n                queue.shift();\n                entry.resolve(entry.value);\n                // then try resolving the rest\n                __classPrivateFieldGet(this, _PromiseQueue_tryResolveChain, \"f\").call(this, queue);\n            }\n            else {\n                entry.resolved = true;\n            }\n        });\n        /**\n         * Removes all _resolved_ promises from the front of the chain of promises.\n         */\n        _PromiseQueue_tryResolveChain.set(this, (queue) => {\n            let first = queue[0];\n            while (first && first.resolved) {\n                queue.shift();\n                first.resolve(first.value);\n                first = queue[0];\n            }\n            // if there is nothing left to do emit `\"idle\"`\n            if (queue.length === 0) {\n                this.emit(\"idle\");\n            }\n        });\n    }\n    /**\n     * Returns true if there are promises pending in the queue\n     */\n    isBusy() {\n        return __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").length !== 0;\n    }\n    /**\n     * Adds the promise to the end of the queue.\n     * @param promise -\n     * @returns a promise that resolves with the given promise's result. If the\n     * queue was `clear`ed before the promise could be shifted off the return\n     * value will be the `value` passed to `clear`.\n     */\n    add(promise) {\n        const queue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\");\n        const entry = new entry_1.default(promise, queue, __classPrivateFieldGet(this, _PromiseQueue_tryResolve, \"f\"));\n        queue.push(entry);\n        return entry.promise;\n    }\n    /**\n     * Clears all promises from the queue and sets their resolved values to the\n     * given value.\n     */\n    clear(value) {\n        // remove all entries from the queue and mark them.\n        const cancelledQueue = __classPrivateFieldGet(this, _PromiseQueue_queue, \"f\").splice(0);\n        cancelledQueue.forEach(entry => {\n            entry.queue = cancelledQueue;\n            entry.value = value;\n        });\n    }\n};\n_PromiseQueue_queue = new WeakMap(), _PromiseQueue_tryResolve = new WeakMap(), _PromiseQueue_tryResolveChain = new WeakMap();\nPromiseQueue = __decorate([\n    emittery_1.default.mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiseQueue);\nexports.default = PromiseQueue;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Entry {\n    constructor(promise, queue, onSetteled) {\n        this.resolved = false;\n        this.value = promise;\n        this.queue = queue;\n        this.onSetteled = onSetteled;\n        const _onSetteled = () => this.onSetteled(this.queue, this);\n        promise.then(_onSetteled, _onSetteled);\n        this.promise = new Promise(resolve => {\n            this.resolve = resolve;\n        });\n    }\n}\nexports.default = Entry;\n//# sourceMappingURL=entry.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decode = exports.encodeLength = exports.encode = exports.digest = exports.encodeRange = void 0;\nconst utils_1 = require(\"@ganache/utils\");\n/**\n * Begin RLP encoding of `items`, from `start` until `length`. Call `RLP.digest` to\n * finish encoding.\n *\n **/\nfunction encodeRange(items, start, length) {\n    let count = 0;\n    const end = start + length;\n    const output = [];\n    for (var i = start; i < end; i++) {\n        const item = items[i];\n        const encoded = encode(item);\n        count += encoded.length;\n        output.push(encoded);\n    }\n    return { length: count, output };\n}\nexports.encodeRange = encodeRange;\n/**\n * Finishes encoding started by `encodeRange`.\n *\n * @param ranges -\n * @returns returns a Buffer of encoded data\n */\nfunction digest(ranges, length, offset = 0, alloc = Buffer.allocUnsafe) {\n    const encodedLength = encodeLength(length, 192);\n    const lengthEncodedLength = encodedLength.length;\n    const buf = alloc(lengthEncodedLength + length);\n    encodedLength.copy(buf, offset, 0, lengthEncodedLength);\n    offset += lengthEncodedLength;\n    for (let i = 0, l = ranges.length; i < l; i++) {\n        const range = ranges[i];\n        for (let j = 0, m = range.length; j < m; j++) {\n            const entry = range[j];\n            const size = entry.length;\n            entry.copy(buf, offset, 0, size);\n            offset += size;\n        }\n    }\n    return buf;\n}\nexports.digest = digest;\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * @param input -\n * @returns returns a Buffer of encoded data\n **/\nfunction encode(input) {\n    if (Array.isArray(input)) {\n        let length = 0;\n        const output = [];\n        for (let i = 0, l = input.length; i < l; i++) {\n            const enc = encode(input[i]);\n            length += enc.length;\n            output.push(enc);\n        }\n        const buf = Buffer.concat(output, length);\n        const encodedLength = encodeLength(length, 192);\n        return Buffer.concat([encodedLength, buf], encodedLength.length + length);\n    }\n    else {\n        if (input == null) {\n            const buf = Buffer.allocUnsafe(1);\n            buf[0] = 128;\n            return buf;\n        }\n        else {\n            const length = input.length;\n            if (length === 1 && input[0] < 128) {\n                return input;\n            }\n            else {\n                const encLength = encodeLength(length, 128);\n                return Buffer.concat([encLength, input], encLength.length + length);\n            }\n        }\n    }\n}\nexports.encode = encode;\nfunction encodeLength(len, offset) {\n    if (len < 56) {\n        const buf = Buffer.allocUnsafe(1);\n        buf[0] = len + offset;\n        return buf;\n    }\n    else {\n        const hexLength = (0, utils_1.uintToBuffer)(len);\n        const lLength = hexLength.length;\n        const firstByte = (0, utils_1.uintToBuffer)(offset + 55 + lLength);\n        return Buffer.concat([firstByte, hexLength], firstByte.length + lLength);\n    }\n}\nexports.encodeLength = encodeLength;\n/**\n * Slices a Buffer, throws if the slice goes out-of-bounds of the Buffer.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input, start, end) {\n    if (end > input.length) {\n        throw new Error(\"invalid RLP (safeSlice): end slice of Buffer out-of-bounds\");\n    }\n    return input.slice(start, end);\n}\n/**\n * RLP Decoding based on https://eth.wiki/en/fundamentals/rlp\n * @param input Will be converted to Buffer\n * @returns decoded Array of Buffers containing the original message\n **/\nfunction decode(input) {\n    if (!input || input.length === 0) {\n        return utils_1.BUFFER_EMPTY;\n    }\n    const decoded = _decode(input);\n    if (decoded.remainder.length !== 0) {\n        throw new Error(\"invalid RLP: remainder must be zero\");\n    }\n    return decoded.data;\n}\nexports.decode = decode;\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v) {\n    if (v[0] === 0) {\n        throw new Error(\"invalid RLP: extra zeros\");\n    }\n    return parseHexByte(bytesToHex(v));\n}\n/** Decode an input with RLP */\nfunction _decode(input) {\n    let length, llength, data, innerRemainder, d;\n    const decoded = [];\n    const firstByte = input[0];\n    if (firstByte <= 0x7f) {\n        // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n        return {\n            data: input.slice(0, 1),\n            remainder: input.slice(1)\n        };\n    }\n    else if (firstByte <= 0xb7) {\n        // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n        // The range of the first byte is [0x80, 0xb7]\n        length = firstByte - 0x7f;\n        // set 0x80 null to 0\n        if (firstByte === 0x80) {\n            data = Buffer.from([]);\n        }\n        else {\n            data = safeSlice(input, 1, length);\n        }\n        if (length === 2 && data[0] < 0x80) {\n            throw new Error(\"invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed\");\n        }\n        return {\n            data,\n            remainder: input.slice(length)\n        };\n    }\n    else if (firstByte <= 0xbf) {\n        // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n        // followed by the length, followed by the string\n        llength = firstByte - 0xb6;\n        if (input.length - 1 < llength) {\n            throw new Error(\"invalid RLP: not enough bytes for string length\");\n        }\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length <= 55) {\n            throw new Error(\"invalid RLP: expected string length to be greater than 55\");\n        }\n        data = safeSlice(input, llength, length + llength);\n        return {\n            data,\n            remainder: input.slice(length + llength)\n        };\n    }\n    else if (firstByte <= 0xf7) {\n        // a list between 0-55 bytes long\n        length = firstByte - 0xbf;\n        innerRemainder = safeSlice(input, 1, length);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(length)\n        };\n    }\n    else {\n        // a list over 55 bytes long\n        llength = firstByte - 0xf6;\n        length = decodeLength(safeSlice(input, 1, llength));\n        if (length < 56) {\n            throw new Error(\"invalid RLP: encoded list too short\");\n        }\n        const totalLength = llength + length;\n        if (totalLength > input.length) {\n            throw new Error(\"invalid RLP: total length is larger than the data\");\n        }\n        innerRemainder = safeSlice(input, llength, totalLength);\n        while (innerRemainder.length) {\n            d = _decode(innerRemainder);\n            decoded.push(d.data);\n            innerRemainder = d.remainder;\n        }\n        return {\n            data: decoded,\n            remainder: input.slice(totalLength)\n        };\n    }\n}\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, \"0\"));\nfunction bytesToHex(uint8a) {\n    // Pre-caching chars with `cachedHexes` speeds this up 6x\n    let hex = \"\";\n    for (let i = 0; i < uint8a.length; i++) {\n        hex += cachedHexes[uint8a[i]];\n    }\n    return hex;\n}\nfunction parseHexByte(hexByte) {\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte))\n        throw new Error(\"Invalid byte sequence\");\n    return byte;\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\n/*!\n * @ganache/secp256k1\n *\n * @author David Murdoch\n * @license MIT\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = exports.SECP256K1_N = void 0;\nconst path_1 = require(\"path\");\nexports.SECP256K1_N = 0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n;\nexports.SECP256K1_MAX_PRIVATE_KEY_DIV_2 = 0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0n; // (SECP256K1_N - 1n) / 2n\nlet secp256k1;\ntry {\n    // TODO: find a better way :-)\n    // use `eval` to make `ganache`'s webpack ignore this\n    const nodeRequire = eval(\"require\");\n    const path = nodeRequire.resolve(\"secp256k1/package.json\");\n    const dir = (0, path_1.dirname)(path);\n    const nodeGypBuild = require(\"node-gyp-build\");\n    // load native secp256k1\n    const { Secp256k1 } = nodeGypBuild(dir);\n    secp256k1 = new Secp256k1();\n}\ncatch {\n    // on error use the JS fallback\n    secp256k1 = require(\"secp256k1/lib/elliptic\");\n}\nexports.default = secp256k1;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PromiEvent = exports.JsonRpcErrorCode = exports.makeResponse = exports.makeRequest = exports.makeError = exports.JsonRpcType = void 0;\n__exportStar(require(\"./src/types\"), exports);\n__exportStar(require(\"./src/utils\"), exports);\nvar json_rpc_1 = require(\"./src/things/json-rpc\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_1.JsonRpcType; } });\n__exportStar(require(\"./src/things/subscription\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-quantity\"), exports);\n__exportStar(require(\"./src/things/json-rpc/json-rpc-data\"), exports);\nvar jsonrpc_1 = require(\"./src/things/jsonrpc\");\nObject.defineProperty(exports, \"makeError\", { enumerable: true, get: function () { return jsonrpc_1.makeError; } });\nObject.defineProperty(exports, \"makeRequest\", { enumerable: true, get: function () { return jsonrpc_1.makeRequest; } });\nObject.defineProperty(exports, \"makeResponse\", { enumerable: true, get: function () { return jsonrpc_1.makeResponse; } });\nObject.defineProperty(exports, \"JsonRpcErrorCode\", { enumerable: true, get: function () { return jsonrpc_1.JsonRpcErrorCode; } });\nvar promievent_1 = require(\"./src/things/promievent\");\nObject.defineProperty(exports, \"PromiEvent\", { enumerable: true, get: function () { return __importDefault(promievent_1).default; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBigIntBE = exports.toBufferBE = void 0;\nvar bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\nObject.defineProperty(exports, \"toBufferBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBufferBE; } });\nObject.defineProperty(exports, \"toBigIntBE\", { enumerable: true, get: function () { return bigint_buffer_1.toBigIntBE; } });\n//# sourceMappingURL=common.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcType = void 0;\nvar json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nObject.defineProperty(exports, \"JsonRpcType\", { enumerable: true, get: function () { return json_rpc_base_types_1.BaseJsonRpcType; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseAndValidateStringInput = exports.parseAndValidateBigIntInput = exports.parseAndValidateNumberInput = void 0;\nconst bigint_to_buffer_1 = require(\"../../utils/bigint-to-buffer\");\nconst uint_to_buffer_1 = require(\"../../utils/uint-to-buffer\");\nconst BUFFER_EMPTY = Buffer.allocUnsafe(0);\n/**\n * Parse and validate a {@link number} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param {number} input - must be a positive, finite integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateNumberInput(input) {\n    if (input === 0) {\n        return BUFFER_EMPTY;\n    }\n    if (input < 0) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    if (input % 1) {\n        throw new Error(\"Cannot wrap a decimal as a json-rpc type\");\n    }\n    if (!isFinite(input)) {\n        throw new Error(`Cannot wrap a ${input} as a json-rpc type`);\n    }\n    return (0, uint_to_buffer_1.uintToBuffer)(input);\n}\nexports.parseAndValidateNumberInput = parseAndValidateNumberInput;\n/**\n * Parse and validate a {@link bigint} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {bigint} input - must be a positive integer, or null.\n * @returns {Buffer}\n */\nfunction parseAndValidateBigIntInput(input) {\n    if (input < 0n) {\n        throw new Error(\"Cannot wrap a negative value as a json-rpc type\");\n    }\n    return (0, bigint_to_buffer_1.bigIntToBuffer)(input);\n}\nexports.parseAndValidateBigIntInput = parseAndValidateBigIntInput;\n/**\n * Parse and validate a {@link string} to {@link Buffer} as internal representation for a JSON-RPC data type.\n * @param  {string} input - must be a hex encoded integer prefixed with \"0x\".\n * @returns Buffer\n */\nfunction parseAndValidateStringInput(input) {\n    if (input.slice(0, 2).toLowerCase() !== \"0x\") {\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; strings must be prefixed with \"0x\".`);\n    }\n    let hexValue = input.slice(2);\n    // hexValue must be an even number of hexadecimal characters in order to correctly decode in Buffer.from\n    // see: https://nodejs.org/api/buffer.html#buffers-and-character-encodings\n    if (hexValue.length & 1) {\n        hexValue = `0${hexValue}`;\n    }\n    const byteLength = Math.ceil(input.length / 2 - 1);\n    const _buffer = Buffer.from(hexValue, \"hex\");\n    if (_buffer.length !== byteLength) {\n        // Buffer.from will return the result after encountering an input that does not conform to hexadecimal encoding.\n        // this means that an invalid input can never return a value with the expected bytelength.\n        throw new Error(`Cannot wrap string value \"${input}\" as a json-rpc type; the input value contains an invalid hex character.`);\n    }\n    return _buffer;\n}\nexports.parseAndValidateStringInput = parseAndValidateStringInput;\n//# sourceMappingURL=input-parsers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseJsonRpcType = void 0;\nconst input_parsers_1 = require(\"./input-parsers\");\nconst inspect = Symbol.for(\"nodejs.util.inspect.custom\");\nclass BaseJsonRpcType {\n    constructor(value) {\n        if (value == null) {\n            this.bufferValue = null;\n        }\n        else if (Buffer.isBuffer(value)) {\n            // empty buffer should be treated as null\n            this.bufferValue = value.length === 0 ? null : value;\n        }\n        else {\n            switch (typeof value) {\n                case \"string\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateStringInput)(value);\n                    break;\n                case \"number\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateNumberInput)(value);\n                    break;\n                case \"bigint\":\n                    this.bufferValue = (0, input_parsers_1.parseAndValidateBigIntInput)(value);\n                    break;\n                default:\n                    throw new Error(`Cannot wrap a \"${typeof value}\" as a json-rpc type`);\n            }\n        }\n    }\n    // used to make console.log debugging a little easier\n    [inspect](_depth, _options) {\n        return `[${this.constructor.name}] ${this.toString()}`;\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        return `0x${this.bufferValue.toString(\"hex\")}`;\n    }\n    toBuffer() {\n        return this.bufferValue;\n    }\n    valueOf() {\n        return this.bufferValue;\n    }\n    toJSON() {\n        return this.toString();\n    }\n    isNull() {\n        return this.bufferValue == null;\n    }\n}\nexports.BaseJsonRpcType = BaseJsonRpcType;\n//# sourceMappingURL=json-rpc-base-types.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Data = void 0;\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Data extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, _byteLength) {\n        super(value);\n        this._byteLength = _byteLength;\n        if (typeof value === \"bigint\") {\n            throw new Error(`Cannot create a ${typeof value} as a Data`);\n        }\n    }\n    toString(byteLength) {\n        const length = byteLength || this._byteLength;\n        if (this.bufferValue == null) {\n            return \"0x\";\n        }\n        if (length === undefined) {\n            return super.toString();\n        }\n        const strValue = this.bufferValue.toString(\"hex\");\n        return `0x${Data.stringToFixedByteLength(strValue, length)}`;\n    }\n    toBuffer(byteLength) {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const length = byteLength || this._byteLength;\n        if (length == undefined || length === this.bufferValue.length) {\n            return this.bufferValue;\n        }\n        return Data.bufferToFixedByteLength(this.bufferValue, length);\n    }\n    static from(value, byteLength) {\n        return new Data(value, byteLength);\n    }\n    static stringToFixedByteLength(value, byteLength) {\n        const desiredCharLength = byteLength * 2;\n        if (desiredCharLength === value.length) {\n            return value;\n        }\n        const padCharCount = desiredCharLength - value.length;\n        let fixedLengthValue;\n        if (padCharCount > 0) {\n            fixedLengthValue = \"0\".repeat(padCharCount) + value;\n        }\n        else {\n            fixedLengthValue = value.slice(0, desiredCharLength);\n        }\n        return fixedLengthValue;\n    }\n    static bufferToFixedByteLength(value, byteLength) {\n        if (byteLength === value.length) {\n            return value;\n        }\n        const fixedLengthValue = Buffer.allocUnsafe(byteLength);\n        const sourceStart = 0;\n        const targetStart = value.length > byteLength ? 0 : byteLength - value.length;\n        if (targetStart > 0) {\n            fixedLengthValue.fill(0, 0, targetStart);\n        }\n        value.copy(fixedLengthValue, targetStart, sourceStart, byteLength);\n        return fixedLengthValue;\n    }\n    static toBuffer(value, byteLength) {\n        return Data.from(value, byteLength).toBuffer();\n    }\n    static toString(value, byteLength) {\n        return Data.from(value, byteLength).toString();\n    }\n}\nexports.Data = Data;\nData.Empty = Data.from(constants_1.BUFFER_EMPTY);\n//# sourceMappingURL=json-rpc-data.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Quantity = void 0;\nconst buffer_to_bigint_1 = require(\"../../utils/buffer-to-bigint\");\nconst json_rpc_base_types_1 = require(\"./json-rpc-base-types\");\nconst constants_1 = require(\"../../utils/constants\");\nclass Quantity extends json_rpc_base_types_1.BaseJsonRpcType {\n    constructor(value, nullable) {\n        super(value);\n        this._nullable = false;\n        if (value === \"0x\") {\n            throw new Error('Cannot wrap \"0x\" as a json-rpc Quantity type; strings must contain at least one hexadecimal character.');\n        }\n        this._nullable = nullable;\n    }\n    static from(value, nullable = false) {\n        if (value instanceof Quantity)\n            return value;\n        return new Quantity(value, nullable);\n    }\n    toString() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : Quantity.ZERO_VALUE_STRING;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        // bufferValue is empty, or contains only 0 bytes\n        if (firstNonZeroByte === this.bufferValue.length) {\n            return Quantity.ZERO_VALUE_STRING;\n        }\n        let value = this.bufferValue.toString(\"hex\", firstNonZeroByte);\n        // only need to check the first char, as we have already skipped 0 bytes in call to this.bufferValue.toString().\n        if (value[0] === \"0\") {\n            value = value.slice(1);\n        }\n        return `0x${value}`;\n    }\n    toBuffer() {\n        if (this.bufferValue == null) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        if (firstNonZeroByte > 0) {\n            return this.bufferValue.subarray(firstNonZeroByte);\n        }\n        else {\n            return this.bufferValue;\n        }\n    }\n    toBigInt() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0n;\n        }\n        if (this.bufferValue.length === 0) {\n            return 0n;\n        }\n        return (0, buffer_to_bigint_1.bufferToBigInt)(this.bufferValue);\n    }\n    toNumber() {\n        if (this.bufferValue == null) {\n            return this._nullable ? null : 0;\n        }\n        const firstNonZeroByte = this.findFirstNonZeroByteIndex();\n        const length = this.bufferValue.length - firstNonZeroByte;\n        if (length === 0) {\n            return 0;\n        }\n        let result;\n        // buffer.readUIntBE only supports up to 48 bits, so if larger then we need to convert to bigint first\n        if (length > 6) {\n            const trimmedBuffer = firstNonZeroByte === 0\n                ? this.bufferValue\n                : this.bufferValue.subarray(firstNonZeroByte);\n            result = Number((0, buffer_to_bigint_1.bufferToBigInt)(trimmedBuffer));\n            if (!Number.isSafeInteger(result)) {\n                console.warn(`0x${this.bufferValue.toString(\"hex\")} is too large - the maximum safe integer value is 0${Number.MAX_SAFE_INTEGER.toString(16)}`);\n            }\n        }\n        else {\n            result = this.bufferValue.readUIntBE(firstNonZeroByte, length);\n        }\n        return result;\n    }\n    valueOf() {\n        if (this.bufferValue == null) {\n            return null;\n        }\n        else {\n            return this.toBigInt();\n        }\n    }\n    findFirstNonZeroByteIndex() {\n        let firstNonZeroByte = 0;\n        for (firstNonZeroByte = 0; firstNonZeroByte < this.bufferValue.length; firstNonZeroByte++) {\n            if (this.bufferValue[firstNonZeroByte] !== 0)\n                break;\n        }\n        return firstNonZeroByte;\n    }\n    static toBuffer(value, nullable) {\n        return Quantity.from(value, nullable).toBuffer();\n    }\n    static toString(value, nullable) {\n        return Quantity.from(value, nullable).toString();\n    }\n    static toNumber(value, nullable) {\n        return Quantity.from(value, nullable).toNumber();\n    }\n    static toBigInt(value, nullable) {\n        return Quantity.from(value, nullable).toBigInt();\n    }\n}\nexports.Quantity = Quantity;\nQuantity.Empty = Quantity.from(constants_1.BUFFER_EMPTY, true);\nQuantity.Zero = Quantity.from(constants_1.BUFFER_ZERO);\nQuantity.One = Quantity.from(1);\nQuantity.Gwei = Quantity.from(1000000000);\nQuantity.ZERO_VALUE_STRING = \"0x0\";\nexports.default = Quantity;\n//# sourceMappingURL=json-rpc-quantity.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcErrorCode = exports.makeError = exports.makeResponse = exports.makeRequest = void 0;\nconst jsonrpc = \"2.0\";\nconst makeRequest = (json) => {\n    return {\n        id: json.id,\n        jsonrpc,\n        method: json.method,\n        params: json.params\n    };\n};\nexports.makeRequest = makeRequest;\nconst makeResponse = (id, result) => {\n    return {\n        id,\n        jsonrpc,\n        result\n    };\n};\nexports.makeResponse = makeResponse;\nconst makeError = (id, error, result) => {\n    // Error objects are weird, `message` isn't included in the property names,\n    // so it is pulled out separately.\n    const details = { message: error.message };\n    Object.getOwnPropertyNames(error).forEach(name => {\n        if (typeof name === \"string\") {\n            details[name] = error[name];\n        }\n    });\n    if (typeof details.code !== \"number\") {\n        details.code = -32700; // JSON-RPC Parse error\n    }\n    if (result !== undefined) {\n        return {\n            id,\n            jsonrpc,\n            error: details,\n            result\n        };\n    }\n    else {\n        return {\n            id,\n            jsonrpc,\n            error: details\n        };\n    }\n};\nexports.makeError = makeError;\nvar JsonRpcErrorCode;\n(function (JsonRpcErrorCode) {\n    /**\n     * Invalid JSON was received by the server.\n     * An error occurred on the server while parsing the JSON text.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"PARSE_ERROR\"] = -32700] = \"PARSE_ERROR\";\n    /**\n     * The JSON sent is not a valid Request object.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_REQUEST\"] = -32600] = \"INVALID_REQUEST\";\n    /**\n     * The method does not exist / is not available.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_FOUND\"] = -32601] = \"METHOD_NOT_FOUND\";\n    /**\n     * Invalid method parameter(s).\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_PARAMS\"] = -32602] = \"INVALID_PARAMS\";\n    /**\n     * Internal JSON-RPC error.\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INTERNAL_ERROR\"] = -32603] = \"INTERNAL_ERROR\";\n    /**\n     * Missing or invalid parameters\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"INVALID_INPUT\"] = -32000] = \"INVALID_INPUT\";\n    /**\n     * Transaction creation failed\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"TRANSACTION_REJECTED\"] = -32003] = \"TRANSACTION_REJECTED\";\n    /**\n     * \tMethod is not implemented\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"METHOD_NOT_SUPPORTED\"] = -32004] = \"METHOD_NOT_SUPPORTED\";\n    /**\n     * \tRequest exceeds defined limit\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"LIMIT_EXCEEDED\"] = -32005] = \"LIMIT_EXCEEDED\";\n    /**\n     * Version of JSON-RPC protocol is not supported\n     */\n    JsonRpcErrorCode[JsonRpcErrorCode[\"JSON_RPC_VERSION_NOT_SUPPORTED\"] = -32006] = \"JSON_RPC_VERSION_NOT_SUPPORTED\";\n})(JsonRpcErrorCode = exports.JsonRpcErrorCode || (exports.JsonRpcErrorCode = {}));\n//# sourceMappingURL=jsonrpc.js.map","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar PromiEvent_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst emittery_1 = __importDefault(require(\"emittery\"));\nconst emitteryMethods = [\n    \"clearListeners\",\n    \"once\",\n    \"on\",\n    \"emit\",\n    \"onAny\"\n];\n// A hack to fix Emittery's `mixin` type.\n// issue: https://github.com/sindresorhus/emittery/issues/79\nconst mixin = emittery_1.default.mixin.bind(emittery_1.default);\nlet PromiEvent = PromiEvent_1 = class PromiEvent extends Promise {\n    constructor(executor) {\n        super(executor);\n        /**\n         * Used to immediately clear all event listeners on the instance and prevent\n         * any additional binding or emission from the Emitter.\n         *\n         * Once disposed no listeners can be bound to this emitter.\n         *\n         * Note: `dispose` is pre-bound to the `this`, making it possible to pass the\n         * method around detached from it's context.\n         */\n        this.dispose = () => {\n            if (!this.clearListeners)\n                throw new Error(\"PromiEvent already disposed\");\n            this.clearListeners();\n            // Ensure that once disposed no listeners can be bound to this emitter.\n            const fn = () => {\n                throw new Error(\"PromiEvent bound after dispose\");\n            };\n            emitteryMethods\n                .filter(m => m !== \"emit\")\n                .forEach(methodName => {\n                Object.defineProperty(this, methodName, {\n                    enumerable: false,\n                    value: fn\n                });\n            });\n        };\n    }\n    /**\n     * Attaches a callback for only the rejection of the Promise.\n     * @param onrejected - The callback to execute when the Promise is rejected.\n     * @returns A PromiEvent for the completion of the callback.\n     */\n    catch(onrejected) {\n        const prom = new PromiEvent_1((resolve, reject) => {\n            this.onAny((eventName, eventData) => {\n                return prom.emit(eventName, eventData);\n            });\n            const p = super.catch(onrejected);\n            p.then(resolve, reject);\n        });\n        return prom;\n    }\n    static resolve(value) {\n        return new PromiEvent_1(resolve => {\n            resolve(value);\n        });\n    }\n};\nPromiEvent = PromiEvent_1 = __decorate([\n    mixin(Symbol.for(\"emittery\"), emitteryMethods)\n], PromiEvent);\nexports.default = PromiEvent;\n//# sourceMappingURL=promievent.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=subscription.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base implementation for an API.\n * All properties must be `async` callable or return a `Promise`\n */\nclass ApiBase {\n}\n//# sourceMappingURL=api.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=connector.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./connector\"), exports);\n__exportStar(require(\"./provider\"), exports);\n__exportStar(require(\"./api\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=provider.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bigIntToBuffer = void 0;\nconst common_1 = require(\"../common\");\nconst constants_1 = require(\"./constants\");\nconst uint_to_buffer_1 = require(\"./uint-to-buffer\");\nconst allocUnsafe = Buffer.allocUnsafe;\nlet _bigIntToBuffer;\n/**\n * Returns the number of bytes contained in this given `value`.\n * @param value -\n */\nfunction bigIntByteLength(value) {\n    let length = 1;\n    while ((value >>= 8n))\n        length++;\n    return length;\n}\nconst MAX_SAFE_INTEGER = BigInt(Number.MAX_SAFE_INTEGER);\ntry {\n    // force fallback if only `toBufferBE` is missing (this can happen if toBufferBE isn't polyfilled for the browser,\n    // which, at the time of this writing... it isn't)\n    if (!common_1.toBufferBE)\n        throw new Error(\"Missing function `toBufferBE`!\");\n    _bigIntToBuffer = (value) => {\n        if (value === 0n) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        else if (value <= MAX_SAFE_INTEGER) {\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            const size = bigIntByteLength(value);\n            return (0, common_1.toBufferBE)(value, size);\n        }\n    };\n}\ncatch {\n    _bigIntToBuffer = (value) => {\n        if (value === 0n) {\n            return constants_1.BUFFER_EMPTY;\n        }\n        else if (value <= MAX_SAFE_INTEGER) {\n            // if this value can be handled as a JS number safely, convert it that way\n            return (0, uint_to_buffer_1.uintToBuffer)(Number(value));\n        }\n        else {\n            let length = bigIntByteLength(value);\n            const buf = allocUnsafe(length);\n            // process 1 byte at a time\n            do {\n                // truncate to right-most 32 bits and assign to buffer position `length`\n                buf[--length] = Number(value & 0xffffffffn);\n                // shift right-most byte off since we've used it\n                value >>= 8n;\n            } while (length);\n            return buf;\n        }\n    };\n}\n/**\n * Converts a bigint to a Buffer (Big Endian)\n */\nexports.bigIntToBuffer = _bigIntToBuffer;\n//# sourceMappingURL=bigint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToBigInt = void 0;\nconst bigint_buffer_1 = require(\"@trufflesuite/bigint-buffer\");\n/**\n * note: this doesn't handle negative values\n * @param value - Buffer representation of a bigint, most-significant bit first (Big-endian)\n */\nfunction bufferToBigInt(value) {\n    // Parsed as BE.\n    // This doesn't handle negative values. We may need to add logic to handle\n    // it because it is possible values returned from the VM could be negative\n    // and stored in a buffer.\n    const length = value.byteLength;\n    if (length === 0) {\n        return null;\n    }\n    // Buffers that are 6 bytes or less can be converted with built-in methods\n    if (length <= 6) {\n        return BigInt(value.readUIntBE(0, length));\n    }\n    let view;\n    // Buffers that are 7 bytes need to be padded to 8 bytes\n    if (length === 7) {\n        const padded = new Uint8Array(8);\n        // set byte 0 to 0, and bytes 1-8 to the value's 7 bytes:\n        padded.set(value, 1);\n        view = new DataView(padded.buffer);\n    }\n    else if (length === 8) {\n        view = new DataView(value.buffer, value.byteOffset, length);\n    }\n    else {\n        // TODO: toBigIntBE is a native lib with no pure JS fallback yet.\n        return (0, bigint_buffer_1.toBigIntBE)(value);\n    }\n    return view.getBigUint64(0);\n}\nexports.bufferToBigInt = bufferToBigInt;\n//# sourceMappingURL=buffer-to-bigint.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bufferToMinHexKey = void 0;\nlet stringify;\nif (typeof Buffer.prototype.latin1Slice === \"function\") {\n    stringify = (buffer, start, end) => {\n        // this is just `buffer.toString(\"hex\")`, but it skips a bunch of checks\n        // that don't apply because our `start` and `end` just can't be out of\n        // bounds.\n        return buffer.hexSlice(start, end);\n    };\n}\nelse {\n    stringify = (buffer, start, end) => {\n        return buffer.slice(start, end).toString(\"hex\");\n    };\n}\n/**\n * Trims leading 0s from a buffer and returns a key representing the buffer's\n * trimmed value (`Buffer.from([0, 0, 12, 0])` => `1200`).\n *\n * @param buffer -\n */\nfunction bufferToMinHexKey(buffer) {\n    for (let i = 0, length = buffer.byteLength; i < length; i++) {\n        const value = buffer[i];\n        // once we find a non-zero value take the rest of the buffer as the key\n        if (value !== 0) {\n            if (i + 1 === length) {\n                // use a lookup table for single character lookups\n                return HEX_MAP[value];\n            }\n            else {\n                return stringify(buffer, i, length);\n            }\n        }\n    }\n    return \"\";\n}\nexports.bufferToMinHexKey = bufferToMinHexKey;\nconst HEX_MAP = [\n    \"00\",\n    \"01\",\n    \"02\",\n    \"03\",\n    \"04\",\n    \"05\",\n    \"06\",\n    \"07\",\n    \"08\",\n    \"09\",\n    \"0a\",\n    \"0b\",\n    \"0c\",\n    \"0d\",\n    \"0e\",\n    \"0f\",\n    \"10\",\n    \"11\",\n    \"12\",\n    \"13\",\n    \"14\",\n    \"15\",\n    \"16\",\n    \"17\",\n    \"18\",\n    \"19\",\n    \"1a\",\n    \"1b\",\n    \"1c\",\n    \"1d\",\n    \"1e\",\n    \"1f\",\n    \"20\",\n    \"21\",\n    \"22\",\n    \"23\",\n    \"24\",\n    \"25\",\n    \"26\",\n    \"27\",\n    \"28\",\n    \"29\",\n    \"2a\",\n    \"2b\",\n    \"2c\",\n    \"2d\",\n    \"2e\",\n    \"2f\",\n    \"30\",\n    \"31\",\n    \"32\",\n    \"33\",\n    \"34\",\n    \"35\",\n    \"36\",\n    \"37\",\n    \"38\",\n    \"39\",\n    \"3a\",\n    \"3b\",\n    \"3c\",\n    \"3d\",\n    \"3e\",\n    \"3f\",\n    \"40\",\n    \"41\",\n    \"42\",\n    \"43\",\n    \"44\",\n    \"45\",\n    \"46\",\n    \"47\",\n    \"48\",\n    \"49\",\n    \"4a\",\n    \"4b\",\n    \"4c\",\n    \"4d\",\n    \"4e\",\n    \"4f\",\n    \"50\",\n    \"51\",\n    \"52\",\n    \"53\",\n    \"54\",\n    \"55\",\n    \"56\",\n    \"57\",\n    \"58\",\n    \"59\",\n    \"5a\",\n    \"5b\",\n    \"5c\",\n    \"5d\",\n    \"5e\",\n    \"5f\",\n    \"60\",\n    \"61\",\n    \"62\",\n    \"63\",\n    \"64\",\n    \"65\",\n    \"66\",\n    \"67\",\n    \"68\",\n    \"69\",\n    \"6a\",\n    \"6b\",\n    \"6c\",\n    \"6d\",\n    \"6e\",\n    \"6f\",\n    \"70\",\n    \"71\",\n    \"72\",\n    \"73\",\n    \"74\",\n    \"75\",\n    \"76\",\n    \"77\",\n    \"78\",\n    \"79\",\n    \"7a\",\n    \"7b\",\n    \"7c\",\n    \"7d\",\n    \"7e\",\n    \"7f\",\n    \"80\",\n    \"81\",\n    \"82\",\n    \"83\",\n    \"84\",\n    \"85\",\n    \"86\",\n    \"87\",\n    \"88\",\n    \"89\",\n    \"8a\",\n    \"8b\",\n    \"8c\",\n    \"8d\",\n    \"8e\",\n    \"8f\",\n    \"90\",\n    \"91\",\n    \"92\",\n    \"93\",\n    \"94\",\n    \"95\",\n    \"96\",\n    \"97\",\n    \"98\",\n    \"99\",\n    \"9a\",\n    \"9b\",\n    \"9c\",\n    \"9d\",\n    \"9e\",\n    \"9f\",\n    \"a0\",\n    \"a1\",\n    \"a2\",\n    \"a3\",\n    \"a4\",\n    \"a5\",\n    \"a6\",\n    \"a7\",\n    \"a8\",\n    \"a9\",\n    \"aa\",\n    \"ab\",\n    \"ac\",\n    \"ad\",\n    \"ae\",\n    \"af\",\n    \"b0\",\n    \"b1\",\n    \"b2\",\n    \"b3\",\n    \"b4\",\n    \"b5\",\n    \"b6\",\n    \"b7\",\n    \"b8\",\n    \"b9\",\n    \"ba\",\n    \"bb\",\n    \"bc\",\n    \"bd\",\n    \"be\",\n    \"bf\",\n    \"c0\",\n    \"c1\",\n    \"c2\",\n    \"c3\",\n    \"c4\",\n    \"c5\",\n    \"c6\",\n    \"c7\",\n    \"c8\",\n    \"c9\",\n    \"ca\",\n    \"cb\",\n    \"cc\",\n    \"cd\",\n    \"ce\",\n    \"cf\",\n    \"d0\",\n    \"d1\",\n    \"d2\",\n    \"d3\",\n    \"d4\",\n    \"d5\",\n    \"d6\",\n    \"d7\",\n    \"d8\",\n    \"d9\",\n    \"da\",\n    \"db\",\n    \"dc\",\n    \"dd\",\n    \"de\",\n    \"df\",\n    \"e0\",\n    \"e1\",\n    \"e2\",\n    \"e3\",\n    \"e4\",\n    \"e5\",\n    \"e6\",\n    \"e7\",\n    \"e8\",\n    \"e9\",\n    \"ea\",\n    \"eb\",\n    \"ec\",\n    \"ed\",\n    \"ee\",\n    \"ef\",\n    \"f0\",\n    \"f1\",\n    \"f2\",\n    \"f3\",\n    \"f4\",\n    \"f5\",\n    \"f6\",\n    \"f7\",\n    \"f8\",\n    \"f9\",\n    \"fa\",\n    \"fb\",\n    \"fc\",\n    \"fd\",\n    \"fe\",\n    \"ff\"\n];\n//# sourceMappingURL=buffer-to-key.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VERSION_KEY = exports.KNOWN_CHAINIDS = exports.WEI = exports.BUFFER_8_ZERO = exports.BUFFER_32_ZERO = exports.BUFFER_ZERO = exports.BUFFER_EMPTY = exports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO = void 0;\nexports.BUFFER_256_ZERO = Buffer.allocUnsafe(256).fill(0);\nexports.ACCOUNT_ZERO = exports.BUFFER_256_ZERO.slice(0, 20);\nexports.BUFFER_EMPTY = Buffer.allocUnsafe(0);\nexports.BUFFER_ZERO = exports.BUFFER_256_ZERO.slice(0, 1);\nexports.BUFFER_32_ZERO = exports.BUFFER_256_ZERO.slice(0, 32);\nexports.BUFFER_8_ZERO = exports.BUFFER_256_ZERO.slice(0, 8);\nexports.WEI = 1000000000000000000n;\nexports.KNOWN_CHAINIDS = new Set([1, 3, 4, 5, 42, 11155111]);\n/**\n * Buffer representation of the string \"version\":\n */\nexports.VERSION_KEY = Buffer.from([118, 101, 114, 115, 105, 111, 110]);\n//# sourceMappingURL=constants.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Executor_requestCoordinator;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Executor = void 0;\nconst has_own_1 = require(\"./has-own\");\nclass Executor {\n    /**\n     * The Executor handles execution of methods on the given API\n     */\n    constructor(requestCoordinator) {\n        _Executor_requestCoordinator.set(this, void 0);\n        __classPrivateFieldSet(this, _Executor_requestCoordinator, requestCoordinator, \"f\");\n    }\n    /**\n     * Stop processing requests. We pass this call through to the requestCoordinator, which means that api\n     * validation will continue to work after calling stop() in execute().\n     */\n    stop() {\n        __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").stop();\n    }\n    /**\n     * Finalise shutdown of the underlying RequestCoordinator.\n     */\n    end() {\n        __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").end();\n    }\n    /**\n     * Executes the method with the given methodName on the API\n     * @param methodName - The name of the JSON-RPC method to execute.\n     * @param params - The params to pass to the JSON-RPC method.\n     */\n    execute(api, methodName, params) {\n        // The methodName is user-entered data and can be all sorts of weird hackery\n        // Make sure we only accept what we expect to avoid headache and heartache\n        if (typeof methodName === \"string\") {\n            // Only allow executing our *own* methods. We allow:\n            //  * functions added to the Instance by the class, e.g.,\n            //      class SomeClass {\n            //        method = () => {} // api.hasOwnProperty(\"method\") === true\n            //      }\n            //  * Or by the class' prototype:\n            //      class SomeClass {\n            //        method(){} // api.__proto__.hasOwnProperty(\"method\") === true\n            //      }\n            if (((0, has_own_1.hasOwn)(api.__proto__, methodName) && methodName !== \"constructor\") ||\n                (0, has_own_1.hasOwn)(api, methodName)) {\n                // cast methodName from `KnownKeys<T> & string` back to KnownKeys<T> so our return type isn't weird.\n                const fn = api[methodName];\n                // just double check, in case a API breaks the rules and adds non-fns\n                // to their API interface.\n                if (typeof fn === \"function\") {\n                    // The function referenced by requestcoordinator.queue will be changed\n                    // when requestCoordinator.stop() is called. Ensure that no references\n                    // to the function are held, otherwise internal errors may be\n                    // surfaced.\n                    // queue up this method for actual execution:\n                    return __classPrivateFieldGet(this, _Executor_requestCoordinator, \"f\").queue(fn, api, params);\n                }\n            }\n        }\n        throw new Error(`The method ${String(methodName)} does not exist/is not available`);\n    }\n}\nexports.Executor = Executor;\n_Executor_requestCoordinator = new WeakMap();\n//# sourceMappingURL=executor.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findInsertPosition = void 0;\n/**\n * AKA `upper_bound`\n *\n * The elements are compared using `comp`. The elements in the range must\n * already be sorted according to this same criterion (`comp`), or at least\n * partitioned with respect to val.\n *\n * The function optimizes the number of comparisons performed by comparing\n * non-consecutive elements of the sorted range.\n *\n * The index into the `array` returned by this function will always be greater than\n * the index of the last-occurrence of `val`.\n *\n * On average, logarithmic in the distance of the length of the array: Performs\n * approximately `log2(N)+1` element comparisons (where `N` is this length).\n *\n * @param array -\n * @param val - Value of the upper bound to search for in the range.\n * @param comp - A function that accepts two arguments (the first is always\n * `val`, and the second from the given `array`) and returns bool. The value\n * returned indicates whether the first argument is considered to go before the\n * second.\n *\n * @returns The index to the upper bound position for `val` in the range. If no\n * element in the range compares greater than `val`, the function returns\n * `array.length`.\n */\nfunction findInsertPosition(array, val, comp) {\n    // `count` tracks the number of elements that remain to be searched\n    let count = array.length;\n    // `insertPosition` tracks the best insert position for the element we know\n    // about _so far_\n    let insertPosition = 0;\n    // `offset` tracks the start position of the elements that remain to be\n    // searched\n    let offset = 0;\n    while (count > 0) {\n        // find the middle element between `offset` and `count`\n        const step = (count / 2) | 0; // ()`| 0` rounds towards 0)\n        offset += step;\n        // compare our val to the \"middle element\" (`array[offset]`)\n        if (!comp(val, array[offset])) {\n            // `val` should come _after_ the element at `array[offset]`.\n            //  * update our `insertPosition` to the index immediately after\n            //    `array[offset]`\n            //  * shrink our search range\n            // This narrows our search the elements to the right of `array[offset]`.\n            insertPosition = ++offset;\n            count -= step + 1;\n        }\n        else {\n            // `val` should come before the element at `array[offset]`:\n            // This narrows the search the elements to the left of `array[offset]`.\n            count = step;\n            offset = insertPosition;\n        }\n    }\n    return insertPosition;\n}\nexports.findInsertPosition = findInsertPosition;\n//# sourceMappingURL=find-insert-position.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasOwn = void 0;\nconst _hasOwn = {}.hasOwnProperty.call.bind({}.hasOwnProperty);\n/**\n * /**\n * Determines whether an object has a property with the specified name.\n *\n * Safe for use on user-supplied data.\n *\n * @param obj - The object that will be checked.\n * @param prop - A property name.\n * @returns `true` if the object has a property with the specified name,\n * otherwise `false`.\n */\nconst hasOwn = (obj, prop) => {\n    return obj != null && _hasOwn(obj, prop);\n};\nexports.hasOwn = hasOwn;\n//# sourceMappingURL=has-own.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Heap = void 0;\nclass Heap {\n    /**\n     * Creates a priority-queue heap where the highest priority element,\n     * as determined by the `less` function, is at the tip/root of the heap.\n     * To read the highest priority element without removing it call peek(). To\n     * read and remove the element call `shift()`\n     * @param less - the comparator function\n     * @param refresher - the refresher function\n     */\n    constructor(less, refresher) {\n        this.length = 0;\n        this.array = [];\n        this.less = less;\n        this.refresher = refresher;\n    }\n    init(array) {\n        this.array = array;\n        const length = (this.length = array.length);\n        for (let i = ((length / 2) | 0) - 1; i >= 0;) {\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    /**\n     * Updates all entries by calling the Heap's `refresher` function for each\n     * item in the heap and then re-sorting.\n     * @param context -\n     */\n    refresh(context) {\n        const length = this.length;\n        const mid = (length / 2) | 0;\n        for (let i = mid; i < length; i++) {\n            this.refresher(this.array[i], context);\n        }\n        for (let i = mid - 1; i >= 0;) {\n            this.refresher(this.array[i], context);\n            this.down(i--, length);\n        }\n    }\n    /**\n     * Pushes a new element onto the heap\n     * @param value -\n     */\n    push(value) {\n        const i = this.length++;\n        this.array[i] = value;\n        this.up(i);\n    }\n    size() {\n        return this.length;\n    }\n    /**\n     * Return the current best element. Does not remove it\n     */\n    peek() {\n        return this.array[0];\n    }\n    clear() {\n        this.length = this.array.length = 0;\n    }\n    /**\n     * Removes and returns the element with the highest priority from the heap.\n     * The complexity is O(log n) where n = this.size().\n     * @returns the element with the highest priority. returns `undefined` if\n     * there are no more elements in the heap.\n     */\n    shift() {\n        const length = this.length;\n        // if we are empty or about to be empty...\n        if (length <= 1) {\n            if (length === 0)\n                return;\n            const element = this.array[0];\n            // finally, clear the array\n            this.clear();\n            return element;\n        }\n        // otherwise...\n        // remember the best element\n        const array = this.array;\n        const best = array[0];\n        const newLength = (this.length = length - 1);\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return best;\n    }\n    /**\n     * Removes the highest priority element from the queue, replacing it with\n     * the new element. This is equivalent to, but faster than, calling\n     * `replace(0, newValue);`.\n     * If you call this on an empty heap (`this.size() === 0`) you may find\n     * unexpected behavior.\n     * @param newValue -\n     */\n    replaceBest(newValue) {\n        this.array[0] = newValue;\n        this.down(0, this.length);\n    }\n    /**\n     * Replaces the element at position `i` with the `newValue`. If the element at\n     * position `i` doesn't exist, or if `i < 0` or `i > this.size()` you may\n     * find unexpected behavior.\n     * @param i -\n     * @param newValue -\n     */\n    replace(i, newValue) {\n        this.array[i] = newValue;\n        this.fix(i);\n    }\n    /**\n     * Removes the element at position `i`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i - the element to remove\n     */\n    remove(i) {\n        const newLength = --this.length;\n        if (newLength !== i) {\n            this.swap(i, newLength);\n            if (!this.down(i, newLength)) {\n                this.up(i);\n            }\n        }\n    }\n    /**\n     * Removes the element with the highest priority from the heap\n     * The complexity is O(log n) where n = this.size().\n     * @returns `true` when there are more elements in the queue, `false` when the\n     * last element was just removed. Calling `removeBest` when there are no more\n     * elements in the queue will return `true`. So don't do that.\n     */\n    removeBest() {\n        const array = this.array;\n        const length = this.length;\n        if (length === 1) {\n            // finally, clear the array\n            this.length = array.length = 0;\n            return false;\n        }\n        const newLength = --this.length;\n        // put our last element at the start of the heap\n        array[0] = array[newLength];\n        // then sort from the new first element to the second to last element\n        this.down(0, newLength);\n        return true;\n    }\n    /**\n     * Re-establishes the heap ordering after the element at index `i` changes\n     * its value. Changing the value of the element at index `i` and then\n     * calling fix is equivalent to, but faster than, calling\n     * `remove(i); push(newValue);`.\n     * The complexity is O(log n) where n = this.size().\n     * @param i -\n     */\n    fix(i) {\n        if (!this.down(i, this.length)) {\n            this.up(i);\n        }\n    }\n    up(j) {\n        const less = this.less.bind(null, this.array);\n        for (let i; (i = ((j - 1) / 2) | 0), i !== j && less(j, i); j = i) {\n            this.swap(i, j);\n        }\n    }\n    down(i0, l) {\n        const less = this.less.bind(null, this.array);\n        let i = i0;\n        for (let j1; (j1 = 2 * i + 1) < l;) {\n            let j = j1; // left child\n            let j2 = j1 + 1;\n            if (j2 < l && less(j2, j1)) {\n                j = j2; // = 2 * i + 2  // right child\n            }\n            if (!less(j, i)) {\n                break;\n            }\n            this.swap(i, j);\n            i = j;\n        }\n        return i > i0;\n    }\n    /**\n     * Swaps the elements in the heap\n     * @param i - The first element\n     * @param j - The second element\n     */\n    swap(i, j) {\n        const array = this.array;\n        const first = array[i];\n        array[i] = array[j];\n        array[j] = first;\n    }\n    /**\n     * Heap initialization helper for when you only know of a single item for the\n     * heap.\n     * @param item -\n     * @param less -\n     * @param refresher -\n     */\n    static from(item, less, refresher) {\n        const heap = new Heap(less, refresher);\n        heap.array = [item];\n        heap.length = 1;\n        return heap;\n    }\n}\nexports.Heap = Heap;\n//# sourceMappingURL=heap.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./bigint-to-buffer\"), exports);\n__exportStar(require(\"./buffer-to-bigint\"), exports);\n__exportStar(require(\"./executor\"), exports);\n__exportStar(require(\"./heap\"), exports);\n__exportStar(require(\"./request-coordinator\"), exports);\n__exportStar(require(\"./unref\"), exports);\n__exportStar(require(\"./has-own\"), exports);\n__exportStar(require(\"./uint-to-buffer\"), exports);\n__exportStar(require(\"./constants\"), exports);\n__exportStar(require(\"./buffer-to-key\"), exports);\n__exportStar(require(\"./keccak\"), exports);\n__exportStar(require(\"./find-insert-position\"), exports);\n__exportStar(require(\"./random-number-generator\"), exports);\n__exportStar(require(\"./min-max\"), exports);\n__exportStar(require(\"./signature\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak = void 0;\nconst keccak_1 = __importDefault(require(\"keccak\"));\nconst RATE = 1088;\nconst CAPACITY = 512;\nconst instance = (0, keccak_1.default)(\"keccak256\");\n/**\n * keccak256, but faster if you use it a lot.\n * @param buffer -\n */\nfunction keccak(buffer) {\n    instance._state.absorb(buffer);\n    const digest = instance._state.squeeze(32);\n    // reset and remove result from memory\n    instance._state.initialize(RATE, CAPACITY);\n    // make this re-usable\n    instance._finalized = false;\n    return digest;\n}\nexports.keccak = keccak;\n//# sourceMappingURL=keccak.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.min = exports.max = void 0;\n/**\n * Returns the largest of the numbers/bigints given as input parameters. Throws if no values are given.\n * @param numbers One or more numbers and/or bigints among which the largest value will be selected and returned.\n */\nconst max = (...numbers) => numbers.reduce((acc, next) => (next > acc ? next : acc));\nexports.max = max;\n/**\n * Returns the smallest of the numbers/bigints given as input parameters. Throws if no values are given.\n * @param numbers One or more numbers and/or bigints among which the smallest value will be selected and returned.\n */\nconst min = (...numbers) => numbers.reduce((acc, next) => (next < acc ? next : acc));\nexports.min = min;\n//# sourceMappingURL=min-max.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RandomNumberGenerator = void 0;\nconst seedrandom_1 = __importDefault(require(\"seedrandom\"));\nclass RandomNumberGenerator {\n    // I was planning on using `state` here to restore the RNG\n    // from a saved state (via the db on run or upon a revert),\n    // but this functionality was postponed. I'm keeping the arg\n    // here as it still applies and is valid code.\n    // https://github.com/trufflesuite/ganache/issues/756\n    constructor(seed, state) {\n        if (typeof seed === \"string\" && typeof state === \"undefined\") {\n            this.rng = seedrandom_1.default.alea(seed, { state: true });\n        }\n        else if (typeof state === \"object\") {\n            // We can ignore seed even if it was provided.\n            // The user is reseeding the rng from a prior state,\n            // so let's initialize accordingly\n            this.rng = seedrandom_1.default.alea(\"\", { state });\n        }\n        else {\n            const entropy = Math.random() * Date.now();\n            this.rng = seedrandom_1.default.alea(`${entropy}`, { state: true });\n        }\n    }\n    getNumber(upperExclusiveBound = 1) {\n        // I believe this check may be a tiny bit faster than\n        // always multiplying by 1\n        if (upperExclusiveBound !== 1) {\n            return this.rng() * upperExclusiveBound;\n        }\n        else {\n            return this.rng();\n        }\n    }\n    getNumbers(length, upperExclusiveBound = 1) {\n        const numbers = [];\n        for (let i = 0; i < length; i++) {\n            numbers.push(this.getNumber(upperExclusiveBound));\n        }\n        return numbers;\n    }\n    getBuffer(length) {\n        return Buffer.from(this.getNumbers(length, 256));\n    }\n    state() {\n        return this.rng.state();\n    }\n}\nexports.RandomNumberGenerator = RandomNumberGenerator;\n//# sourceMappingURL=random-number-generator.js.map","\"use strict\";\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _RequestCoordinator_paused, _RequestCoordinator_process;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequestCoordinator = void 0;\nconst noop = () => { };\n/**\n * Responsible for managing global concurrent requests.\n */\nclass RequestCoordinator {\n    /**\n     * Promise-based FIFO queue.\n     * @param limit - The number of requests that can be processed at a time.\n     * Default value is is no limit (`0`).\n     */\n    constructor(limit) {\n        /**\n         * The pending requests. You can't do anything with this array.\n         */\n        this.pending = [];\n        /**\n         * The number of tasks currently being processed.\n         */\n        this.runningTasks = 0;\n        _RequestCoordinator_paused.set(this, true);\n        /**\n         * Pause processing. This will *not* cancel any promises that are currently\n         * running.\n         */\n        this.pause = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, true, \"f\");\n        };\n        /**\n         * Resume processing.\n         */\n        this.resume = () => {\n            __classPrivateFieldSet(this, _RequestCoordinator_paused, false, \"f\");\n            __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n        };\n        _RequestCoordinator_process.set(this, () => {\n            // if we aren't paused and the number of things we're processing is under\n            // our limit and we have things to process: do it!\n            while (!this.paused &&\n                this.pending.length > 0 &&\n                (!this.limit || this.runningTasks < this.limit)) {\n                const current = this.pending.shift();\n                this.runningTasks++;\n                current\n                    .execute()\n                    // By now, we've resolved the fn's `value` by sending it to the parent scope.\n                    // But over here, we're also waiting for this fn's _value_ to settle _itself_ (it might be a promise) before\n                    // continuing through the `pending` queue. Because we wait for it again here, it could potentially throw here,\n                    // in which case we just need to catch it and throw the result away. We could probably use\n                    // `Promise.allSettled([current()]).finally` to do this instead of the `current().catch(noop).finally`. /shrug\n                    .catch(noop)\n                    .finally(() => {\n                    this.runningTasks--;\n                    __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n                });\n            }\n        });\n        /**\n         * Insert a new function into the queue.\n         */\n        this.queue = (fn, thisArgument, argumentsList) => {\n            return new Promise((resolve, reject) => {\n                // const execute is `async` to force the return value into a Promise.\n                const execute = async () => {\n                    try {\n                        const value = Reflect.apply(fn, thisArgument, argumentsList || []);\n                        resolve({ value });\n                        return value;\n                    }\n                    catch (e) {\n                        reject(e);\n                    }\n                };\n                this.pending.push({ execute, reject });\n                __classPrivateFieldGet(this, _RequestCoordinator_process, \"f\").call(this);\n            });\n        };\n        this.limit = limit;\n    }\n    get paused() {\n        return __classPrivateFieldGet(this, _RequestCoordinator_paused, \"f\");\n    }\n    /**\n     * Stop processing tasks - calls to queue(), and resume() will reject with an\n     * error indicating that Ganache is disconnected. This is an irreversible\n     * action. If you wish to be able to resume processing, use pause() instead.\n     *\n     * Note: this changes the references of this.resume and this.queue. Any code\n     * that maintains references to the values referenced by this.resume or\n     * this.queue, could have unintended consequences after calling this.stop().\n     */\n    stop() {\n        this.pause();\n        this.resume = () => {\n            throw new Error(\"Cannot resume processing requests, Ganache is disconnected.\");\n        };\n        this.queue = async () => {\n            throw new Error(\"Cannot process request, Ganache is disconnected.\");\n        };\n    }\n    /**\n     * Finalise shutdown of the RequestCoordinator. Rejects all pending tasks in order. Should be\n     * called after all in-flight tasks have resolved in order to maintain overall FIFO order.\n     */\n    end() {\n        while (this.pending.length > 0) {\n            this.pending\n                .shift()\n                .reject(new Error(\"Cannot process request, Ganache is disconnected.\"));\n        }\n    }\n}\nexports.RequestCoordinator = RequestCoordinator;\n_RequestCoordinator_paused = new WeakMap(), _RequestCoordinator_process = new WeakMap();\n//# sourceMappingURL=request-coordinator.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ecsignLegacy = exports.ecsign = void 0;\nconst secp256k1_1 = __importDefault(require(\"@ganache/secp256k1\"));\nfunction ecsign(msgHash, privateKey) {\n    const output = {\n        signature: new Uint8Array(64),\n        recid: null\n    };\n    const status = secp256k1_1.default.ecdsaSign(output, msgHash, privateKey);\n    if (status !== 0) {\n        throw new Error(\"The nonce generation function failed, or the private key was invalid\");\n    }\n    const { signature, recid } = output;\n    const buffer = signature.buffer;\n    const r = Buffer.from(buffer, 0, 32);\n    const s = Buffer.from(buffer, 32, 32);\n    const v = BigInt(recid);\n    return { r, s, v };\n}\nexports.ecsign = ecsign;\nfunction ecsignLegacy(msgHash, privateKey, chainId) {\n    const { v, r, s } = ecsign(msgHash, privateKey);\n    const legacyV = chainId === undefined ? v + 27n : v + 35n + BigInt(chainId) * 2n;\n    return { r, s, v: legacyV };\n}\nexports.ecsignLegacy = ecsignLegacy;\n//# sourceMappingURL=signature.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uintToBuffer = void 0;\nconst MAX_UINT32 = 0xffffffff;\n/**\n * This is just Node's `Buffer.allocUnsafe`. I'm documenting it extra here to\n * draw attention to it. It is much faster the `Buffer.alloc(size)` because it\n * doesn't initialize its memory first. It's safe for us to use below because we\n * guarantee that we will fill every octet ourselves.\n *\n * Allocates a new buffer of {size} octets, leaving memory not initialized, so\n * the contents of the newly created Buffer are unknown and may contain\n * sensitive data.\n *\n * @param {number} - size count of octets to allocate\n */\nconst allocUnsafe = Buffer.allocUnsafe;\n/**\n * Converts positive whole numbers that are 32 bits of fewer to a Buffer. Any\n * more bits and who knows what will happen!?!1?!\n *\n * @param num - A positive whole number less than 33 bits wide, i.e. a uint32.\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uint32ToBuf(num) {\n    let buf;\n    /** `lsb` holds the Least Significant *byte* of `num`. It *technically* holds\n     * all of `num`'s bytes but because of how UInt8Arrays (and thus Buffers)\n     * work, only the least significant byte of each value gets used. */\n    const lsb = num;\n    // shift the first 8 least significant bits off current num, if it's non-zero\n    // our value contains at least 2 bytes!\n    if ((num >>>= 8)) {\n        /** `second` now holds the second most least significant byte in its\n         * \"first\" (right most) 8 bits */\n        const second = num;\n        // shift the next 8 least significant bits off current num, if it's non-zero\n        // our value contains at least 3 bytes!\n        if ((num >>>= 8)) {\n            /** `third` now holds the third most least significant byte in its\n             * \"first\" (right most) 8 bits */\n            const third = num;\n            if ((num >>>= 8)) {\n                // since we have all 4 bytes, create a 4 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(4);\n                // `num` here is just what is left after shifting off the 3 other bytes\n                // like we did above\n                buf[0] = num;\n                buf[1] = third;\n                buf[2] = second;\n                buf[3] = lsb;\n            }\n            else {\n                // since we only have 3 bytes, create a 3 byte Buffer and fill it with\n                // our values!\n                buf = allocUnsafe(3);\n                buf[0] = third;\n                buf[1] = second;\n                buf[2] = lsb;\n            }\n        }\n        else {\n            // since we only have 2 bytes, create a 2 byte Buffer and fill it with\n            // our values!\n            buf = allocUnsafe(2);\n            buf[0] = second;\n            buf[1] = lsb;\n        }\n    }\n    else {\n        // We only have 1 byte, create a 1 byte Buffer and fill it with our only\n        // value, lsb!\n        buf = allocUnsafe(1);\n        buf[0] = lsb;\n    }\n    // finally, return our optimally-sized Buffer!\n    return buf;\n}\n/**\n * Converts positive whole numbers less than or equal to\n * `Number.MAX_SAFE_INTEGER` to a Buffer. If your value is less than 2**32 you\n * should use `uint32ToBuf` instead.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n * @returns an optimally sized buffer holding `num` in big-endian order (LSB is\n * the _last_ value in the Buffer)\n */\nfunction uintWideToBuf(num) {\n    // This function is similar to `uint32ToBuf`, but splits the number into its\n    // 32 lowest bits and its 32 highest bits. We have to do this because numeric\n    // Bitwise operations can only operate on 32 bit-wide values.\n    // There are some differences, but if you first grasp `uint32ToBuf`, you can\n    // handle this just fine.\n    let buf;\n    /** If we are in this function we are probably > 32 bits wide, so we need to\n     * first convert this value to BigInt in order to shift off those high bits.\n     * Now that I'm documenting this, we could probably just subtract `2**32` from\n     * `num` to avoid the conversion overhead (BigInts are slower than numbers) */\n    let hi = Number(BigInt(num) >> 32n);\n    const hiLsb = hi;\n    let offset = 0;\n    // the high bits determine the size of the Buffer, so we compute the high bits\n    // first\n    if ((hi >>>= 8)) {\n        const six = hi;\n        if ((hi >>>= 8)) {\n            const five = hi;\n            if ((hi >>>= 8)) {\n                buf = allocUnsafe(8);\n                buf[0] = hi; // msb\n                buf[1] = five;\n                buf[2] = six;\n                buf[3] = hiLsb;\n                offset = 7;\n            }\n            else {\n                buf = allocUnsafe(7);\n                buf[0] = five; // msb\n                buf[1] = six;\n                buf[2] = hiLsb;\n                offset = 6;\n            }\n        }\n        else {\n            buf = allocUnsafe(6);\n            buf[0] = six; // msb\n            buf[1] = hiLsb;\n            offset = 5;\n        }\n    }\n    else {\n        buf = allocUnsafe(5);\n        buf[0] = hiLsb; // msb\n        offset = 4;\n    }\n    // set the low bytes:\n    let lo = num & MAX_UINT32;\n    const lsb = lo;\n    if ((lo >>>= 8)) {\n        const two = lo;\n        if ((lo >>>= 8)) {\n            const one = lo;\n            buf[offset - 3] = lo >>>= 8;\n            buf[offset - 2] = one;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n        else {\n            buf[offset - 3] = 0;\n            buf[offset - 2] = 0;\n            buf[offset - 1] = two;\n            buf[offset] = lsb;\n        }\n    }\n    else {\n        buf[offset - 3] = 0;\n        buf[offset - 2] = 0;\n        buf[offset - 1] = 0;\n        buf[offset] = lsb;\n    }\n    return buf;\n}\n/**\n * Converts a JavaScript number, treated as a Whole Number (0, 1, 2, 3, 4, ...)\n * less than 64 bits wide, to a Buffer.\n *\n * Numbers that are negative, fractional, or greater than 64 bits wide will\n * return very unexpected results. Numbers that are greater than\n * `Number.MAX_SAFE_INTEGER` will return unexpected results.\n *\n * @param num - A positive whole number <= `Number.MAX_SAFE_INTEGER`\n */\nfunction uintToBuffer(num) {\n    return num > MAX_UINT32 ? uintWideToBuf(num) : uint32ToBuf(num);\n}\nexports.uintToBuffer = uintToBuffer;\n//# sourceMappingURL=uint-to-buffer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.unref = void 0;\n/**\n * In node, calling `unref(timer)` on a running timer ensures that the timer\n * does not require that the Node.js event remain active. If there is no other\n * activity keeping the event loop running, the process may exit before the\n * timer's callback is invoked.\n * @param timer -\n * @returns `true` if the timer could be `unref`ed, otherwise returns `false`\n */\nfunction unref(timer) {\n    if (typeof timer === \"object\" && typeof timer.unref === \"function\") {\n        timer.unref();\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexports.unref = unref;\n//# sourceMappingURL=unref.js.map"],"names":["Object","defineProperty","exports","value","Address","util_1","utils_1","constructor","super","static","Data","toBuffer","ByteLength","from","toString","toJSON","this","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","BlockParams","INITIAL_BASE_FEE_PER_GAS","ELASTICITY","BASE_FEE_MAX_CHANGE_DENOMINATOR","Block","ethereum_transaction_1","rlp_1","runtime_block_1","utils_2","serialize_1","block_params_1","serialized","common","_common","deserialized","decode","totalDifficulty","_raw","_rawTransactions","length","_rawWithdrawals","_rawTransactionMetaData","_size","Quantity","toNumber","header","makeHeader","start","slice","map","oldRawTx","type","raw","encodeWithPrefix","serialize","hash","_hash","keccak","encode","getTransactions","blockHash","number","index","extra","blockTransactionFromRaw","includeFullTransactions","txFn","getTxFn","hashBuffer","transactions","tx","updateEffectiveGasPrice","baseFeePerGas","toBigInt","size","uncles","withdrawals","convertRawWithdrawals","include","parentHeader","nextBaseFee","parentGasTarget","gasLimit","parentGasUsed","gasUsed","adjustedFeeDelta","blocks","maxPossibleBaseFee","calcNextBaseFeeBigInt","parentBlock","RuntimeBlock","getBlockSize","ethereum_address_1","block_1","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","timestamp","extraData","mixHash","nonce","withdrawalsRoot","coinbase","previousBlockTotalDifficulty","coinbaseBuffer","prevRandao","finalize","transactionsTrie","receiptTrie","bloom","storageKeys","rawHeader","KECCAK256_RLP_ARRAY","buf","BUFFER_EMPTY","BUFFER_8_ZERO","isEip4895","isActivatedEIP","txs","Array","extraTxs","i","rawBlock","block","end","serializedStart","encodeRange","serializedLength","encodeLength","middle","ending","uintToBuffer","digest","output","txData","isLegacyRawTransaction","subarray","TransactionFactory","fromSafeTypeAndTxData","validatorIndex","address","amount","maybeGetLogs","maybe_get_logs_1","Handlers","bytes","bool","string","uint256","int256","fixedBytes","WORD_SIZE","OR_WITH_TWOS_COMPLEMENT","getDynamicDataMarkers","memory","offset","startUint32MemoryPosition","readUInt32BE","handleBytes","twosComplementBuffer","twosComplementBigInt","bufferToBigInt","handlers_1","signatures_1","CONSOLE_ADDRESS","event","opcode","name","stack","memoryLength","memoryOffset","toAddress","memoryStart","Number","memoryEnd","method","handlers","signatureMap","values","handler","Map","_EthereumApi_getId","_EthereumApi_filters","_EthereumApi_subscriptions","_EthereumApi_options","_EthereumApi_blockchain","_EthereumApi_wallet","__decorate","decorators","target","key","d","c","arguments","r","Reflect","decorate","__classPrivateFieldSet","receiver","state","kind","f","TypeError","has","set","__classPrivateFieldGet","__importDefault","mod","ethereum_utils_1","ethereum_block_1","eth_sig_util_1","wallet_1","gas_estimator_1","assert_arg_length_1","filter_parsing_1","miner_1","async","autofillDefaultTransactionValues","eth_estimateGas","eth_maxPriorityFeePerGas","transaction","blockchain","options","gas","isNull","defaultLimit","defaultTransactionGasLimit","Empty","Tag","latest","gasPrice","defaultGasPrice","maxFeePerGas","calcNBlocksMaxBaseFee","maxPriorityFeePerGas","version","CLIENT_VERSION","PROTOCOL_VERSION","RPC_MODULES","eth","net","rpc","web3","evm","personal","assertExceptionalTransactions","errors","baseError","data","forEach","execException","VM_EXCEPTIONS","push","VM_EXCEPTION","message","err","Error","join","EthereumApi","wallet","id","dbName","arg","vmErrorsOnRPCResponse","chain","mine","Capacity","FillBlock","vmAddress","eei","vm","account","getAccount","checkpoint","putAccount","commit","balance","code","codeBuffer","putContractCode","codeHash","KECCAK256_NULL","slot","slotBuffer","valueBuffer","putContractStorage","seconds","milliseconds","Math","floor","increaseTime","time","getTime","offsetMilliseconds","setTimeDiff","snapshotId","revert","snapshot","passphrase","addy","addUnknownAccount","removeKnownAccount","threads","instamine","resumption","resume","pause","networkId","Zero","blockNumber","generateVM","createVmFromStateTrie","trie","copy","allowUnlimitedContractSize","Promise","resolve","reject","fromRpc","callGasLimit","getMixHash","KECCAK256_RLP","runArgs","toVmTransaction","skipBalance","skipNonce","default","result","gasEstimate","catch","_","fallback","targetBlock","slotBuffers","slotHex","stateManagerCopy","stateManager","setStateRoot","proof","getProof","storageHash","accountProof","storageProof","getByHash","blockNum","getEffectiveNumber","getRawByBlockNumber","rawTransactions","uncleIndex","powHash","hashRate","clientID","isStarted","Gwei","addresses","chainId","accounts","getBalance","getCode","position","blockStateRoot","setContext","posBuff","paddedPosBuff","Buffer","allocUnsafe","fill","addressBuf","addressData","addressStateRoot","transactionHash","transactionPool","find","transactionReceipts","dataHash","txHash","transactionPromise","receiptPromise","receipt","all","blockTime","logging","logger","log","fromString","isKnownAccount","knownAccounts","privateKey","unlockedAccounts","bind","queueTransaction","signAndHash","toLowerCase","messageHash","hashPersonalMessage","v","s","ecsign","toRpcSig","typedData","eth_signTypedData_v4","types","EIP712Domain","domain","primaryType","signTypedData_v4","eth_subscribe","subscriptionName","subscriptions","subscription","promiEvent","PromiEvent","unsubscribe","on","emit","topics","parseFilterDetails","blockLogs","filter","CodedError","JsonRpcErrorCode","METHOD_NOT_FOUND","subscriptionId","delete","updates","FilterTypes","filterId","pendingTransaction","fromBlock","toBlock","parseFilterRange","eth_getLogs","getLogs","getNonce","overrides","input","baseFeePerGasBigInt","hasGasPrice","hasMaxFeePerGas","hasMaxPriorityFeePerGas","BigInt","a","tip","simulatedTransaction","to","simulateTransaction","blockCount","newestBlock","rewardPercentiles","PRECISION_BIG_INT","newestBlockNumber","totalBlocks","min","max","gasUsedRatio","reward","ERR_INVALID_PERCENTILE","oldestBlockNumber","currentBlock","currentPosition","padStart","baseFee","receipts","effectiveRewardAndGasUsed","idx","effectiveGasReward","sort","b","percentile","totalGasUsed","targetGas","calcNextBaseFee","oldestBlock","traceTransaction","transactionIndex","contractAddress","startKey","maxResult","storageRangeAt","newAccount","createRandomAccount","strAddress","addToKeyFile","add","rawKey","createAccountFromPrivateKey","lockAccount","duration","unlockAccount","secretKey","getFromKeyFile","postData","executables","origins","processMap","res","array","pending","queued","WeakMap","assertArgLength","_Blockchain_state","_Blockchain_miner","_Blockchain_blockBeingSavedPromise","_Blockchain_timer","_Blockchain_emitStepEvent","_Blockchain_database","_Blockchain_options","_Blockchain_instamine","_Blockchain_saveNewBlock","_Blockchain_emitNewBlock","_Blockchain_getTransactionLogOutput","_Blockchain_handleNewBlockData","_Blockchain_readyNextBlock","_Blockchain_isPaused","_Blockchain_commitAccounts","_Blockchain_initializeGenesisBlock","_Blockchain_timeAdjustment","_Blockchain_adjustedTime","_Blockchain_deleteBlockData","_Blockchain_snapshots","_Blockchain_createFastForwardVm","_Blockchain_traceTransaction","_Blockchain_prepareNextBlock","__setModuleDefault","__importStar","Status","os_1","database_1","emittery_1","common_1","vm_1","evm_1","account_manager_1","block_manager_1","blocklog_manager_1","transaction_manager_1","run_call_1","state_manager_1","trie_1","trie_2","precompiles_1","transaction_receipt_manager_1","provider_events_1","mcl_wasm_1","console_log_1","storage_range_at_1","state_manager_2","common_helpers_1","mclInitPromise","init","BLS12_381","then","setMapToMode","IRTF","verifyOrderG1","verifyOrderG2","makeTrie","trieDB","root","ForkTrie","GanacheTrie","Blockchain","starting","batch","blockHeader","blockNumberQ","BlockLogs","timestampStr","Date","logOutput","serializeForDb","getReceipt","encodedReceipt","append","put","hashedKey","putBlock","updateLatestIndex","EOL","blockInfo","setImmediate","error","str","reason","blockData","saveBlockProm","previousBlock","previousHeader","previousNumber","minerOptions","blockGasLimit","isPostMerge","started","maxTransactions","onlyOneBlock","nextBlock","timestampIncrement","paused","stateTrie","activatePrecompile","getBlock","ForkStateManager","prefixCodeHashes","GanacheStateManager","EEI","EVM","VM","activatePrecompiles","initialAccounts","fallbackBlock","genesis","BUFFER_256_ZERO","rawBlockNumber","BUFFER_32_ZERO","precedingTimestamp","timeAdjustment","now","blocksToDelete","newLatestBlockNumber","revertMetaData","del","snaps","unsubscribeFromBlocks","getCommonForBlockNumber","_cache","flush","transactionEventContext","context","runTx","skipHardForkValidation","skipBlockGasLimitValidation","newBlock","currentDepth","storageStack","structLogs","TraceData","TraceDataFactory","stepListener","next","makeStepEvent","gasLeft","gasUsedPreviousStep","disableMemory","limit","memoryWordCount","disableStack","stackItem","structLog","depth","gasCost","op","pc","storage","disableStorage","eventDepth","pop","TraceStorageMap","getContractStorage","events","removeListener","returnValue","uncleHeaders","database","initialize","fork","createCommon","hardfork","Common","custom","comment","defaultHardfork","baseChain","KNOWN_CHAINIDS","allowUnlimitedInitCodeSize","removeEIP3860InitCodeSizeLimitCheck","gteHardfork","blockIndexes","startTime","firstBlockTime","earliest","txPool","minerOpts","logs","nullResolved","mineAll","Single","wait","setTimeout","once","clearListeners","e","stopping","stop","_threads","newTime","currentTime","snapshots","current","rawValue","snapshotIndex","clear","currentHash","snapshotBlock","snapshotHeader","snapshotHash","splice","equals","blockPromises","blockList","setStateRootSync","_trie","_storageTries","isExecutable","process","nextTick","status","hasToAddress","calculateIntrinsicGas","transactionContext","ganacheStepEvent","caller","callerAddress","warmPrecompiles","addWarmedAddress","applySimulationOverrides","fromAccount","txCost","startBalance","runCall","execResult","runState","programCounter","exceptionError","EvmError","EvmErrorMessage","OUT_OF_GAS","CallError","transactionHashBuffer","txIndex","trieDb","storageKeysDb","contractAddressBuffer","rawAccount","storageTrie","getStorageTrie","dumpTrieStorageDetails","toggleStepEvent","enable","clearTimeout","removeAllListeners","close","stopped","_Connector_provider","_Connector_handle","Connector","provider_1","bufferify_1","providerOptions","executor","BUFFERIFY_THRESHOLD","payload","connection","isHttp","METHOD_NOT_SUPPORTED","params","_requestRaw","EthereumProvider","provider","parse","JSON","PARSE_ERROR","handle","isArray","promises","format","results","stringify","makeError","makeResponse","json","bufferify","formatError","disconnect","_AccountManager_blockchain","AccountManager","getRaw","Account","fromBuffer","trieCopy","_BlockManager_blockchain","_BlockManager_common","_BlockManager_blockIndexes","manager_1","LATEST_INDEX_KEY","BUFFER_ZERO","EMPTY_BUFFER","BlockManager","base","fromFallback","tagOrBlockNumber","isValidForkBlockNumber","request","rawFromJSON","bm","updateTaggedBlocks","hasWithdrawals","txJson","blockExtra","txExtra","extraWithdrawals","withdrawal","getBlockByTag","tag","getNumberFromHash","numBuf","secondaryKey","disableCache","createValueStream","latestBlockNumber","getEarliest","_BlockLogManager_blockchain","BlockLogManager","fromJSON","toBlockNumber","parseFilter","pendingLogsPromises","fromBlockNumber","l","blockLogsRange","filteredBlockLogs","_Manager_Type","_Manager_options","Manager","_TransactionManager_queue","_TransactionManager_paused","_TransactionManager_resumer","_TransactionManager_resolver","_TransactionManager_blockchain","transaction_pool_1","promise_queue_1","TransactionManager","factory","insertion","prepareTransaction","drain","isBusy","_TransactionReceiptManager_blockchain","TransactionReceiptManager","InternalTransactionReceipt","One","cumulativeGasUsed","topic","fromValues","_Database_options","_Database_cleanupDirectory","_Database_closed","_Database_rootStore","_Database_cleanup","tmp_promise_1","subleveldown_1","encoding_down_1","leveldown_1","trie_db_1","levelup","setGracefulCleanup","tmpOptions","prefix","unsafeCleanup","noop","Database","directory","db","levelupOptions","keyEncoding","valueEncoding","databaseOptions","store","shouldTryMigrate","dbPath","dirInfo","dir","path","cleanup","leveldownOpts","open","sublevelTrie","TrieDB","runMigrations","VERSION_KEY","ops","stream","createReadStream","concat","migrate","fn","rootDb","originalPut","originalDel","prom","ret","write","wasClosed","ForkCache","cache_1","Cache","getCb","rlp","fromRlpSerializedAccount","putCb","deleteCb","Deferred","deferred","promise","_Fork_abortController","_Fork_handler","_Fork_options","_Fork_accounts","_Fork_hardfork","_Fork_setCommonFromChain","_Fork_setBlockDataFromChainAndOptions","_Fork_syncAccounts","Fork","abort_controller_1","http_handler_1","ws_handler_1","provider_handler_1","persistent_cache_1","url_1","fetchNetworkId","networkIdStr","parseInt","fetchBlock","chainIdPromise","latestBlock","effectiveBlockNumber","preLatestConfirmations","isInteger","latestBlockNumberHex","latestBlockNumberInt","fetchNonce","forkingOptions","url","network","protocol","WsHandler","signal","HttpHandler","ProviderHandler","normalizedNetwork","infuraKey","URL","cacheProm","forkOptions","chainOptions","deleteCache","PersistentCache","deleteDb","_e","fetchChainId","chainIdHex","cache","initCache","setCache","abort","selectValidForkBlockNumber","forkCommon","hf","hardforks","BaseHandler","rate_limiter_1","lru_cache_1","abortSignal","requestCache","fireForget","Set","requestsPerSecond","userAgent","origin","limiter","WINDOW_SECONDS","valueCache","headers","password","username","isInfura","host","endsWith","setAuthHeaders","setUserHeaders","persistentCache","jwt","authorization","permitMultiAuth","userHeaders","currentScheme","split","incomingScheme","authParams","getFromMemCache","cachedRequest","cachedValue","notFound","send","memCached","diskCached","getFromSlowCache","response","aborted","AbortError","hasOwn","finally","keys","JSONRPC_PREFIX","http_1","https_1","base_handler_1","deferred_1","accept","_request","agent","Agent","keepAlive","scheduling","buffer","messageLength","chunks","totalLength","chunk","hostname","port","pathname","search","requestOptions","queueRequest","req","handleChunkedResponse","isNaN","handleLengthedResponse","resStr","shortStr","msg","startsWith","jsonrpc","strParams","ws_1","inFlightRequests","binaryType","connect","onclose","addEventListener","onmessage","onMessage","messageId","onopen","onerror","parts","pieces","part","lengthBuffer","encoded","lengthLength","Ancestry","tree_1","parent","cacheLock","knownAncestors","closestKnownAncestor","resolver","node","Tree","deserialize","strKey","loadNextAncestor","getBlockByNumber","findClosestDescendants","findClosestAncestor","findRelated","resolveTargetAndClosestAncestor","setDbVersion","getBlockNumberFromParams","readStream","pair","height","candidateHeight","decodeKey","upTo","generator","gte","lt","encodeKey","reverse","first","return","recordedVersion","targetHeight","targetHash","closestAncestor","previousClosestAncestor","earliestBlock","earliestHash","earliestNumber","fs_1","env_paths_1","lexico","ancestry_1","helpers_1","maxValueByteBuffer","_reBalancePromise","dbSuffix","getDbDirectory","destroy","rs","ancestorDb","tree","collection","keyHex","parentKeyHex","descendants","closestKnownDescendants","suffix","mkdir","recursive","cacheDb","ancestry","atomicBatch","findIndex","allKnownDescendants","ancestorsDescendants","descendantKey","descendantHeight","descendantValue","descendantNode","descendantRawBlock","reBalanceDescendantTree","startSize","maybeDescendant","some","parentTree","isOpen","bufKey","gt","_height","_key","dbKey","children","timeSince","LimitCounter","windowLength","counters","evict","lastEvict","updatedAt","increment","currentWindow","previousWindow","curr","prev","semaphore_1","limit_counter_1","sleep","ms","timer","removeEventListener","RateLimiter","requestLimit","windowSizeMs","sem","take","mustBackoff","counter","limitCounter","currWindow","prevWindow","currCount","prevCount","rate","nextLimit","schedule","leave","LIMIT_EXCEEDED","backoffSeconds","backoff_seconds","allowed_rps","opts","storageRoot","checkpoints","_getStorageTrie","DELETED_VALUE","MetadataSingletons","LEVELDOWN_OPTIONS","isEqualKey","encodedKey","decodedKey","keyAddress","deletedKey","isPreForkBlock","accountFromFallback","codeProm","codeHex","storageFromFallback","compressed","replace","forkBlockNumber","metadataDB","sublevel","checkpointedMetadata","CheckpointDB","_root","val","startBlockNumber","endBlockNumber","createKeyStream","createDelKey","selfAddress","encodedKeyStr","keyValueMap","entries","lte","_lock","acquire","findPath","_deleteNode","persistRoot","delKey","metaDataPutPromise","release","keyWasDeleted","includeCheckpoints","secureTrie","hasCheckpoints","_db","deriveFromIndex","deriveFromPath","createAccountFromSeed","createAccountGeneratorFromSeedAndPath","crypto_1","secp256k1_1","HARDENED_OFFSET","MASTER_SECRET","seedBuffer","I","createHmac","update","chainCode","publicKey","makePublicKey","fullPath","child","test","hardened","childIndex","deriveChild","publicKeyCreate","hdPath","SHARED_BUFFER_4","isHardened","indexBuffer","writeUInt32BE","privateKeyLength","dataLength","IL","newPrivK","privateKeyTweakAdd","propertyKey","descriptor","original","String","apply","PARTS","SQUARE_BRACKET_PAIR","SQUARE_BRACKET_OPEN","SQUARE_BRACKET_CLOSE","CURLY_BRACKET_PAIR","CURLY_BRACKET_OPEN","CURLY_BRACKET_CLOSE","COMMA","QUOTE_PAIR","COLON","NULL","_EMPTY","toStr","stringToQuotedBuffer","utf8Write","nameOrIndex","numberToBuffer","isBuffer","bufferToQuotedBuffer","arrayToBuffer","chunkified","objectToBuffer","obj","yieldedOpen","yieldPrefix","quotedKey","changeCommonParamValue","eip","paramByEIP","paramTopic","paramName","paramEip","MAX_SAFE_INTEGER","bn_js_1","bn","STIPEND","bigIntToBN","check","opname","isCall","isCallOrCallcode","isCreate","isTerminator","binSearch","callback","MAX","gasRefund","startingGas","range","lo","hi","isEnoughGas","toArrayLike","vmerr","muln","addn","mid","divn","exactimate","steps","sysOps","allOps","preCompile","preCompileCheck","precompileCallDepth","collect","info","isPrecompile","done","systemOps","stepTracker","Context","fee","cost","sixtyFloorths","intermediateCost","callingFee","compositeContext","addGas","gtn","isub","iadd","setStart","setStop","getCost","transfer","ctx","addSixtyFloorth","sixtyFloorth","addRange","finalizeRange","innerCost","sub","RuntimeError","RETURN_TYPES","RETURN_VALUE","estimate","totalGasSpent","gasLeftStart","gasLeftEnd","actualUsed","sysops","opIndex","cursor","currentIndex","feeBn","getTotal","SERIALIZED_PRECOMPILE","Uint8Array","PRECOMPILED_ACCOUNT","accountCache","makeAccount","validateStorageOverride","fieldName","indexOf","stateDiff","vmAddr","clearedState","clearContractStorage","slotBuf","valueBuf","getStorage","compare","hashedKeys","count","maxKeys","nextKey","getHashedKeysWithValues","onData","findInsertPosition","onEnd","keyHashingFunction","byteOffset","Trie","useRootPersistence","useKeyHashing","useKeyHashingFunction","_Miner_currentlyExecutingPrice","_Miner_origins","_Miner_pending","_Miner_isBusy","_Miner_paused","_Miner_resumer","_Miner_currentBlockBaseFeePerGas","_Miner_resolver","_Miner_emitStepEvent","_Miner_executables","_Miner_options","_Miner_vm","_Miner_createBlock","_Miner_priced","_Miner_mine","_Miner_mineTxs","_Miner_runTx","_Miner_removeBestAndOrigin","_Miner_reset","_Miner_setPricedHeap","_Miner_updatePricedHeap","replace_from_heap_1","updateBloom","blockBloom","sortByPrice","effectiveGasPrice","refresher","item","Miner","createBlock","Heap","lastBlock","runtimeBlock","inProgress","keepMining","priced","blockTransactions","finalizedBlockData","numTransactions","blockGasLeft","blockGasUsed","best","peek","locked","txKey","fillFromResult","bitvector","pendingOrigin","removeBest","Params","TRANSACTION_GAS","refresh","errorMessage","TRANSACTION_HASH","pricedArray","mapping","price","replaceFromHeap","source","replaceBest","normalizeEvent","originalMemory","sharedBuffer","codeAddress","returnStack","_EthereumProvider_options","_EthereumProvider_api","_EthereumProvider_wallet","_EthereumProvider_executor","_EthereumProvider_blockchain","_EthereumProvider_send","_EthereumProvider_logRequest","_EthereumProvider_legacySendPayloads","_EthereumProvider_legacySendPayload","api_1","ethereum_options_1","lodash_clonedeep_1","blockchain_1","fork_1","off","arg1","arg2","verbose","payloads","mainError","responses","EthereumOptionsConfig","normalize","parseCoinbase","hookEventSystem","onChange","listenerCount","listenerAdded","eventName","listenerRemoved","getOptions","getInitialAccounts","unlocked","sendAsync","args","rawResult","execute","normalizedData","statemanager_1","DefaultStateManager","_TransactionPool_options","_TransactionPool_priceBump","_TransactionPool_blockchain","_TransactionPool_accountPromises","_TransactionPool_validateTransaction","TriageOption","shouldReplace","replacee","replacerNonce","replacer","priceBump","TRANSACTION_LOCKED","TRANSACTION_REJECTED","replacerTip","replacerMaxFee","replaceeTip","replaceeMaxFee","UNDERPRICED","byNonce","TransactionPool","GAS_LIMIT","INVALID_INPUT","INTRINSIC_GAS_TOO_LOW","valueOf","INITCODE_TOO_LARGE","txNonce","transactorPromise","highestNonce","getNonceAndBalance","transactor","maxGasPrice","INSUFFICIENT_FUNDS","queuedOriginTransactions","transactionPlacement","FutureQueue","executableOriginTransactions","pendingArray","pendingTx","ReplacesPendingExecutable","REPLACED","pendingTxNonce","Executable","transactorNonce","queuedArray","queuedTx","ReplacesFutureTransaction","nextExpectedNonce","nextTx","arr","ENCODING_OPTS","opStack","_Wallet_randomRng","_Wallet_randomBytes","_Wallet_initializeAccounts","_Wallet_intializeAccountFromKey","_Wallet_initializeAccountWithoutKey","_Wallet_initializeAccount","_Wallet_lockAccount","hdkey_1","bip39_1","seedrandom_1","TWELVE_255s","SCRYPT_PARAMS","dklen","n","CIPHER","MAX_ACCOUNTS","scrypt","derivedKey","SHARED_BUFFER","uncompressedPublicKeyToAddress","uncompressedPublicKey","publicKeyConvert","asUUID","uuid","Wallet","keyFiles","lockTimers","rand","makeAccountAtIndex","mnemonicToSeedSync","mnemonic","balanceParts","defaultBalance","significand","fractionalStr","fractional","magnitude","defaultBalanceInWei","WEI","etherInWei","givenAccounts","accountsLength","givenAccount","acct","numberOfAccounts","totalAccounts","createAccount","lock","lockAccounts","addToKeyFileSync","lowerAddress","alea","givenUnlockedAccounts","ul","addressOrIndex","createFakePrivateKey","isSafeInteger","accountKeysPath","fileData","private_keys","writeFileSync","random","salt","iv","N","finishEncryption","encryptSync","scryptSync","cipher","createCipheriv","ciphertext","final","mac","crypto","cipherparams","kdf","kdfParams","keyfile","crypt","localMac","createDecipheriv","encrypted","encrypt","keyFile","decrypt","privateToAddress","seed","existingTimer","durationMs","timeout","unref","fakePrivateKey","ACCOUNT_ZERO","first12","SECP256K1_N","ChainOptions","cliDescription","legacyName","cliType","asyncRequestProcessing","defaultDescription","cliAliases","rawInput","cliCoerce","asNum","cliChoices","DatabaseOptions","disableInCLI","conflicts","ForkOptions","KNOWN_NETWORKS","MAX_BLOCK_NUMBER","reColonSplit","coerceHeaders","ALLOWED_PROTOCOLS","includes","lastIndex","lastIndexOf","substr","console","warn","_blockNumber","conjunction","last","arrayToOxfordList","implies","reduce","EthereumDefaults","chain_options_1","database_options_1","logging_options_1","miner_options_1","wallet_options_1","fork_options_1","options_1","LoggingOptions","MinerOptions","WalletOptions","OptionsConfig","debug","quiet","config","toBigIntOrString","rawType","unseededRng","randomAlphaNumericString","alphabet","alphabetLength","rng","text","accountString","deterministic","DeterministicSeedPhrase","entropyToMnemonic","notVeryRandomBytes","AccessLists","isAccessList","tx_1","tx_2","params_1","accessList","AccessListJSON","bufferAccessList","slots","accessListStorageKeyCost","ACCESS_LIST_STORAGE_KEY_GAS","accessListAddressCost","ACCESS_LIST_ADDRESS_GAS","newAccessList","addressBuffer","storageItems","storageKeysLength","jsonItem","dataFeeEIP2930","BaseTransaction","MAX_UINT64","TRANSACTION_CREATION_GAS","byteLength","TRANSACTION_DATA_NON_ZERO_GAS","TRANSACTION_DATA_ZERO_GAS","nonZeroBytes","bigDataLength","zeroBytes","INITCODE_WORD_GAS","setExtra","EIP1559FeeMarketTransaction","runtime_transaction_1","access_lists_1","signing_1","CAPABILITIES","RuntimeTransaction","accessListData","getAccessListData","accessListJSON","accessListDataFee","computeIntrinsics","validateAndSetSignature","getSenderAddress","getBaseFee","getUpfrontCost","maxPriorityFeePerGasBI","maxFeePerGasBI","gasLimitBI","valueBI","bigIntMin","supports","capability","toEthRawTransaction","msgHash","digestWithPrefix","sig","encodedSignature","ranges","computeIntrinsicsFeeMarketTx","EIP2930AccessListTransaction","computeIntrinsicsAccessListTx","LegacyTransaction","ecsignLegacy","computeIntrinsicsLegacyTx","hasPartialSignature","toValidLengthAddress","base_transaction_1","transaction_receipt_1","ONE_BUFFER","finalizer","userFrom","finalized","dataVal","txAndExtraData","vmResult","createdAddress","_event","computeFromAddress","ecdsaRecover","isValidSigRecovery","copyOrFill","targetStart","numZeroes","endZeroes","sourceOffset","recovery","_ecdsaRecover","rBuf","sBuf","recid","signature","partialRlp","eip155V","extras","bigIntToBuffer","epilogue","senderPubKey","encodedData","allocUnsafePrefix","TransactionType","legacy_transaction_1","eip2930_access_list_transaction_1","eip1559_fee_market_transaction_1","assertValidTransactionSValue","SECP256K1_MAX_PRIVATE_KEY_DIV_2","fromDatabaseTx","txType","fromTxData","Legacy","EIP2930AccessList","EIP1559AccessList","toEIP1559","INVALID_PARAMS","typeOfRPC","_fromUnsafeUserData","typeOfRaw","typeOf","_InternalTransactionReceipt_init","STATUSES","decoded","blockLog","errors_1","coded_error_1","captureStackTraceExtended","createRevertReason","ethereumjs_abi_1","REVERT_REASON","codedError","captureStackTrace","nonEnumerableProperty","rawDecode","NONCE_TOO_LOW","INVALID_SENDER","returnType","Symbol","_logs","filterByTopic","expectedTopics","logTopics","every","expectedTopic","logPosition","expectedTopicSet","logTopic","logIndex","removed","t","iterator","logToJSON","expectedAddresses","InternalTag","safe","PREFIXES","traceDataLookup","bufferToMinHexKey","existing","lengthDiff","FilecoinDefaults","FilecoinOptionsConfig","src_1","src_2","ipfsHost","ipfsPort","TruffleColors","porsche","turquoise","infura","__experimental_info","server","_DefaultServerOptions","ServerStatus","Server","connector_loader_1","server_1","server_2","Ganache","connector","knownChainIds","flavors_1","flavors_2","flavor","DefaultFlavor","requestCoordinator","RequestCoordinator","Executor","GetConnector","connectPromise","serverOptionsConfig","serverDefaults","server_options_1","ServerOptions","buffer_1","ws","wsBinary","rpcEndpoint","FilecoinFlavorName","chunkSize","kMaxLength","_Server_options","_Server_providerOptions","_Server_status","_Server_app","_Server_httpServer","_Server_listenSocket","_Server_host","_Server_connector","_Server_websocketServer","_Server_initializer","aggregate_error_1","uws_js_unofficial_1","_cfg","ws_server_1","http_server_1","v4Seg","IPv4Reg","RegExp","DEFAULT_HOST","providerAndServerOptions","unknown","ready","loader","_app","App","listen","callbackIsFunction","trim","portNumber","closing","openingOrOpen","opening","allSettled","listenSocket","closed","promiseResults","family","us_socket_local_port","closingOrClosed","_listenSocket","us_listen_socket_close","_HttpServer_connector","_HttpServer_options","_HttpServer_isClosing","_HttpServer_handlePost","_HttpServer_handleOptions","content_types_1","http_response_codes_1","fragment_generator_1","prepareCORSResponseHeaders","getHeader","acrh","writeHeader","sendResponse","closeConnection","statusCode","contentType","writeHeaders","cork","writeStatus","HttpServer","app","onAborted","isLast","BAD_REQUEST","PLAIN","isGeneratorObject","sendChunkedResponse","fragments","getFragmentGenerator","firstFragment","nextFragment","OK","NO_CONTENT","post","IM_A_TEAPOT","any","connectionHeader","NOT_FOUND","ContentTypes","bufferSize","HttpResponseCodes","WebSocketCloseCodes","_WebsocketServer_connections","MAX_PAYLOAD_SIZE","sendFragmented","websocket_close_codes_1","useBinary","maybeLastFragment","sendFirstFragment","fragment","sendFragment","sendLastFragment","WebsocketServer","connections","autoBinary","maxPayloadLength","idleTimeout","isBinary","resultEmitter","resultEmitterPromiEvent","dispose","CLOSE_NORMAL","DefaultOptionsByName","EthereumFlavorName","ethereum_1","filecoin_options_1","colors_1","chalk_1","NEED_HELP","COMMUNITY_LINK","eval","exit","webpackEmptyContext","module","_OptionsConfig_defaults","_OptionsConfig_namespaces","checkForConflicts","namespace","suppliedOptions","conflict","defaults","out","def","namespaceOptions","propDefinition","normalized","_PromiseQueue_queue","_PromiseQueue_tryResolve","_PromiseQueue_tryResolveChain","entry_1","PromiseQueue","queue","entry","shift","resolved","cancelledQueue","mixin","for","Entry","onSetteled","_onSetteled","enc","encodedLength","encLength","len","hexLength","lLength","firstByte","safeSlice","decodeLength","parseHexByte","hexByte","byte","bytesToHex","uint8a","hex","cachedHexes","_decode","llength","innerRemainder","remainder","items","alloc","lengthEncodedLength","j","_v","path_1","secp256k1","nodeRequire","dirname","nodeGypBuild","Secp256k1","makeRequest","JsonRpcType","json_rpc_1","jsonrpc_1","promievent_1","toBigIntBE","toBufferBE","bigint_buffer_1","json_rpc_base_types_1","BaseJsonRpcType","parseAndValidateStringInput","parseAndValidateBigIntInput","parseAndValidateNumberInput","bigint_to_buffer_1","uint_to_buffer_1","isFinite","hexValue","ceil","_buffer","input_parsers_1","inspect","bufferValue","_depth","_options","constants_1","_byteLength","strValue","stringToFixedByteLength","bufferToFixedByteLength","desiredCharLength","padCharCount","fixedLengthValue","repeat","buffer_to_bigint_1","nullable","_nullable","ZERO_VALUE_STRING","firstNonZeroByte","findFirstNonZeroByteIndex","trimmedBuffer","readUIntBE","details","getOwnPropertyNames","PromiEvent_1","emitteryMethods","methodName","onrejected","onAny","eventData","_bigIntToBuffer","bigIntByteLength","view","padded","DataView","getBigUint64","latin1Slice","hexSlice","HEX_MAP","_Executor_requestCoordinator","has_own_1","api","__proto__","comp","insertPosition","step","_hasOwn","prop","less","down","up","element","newLength","newValue","fix","remove","swap","i0","j1","j2","heap","keccak_1","instance","_state","absorb","squeeze","_finalized","numbers","acc","RandomNumberGenerator","entropy","getNumber","upperExclusiveBound","getNumbers","getBuffer","_RequestCoordinator_paused","_RequestCoordinator_process","runningTasks","thisArgument","argumentsList","ecdsaSign","MAX_UINT32","num","uintWideToBuf","hiLsb","six","five","lsb","two","one","uint32ToBuf","second","third"],"sourceRoot":""}