import randombytes from 'randombytes';
import _classCallCheck from '@babel/runtime/helpers/classCallCheck';
import _createClass from '@babel/runtime/helpers/createClass';
import _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';
import _get from '@babel/runtime/helpers/get';
import _inherits from '@babel/runtime/helpers/inherits';
import _possibleConstructorReturn from '@babel/runtime/helpers/possibleConstructorReturn';
import _getPrototypeOf from '@babel/runtime/helpers/getPrototypeOf';
import _wrapNativeSuper from '@babel/runtime/helpers/wrapNativeSuper';
import _defineProperty from '@babel/runtime/helpers/defineProperty';
import base64urlLib from 'base64url';
import keccakLib from 'keccak';

var randomId = function randomId() {
  return randombytes(32).toString("hex");
};

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
var URLWithHashParams = /*#__PURE__*/function (_URL) {
  _inherits(URLWithHashParams, _URL);
  var _super = _createSuper(URLWithHashParams);
  function URLWithHashParams() {
    var _this;
    _classCallCheck(this, URLWithHashParams);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    _defineProperty(_assertThisInitialized(_this), "hashParams", new URLSearchParams());
    return _this;
  }
  _createClass(URLWithHashParams, [{
    key: "toString",
    value: function toString() {
      this.hash = this.hashParams.toString();
      return _get(_getPrototypeOf(URLWithHashParams.prototype), "toString", this).call(this);
    }
  }]);
  return URLWithHashParams;
}( /*#__PURE__*/_wrapNativeSuper(URL));

var base64url = base64urlLib;
function safebtoa(str) {
  return base64url.encode(str);
}
function safeatob(str) {
  // Going backwards: from bytestream, to percent-encoding, to original string.
  return base64url.decode(str);
}
var keccak = keccakLib;
function base64toJSON(b64str) {
  return JSON.parse(base64url.decode(b64str));
}
function jsonToBase64(json) {
  return base64url.encode(JSON.stringify(json));
}
function keccak256(str) {
  var input = str;
  if (typeof str === "string" && str.slice(0, 2) === "0x" && str.length === 66) {
    input = Buffer.from(str.slice(2), "hex");
  }
  var data = "0x".concat(keccak("keccak256").update(input).digest("hex").padStart(64, "0"));
  return data;
}

export { URLWithHashParams, base64toJSON, base64url, jsonToBase64, keccak, keccak256, randomId, safeatob, safebtoa };
//# sourceMappingURL=openloginUtils.esm.js.map
