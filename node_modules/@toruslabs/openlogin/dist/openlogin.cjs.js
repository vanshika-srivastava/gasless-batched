/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 641:
/***/ (() => {



/***/ }),

/***/ 485:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ src_OpenLogin)
});

;// CONCATENATED MODULE: external "@babel/runtime/helpers/typeof"
const typeof_namespaceObject = require("@babel/runtime/helpers/typeof");
var typeof_default = /*#__PURE__*/__webpack_require__.n(typeof_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/slicedToArray"
const slicedToArray_namespaceObject = require("@babel/runtime/helpers/slicedToArray");
var slicedToArray_default = /*#__PURE__*/__webpack_require__.n(slicedToArray_namespaceObject);
// EXTERNAL MODULE: external "@babel/runtime/helpers/asyncToGenerator"
var asyncToGenerator_ = __webpack_require__(798);
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator_);
// EXTERNAL MODULE: external "@babel/runtime/helpers/classCallCheck"
var classCallCheck_ = __webpack_require__(628);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck_);
// EXTERNAL MODULE: external "@babel/runtime/helpers/createClass"
var createClass_ = __webpack_require__(201);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass_);
// EXTERNAL MODULE: external "@babel/runtime/helpers/defineProperty"
var defineProperty_ = __webpack_require__(195);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_);
// EXTERNAL MODULE: external "@babel/runtime/regenerator"
var regenerator_ = __webpack_require__(650);
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator_);
// EXTERNAL MODULE: external "@toruslabs/eccrypto"
var eccrypto_ = __webpack_require__(75);
;// CONCATENATED MODULE: external "@toruslabs/http-helpers"
const http_helpers_namespaceObject = require("@toruslabs/http-helpers");
// EXTERNAL MODULE: external "@toruslabs/openlogin-jrpc"
var openlogin_jrpc_ = __webpack_require__(33);
// EXTERNAL MODULE: external "@toruslabs/openlogin-utils"
var openlogin_utils_ = __webpack_require__(470);
;// CONCATENATED MODULE: external "lodash.merge"
const external_lodash_merge_namespaceObject = require("lodash.merge");
var external_lodash_merge_default = /*#__PURE__*/__webpack_require__.n(external_lodash_merge_namespaceObject);
// EXTERNAL MODULE: ./src/constants.ts
var constants = __webpack_require__(18);
// EXTERNAL MODULE: ./src/loglevel.ts + 1 modules
var loglevel = __webpack_require__(124);
// EXTERNAL MODULE: ./src/utils.ts
var utils = __webpack_require__(337);
;// CONCATENATED MODULE: ./src/Modal.ts










var handleStream = function handleStream(handle, eventName, handler) {
  var handlerWrapper = function handlerWrapper(chunk) {
    handler(chunk);
    handle.removeListener(eventName, handlerWrapper);
  };
  handle.on(eventName, handlerWrapper);
};
var Modal = /*#__PURE__*/function () {
  function Modal(modalUrl) {
    classCallCheck_default()(this, Modal);
    defineProperty_default()(this, "modalUrl", void 0);
    defineProperty_default()(this, "iframeElem", void 0);
    defineProperty_default()(this, "initialized", false);
    defineProperty_default()(this, "modalZIndex", 99999);
    defineProperty_default()(this, "mux", void 0);
    defineProperty_default()(this, "verifierStream", void 0);
    this.modalUrl = modalUrl;
  }
  createClass_default()(Modal, [{
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return this.initIFrame(this.modalUrl);
              case 2:
                this.setupStream();
              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "setupStream",
    value: function setupStream() {
      if (this.iframeElem === null) throw new Error("iframe is null");
      this.mux = (0,openlogin_jrpc_.setupMultiplex)(new openlogin_jrpc_.PostMessageStream({
        name: "modal_iframe_rpc",
        target: "modal_rpc",
        targetWindow: this.iframeElem.contentWindow,
        targetOrigin: new URL(this.modalUrl).origin
      }));
      this.verifierStream = this.mux.createStream("verifier");
    }
  }, {
    key: "initIFrame",
    value: function () {
      var _initIFrame = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2(src) {
        var _this = this;
        var documentIFrameElem;
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return (0,utils/* documentReady */.A7)();
              case 2:
                documentIFrameElem = document.getElementById(constants/* modalDOMElementID */.S_);
                if (documentIFrameElem) {
                  documentIFrameElem.remove();
                  loglevel/* default.info */.Z.info("already initialized, removing previous modal iframe");
                }
                this.iframeElem = (0,utils/* htmlToElement */.Bv)("<iframe\n        id=".concat(constants/* modalDOMElementID */.S_, "\n        class=\"torusIframe\"\n        src=\"").concat(src, "\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ").concat(this.modalZIndex.toString(), "\"\n      ></iframe>"));
                this._hideModal();
                document.body.appendChild(this.iframeElem);
                return _context2.abrupt("return", new Promise(function (resolve) {
                  _this.iframeElem.onload = function () {
                    _this.initialized = true;
                    resolve();
                  };
                }));
              case 8:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function initIFrame(_x) {
        return _initIFrame.apply(this, arguments);
      }
      return initIFrame;
    }()
  }, {
    key: "_showModal",
    value: function _showModal() {
      var style = {};
      style.display = "block";
      style.position = "fixed";
      style.width = "100%";
      style.height = "100%";
      style.top = "0px";
      style.right = "0px";
      style.left = "0px";
      style.bottom = "0px";
      style.border = "0";
      style["z-index"] = this.modalZIndex;
      this.iframeElem.setAttribute("style", Object.entries(style).map(function (_ref) {
        var _ref2 = slicedToArray_default()(_ref, 2),
          k = _ref2[0],
          v = _ref2[1];
        return "".concat(k, ":").concat(v);
      }).join(";"));
    }
  }, {
    key: "_hideModal",
    value: function _hideModal() {
      var style = {};
      style.display = "none";
      style.position = "fixed";
      style.width = "100%";
      style.height = "100%";
      style.top = "0px";
      style.right = "0px";
      style.left = "0px";
      style.bottom = "0px";
      style.border = "0";
      style["z-index"] = this.modalZIndex;
      this.iframeElem.setAttribute("style", Object.entries(style).map(function (_ref3) {
        var _ref4 = slicedToArray_default()(_ref3, 2),
          k = _ref4[0],
          v = _ref4[1];
        return "".concat(k, ":").concat(v);
      }).join(";"));
    }
  }, {
    key: "_prompt",
    value: function () {
      var _prompt2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3(clientId, whiteLabel, loginConfig, cb) {
        var _this2 = this;
        var modalHandler;
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                this._showModal();
                modalHandler = function modalHandler(chunk) {
                  _this2._hideModal();
                  cb(chunk);
                };
                handleStream(this.verifierStream, "data", modalHandler);
                this.verifierStream.write({
                  name: "prompt",
                  clientId: clientId,
                  whiteLabel: whiteLabel,
                  loginConfig: loginConfig
                });
              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function _prompt(_x2, _x3, _x4, _x5) {
        return _prompt2.apply(this, arguments);
      }
      return _prompt;
    }()
  }, {
    key: "cleanup",
    value: function () {
      var _cleanup = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4() {
        var documentIFrameElem;
        return regenerator_default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.next = 2;
                return (0,utils/* documentReady */.A7)();
              case 2:
                documentIFrameElem = document.getElementById(constants/* modalDOMElementID */.S_);
                if (documentIFrameElem) {
                  documentIFrameElem.remove();
                  this.iframeElem = null;
                }
                this.initialized = false;
              case 5:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this);
      }));
      function cleanup() {
        return _cleanup.apply(this, arguments);
      }
      return cleanup;
    }()
  }]);
  return Modal;
}();
// EXTERNAL MODULE: ./src/OpenLoginStore.ts + 1 modules
var OpenLoginStore = __webpack_require__(111);
// EXTERNAL MODULE: ./src/Provider.ts + 5 modules
var Provider = __webpack_require__(776);
;// CONCATENATED MODULE: ./src/OpenLogin.ts







function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty_default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }










(0,utils/* preloadIframe */.E0)("https://app.openlogin.com/sdk-modal");
var OpenLogin = /*#__PURE__*/function () {
  function OpenLogin(options) {
    var _options$no3PC, _options$_startUrl, _options$_popupUrl, _options$redirectUrl, _options$uxMode, _options$replaceUrlOn, _options$originData, _options$whiteLabel, _options$loginConfig, _options$_storageServ, _options$_sessionName, _options$webauthnTran;
    classCallCheck_default()(this, OpenLogin);
    defineProperty_default()(this, "provider", void 0);
    defineProperty_default()(this, "state", void 0);
    defineProperty_default()(this, "modal", void 0);
    this.provider = new Proxy(new Provider/* default */.Z(), {
      deleteProperty: function deleteProperty() {
        return true;
      } // work around for web3
    });

    if (!options._iframeUrl) {
      if (options.network === constants/* OPENLOGIN_NETWORK.MAINNET */.dr.MAINNET) {
        options._iframeUrl = "https://app.openlogin.com";
      } else if (options.network === constants/* OPENLOGIN_NETWORK.CYAN */.dr.CYAN) {
        options._iframeUrl = "https://cyan.openlogin.com";
      } else if (options.network === constants/* OPENLOGIN_NETWORK.TESTNET */.dr.TESTNET) {
        options._iframeUrl = "https://beta.openlogin.com";
      } else if (options.network === constants/* OPENLOGIN_NETWORK.SK_TESTNET */.dr.SK_TESTNET) {
        options._iframeUrl = "https://beta-sk.openlogin.com";
      } else if (options.network === constants/* OPENLOGIN_NETWORK.CELESTE */.dr.CELESTE) {
        options._iframeUrl = "https://celeste.openlogin.com";
      } else if (options.network === constants/* OPENLOGIN_NETWORK.AQUA */.dr.AQUA) {
        options._iframeUrl = "https://aqua.openlogin.com";
      } else if (options.network === constants/* OPENLOGIN_NETWORK.DEVELOPMENT */.dr.DEVELOPMENT) {
        options._iframeUrl = "http://localhost:3000";
      }
    }
    if (!options._iframeUrl) {
      throw new Error("unspecified network and iframeUrl");
    }
    this.modal = new Modal("".concat(options._iframeUrl, "/sdk-modal"));
    this.initState(_objectSpread(_objectSpread({}, options), {}, {
      no3PC: (_options$no3PC = options.no3PC) !== null && _options$no3PC !== void 0 ? _options$no3PC : false,
      _iframeUrl: options._iframeUrl,
      _startUrl: (_options$_startUrl = options._startUrl) !== null && _options$_startUrl !== void 0 ? _options$_startUrl : "".concat(options._iframeUrl, "/start"),
      _popupUrl: (_options$_popupUrl = options._popupUrl) !== null && _options$_popupUrl !== void 0 ? _options$_popupUrl : "".concat(options._iframeUrl, "/popup-window"),
      redirectUrl: (_options$redirectUrl = options.redirectUrl) !== null && _options$redirectUrl !== void 0 ? _options$redirectUrl : "".concat(window.location.protocol, "//").concat(window.location.host).concat(window.location.pathname),
      uxMode: (_options$uxMode = options.uxMode) !== null && _options$uxMode !== void 0 ? _options$uxMode : constants/* UX_MODE.REDIRECT */.$e.REDIRECT,
      replaceUrlOnRedirect: (_options$replaceUrlOn = options.replaceUrlOnRedirect) !== null && _options$replaceUrlOn !== void 0 ? _options$replaceUrlOn : true,
      originData: (_options$originData = options.originData) !== null && _options$originData !== void 0 ? _options$originData : defineProperty_default()({}, window.location.origin, ""),
      whiteLabel: (_options$whiteLabel = options.whiteLabel) !== null && _options$whiteLabel !== void 0 ? _options$whiteLabel : {},
      loginConfig: (_options$loginConfig = options.loginConfig) !== null && _options$loginConfig !== void 0 ? _options$loginConfig : {},
      _storageServerUrl: (_options$_storageServ = options._storageServerUrl) !== null && _options$_storageServ !== void 0 ? _options$_storageServ : "https://broadcast-server.tor.us",
      storageKey: options.storageKey === "session" ? "session" : "local",
      _sessionNamespace: (_options$_sessionName = options._sessionNamespace) !== null && _options$_sessionName !== void 0 ? _options$_sessionName : "",
      webauthnTransports: (_options$webauthnTran = options.webauthnTransports) !== null && _options$webauthnTran !== void 0 ? _options$webauthnTran : ["internal"]
    }));
  }
  createClass_default()(OpenLogin, [{
    key: "privKey",
    get: function get() {
      return this.state.privKey ? this.state.privKey.padStart(64, "0") : "";
    }
  }, {
    key: "coreKitKey",
    get: function get() {
      return this.state.coreKitKey ? this.state.coreKitKey.padStart(64, "0") : "";
    }
  }, {
    key: "initState",
    value: function initState(options) {
      this.state = {
        uxMode: options.uxMode,
        network: options.network,
        store: OpenLoginStore/* default.getInstance */.Z.getInstance(options._sessionNamespace, options.storageKey),
        iframeUrl: options._iframeUrl,
        startUrl: options._startUrl,
        popupUrl: options._popupUrl,
        clientId: options.clientId,
        redirectUrl: options.redirectUrl,
        replaceUrlOnRedirect: options.replaceUrlOnRedirect,
        originData: options.originData,
        loginConfig: options.loginConfig,
        support3PC: !options.no3PC,
        whiteLabel: options.whiteLabel,
        storageServerUrl: options._storageServerUrl,
        sessionNamespace: options._sessionNamespace,
        webauthnTransports: options.webauthnTransports
      };
    }
  }, {
    key: "init",
    value: function () {
      var _init = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee() {
        var params, res;
        return regenerator_default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (this.state.network === constants/* OPENLOGIN_NETWORK.TESTNET */.dr.TESTNET) {
                  // using console log because it shouldn't be affected by loglevel config
                  // eslint-disable-next-line no-console
                  console.log("%c WARNING! You are on testnet. Please set network: 'mainnet' in production", "color: #FF0000");
                }
                if (!(this.state.uxMode === constants/* UX_MODE.SESSIONLESS_REDIRECT */.$e.SESSIONLESS_REDIRECT)) {
                  _context.next = 7;
                  break;
                }
                _context.next = 4;
                return this.updateOriginData();
              case 4:
                // in this mode iframe is not used so support3pc must be false
                this.state.support3PC = false;
                _context.next = 10;
                break;
              case 7:
                _context.next = 9;
                return Promise.all([this.modal.init(), this.updateOriginData()]);
              case 9:
                this.provider.init({
                  iframeElem: this.modal.iframeElem,
                  iframeUrl: this.state.iframeUrl
                });
              case 10:
                params = (0,utils/* getHashQueryParams */.Gv)(this.state.replaceUrlOnRedirect);
                if (params.sessionId) {
                  this.state.store.set("sessionId", params.sessionId);
                }
                if (!(this.state.uxMode === constants/* UX_MODE.SESSIONLESS_REDIRECT */.$e.SESSIONLESS_REDIRECT)) {
                  _context.next = 16;
                  break;
                }
                this._syncState(params);
                _context.next = 21;
                break;
              case 16:
                _context.t0 = this;
                _context.next = 19;
                return this._getData();
              case 19:
                _context.t1 = _context.sent;
                _context.t0._syncState.call(_context.t0, _context.t1);
              case 21:
                if (!this.state.support3PC) {
                  _context.next = 26;
                  break;
                }
                _context.next = 24;
                return this._check3PCSupport();
              case 24:
                res = _context.sent;
                this.state.support3PC = !!res.support3PC;
              case 26:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));
      function init() {
        return _init.apply(this, arguments);
      }
      return init;
    }()
  }, {
    key: "updateOriginData",
    value: function () {
      var _updateOriginData = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {
        var filteredOriginData, _yield$Promise$all, _yield$Promise$all2, whitelist, whiteLabel;
        return regenerator_default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                filteredOriginData = JSON.parse(JSON.stringify(this.state.originData));
                Object.keys(filteredOriginData).forEach(function (key) {
                  if (filteredOriginData[key] === "") delete filteredOriginData[key];
                });
                _context2.next = 4;
                return Promise.all([this.getWhitelist(), this.getWhiteLabel()]);
              case 4:
                _yield$Promise$all = _context2.sent;
                _yield$Promise$all2 = slicedToArray_default()(_yield$Promise$all, 2);
                whitelist = _yield$Promise$all2[0];
                whiteLabel = _yield$Promise$all2[1];
                this._syncState({
                  originData: _objectSpread(_objectSpread({}, whitelist), filteredOriginData),
                  whiteLabel: _objectSpread(_objectSpread({}, whiteLabel), this.state.whiteLabel)
                });
              case 9:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function updateOriginData() {
        return _updateOriginData.apply(this, arguments);
      }
      return updateOriginData;
    }()
  }, {
    key: "getWhitelist",
    value: function () {
      var _getWhitelist = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3() {
        var clientId, url, res;
        return regenerator_default().wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                _context3.prev = 0;
                clientId = this.state.clientId;
                if (clientId) {
                  _context3.next = 4;
                  break;
                }
                throw new Error("unspecified clientId");
              case 4:
                url = new URL("https://api.developer.tor.us/whitelist");
                url.searchParams.append("project_id", this.state.clientId);
                url.searchParams.append("network", this.state.network);
                _context3.next = 9;
                return (0,http_helpers_namespaceObject.get)(url.href);
              case 9:
                res = _context3.sent;
                return _context3.abrupt("return", res.signed_urls);
              case 13:
                _context3.prev = 13;
                _context3.t0 = _context3["catch"](0);
                return _context3.abrupt("return", {});
              case 16:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[0, 13]]);
      }));
      function getWhitelist() {
        return _getWhitelist.apply(this, arguments);
      }
      return getWhitelist;
    }()
  }, {
    key: "getWhiteLabel",
    value: function () {
      var _getWhiteLabel = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4() {
        var clientId, url, res;
        return regenerator_default().wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.prev = 0;
                clientId = this.state.clientId;
                if (clientId) {
                  _context4.next = 4;
                  break;
                }
                throw new Error("unspecified clientId");
              case 4:
                url = new URL("https://api.developer.tor.us/whitelabel");
                url.searchParams.append("project_id", this.state.clientId);
                _context4.next = 8;
                return (0,http_helpers_namespaceObject.get)(url.href);
              case 8:
                res = _context4.sent;
                return _context4.abrupt("return", res.whiteLabel);
              case 12:
                _context4.prev = 12;
                _context4.t0 = _context4["catch"](0);
                return _context4.abrupt("return", {});
              case 15:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[0, 12]]);
      }));
      function getWhiteLabel() {
        return _getWhiteLabel.apply(this, arguments);
      }
      return getWhiteLabel;
    }()
  }, {
    key: "login",
    value: function () {
      var _login = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee5(params) {
        return regenerator_default().wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                if (!(params !== null && params !== void 0 && params.loginProvider)) {
                  _context5.next = 2;
                  break;
                }
                return _context5.abrupt("return", this._selectedLogin(params));
              case 2:
                if (!(this.state.uxMode === constants/* UX_MODE.SESSIONLESS_REDIRECT */.$e.SESSIONLESS_REDIRECT)) {
                  _context5.next = 4;
                  break;
                }
                throw new Error("Please pass loginProvider in params while using ".concat(constants/* UX_MODE.SESSIONLESS_REDIRECT */.$e.SESSIONLESS_REDIRECT, " mode"));
              case 4:
                return _context5.abrupt("return", this._modal(params));
              case 5:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this);
      }));
      function login(_x) {
        return _login.apply(this, arguments);
      }
      return login;
    }()
  }, {
    key: "_selectedLogin",
    value: function () {
      var _selectedLogin2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee6(params) {
        var defaultParams, loginParams, res;
        return regenerator_default().wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                defaultParams = {
                  redirectUrl: this.state.redirectUrl
                };
                loginParams = _objectSpread(_objectSpread({
                  loginProvider: params.loginProvider
                }, defaultParams), params);
                _context6.next = 4;
                return this.request({
                  method: constants/* OPENLOGIN_METHOD.LOGIN */.NB.LOGIN,
                  allowedInteractions: [constants/* UX_MODE.REDIRECT */.$e.REDIRECT, constants/* UX_MODE.POPUP */.$e.POPUP],
                  startUrl: this.state.startUrl,
                  popupUrl: this.state.popupUrl,
                  params: [loginParams]
                });
              case 4:
                res = _context6.sent;
                this.state.privKey = res.privKey;
                if (!res.store) {
                  _context6.next = 10;
                  break;
                }
                this._syncState(res);
                _context6.next = 16;
                break;
              case 10:
                if (!(this.state.privKey && this.state.support3PC)) {
                  _context6.next = 16;
                  break;
                }
                _context6.t0 = this;
                _context6.next = 14;
                return this._getData();
              case 14:
                _context6.t1 = _context6.sent;
                _context6.t0._syncState.call(_context6.t0, _context6.t1);
              case 16:
                return _context6.abrupt("return", {
                  privKey: this.privKey
                });
              case 17:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this);
      }));
      function _selectedLogin(_x2) {
        return _selectedLogin2.apply(this, arguments);
      }
      return _selectedLogin;
    }()
  }, {
    key: "logout",
    value: function () {
      var _logout = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee7() {
        var logoutParams,
          params,
          allowedInteractions,
          res,
          _args7 = arguments;
        return regenerator_default().wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                logoutParams = _args7.length > 0 && _args7[0] !== undefined ? _args7[0] : {};
                params = {}; // defaults
                params.redirectUrl = this.state.redirectUrl;
                params._clientId = this.state.clientId;
                params.sessionId = this.state.store.get("sessionId");
                if (logoutParams.clientId) {
                  params._clientId = logoutParams.clientId;
                }
                if (logoutParams.redirectUrl !== undefined) {
                  params.redirectUrl = logoutParams.redirectUrl;
                }
                allowedInteractions = this.state.uxMode === constants/* UX_MODE.SESSIONLESS_REDIRECT */.$e.SESSIONLESS_REDIRECT ? [constants/* ALLOWED_INTERACTIONS.REDIRECT */.xQ.REDIRECT] : [constants/* ALLOWED_INTERACTIONS.JRPC */.xQ.JRPC];
                _context7.next = 10;
                return this.request({
                  method: constants/* OPENLOGIN_METHOD.LOGOUT */.NB.LOGOUT,
                  params: [params],
                  startUrl: this.state.startUrl,
                  popupUrl: this.state.popupUrl,
                  allowedInteractions: allowedInteractions
                });
              case 10:
                res = _context7.sent;
                this._syncState({
                  privKey: "",
                  coreKitKey: "",
                  walletKey: "",
                  oAuthPrivateKey: "",
                  tKey: "",
                  store: {
                    name: "",
                    profileImage: "",
                    dappShare: "",
                    idToken: "",
                    oAuthIdToken: "",
                    oAuthAccessToken: "",
                    sessionId: "",
                    sessionNamespace: "",
                    appState: ""
                  }
                });
                return _context7.abrupt("return", res);
              case 13:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this);
      }));
      function logout() {
        return _logout.apply(this, arguments);
      }
      return logout;
    }()
  }, {
    key: "request",
    value: function () {
      var _request = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee8(args) {
        var _ref2;
        var pid, params, session, startUrl, popupUrl, method, allowedInteractions, userData, sig, sessionId, u, windowRef, _u, _windowRef;
        return regenerator_default().wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                pid = (0,openlogin_utils_.randomId)();
                params = args.params; // Note: _origin is added later in postMessageStream for jrpc requests
                // do not add it here since its used for checking postMessage constraints
                session = {};
                if (!(params.length !== 1)) {
                  _context8.next = 5;
                  break;
                }
                throw new Error("request params array should have only one element");
              case 5:
                startUrl = args.startUrl, popupUrl = args.popupUrl, method = args.method, allowedInteractions = args.allowedInteractions;
                if (!(allowedInteractions.length === 0)) {
                  _context8.next = 8;
                  break;
                }
                throw new Error("no allowed interactions");
              case 8:
                if (this.state.clientId) {
                  session._clientId = this.state.clientId;
                }
                if (this.state.sessionNamespace) {
                  session._sessionNamespace = this.state.sessionNamespace;
                }
                if (!this.privKey) {
                  _context8.next = 18;
                  break;
                }
                userData = {
                  clientId: session._clientId,
                  timestamp: Date.now().toString()
                };
                _context8.next = 14;
                return (0,eccrypto_.sign)(Buffer.from(this.privKey, "hex"), Buffer.from((0,openlogin_utils_.keccak)("keccak256").update(JSON.stringify(userData)).digest("hex"), "hex"));
              case 14:
                sig = _context8.sent;
                session._user = (0,eccrypto_.getPublic)(Buffer.from(this.privKey, "hex")).toString("hex");
                session._userSig = openlogin_utils_.base64url.encode(sig);
                session._userData = userData;
              case 18:
                session._originData = this.state.originData;
                session._whiteLabelData = this.state.whiteLabel;
                session._loginConfig = this.state.loginConfig;
                session._sessionId = this.state.store.get("sessionId");
                session._webauthnTransports = this.state.webauthnTransports;
                if (!session._sessionId) {
                  sessionId = (0,openlogin_utils_.randomId)();
                  session._sessionId = sessionId;
                  this.state.store.set("sessionId", sessionId);
                }

                // add in session data (allow overrides)
                params = [_objectSpread(_objectSpread({}, session), params[0])];

                // use JRPC where possible
                if (!allowedInteractions.includes(constants/* ALLOWED_INTERACTIONS.JRPC */.xQ.JRPC)) {
                  _context8.next = 27;
                  break;
                }
                return _context8.abrupt("return", this._jrpcRequest({
                  method: method,
                  params: params
                }));
              case 27:
                // set origin
                params[0]._origin = new URL((_ref2 = params[0].redirectUrl) !== null && _ref2 !== void 0 ? _ref2 : this.state.redirectUrl).origin;

                // preset params
                if (!this.state.support3PC) {
                  _context8.next = 32;
                  break;
                }
                _context8.next = 31;
                return this._setPIDData(pid, params);
              case 31:
                // eslint-disable-next-line require-atomic-updates
                params = [{}];
              case 32:
                if (!(!startUrl || !popupUrl)) {
                  _context8.next = 34;
                  break;
                }
                throw new Error("no url for redirect / popup flow");
              case 34:
                if (!(this.state.uxMode === constants/* UX_MODE.REDIRECT */.$e.REDIRECT || this.state.uxMode === constants/* UX_MODE.SESSIONLESS_REDIRECT */.$e.SESSIONLESS_REDIRECT)) {
                  _context8.next = 44;
                  break;
                }
                if (!allowedInteractions.includes(constants/* ALLOWED_INTERACTIONS.REDIRECT */.xQ.REDIRECT)) {
                  _context8.next = 38;
                  break;
                }
                // give time for synchronous methods to complete before redirect
                setTimeout(function () {
                  window.location.href = (0,utils/* constructURL */.vE)({
                    baseURL: startUrl,
                    hash: {
                      b64Params: (0,openlogin_utils_.jsonToBase64)(params[0]),
                      _pid: pid,
                      _method: method
                    }
                  });
                }, 50);
                return _context8.abrupt("return", {});
              case 38:
                if (!allowedInteractions.includes(constants/* ALLOWED_INTERACTIONS.POPUP */.xQ.POPUP)) {
                  _context8.next = 42;
                  break;
                }
                u = new URL((0,utils/* constructURL */.vE)({
                  baseURL: popupUrl,
                  hash: {
                    b64Params: (0,openlogin_utils_.jsonToBase64)(params[0]),
                    _pid: pid,
                    _method: method
                  }
                }));
                windowRef = window.open(u.toString(), "_blank", (0,utils/* getPopupFeatures */.SL)());
                return _context8.abrupt("return", (0,utils/* awaitReq */.xP)(pid, windowRef));
              case 42:
                _context8.next = 51;
                break;
              case 44:
                if (!allowedInteractions.includes(constants/* ALLOWED_INTERACTIONS.POPUP */.xQ.POPUP)) {
                  _context8.next = 48;
                  break;
                }
                _u = new URL((0,utils/* constructURL */.vE)({
                  baseURL: popupUrl,
                  hash: {
                    b64Params: (0,openlogin_utils_.jsonToBase64)(params[0]),
                    _pid: pid,
                    _method: method
                  }
                }));
                _windowRef = window.open(_u.toString(), "_blank", (0,utils/* getPopupFeatures */.SL)());
                return _context8.abrupt("return", (0,utils/* awaitReq */.xP)(pid, _windowRef));
              case 48:
                if (!allowedInteractions.includes(constants/* ALLOWED_INTERACTIONS.REDIRECT */.xQ.REDIRECT)) {
                  _context8.next = 51;
                  break;
                }
                // give time for synchronous methods to complete before redirect
                setTimeout(function () {
                  window.location.href = (0,utils/* constructURL */.vE)({
                    baseURL: startUrl,
                    hash: {
                      b64Params: (0,openlogin_utils_.jsonToBase64)(params[0]),
                      _pid: pid,
                      _method: method
                    }
                  });
                }, 50);
                return _context8.abrupt("return", null);
              case 51:
                throw new Error("no matching allowed interactions");
              case 52:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this);
      }));
      function request(_x3) {
        return _request.apply(this, arguments);
      }
      return request;
    }()
  }, {
    key: "_jrpcRequest",
    value: function () {
      var _jrpcRequest2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee9(args) {
        var _this = this;
        var method, params;
        return regenerator_default().wrap(function _callee9$(_context9) {
          while (1) {
            switch (_context9.prev = _context9.next) {
              case 0:
                if (!(!args || typeof_default()(args) !== "object" || Array.isArray(args))) {
                  _context9.next = 2;
                  break;
                }
                throw new Error("invalid request args");
              case 2:
                method = args.method, params = args.params;
                if (!(typeof method !== "string" || method.length === 0)) {
                  _context9.next = 5;
                  break;
                }
                throw new Error("invalid request method");
              case 5:
                if (!(params === undefined || !Array.isArray(params))) {
                  _context9.next = 7;
                  break;
                }
                throw new Error("invalid request params");
              case 7:
                if (params.length === 0) {
                  params.push({});
                }
                return _context9.abrupt("return", new Promise(function (resolve, reject) {
                  _this.provider._rpcRequest({
                    method: method,
                    params: params
                  }, (0,openlogin_jrpc_.getRpcPromiseCallback)(resolve, reject));
                }));
              case 9:
              case "end":
                return _context9.stop();
            }
          }
        }, _callee9);
      }));
      function _jrpcRequest(_x4) {
        return _jrpcRequest2.apply(this, arguments);
      }
      return _jrpcRequest;
    }()
  }, {
    key: "_check3PCSupport",
    value: function () {
      var _check3PCSupport2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee10() {
        return regenerator_default().wrap(function _callee10$(_context10) {
          while (1) {
            switch (_context10.prev = _context10.next) {
              case 0:
                return _context10.abrupt("return", this._jrpcRequest({
                  method: constants/* OPENLOGIN_METHOD.CHECK_3PC_SUPPORT */.NB.CHECK_3PC_SUPPORT,
                  params: [{
                    _originData: this.state.originData
                  }]
                }));
              case 1:
              case "end":
                return _context10.stop();
            }
          }
        }, _callee10, this);
      }));
      function _check3PCSupport() {
        return _check3PCSupport2.apply(this, arguments);
      }
      return _check3PCSupport;
    }()
  }, {
    key: "_setPIDData",
    value: function () {
      var _setPIDData2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee11(pid, data) {
        return regenerator_default().wrap(function _callee11$(_context11) {
          while (1) {
            switch (_context11.prev = _context11.next) {
              case 0:
                _context11.next = 2;
                return this.request({
                  allowedInteractions: [constants/* ALLOWED_INTERACTIONS.JRPC */.xQ.JRPC],
                  method: constants/* OPENLOGIN_METHOD.SET_PID_DATA */.NB.SET_PID_DATA,
                  params: [{
                    pid: pid,
                    data: data[0]
                  }]
                });
              case 2:
              case "end":
                return _context11.stop();
            }
          }
        }, _callee11, this);
      }));
      function _setPIDData(_x5, _x6) {
        return _setPIDData2.apply(this, arguments);
      }
      return _setPIDData;
    }()
  }, {
    key: "_getData",
    value: function () {
      var _getData2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee12() {
        return regenerator_default().wrap(function _callee12$(_context12) {
          while (1) {
            switch (_context12.prev = _context12.next) {
              case 0:
                if (!(this.state.uxMode === constants/* UX_MODE.SESSIONLESS_REDIRECT */.$e.SESSIONLESS_REDIRECT)) {
                  _context12.next = 2;
                  break;
                }
                return _context12.abrupt("return", {});
              case 2:
                return _context12.abrupt("return", this.request({
                  allowedInteractions: [constants/* ALLOWED_INTERACTIONS.JRPC */.xQ.JRPC],
                  method: constants/* OPENLOGIN_METHOD.GET_DATA */.NB.GET_DATA,
                  params: [{}]
                }));
              case 3:
              case "end":
                return _context12.stop();
            }
          }
        }, _callee12, this);
      }));
      function _getData() {
        return _getData2.apply(this, arguments);
      }
      return _getData;
    }()
  }, {
    key: "_syncState",
    value: function _syncState(newState) {
      var _this2 = this;
      if (newState.store) {
        if (typeof_default()(newState.store) !== "object") {
          throw new Error("expected store to be an object");
        }
        Object.keys(newState.store).forEach(function (key) {
          _this2.state.store.set(key, newState.store[key]);
        });
      }
      var store = this.state.store;
      this.state = _objectSpread(_objectSpread(_objectSpread({}, this.state), newState), {}, {
        store: store
      });
    }
  }, {
    key: "_modal",
    value: function () {
      var _modal2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee14(params) {
        var _this3 = this;
        return regenerator_default().wrap(function _callee14$(_context14) {
          while (1) {
            switch (_context14.prev = _context14.next) {
              case 0:
                return _context14.abrupt("return", new Promise(function (resolve, reject) {
                  _this3.modal._prompt(_this3.state.clientId, _this3.state.whiteLabel, _this3.state.loginConfig, /*#__PURE__*/function () {
                    var _ref3 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee13(chunk) {
                      var selectedLoginResponse;
                      return regenerator_default().wrap(function _callee13$(_context13) {
                        while (1) {
                          switch (_context13.prev = _context13.next) {
                            case 0:
                              if (!chunk.cancel) {
                                _context13.next = 4;
                                break;
                              }
                              reject(new Error("user canceled login"));
                              _context13.next = 14;
                              break;
                            case 4:
                              _context13.prev = 4;
                              _context13.next = 7;
                              return _this3._selectedLogin(external_lodash_merge_default()(params, chunk));
                            case 7:
                              selectedLoginResponse = _context13.sent;
                              resolve(selectedLoginResponse);
                              _context13.next = 14;
                              break;
                            case 11:
                              _context13.prev = 11;
                              _context13.t0 = _context13["catch"](4);
                              reject(_context13.t0);
                            case 14:
                            case "end":
                              return _context13.stop();
                          }
                        }
                      }, _callee13, null, [[4, 11]]);
                    }));
                    return function (_x8) {
                      return _ref3.apply(this, arguments);
                    };
                  }());
                }));
              case 1:
              case "end":
                return _context14.stop();
            }
          }
        }, _callee14);
      }));
      function _modal(_x7) {
        return _modal2.apply(this, arguments);
      }
      return _modal;
    }()
  }, {
    key: "_cleanup",
    value: function () {
      var _cleanup2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee15() {
        return regenerator_default().wrap(function _callee15$(_context15) {
          while (1) {
            switch (_context15.prev = _context15.next) {
              case 0:
                _context15.next = 2;
                return this.modal.cleanup();
              case 2:
                this.provider.cleanup();
              case 3:
              case "end":
                return _context15.stop();
            }
          }
        }, _callee15, this);
      }));
      function _cleanup() {
        return _cleanup2.apply(this, arguments);
      }
      return _cleanup;
    }()
  }, {
    key: "encrypt",
    value: function () {
      var _encrypt2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee16(message, privateKey) {
        var privKey;
        return regenerator_default().wrap(function _callee16$(_context16) {
          while (1) {
            switch (_context16.prev = _context16.next) {
              case 0:
                privKey = privateKey;
                if (!privKey) {
                  privKey = this.privKey;
                }
                // validations
                if (/^[0-9a-fA-f]{64}$/.exec(privKey)) {
                  _context16.next = 8;
                  break;
                }
                if (!(privKey === "" || privKey === undefined)) {
                  _context16.next = 7;
                  break;
                }
                throw new Error("private key cannot be empty");
              case 7:
                throw new Error("invalid private key in encrypt");
              case 8:
                return _context16.abrupt("return", (0,eccrypto_.encrypt)((0,eccrypto_.getPublic)(Buffer.from(privKey, "hex")), message));
              case 9:
              case "end":
                return _context16.stop();
            }
          }
        }, _callee16, this);
      }));
      function encrypt(_x9, _x10) {
        return _encrypt2.apply(this, arguments);
      }
      return encrypt;
    }()
  }, {
    key: "decrypt",
    value: function () {
      var _decrypt2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee17(ciphertext, privateKey) {
        var privKey;
        return regenerator_default().wrap(function _callee17$(_context17) {
          while (1) {
            switch (_context17.prev = _context17.next) {
              case 0:
                privKey = privateKey;
                if (!privKey) {
                  privKey = this.privKey;
                }
                // validations
                if (/^[0-9a-fA-f]{64}$/.exec(privKey)) {
                  _context17.next = 8;
                  break;
                }
                if (!(privKey === "" || privKey === undefined)) {
                  _context17.next = 7;
                  break;
                }
                throw new Error("private key cannot be empty");
              case 7:
                throw new Error("invalid private key in decrypt");
              case 8:
                return _context17.abrupt("return", (0,eccrypto_.decrypt)(Buffer.from(privKey, "hex"), ciphertext));
              case 9:
              case "end":
                return _context17.stop();
            }
          }
        }, _callee17, this);
      }));
      function decrypt(_x11, _x12) {
        return _decrypt2.apply(this, arguments);
      }
      return decrypt;
    }()
  }, {
    key: "getUserInfo",
    value: function () {
      var _getUserInfo = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee18() {
        var storeData, userInfo;
        return regenerator_default().wrap(function _callee18$(_context18) {
          while (1) {
            switch (_context18.prev = _context18.next) {
              case 0:
                if (!this.privKey) {
                  _context18.next = 4;
                  break;
                }
                storeData = this.state.store.getStore();
                userInfo = {
                  email: storeData.email || "",
                  name: storeData.name || "",
                  profileImage: storeData.profileImage || "",
                  aggregateVerifier: storeData.aggregateVerifier || "",
                  verifier: storeData.verifier || "",
                  verifierId: storeData.verifierId || "",
                  typeOfLogin: storeData.typeOfLogin || "",
                  dappShare: storeData.dappShare || "",
                  idToken: storeData.idToken || "",
                  oAuthIdToken: storeData.oAuthIdToken || "",
                  oAuthAccessToken: storeData.oAuthAccessToken || ""
                };
                return _context18.abrupt("return", userInfo);
              case 4:
                throw new Error("user should be logged in to fetch userInfo");
              case 5:
              case "end":
                return _context18.stop();
            }
          }
        }, _callee18, this);
      }));
      function getUserInfo() {
        return _getUserInfo.apply(this, arguments);
      }
      return getUserInfo;
    }()
  }, {
    key: "getEncodedLoginUrl",
    value: function () {
      var _getEncodedLoginUrl = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee19(loginParams) {
        var redirectUrl, clientId, dataObject, b64Params, hashParams;
        return regenerator_default().wrap(function _callee19$(_context19) {
          while (1) {
            switch (_context19.prev = _context19.next) {
              case 0:
                redirectUrl = loginParams.redirectUrl;
                clientId = this.state.clientId;
                if (this.state.originData[origin]) {
                  _context19.next = 5;
                  break;
                }
                _context19.next = 5;
                return this.updateOriginData();
              case 5:
                dataObject = _objectSpread({
                  _clientId: clientId,
                  _origin: new URL(redirectUrl).origin,
                  _originData: this.state.originData,
                  redirectUrl: redirectUrl
                }, loginParams);
                b64Params = (0,openlogin_utils_.jsonToBase64)(dataObject);
                hashParams = {
                  b64Params: b64Params,
                  _method: "openlogin_login"
                };
                return _context19.abrupt("return", (0,utils/* constructURL */.vE)({
                  baseURL: "".concat(this.state.iframeUrl, "/start"),
                  hash: hashParams
                }));
              case 9:
              case "end":
                return _context19.stop();
            }
          }
        }, _callee19, this);
      }));
      function getEncodedLoginUrl(_x13) {
        return _getEncodedLoginUrl.apply(this, arguments);
      }
      return getEncodedLoginUrl;
    }()
  }]);
  return OpenLogin;
}();
/* harmony default export */ const src_OpenLogin = (OpenLogin);

/***/ }),

/***/ 111:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ OpenLoginStore)
});

// EXTERNAL MODULE: external "@babel/runtime/helpers/classCallCheck"
var classCallCheck_ = __webpack_require__(628);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck_);
// EXTERNAL MODULE: external "@babel/runtime/helpers/createClass"
var createClass_ = __webpack_require__(201);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass_);
// EXTERNAL MODULE: external "@babel/runtime/helpers/defineProperty"
var defineProperty_ = __webpack_require__(195);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_);
// EXTERNAL MODULE: ./src/constants.ts
var constants = __webpack_require__(18);
;// CONCATENATED MODULE: ./src/MemoryStore.ts



var MemoryStore = /*#__PURE__*/function () {
  function MemoryStore() {
    classCallCheck_default()(this, MemoryStore);
    defineProperty_default()(this, "store", {});
  }
  createClass_default()(MemoryStore, [{
    key: "getItem",
    value: function getItem(key) {
      return this.store[key] || null;
    }
  }, {
    key: "setItem",
    value: function setItem(key, value) {
      this.store[key] = value;
    }
  }]);
  return MemoryStore;
}();
// EXTERNAL MODULE: ./src/utils.ts
var utils = __webpack_require__(337);
;// CONCATENATED MODULE: ./src/OpenLoginStore.ts






var OpenLoginStore = /*#__PURE__*/function () {
  // eslint-disable-next-line no-use-before-define

  function OpenLoginStore(storage, _storeKey) {
    classCallCheck_default()(this, OpenLoginStore);
    defineProperty_default()(this, "_storeKey", constants/* storeKey */.VD);
    defineProperty_default()(this, "storage", void 0);
    this.storage = storage;
    this._storeKey = _storeKey || constants/* storeKey */.VD;
    try {
      if (!storage.getItem(_storeKey || constants/* storeKey */.VD)) {
        this.resetStore();
      }
    } catch (error) {
      // Storage is not available
    }
  }
  createClass_default()(OpenLoginStore, [{
    key: "toJSON",
    value: function toJSON() {
      return this.storage.getItem(this._storeKey);
    }
  }, {
    key: "resetStore",
    value: function resetStore() {
      var currStore = this.getStore();
      this.storage.setItem(this._storeKey, JSON.stringify({}));
      return currStore;
    }
  }, {
    key: "getStore",
    value: function getStore() {
      return JSON.parse(this.storage.getItem(this._storeKey));
    }
  }, {
    key: "get",
    value: function get(key) {
      var store = JSON.parse(this.storage.getItem(this._storeKey));
      return store[key];
    }
  }, {
    key: "set",
    value: function set(key, value) {
      var store = JSON.parse(this.storage.getItem(this._storeKey));
      store[key] = value;
      this.storage.setItem(this._storeKey, JSON.stringify(store));
    }
  }], [{
    key: "getInstance",
    value: function getInstance(storeNamespace) {
      var storageKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "local";
      if (!this.instance) {
        var storage = new MemoryStore();
        if (storageKey === "local" && utils/* localStorageAvailable */.Vu) {
          storage = localStorage;
        }
        if (storageKey === "session" && utils/* sessionStorageAvailable */.jK) {
          storage = sessionStorage;
        }
        var finalStoreKey = storeNamespace ? "".concat(constants/* storeKey */.VD, "_").concat(storeNamespace) : constants/* storeKey */.VD;
        this.instance = new this(storage, finalStoreKey);
      }
      return this.instance;
    }
  }]);
  return OpenLoginStore;
}();
defineProperty_default()(OpenLoginStore, "instance", void 0);


/***/ }),

/***/ 776:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ Provider)
});

// EXTERNAL MODULE: external "@babel/runtime/helpers/classCallCheck"
var classCallCheck_ = __webpack_require__(628);
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck_);
// EXTERNAL MODULE: external "@babel/runtime/helpers/createClass"
var createClass_ = __webpack_require__(201);
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass_);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/assertThisInitialized"
const assertThisInitialized_namespaceObject = require("@babel/runtime/helpers/assertThisInitialized");
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/inherits"
const inherits_namespaceObject = require("@babel/runtime/helpers/inherits");
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/possibleConstructorReturn"
const possibleConstructorReturn_namespaceObject = require("@babel/runtime/helpers/possibleConstructorReturn");
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/getPrototypeOf"
const getPrototypeOf_namespaceObject = require("@babel/runtime/helpers/getPrototypeOf");
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf_namespaceObject);
// EXTERNAL MODULE: external "@babel/runtime/helpers/defineProperty"
var defineProperty_ = __webpack_require__(195);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_);
// EXTERNAL MODULE: external "@toruslabs/openlogin-jrpc"
var openlogin_jrpc_ = __webpack_require__(33);
// EXTERNAL MODULE: external "@toruslabs/openlogin-utils"
var openlogin_utils_ = __webpack_require__(470);
;// CONCATENATED MODULE: external "pump"
const external_pump_namespaceObject = require("pump");
var external_pump_default = /*#__PURE__*/__webpack_require__.n(external_pump_namespaceObject);
// EXTERNAL MODULE: ./src/loglevel.ts + 1 modules
var loglevel = __webpack_require__(124);
;// CONCATENATED MODULE: ./src/Provider.ts







function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }




var Provider = /*#__PURE__*/function (_SafeEventEmitter) {
  inherits_default()(Provider, _SafeEventEmitter);
  var _super = _createSuper(Provider);
  function Provider() {
    var _this;
    classCallCheck_default()(this, Provider);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    defineProperty_default()(assertThisInitialized_default()(_this), "iframeElem", null);
    defineProperty_default()(assertThisInitialized_default()(_this), "rpcStream", void 0);
    defineProperty_default()(assertThisInitialized_default()(_this), "iframeUrl", void 0);
    defineProperty_default()(assertThisInitialized_default()(_this), "rpcEngine", void 0);
    defineProperty_default()(assertThisInitialized_default()(_this), "initialized", void 0);
    defineProperty_default()(assertThisInitialized_default()(_this), "mux", void 0);
    return _this;
  }
  createClass_default()(Provider, [{
    key: "init",
    value: function init(_ref) {
      var iframeElem = _ref.iframeElem,
        iframeUrl = _ref.iframeUrl;
      this.iframeElem = iframeElem;
      this.iframeUrl = iframeUrl;
      this.setupStream();
      this.initialized = true;
    }
  }, {
    key: "setupStream",
    value: function setupStream() {
      if (this.iframeElem === null) throw new Error("iframe is null");
      this.rpcStream = new openlogin_jrpc_.PostMessageStream({
        name: "embed_rpc",
        target: "iframe_rpc",
        targetWindow: this.iframeElem.contentWindow,
        targetOrigin: new URL(this.iframeUrl).origin
      });
      this.mux = (0,openlogin_jrpc_.setupMultiplex)(this.rpcStream);
      var JRPCConnection = (0,openlogin_jrpc_.createStreamMiddleware)();
      external_pump_default()(JRPCConnection.stream, this.mux.createStream("jrpc"), JRPCConnection.stream, function (error) {
        loglevel/* default.error */.Z.error("JRPC connection broken", error);
      });
      var rpcEngine = new openlogin_jrpc_.JRPCEngine();
      rpcEngine.push((0,openlogin_jrpc_.createIdRemapMiddleware)());
      rpcEngine.push(JRPCConnection.middleware);
      this.rpcEngine = rpcEngine;
    }
  }, {
    key: "cleanup",
    value: function cleanup() {
      this.iframeElem = null;
      this.initialized = false;
    }
  }, {
    key: "_rpcRequest",
    value: function _rpcRequest(payload, callback) {
      if (!payload.jsonrpc) {
        payload.jsonrpc = "2.0";
      }
      if (!payload.id) {
        payload.id = (0,openlogin_utils_.randomId)();
      }
      this.rpcEngine.handle(payload, callback);
    }
  }]);
  return Provider;
}(openlogin_jrpc_.SafeEventEmitter);


/***/ }),

/***/ 18:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "$e": () => (/* binding */ UX_MODE),
/* harmony export */   "M_": () => (/* binding */ MFA_LEVELS),
/* harmony export */   "NB": () => (/* binding */ OPENLOGIN_METHOD),
/* harmony export */   "S_": () => (/* binding */ modalDOMElementID),
/* harmony export */   "VD": () => (/* binding */ storeKey),
/* harmony export */   "dr": () => (/* binding */ OPENLOGIN_NETWORK),
/* harmony export */   "hG": () => (/* binding */ LOGIN_PROVIDER),
/* harmony export */   "x7": () => (/* binding */ SUPPORTED_KEY_CURVES),
/* harmony export */   "xQ": () => (/* binding */ ALLOWED_INTERACTIONS)
/* harmony export */ });
var modalDOMElementID = "openlogin-modal";
var storeKey = "openlogin_store";
var UX_MODE = {
  POPUP: "popup",
  REDIRECT: "redirect",
  SESSIONLESS_REDIRECT: "sessionless_redirect"
};
var OPENLOGIN_METHOD = {
  LOGIN: "openlogin_login",
  LOGOUT: "openlogin_logout",
  CHECK_3PC_SUPPORT: "openlogin_check_3PC_support",
  SET_PID_DATA: "openlogin_set_pid_data",
  GET_DATA: "openlogin_get_data"
};
var ALLOWED_INTERACTIONS = {
  POPUP: "popup",
  REDIRECT: "redirect",
  JRPC: "jrpc"
};
var OPENLOGIN_NETWORK = {
  MAINNET: "mainnet",
  TESTNET: "testnet",
  CYAN: "cyan",
  DEVELOPMENT: "development",
  SK_TESTNET: "sk_testnet",
  CELESTE: "celeste",
  AQUA: "aqua"
};
var SUPPORTED_KEY_CURVES = {
  SECP256K1: "secp256k1",
  ED25519: "ed25519"
};
var LOGIN_PROVIDER = {
  GOOGLE: "google",
  FACEBOOK: "facebook",
  REDDIT: "reddit",
  DISCORD: "discord",
  TWITCH: "twitch",
  APPLE: "apple",
  LINE: "line",
  GITHUB: "github",
  KAKAO: "kakao",
  LINKEDIN: "linkedin",
  TWITTER: "twitter",
  WEIBO: "weibo",
  WECHAT: "wechat",
  EMAIL_PASSWORDLESS: "email_passwordless",
  SMS_PASSWORDLESS: "sms_passwordless",
  WEBAUTHN: "webauthn",
  JWT: "jwt"
};
var MFA_LEVELS = {
  DEFAULT: "default",
  OPTIONAL: "optional",
  MANDATORY: "mandatory",
  NONE: "none"
};

/***/ }),

/***/ 124:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "Z": () => (/* binding */ loglevel)
});

;// CONCATENATED MODULE: external "loglevel"
const external_loglevel_namespaceObject = require("loglevel");
var external_loglevel_default = /*#__PURE__*/__webpack_require__.n(external_loglevel_namespaceObject);
;// CONCATENATED MODULE: ./src/loglevel.ts

external_loglevel_default().setLevel("error");
/* harmony default export */ const loglevel = (external_loglevel_default().getLogger("openlogin"));

/***/ }),

/***/ 337:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "A7": () => (/* binding */ documentReady),
/* harmony export */   "Bv": () => (/* binding */ htmlToElement),
/* harmony export */   "E0": () => (/* binding */ preloadIframe),
/* harmony export */   "Gv": () => (/* binding */ getHashQueryParams),
/* harmony export */   "OF": () => (/* binding */ whitelistUrl),
/* harmony export */   "SL": () => (/* binding */ getPopupFeatures),
/* harmony export */   "Vu": () => (/* binding */ localStorageAvailable),
/* harmony export */   "jK": () => (/* binding */ sessionStorageAvailable),
/* harmony export */   "oZ": () => (/* binding */ storageAvailable),
/* harmony export */   "vE": () => (/* binding */ constructURL),
/* harmony export */   "xP": () => (/* binding */ awaitReq)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(798);
/* harmony import */ var _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(650);
/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _toruslabs_eccrypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(75);
/* harmony import */ var _toruslabs_eccrypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_toruslabs_eccrypto__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(470);
/* harmony import */ var _toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _loglevel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(124);





function documentReady() {
  return _documentReady.apply(this, arguments);
}
function _documentReady() {
  _documentReady = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().mark(function _callee() {
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            return _context.abrupt("return", new Promise(function (resolve) {
              if (document.readyState !== "loading") {
                resolve();
              } else {
                document.addEventListener("DOMContentLoaded", function () {
                  resolve();
                });
              }
            }));
          case 1:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _documentReady.apply(this, arguments);
}
var htmlToElement = function htmlToElement(html) {
  var template = window.document.createElement("template");
  var trimmedHtml = html.trim(); // Never return a text node of whitespace as the result
  template.innerHTML = trimmedHtml;
  return template.content.firstChild;
};
function whitelistUrl(_x, _x2, _x3) {
  return _whitelistUrl.apply(this, arguments);
}
function _whitelistUrl() {
  _whitelistUrl = _babel_runtime_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0___default()( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().mark(function _callee2(clientId, appKey, origin) {
    var appKeyBuf, sig;
    return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default().wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            appKeyBuf = Buffer.from(appKey.padStart(64, "0"), "hex");
            if (!(_toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_3__.base64url.encode((0,_toruslabs_eccrypto__WEBPACK_IMPORTED_MODULE_2__.getPublic)(appKeyBuf)) !== clientId)) {
              _context2.next = 3;
              break;
            }
            throw new Error("appKey mismatch");
          case 3:
            _context2.next = 5;
            return (0,_toruslabs_eccrypto__WEBPACK_IMPORTED_MODULE_2__.sign)(appKeyBuf, Buffer.from((0,_toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_3__.keccak)("keccak256").update(origin).digest("hex"), "hex"));
          case 5:
            sig = _context2.sent;
            return _context2.abrupt("return", _toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_3__.base64url.encode(sig));
          case 7:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return _whitelistUrl.apply(this, arguments);
}
function getHashQueryParams() {
  var replaceUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
  var result = {};
  var url = new URL(window.location.href);
  url.searchParams.forEach(function (value, key) {
    if (key !== "result") {
      result[key] = value;
    }
  });
  var queryResult = url.searchParams.get("result");
  if (queryResult) {
    try {
      var queryParams = JSON.parse((0,_toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_3__.safeatob)(queryResult));
      Object.keys(queryParams).forEach(function (key) {
        result[key] = queryParams[key];
      });
    } catch (error) {
      _loglevel__WEBPACK_IMPORTED_MODULE_4__/* ["default"].error */ .Z.error(error);
    }
  }
  var hash = url.hash.substring(1);
  var hashUrl = new URL("".concat(window.location.origin, "/?").concat(hash));
  hashUrl.searchParams.forEach(function (value, key) {
    if (key !== "result") {
      result[key] = value;
    }
  });
  var hashResult = hashUrl.searchParams.get("result");
  if (hashResult) {
    try {
      var hashParams = JSON.parse((0,_toruslabs_openlogin_utils__WEBPACK_IMPORTED_MODULE_3__.safeatob)(hashResult));
      Object.keys(hashParams).forEach(function (key) {
        result[key] = hashParams[key];
      });
    } catch (error) {
      _loglevel__WEBPACK_IMPORTED_MODULE_4__/* ["default"].error */ .Z.error(error);
    }
  }
  if (replaceUrl) {
    var cleanUrl = window.location.origin + window.location.pathname;
    window.history.replaceState(null, "", cleanUrl);
  }
  return result;
}
function awaitReq(id, windowRef) {
  return new Promise(function (resolve, reject) {
    if (!windowRef) {
      reject(new Error("Unable to open window"));
      return;
    }
    var closedByHandler = false;
    var closedMonitor = setInterval(function () {
      if (!closedByHandler && windowRef.closed) {
        clearInterval(closedMonitor);
        reject(new Error("user closed popup"));
      }
    }, 500);
    var handler = function handler(ev) {
      var pid = ev.data.pid;
      if (id !== pid) return;
      window.removeEventListener("message", handler);
      closedByHandler = true;
      clearInterval(closedMonitor);
      windowRef.close();
      if (ev.data.data && ev.data.data.error) {
        reject(new Error(ev.data.data.error));
      } else {
        resolve(ev.data.data);
      }
    };
    window.addEventListener("message", handler);
  });
}
function constructURL(params) {
  var baseURL = params.baseURL,
    query = params.query,
    hash = params.hash;
  var url = new URL(baseURL);
  if (query) {
    Object.keys(query).forEach(function (key) {
      url.searchParams.append(key, query[key]);
    });
  }
  if (hash) {
    var h = new URL(constructURL({
      baseURL: baseURL,
      query: hash
    })).searchParams.toString();
    url.hash = h;
  }
  return url.toString();
}
function storageAvailable(type) {
  var storageExists = false;
  var storageLength = 0;
  var storage;
  try {
    storage = window[type];
    storageExists = true;
    storageLength = storage.length;
    var x = "__storage_test__";
    storage.setItem(x, x);
    storage.removeItem(x);
    return true;
  } catch (error) {
    return error && (
    // everything except Firefox
    error.code === 22 ||
    // Firefox
    error.code === 1014 ||
    // test name field too, because code might not be present
    // everything except Firefox
    error.name === "QuotaExceededErro r" ||
    // Firefox
    error.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
    // acknowledge QuotaExceededError only if there's something already stored
    storageExists && storageLength !== 0;
  }
}
var sessionStorageAvailable = storageAvailable("sessionStorage");
var localStorageAvailable = storageAvailable("localStorage");
function preloadIframe(url) {
  try {
    if (typeof document === "undefined") return;
    var openloginIframeHtml = document.createElement("link");
    openloginIframeHtml.href = url;
    openloginIframeHtml.crossOrigin = "anonymous";
    openloginIframeHtml.type = "text/html";
    openloginIframeHtml.rel = "prefetch";
    if (openloginIframeHtml.relList && openloginIframeHtml.relList.supports) {
      if (openloginIframeHtml.relList.supports("prefetch")) {
        document.head.appendChild(openloginIframeHtml);
      }
    }
  } catch (error) {
    _loglevel__WEBPACK_IMPORTED_MODULE_4__/* ["default"].error */ .Z.error(error);
  }
}
function getPopupFeatures() {
  // Fixes dual-screen position                             Most browsers      Firefox
  var dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;
  var dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;
  var w = 1200;
  var h = 700;
  var width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;
  var height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;
  var systemZoom = 1; // No reliable estimate

  var left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);
  var top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);
  var features = "titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=".concat(h / systemZoom, ",width=").concat(w / systemZoom, ",top=").concat(top, ",left=").concat(left);
  return features;
}

/***/ }),

/***/ 798:
/***/ ((module) => {

"use strict";
module.exports = require("@babel/runtime/helpers/asyncToGenerator");

/***/ }),

/***/ 628:
/***/ ((module) => {

"use strict";
module.exports = require("@babel/runtime/helpers/classCallCheck");

/***/ }),

/***/ 201:
/***/ ((module) => {

"use strict";
module.exports = require("@babel/runtime/helpers/createClass");

/***/ }),

/***/ 195:
/***/ ((module) => {

"use strict";
module.exports = require("@babel/runtime/helpers/defineProperty");

/***/ }),

/***/ 650:
/***/ ((module) => {

"use strict";
module.exports = require("@babel/runtime/regenerator");

/***/ }),

/***/ 75:
/***/ ((module) => {

"use strict";
module.exports = require("@toruslabs/eccrypto");

/***/ }),

/***/ 33:
/***/ ((module) => {

"use strict";
module.exports = require("@toruslabs/openlogin-jrpc");

/***/ }),

/***/ 470:
/***/ ((module) => {

"use strict";
module.exports = require("@toruslabs/openlogin-utils");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ALLOWED_INTERACTIONS": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.xQ),
/* harmony export */   "LOGIN_PROVIDER": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.hG),
/* harmony export */   "MFA_LEVELS": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.M_),
/* harmony export */   "OPENLOGIN_METHOD": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.NB),
/* harmony export */   "OPENLOGIN_NETWORK": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.dr),
/* harmony export */   "OpenLoginStore": () => (/* reexport safe */ _OpenLoginStore__WEBPACK_IMPORTED_MODULE_4__.Z),
/* harmony export */   "Provider": () => (/* reexport safe */ _Provider__WEBPACK_IMPORTED_MODULE_5__.Z),
/* harmony export */   "SUPPORTED_KEY_CURVES": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.x7),
/* harmony export */   "UX_MODE": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.$e),
/* harmony export */   "awaitReq": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.xP),
/* harmony export */   "constructURL": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.vE),
/* harmony export */   "default": () => (/* reexport safe */ _OpenLogin__WEBPACK_IMPORTED_MODULE_3__.Z),
/* harmony export */   "documentReady": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.A7),
/* harmony export */   "getHashQueryParams": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.Gv),
/* harmony export */   "getPopupFeatures": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.SL),
/* harmony export */   "htmlToElement": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.Bv),
/* harmony export */   "localStorageAvailable": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.Vu),
/* harmony export */   "loglevel": () => (/* reexport safe */ _loglevel__WEBPACK_IMPORTED_MODULE_2__.Z),
/* harmony export */   "modalDOMElementID": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.S_),
/* harmony export */   "preloadIframe": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.E0),
/* harmony export */   "sessionStorageAvailable": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.jK),
/* harmony export */   "storageAvailable": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.oZ),
/* harmony export */   "storeKey": () => (/* reexport safe */ _constants__WEBPACK_IMPORTED_MODULE_0__.VD),
/* harmony export */   "whitelistUrl": () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_6__.OF)
/* harmony export */ });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(18);
/* harmony import */ var _IStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(641);
/* harmony import */ var _IStore__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_IStore__WEBPACK_IMPORTED_MODULE_1__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _IStore__WEBPACK_IMPORTED_MODULE_1__) if(["default","loglevel","OpenLoginStore","Provider","ALLOWED_INTERACTIONS","LOGIN_PROVIDER","MFA_LEVELS","OPENLOGIN_METHOD","OPENLOGIN_NETWORK","SUPPORTED_KEY_CURVES","UX_MODE","modalDOMElementID","storeKey"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _IStore__WEBPACK_IMPORTED_MODULE_1__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _loglevel__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(124);
/* harmony import */ var _OpenLogin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(485);
/* harmony import */ var _OpenLoginStore__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(111);
/* harmony import */ var _Provider__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(776);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(337);









})();

module.exports = __webpack_exports__;
/******/ })()
;
//# sourceMappingURL=openlogin.cjs.js.map