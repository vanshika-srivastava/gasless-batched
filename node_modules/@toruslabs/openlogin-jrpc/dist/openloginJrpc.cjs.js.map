{"version":3,"file":"openloginJrpc.cjs.js","mappings":"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","sources":["webpack://@toruslabs/openlogin-jrpc/./src/basePostMessageStream.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@toruslabs/openlogin-utils\"","webpack://@toruslabs/openlogin-jrpc/./src/jrpc.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/slicedToArray\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"eth-rpc-errors\"","webpack://@toruslabs/openlogin-jrpc/./src/jrpcEngine.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"end-of-stream\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"once\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"pump\"","webpack://@toruslabs/openlogin-jrpc/./src/mux.ts","webpack://@toruslabs/openlogin-jrpc/./src/postMessageStream.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"events\"","webpack://@toruslabs/openlogin-jrpc/./src/safeEventEmitter.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/wrapNativeSuper\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"fast-safe-stringify\"","webpack://@toruslabs/openlogin-jrpc/./src/serializableError.ts","webpack://@toruslabs/openlogin-jrpc/./src/substream.ts","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/helpers/typeof\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@toruslabs/openlogin-jrpc/external commonjs2 \"readable-stream\"","webpack://@toruslabs/openlogin-jrpc/webpack/bootstrap","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/compat get default export","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/define property getters","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/openlogin-jrpc/webpack/runtime/make namespace object","webpack://@toruslabs/openlogin-jrpc/./src/index.ts"],"sourcesContent":["import { Duplex } from \"readable-stream\";\n\nfunction noop(): void {\n  return undefined;\n}\n\nconst SYN = \"SYN\";\nconst ACK = \"ACK\";\nconst BRK = \"BRK\";\n\nexport default class BasePostMessageStream extends Duplex {\n  _init: boolean;\n\n  _haveSyn: boolean;\n\n  _name: string;\n\n  _target: string;\n\n  _targetWindow: Window;\n\n  _targetOrigin: string;\n\n  _onMessage: any;\n\n  _synIntervalId: number;\n\n  constructor({\n    name,\n    target,\n    targetWindow = window,\n    targetOrigin = \"*\",\n  }: {\n    name: string;\n    target: string;\n    targetWindow?: Window;\n    targetOrigin?: string;\n  }) {\n    super({\n      objectMode: true,\n    });\n    if (!name || !target) {\n      throw new Error(\"Invalid input.\");\n    }\n    this._init = false;\n    this._haveSyn = false;\n    this._name = name;\n    this._target = target; // target origin\n    this._targetWindow = targetWindow;\n    this._targetOrigin = targetOrigin;\n    this._onMessage = this.onMessage.bind(this);\n    this._synIntervalId = null;\n\n    window.addEventListener(\"message\", this._onMessage, false);\n    this._handShake();\n  }\n\n  _break(): void {\n    this.cork();\n    this._write(BRK, null, noop);\n    this._haveSyn = false;\n    this._init = false;\n  }\n\n  _handShake(): void {\n    this._write(SYN, null, noop);\n    this.cork();\n  }\n\n  _onData(data: unknown): void {\n    if (!this._init) {\n      // listen for handshake\n      if (data === SYN) {\n        this._haveSyn = true;\n        this._write(ACK, null, noop);\n      } else if (data === ACK) {\n        this._init = true;\n        if (!this._haveSyn) {\n          this._write(ACK, null, noop);\n        }\n        this.uncork();\n      }\n    } else if (data === BRK) {\n      this._break();\n    } else {\n      // forward message\n      try {\n        this.push(data);\n      } catch (err) {\n        this.emit(\"error\", err);\n      }\n    }\n  }\n\n  _postMessage(data: unknown): void {\n    const originConstraint = this._targetOrigin;\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n\n  onMessage(event: MessageEvent): void {\n    const message = event.data;\n\n    // validate message\n    if (\n      (this._targetOrigin !== \"*\" && event.origin !== this._targetOrigin) ||\n      event.source !== this._targetWindow ||\n      typeof message !== \"object\" ||\n      message.target !== this._name ||\n      !message.data\n    ) {\n      return;\n    }\n\n    this._onData(message.data);\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(data: unknown, _, cb: () => void): void {\n    this._postMessage(data);\n    cb();\n  }\n\n  _destroy(): void {\n    window.removeEventListener(\"message\", this._onMessage, false);\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-utils\");","import { randomId } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\nexport type Json = boolean | number | string | null | { [property: string]: Json } | Json[];\n\nexport type JRPCVersion = \"2.0\";\nexport type JRPCId = number | string | void;\n\nexport type ConsoleLike = Pick<Console, \"log\" | \"warn\" | \"error\" | \"debug\" | \"info\" | \"trace\">;\nexport interface JRPCBase {\n  jsonrpc?: JRPCVersion;\n  id?: JRPCId;\n}\n\nexport interface JRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: any;\n}\n\nexport const getRpcPromiseCallback =\n  (resolve: (value?: any) => void, reject: (error?: Error) => void, unwrapResult = true) =>\n  (error: Error, response: JRPCResponse<unknown>): void => {\n    if (error || response.error) {\n      reject(error || response.error);\n    } else if (!unwrapResult || Array.isArray(response)) {\n      resolve(response);\n    } else {\n      resolve(response.result);\n    }\n  };\n\nexport interface JRPCRequest<T> extends JRPCBase {\n  method: string;\n  params?: T;\n}\n\nexport type JRPCEngineNextCallback = (cb?: (done: (error?: Error) => void) => void) => void;\nexport type JRPCEngineEndCallback = (error?: Error) => void;\nexport type JRPCEngineReturnHandler = (done: (error?: Error) => void) => void;\n\ninterface IdMapValue {\n  req: JRPCRequest<unknown>;\n  res: JRPCResponse<unknown>;\n  next: JRPCEngineNextCallback;\n  end: JRPCEngineEndCallback;\n}\n\ninterface IdMap {\n  [requestId: string]: IdMapValue;\n}\n\nexport type JRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: JRPCResponse<U>, next: JRPCEngineNextCallback, end: JRPCEngineEndCallback) => void;\n\nexport function createErrorMiddleware(log: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    try {\n      // json-rpc-engine will terminate the request when it notices this error\n      if (typeof req.method !== \"string\" || !req.method) {\n        res.error = new SerializableError({ code: -32603, message: \"invalid method\" });\n        end();\n        return;\n      }\n      next((done) => {\n        const { error } = res;\n        if (!error) {\n          return done();\n        }\n        log.error(`OpenLogin - RPC Error: ${error.message}`, error);\n        return done();\n      });\n    } catch (error) {\n      log.error(`OpenLogin - RPC Error thrown: ${error.message}`, error);\n      res.error = new SerializableError({ code: -32603, message: error.message });\n      end();\n    }\n  };\n}\n\nexport function createStreamMiddleware(): { events: SafeEventEmitter; middleware: JRPCMiddleware<unknown, unknown>; stream: Duplex } {\n  const idMap: IdMap = {};\n\n  function readNoop() {\n    return false;\n  }\n\n  const events = new SafeEventEmitter();\n\n  function processResponse(res: JRPCResponse<unknown>) {\n    const context = idMap[res.id as unknown as string];\n    if (!context) {\n      throw new Error(`StreamMiddleware - Unknown response id \"${res.id}\"`);\n    }\n\n    delete idMap[res.id as unknown as string];\n    // copy whole res onto original res\n    Object.assign(context.res, res);\n    // run callback on empty stack,\n    // prevent internal stream-handler from catching errors\n    setTimeout(context.end);\n  }\n\n  function processNotification(res: JRPCRequest<unknown>) {\n    events.emit(\"notification\", res);\n  }\n\n  function processMessage(res: JRPCResponse<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    let err;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res as unknown as JRPCRequest<unknown>);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      err = _err;\n    }\n    // continue processing stream\n    cb(err);\n  }\n\n  const stream = new Duplex({\n    objectMode: true,\n    read: readNoop,\n    write: processMessage,\n  });\n\n  const middleware: JRPCMiddleware<unknown, unknown> = (req, res, next, end) => {\n    // write req to stream\n    stream.push(req);\n    // register request on id map\n    idMap[req.id as unknown as string] = { req, res, next, end };\n  };\n\n  return { events, middleware, stream };\n}\n\ntype ScaffoldMiddlewareHandler<T, U> = JRPCMiddleware<T, U> | Json;\n\nexport function createScaffoldMiddleware(handlers: {\n  [methodName: string]: ScaffoldMiddlewareHandler<unknown, unknown>;\n}): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, end) => {\n    const handler = handlers[req.method];\n    // if no handler, return\n    if (handler === undefined) {\n      return next();\n    }\n    // if handler is fn, call as middleware\n    if (typeof handler === \"function\") {\n      return handler(req, res, next, end);\n    }\n    // if handler is some other value, use as result\n    res.result = handler;\n    return end();\n  };\n}\n\nexport function createIdRemapMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _end) => {\n    const originalId = req.id;\n    const newId = randomId();\n    req.id = newId;\n    res.id = newId;\n    next((done) => {\n      req.id = originalId;\n      res.id = originalId;\n      done();\n    });\n  };\n}\n\nexport function createLoggerMiddleware(logger: ConsoleLike): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next, _) => {\n    logger.debug(\"REQ\", req, \"RES\", res);\n    next();\n  };\n}\n\nexport type AsyncJRPCEngineNextCallback = () => Promise<void>;\n\ntype Maybe<T> = Partial<T> | null | undefined;\n\nexport interface JRPCSuccess<T> extends JRPCBase {\n  result: Maybe<T>;\n}\n\nexport interface JRPCError {\n  code: number;\n  message: string;\n  data?: unknown;\n  stack?: string;\n}\n\nexport interface PendingJRPCResponse<T> extends JRPCBase {\n  result?: T;\n  error?: Error | JRPCError;\n}\n\nexport interface JRPCFailure extends JRPCBase {\n  error: JRPCError;\n}\n\nexport type AsyncJRPCMiddleware<T, U> = (req: JRPCRequest<T>, res: PendingJRPCResponse<U>, next: AsyncJRPCEngineNextCallback) => Promise<void>;\n\ntype ReturnHandlerCallback = (error: null | Error) => void;\n\nexport function createAsyncMiddleware<T, U>(asyncMiddleware: AsyncJRPCMiddleware<T, U>): JRPCMiddleware<T, U> {\n  return async (req, res, next, end) => {\n    // nextPromise is the key to the implementation\n    // it is resolved by the return handler passed to the\n    // \"next\" function\n    let resolveNextPromise: () => void;\n    const nextPromise = new Promise<void>((resolve) => {\n      resolveNextPromise = resolve;\n    });\n\n    let returnHandlerCallback: unknown = null;\n    let nextWasCalled = false;\n\n    // This will be called by the consumer's async middleware.\n    const asyncNext = async () => {\n      nextWasCalled = true;\n\n      // We pass a return handler to next(). When it is called by the engine,\n      // the consumer's async middleware will resume executing.\n\n      next((runReturnHandlersCallback) => {\n        // This callback comes from JRPCEngine._runReturnHandlers\n        returnHandlerCallback = runReturnHandlersCallback;\n        resolveNextPromise();\n      });\n      await nextPromise;\n    };\n\n    try {\n      await asyncMiddleware(req, res, asyncNext);\n\n      if (nextWasCalled) {\n        await nextPromise; // we must wait until the return handler is called\n        (returnHandlerCallback as ReturnHandlerCallback)(null);\n      } else {\n        end(null);\n      }\n    } catch (error) {\n      if (returnHandlerCallback) {\n        (returnHandlerCallback as ReturnHandlerCallback)(error);\n      } else {\n        end(error);\n      }\n    }\n  };\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/slicedToArray\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"eth-rpc-errors\");","import { serializeError } from \"eth-rpc-errors\";\nimport { Duplex } from \"readable-stream\";\n\nimport { JRPCEngineEndCallback, JRPCEngineNextCallback, JRPCEngineReturnHandler, JRPCMiddleware, JRPCRequest, JRPCResponse } from \"./jrpc\";\nimport SafeEventEmitter from \"./safeEventEmitter\";\nimport SerializableError from \"./serializableError\";\n\n/**\n * A JSON-RPC request and response processor.\n * Give it a stack of middleware, pass it requests, and get back responses.\n */\nexport class JRPCEngine extends SafeEventEmitter {\n  private _middleware: JRPCMiddleware<unknown, unknown>[];\n\n  constructor() {\n    super();\n    this._middleware = [];\n  }\n\n  /**\n   * Serially executes the given stack of middleware.\n   *\n   * @returns An array of any error encountered during middleware execution,\n   * a boolean indicating whether the request was completed, and an array of\n   * middleware-defined return handlers.\n   */\n  private static async _runAllMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middlewareStack: JRPCMiddleware<unknown, unknown>[]\n  ): Promise<\n    [\n      unknown, // error\n      boolean, // isComplete\n      JRPCEngineReturnHandler[]\n    ]\n  > {\n    const returnHandlers: JRPCEngineReturnHandler[] = [];\n    let error = null;\n    let isComplete = false;\n\n    // Go down stack of middleware, call and collect optional returnHandlers\n    for (const middleware of middlewareStack) {\n      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);\n      if (isComplete) {\n        break;\n      }\n    }\n    return [error, isComplete, returnHandlers.reverse()];\n  }\n\n  /**\n   * Runs an individual middleware.\n   *\n   * @returns An array of any error encountered during middleware exection,\n   * and a boolean indicating whether the request should end.\n   */\n  private static _runMiddleware(\n    req: JRPCRequest<unknown>,\n    res: JRPCResponse<unknown>,\n    middleware: JRPCMiddleware<unknown, unknown>,\n    returnHandlers: JRPCEngineReturnHandler[]\n  ): Promise<[unknown, boolean]> {\n    return new Promise((resolve) => {\n      const end: JRPCEngineEndCallback = (err?: unknown) => {\n        const error = err || res.error;\n        if (error) {\n          res.error = serializeError(error);\n        }\n        // True indicates that the request should end\n        resolve([error, true]);\n      };\n\n      const next: JRPCEngineNextCallback = (returnHandler?: JRPCEngineReturnHandler) => {\n        if (res.error) {\n          end(res.error);\n        } else {\n          if (returnHandler) {\n            if (typeof returnHandler !== \"function\") {\n              end(new SerializableError({ code: -32603, message: \"JRPCEngine: 'next' return handlers must be functions\" }));\n            }\n            returnHandlers.push(returnHandler);\n          }\n\n          // False indicates that the request should not end\n          resolve([null, false]);\n        }\n      };\n\n      try {\n        middleware(req, res, next, end);\n      } catch (error) {\n        end(error);\n      }\n    });\n  }\n\n  /**\n   * Serially executes array of return handlers. The request and response are\n   * assumed to be in their scope.\n   */\n  private static async _runReturnHandlers(handlers: JRPCEngineReturnHandler[]): Promise<void> {\n    for (const handler of handlers) {\n      await new Promise<void>((resolve, reject) => {\n        handler((err) => (err ? reject(err) : resolve()));\n      });\n    }\n  }\n\n  /**\n   * Throws an error if the response has neither a result nor an error, or if\n   * the \"isComplete\" flag is falsy.\n   */\n  private static _checkForCompletion(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>, isComplete: boolean): void {\n    if (!(\"result\" in res) && !(\"error\" in res)) {\n      throw new SerializableError({ code: -32603, message: \"Response has no error or result for request\" });\n    }\n    if (!isComplete) {\n      throw new SerializableError({ code: -32603, message: \"Nothing ended request\" });\n    }\n  }\n\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push<T, U>(middleware: JRPCMiddleware<T, U>): void {\n    this._middleware.push(middleware as JRPCMiddleware<unknown, unknown>);\n  }\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @param callback - An error-first callback that will receive the response.\n   */\n  handle<T, U>(request: JRPCRequest<T>, callback: (error: unknown, response: JRPCResponse<U>) => void): void;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @param callback - An error-first callback that will receive the array of\n   * responses.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[], callback: (error: unknown, responses: JRPCResponse<U>[]) => void): void;\n\n  /**\n   * Handle a JSON-RPC request, and return a response.\n   *\n   * @param request - The request to handle.\n   * @returns A promise that resolves with the response, or rejects with an\n   * error.\n   */\n  handle<T, U>(request: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n\n  /**\n   * Handle an array of JSON-RPC requests, and return an array of responses.\n   *\n   * @param request - The requests to handle.\n   * @returns A promise that resolves with the array of responses, or rejects\n   * with an error.\n   */\n  handle<T, U>(requests: JRPCRequest<T>[]): Promise<JRPCResponse<U>[]>;\n\n  handle(req: unknown, cb?: any) {\n    if (cb && typeof cb !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n\n    if (Array.isArray(req)) {\n      if (cb) {\n        return this._handleBatch(req, cb);\n      }\n      return this._handleBatch(req);\n    }\n\n    if (cb) {\n      return this._handle(req as JRPCRequest<unknown>, cb);\n    }\n    return this._promiseHandle(req as JRPCRequest<unknown>);\n  }\n\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware(): JRPCMiddleware<unknown, unknown> {\n    return async (req, res, next, end) => {\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n        if (isComplete) {\n          await JRPCEngine._runReturnHandlers(returnHandlers);\n          return end(middlewareError as Error);\n        }\n\n        return next(async (handlerCallback) => {\n          try {\n            await JRPCEngine._runReturnHandlers(returnHandlers);\n          } catch (error) {\n            return handlerCallback(error);\n          }\n          return handlerCallback();\n        });\n      } catch (error) {\n        return end(error);\n      }\n    };\n  }\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[]): Promise<JRPCResponse<unknown>[]>;\n\n  /**\n   * Like _handle, but for batch requests.\n   */\n  private _handleBatch(reqs: JRPCRequest<unknown>[], cb: (error: unknown, responses?: JRPCResponse<unknown>[]) => void): Promise<void>;\n\n  private async _handleBatch(\n    reqs: JRPCRequest<unknown>[],\n    cb?: (error: unknown, responses?: JRPCResponse<unknown>[]) => void\n  ): Promise<JRPCResponse<unknown>[] | void> {\n    // The order here is important\n    try {\n      // 2. Wait for all requests to finish, or throw on some kind of fatal\n      // error\n      const responses = await Promise.all(\n        // 1. Begin executing each request in the order received\n        reqs.map(this._promiseHandle.bind(this))\n      );\n\n      // 3. Return batch response\n      if (cb) {\n        return cb(null, responses);\n      }\n      return responses;\n    } catch (error) {\n      if (cb) {\n        return cb(error);\n      }\n\n      throw error;\n    }\n  }\n\n  /**\n   * A promise-wrapped _handle.\n   */\n  private _promiseHandle(req: JRPCRequest<unknown>): Promise<JRPCResponse<unknown>> {\n    return new Promise((resolve) => {\n      this._handle(req, (_err, res) => {\n        // There will always be a response, and it will always have any error\n        // that is caught and propagated.\n        resolve(res);\n      });\n    });\n  }\n\n  /**\n   * Ensures that the request object is valid, processes it, and passes any\n   * error and the response object to the given callback.\n   *\n   * Does not reject.\n   */\n  private async _handle(callerReq: JRPCRequest<unknown>, cb: (error: unknown, response: JRPCResponse<unknown>) => void): Promise<void> {\n    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n      const error = new SerializableError({ code: -32603, message: \"request must be plain object\" });\n      return cb(error, { id: undefined, jsonrpc: \"2.0\", error });\n    }\n\n    if (typeof callerReq.method !== \"string\") {\n      const error = new SerializableError({ code: -32603, message: \"method must be string\" });\n      return cb(error, { id: callerReq.id, jsonrpc: \"2.0\", error });\n    }\n\n    const req: JRPCRequest<unknown> = { ...callerReq };\n    const res: JRPCResponse<unknown> = {\n      id: req.id,\n      jsonrpc: req.jsonrpc,\n    };\n    let error: Error = null;\n\n    try {\n      await this._processRequest(req, res);\n    } catch (_error) {\n      // A request handler error, a re-thrown middleware error, or something\n      // unexpected.\n      error = _error;\n    }\n\n    if (error) {\n      // Ensure no result is present on an errored response\n      delete res.result;\n      if (!res.error) {\n        res.error = serializeError(error);\n      }\n    }\n\n    return cb(error, res as JRPCResponse<unknown>);\n  }\n\n  /**\n   * For the given request and response, runs all middleware and their return\n   * handlers, if any, and ensures that internal request processing semantics\n   * are satisfied.\n   */\n  private async _processRequest(req: JRPCRequest<unknown>, res: JRPCResponse<unknown>): Promise<void> {\n    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);\n\n    // Throw if \"end\" was not called, or if the response has neither a result\n    // nor an error.\n    JRPCEngine._checkForCompletion(req, res, isComplete);\n\n    // The return handlers should run even if an error was encountered during\n    // middleware processing.\n    await JRPCEngine._runReturnHandlers(returnHandlers);\n\n    // Now we re-throw the middleware processing error, if any, to catch it\n    // further up the call chain.\n    if (error) {\n      throw error;\n    }\n  }\n}\n\nexport function mergeMiddleware(middlewareStack: JRPCMiddleware<unknown, unknown>[]): JRPCMiddleware<unknown, unknown> {\n  const engine = new JRPCEngine();\n  middlewareStack.forEach((middleware) => engine.push(middleware));\n  return engine.asMiddleware();\n}\n\nexport interface EngineStreamOptions {\n  engine: JRPCEngine;\n}\n\nexport function createEngineStream(opts: EngineStreamOptions): Duplex {\n  if (!opts || !opts.engine) {\n    throw new Error(\"Missing engine parameter!\");\n  }\n\n  const { engine } = opts;\n  // eslint-disable-next-line prefer-const\n  let stream: Duplex;\n\n  function read() {\n    return undefined;\n  }\n\n  function write(req: JRPCRequest<unknown>, _encoding: unknown, cb: (error?: Error | null) => void) {\n    engine.handle(req, (_err, res) => {\n      stream.push(res);\n    });\n    cb();\n  }\n\n  stream = new Duplex({ objectMode: true, read, write });\n\n  // forward notifications\n  if (engine.on) {\n    engine.on(\"notification\", (message) => {\n      stream.push(message);\n    });\n  }\n  return stream;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"end-of-stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"once\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pump\");","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport eos from \"end-of-stream\";\nimport once from \"once\";\nimport pump from \"pump\";\nimport { Duplex } from \"readable-stream\";\nimport type { Readable, Writable } from \"stream\";\n\nimport Substream from \"./substream\";\n\nexport const IGNORE_SUBSTREAM = Symbol(\"IGNORE_SUBSTREAM\");\n\nexport type Stream = Readable | Writable;\n\ninterface Chunk {\n  name: string;\n  data: unknown;\n}\n\nexport class ObjectMultiplex extends Duplex {\n  public _substreams: Record<string, Substream | typeof IGNORE_SUBSTREAM>;\n\n  getStream: (name: string) => Substream | symbol;\n\n  constructor(opts: Record<string, unknown> = {}) {\n    super({\n      ...opts,\n      objectMode: true,\n    });\n    this._substreams = {};\n  }\n\n  createStream(name: string): Substream {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n\n    // create substream\n    const substream = new Substream({ parent: this, name });\n    this._substreams[name] = substream;\n\n    // listen for parent stream to end\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    anyStreamEnd(this, (_error?: Error | null) => substream.destroy(_error || undefined));\n\n    return substream;\n  }\n\n  // ignore streams (dont display orphaned data warning)\n  ignoreStream(name: string): void {\n    // validate name\n    if (!name) {\n      throw new Error(\"ObjectMultiplex - name must not be empty\");\n    }\n    if (this._substreams[name]) {\n      throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n    }\n    // set\n    this._substreams[name] = IGNORE_SUBSTREAM;\n  }\n\n  _read(): void {\n    return undefined;\n  }\n\n  _write(chunk: Chunk, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    const { name, data } = chunk;\n\n    if (!name) {\n      window.console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n      return callback();\n    }\n\n    // get corresponding substream\n    const substream = this._substreams[name];\n    if (!substream) {\n      window.console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n      return callback();\n    }\n\n    // push data into substream\n    if (substream !== IGNORE_SUBSTREAM) {\n      substream.push(data);\n    }\n\n    return callback();\n  }\n}\n\n// util\nfunction anyStreamEnd(stream: ObjectMultiplex, _cb: (error?: Error | null) => void) {\n  const cb = once(_cb);\n  eos(stream as unknown as Stream, { readable: false }, cb);\n  eos(stream as unknown as Stream, { writable: false }, cb);\n}\n\nexport function setupMultiplex(stream: Duplex): ObjectMultiplex {\n  const mux = new ObjectMultiplex();\n  mux.getStream = function streamHelper(name: string) {\n    if (this._substreams[name]) {\n      return this._substreams[name];\n    }\n    return this.createStream(name);\n  };\n\n  pump(stream as unknown as Stream, mux as unknown as Stream, stream as unknown as Stream, (err) => {\n    if (err) window.console.error(err);\n  });\n  return mux;\n}\n","import BasePostMessageStream from \"./basePostMessageStream\";\n\nexport default class PostMessageStream extends BasePostMessageStream {\n  _postMessage(data: unknown): void {\n    let originConstraint = this._targetOrigin;\n    if (typeof data === \"object\") {\n      const dataObj = data as Record<string, unknown>;\n      if (typeof dataObj.data === \"object\") {\n        const dataObjData = dataObj.data as Record<string, unknown>;\n        if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {\n          const dataObjDataParam = dataObjData.params[0] as Record<string, unknown>;\n          if (dataObjDataParam._origin) {\n            originConstraint = dataObjDataParam._origin as string;\n          }\n\n          // add a constraint for the response\n          dataObjDataParam._origin = window.location.origin;\n        }\n      }\n    }\n\n    this._targetWindow.postMessage(\n      {\n        target: this._target,\n        data,\n      },\n      originConstraint\n    );\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"events\");","import { EventEmitter } from \"events\";\n\ntype Handler = (...args: any[]) => void;\ninterface EventMap {\n  [k: string]: Handler | Handler[] | undefined;\n}\n\nfunction safeApply<T, A extends any[]>(handler: (this: T, ...handlerArgs: A) => void, context: T, args: A): void {\n  try {\n    Reflect.apply(handler, context, args);\n  } catch (err) {\n    // Throw error after timeout so as not to interrupt the stack\n    setTimeout(() => {\n      throw err;\n    });\n  }\n}\n\nfunction arrayClone<T>(arr: T[]): T[] {\n  const n = arr.length;\n  const copy = new Array(n);\n  for (let i = 0; i < n; i += 1) {\n    copy[i] = arr[i];\n  }\n  return copy;\n}\n\nexport default class SafeEventEmitter extends EventEmitter {\n  emit(type: string, ...args: any[]): boolean {\n    let doError = type === \"error\";\n\n    const events: EventMap = (this as any)._events;\n    if (events !== undefined) {\n      doError = doError && events.error === undefined;\n    } else if (!doError) {\n      return false;\n    }\n\n    // If there is no 'error' event listener then throw.\n    if (doError) {\n      let er;\n      if (args.length > 0) {\n        [er] = args;\n      }\n      if (er instanceof Error) {\n        // Note: The comments on the `throw` lines are intentional, they show\n        // up in Node's output if this results in an unhandled exception.\n        throw er; // Unhandled 'error' event\n      }\n      // At least give some kind of context to the user\n      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : \"\"}`);\n      (err as any).context = er;\n      throw err; // Unhandled 'error' event\n    }\n\n    const handler = events[type];\n\n    if (handler === undefined) {\n      return false;\n    }\n\n    if (typeof handler === \"function\") {\n      safeApply(handler, this, args);\n    } else {\n      const len = handler.length;\n      const listeners = arrayClone(handler);\n      for (let i = 0; i < len; i += 1) {\n        safeApply(listeners[i], this, args);\n      }\n    }\n\n    return true;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/wrapNativeSuper\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-safe-stringify\");","import stringify from \"fast-safe-stringify\";\n\nexport default class SerializableError<T> extends Error {\n  public code: number;\n\n  public data: T;\n\n  constructor({ code, message, data }: { code: number; message: string; data?: T }) {\n    if (!Number.isInteger(code)) {\n      throw new Error(\"code must be an integer\");\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error(\"message must be string\");\n    }\n\n    super(message);\n    this.code = code;\n    if (data !== undefined) {\n      this.data = data;\n    }\n  }\n\n  toString(): string {\n    return stringify({\n      code: this.code,\n      message: this.message,\n      data: this.data,\n      stack: this.stack,\n    });\n  }\n}\n","import { BufferEncoding } from \"@toruslabs/openlogin-utils\";\nimport { Duplex } from \"readable-stream\";\n\nexport default class Substream extends Duplex {\n  private readonly _parent: any;\n\n  private readonly _name: string;\n\n  constructor({ parent, name }: { parent: any; name: string }) {\n    super({ objectMode: true });\n    this._parent = parent;\n    this._name = name;\n  }\n\n  /**\n   * Explicitly sets read operations to a no-op.\n   */\n  _read(): void {\n    return undefined;\n  }\n\n  /**\n   * Called when data should be written to this writable stream.\n   *\n   * @param chunk - Arbitrary object to write\n   * @param encoding - Encoding to use when writing payload\n   * @param callback - Called when writing is complete or an error occurs\n   */\n  _write(chunk: unknown, _encoding: BufferEncoding, callback: (error?: Error | null) => void): void {\n    this._parent.push({\n      name: this._name,\n      data: chunk,\n    });\n    callback();\n  }\n}\n","module.exports = require(\"@babel/runtime/helpers/assertThisInitialized\");","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/getPrototypeOf\");","module.exports = require(\"@babel/runtime/helpers/inherits\");","module.exports = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"readable-stream\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export { default as BasePostMessageStream } from \"./basePostMessageStream\";\nexport * from \"./jrpc\";\nexport * from \"./jrpcEngine\";\nexport * from \"./mux\";\nexport { default as PostMessageStream } from \"./postMessageStream\";\nexport { default as SafeEventEmitter } from \"./safeEventEmitter\";\nexport { default as SerializableError } from \"./serializableError\";\nexport { default as Substream } from \"./substream\";\nexport * from \"./utils\";\n"],"names":["Duplex","noop","undefined","SYN","ACK","BRK","BasePostMessageStream","name","target","targetWindow","window","targetOrigin","objectMode","Error","_init","_haveSyn","_name","_target","_targetWindow","_targetOrigin","_onMessage","onMessage","bind","_synIntervalId","addEventListener","_handShake","cork","_write","data","uncork","_break","push","err","emit","originConstraint","postMessage","event","message","origin","source","_onData","_","cb","_postMessage","removeEventListener","randomId","SafeEventEmitter","SerializableError","getRpcPromiseCallback","resolve","reject","unwrapResult","error","response","Array","isArray","result","createErrorMiddleware","log","req","res","next","end","method","code","done","createStreamMiddleware","idMap","readNoop","events","processResponse","context","id","Object","assign","setTimeout","processNotification","processMessage","_encoding","isNotification","_err","stream","read","write","middleware","createScaffoldMiddleware","handlers","handler","createIdRemapMiddleware","_end","originalId","newId","createLoggerMiddleware","logger","debug","createAsyncMiddleware","asyncMiddleware","nextPromise","Promise","resolveNextPromise","returnHandlerCallback","nextWasCalled","asyncNext","runReturnHandlersCallback","serializeError","JRPCEngine","_middleware","_handleBatch","_handle","_promiseHandle","_runAllMiddleware","middlewareError","isComplete","returnHandlers","_runReturnHandlers","handlerCallback","reqs","all","map","responses","callerReq","jsonrpc","_processRequest","_checkForCompletion","middlewareStack","_runMiddleware","reverse","returnHandler","mergeMiddleware","engine","forEach","asMiddleware","createEngineStream","opts","handle","on","eos","once","pump","Substream","IGNORE_SUBSTREAM","Symbol","ObjectMultiplex","_substreams","substream","parent","anyStreamEnd","_error","destroy","chunk","callback","console","warn","_cb","readable","writable","setupMultiplex","mux","getStream","streamHelper","createStream","PostMessageStream","dataObj","dataObjData","params","length","dataObjDataParam","_origin","location","EventEmitter","safeApply","args","Reflect","apply","arrayClone","arr","n","copy","i","type","doError","_events","er","len","listeners","stringify","Number","isInteger","stack","_parent","default"],"sourceRoot":""}