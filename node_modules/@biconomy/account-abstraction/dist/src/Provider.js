"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.newProvider = void 0;
// import { EntryPointFactoryContractV100 } from '@biconomy/ethers-lib'
// import { EntryPoint } from '@account-abstraction/contracts'
const contracts_1 = require("@account-abstraction/contracts");
const SmartAccountAPI_1 = require("./SmartAccountAPI");
const ERC4337EthersProvider_1 = require("./ERC4337EthersProvider");
const HttpRpcClient_1 = require("./HttpRpcClient");
// To be used in SmartAccount to init 4337 provider
async function newProvider(originalProvider, config, originalSigner = originalProvider.getSigner(), walletAddress, implementationAddress, fallbackHandlerAddress, factoryAddress) {
    const entryPoint = contracts_1.EntryPoint__factory.connect(config.entryPointAddress, originalProvider);
    // Initial SimpleWallet instance is not deployed and exists just for the interface
    // const simpleWalletDeployer = await DeterministicDeployer.deploy(SimpleAccountDeployer__factory.bytecode)
    const smartWalletAPI = new SmartAccountAPI_1.SmartAccountAPI(originalProvider, entryPoint, config, walletAddress, implementationAddress, originalSigner, fallbackHandlerAddress, factoryAddress, 0);
    const httpRpcClient = new HttpRpcClient_1.HttpRpcClient(config.bundlerUrl, config.entryPointAddress, config.chainId, config.dappAPIKey);
    const ethProvider = await new ERC4337EthersProvider_1.ERC4337EthersProvider(config, originalSigner, originalProvider, httpRpcClient, entryPoint, smartWalletAPI).init();
    return ethProvider;
}
exports.newProvider = newProvider;
//# sourceMappingURL=Provider.js.map