{"version":3,"file":"metamaskAdapter.cjs.js","mappings":"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","sources":["webpack://@web3auth/metamask-adapter/webpack/bootstrap","webpack://@web3auth/metamask-adapter/webpack/runtime/compat get default export","webpack://@web3auth/metamask-adapter/webpack/runtime/define property getters","webpack://@web3auth/metamask-adapter/webpack/runtime/hasOwnProperty shorthand","webpack://@web3auth/metamask-adapter/webpack/runtime/make namespace object","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/asyncToGenerator\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/classCallCheck\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/createClass\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/assertThisInitialized\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/get\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/inherits\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/possibleConstructorReturn\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/getPrototypeOf\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@babel/runtime/regenerator\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@metamask/detect-provider\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@web3auth/base\"","webpack://@web3auth/metamask-adapter/external commonjs2 \"@web3auth/base-evm-adapter\"","webpack://@web3auth/metamask-adapter/./src/metamaskAdapter.ts","webpack://@web3auth/metamask-adapter/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/asyncToGenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/classCallCheck\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/createClass\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/assertThisInitialized\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/get\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/inherits\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/possibleConstructorReturn\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/getPrototypeOf\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/regenerator\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@metamask/detect-provider\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@web3auth/base-evm-adapter\");","import detectEthereumProvider from \"@metamask/detect-provider\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\n\ninterface EthereumProvider extends SafeEventEmitterProvider {\n  isMetaMask?: boolean;\n  isConnected: () => boolean;\n  chainId: string;\n}\nexport interface MetamaskAdapterOptions {\n  chainConfig?: CustomChainConfig;\n  sessionTime?: number;\n  clientId?: string;\n}\n\nclass MetamaskAdapter extends BaseEvmAdapter<void> {\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly name: string = WALLET_ADAPTERS.METAMASK;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  private rehydrated = false;\n\n  private metamaskProvider: EthereumProvider | null = null;\n\n  constructor(adapterOptions: MetamaskAdapterOptions) {\n    super(adapterOptions);\n    this.chainConfig = adapterOptions?.chainConfig || null;\n    this.sessionTime = adapterOptions?.sessionTime || 86400;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    if (this.status === ADAPTER_STATUS.CONNECTED && this.metamaskProvider) {\n      return this.metamaskProvider as SafeEventEmitterProvider;\n    }\n    return null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions): Promise<void> {\n    super.checkInitializationRequirements();\n    this.metamaskProvider = (await detectEthereumProvider({ mustBeMetaMask: true })) as EthereumProvider;\n    if (!this.metamaskProvider) throw WalletInitializationError.notInstalled(\"Metamask extension is not installed\");\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.METAMASK);\n    try {\n      log.debug(\"initializing metamask adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n    }\n  }\n\n  setAdapterSettings(options: { sessionTime?: number; clientId?: string }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    // set default to mainnet\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n\n    this.status = ADAPTER_STATUS.CONNECTING;\n    this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.METAMASK });\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not able to connect with metamask\");\n    try {\n      await this.metamaskProvider.request({ method: \"eth_requestAccounts\" });\n      const { chainId } = this.metamaskProvider;\n      if (chainId !== (this.chainConfig as CustomChainConfig).chainId) {\n        await this.switchChain(this.chainConfig as CustomChainConfig);\n      }\n      this.status = ADAPTER_STATUS.CONNECTED;\n      if (!this.provider) throw WalletLoginError.notConnectedError(\"Failed to connect with provider\");\n      this.provider.once(\"disconnect\", () => {\n        // ready to be connected again\n        this.disconnect();\n      });\n      this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.METAMASK, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n      return this.provider;\n    } catch (error) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw WalletLoginError.connectionError(\"Failed to login with metamask wallet\");\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnect();\n    this.provider?.removeAllListeners();\n    if (options.cleanup) {\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.metamaskProvider = null;\n    } else {\n      // ready to be connected again\n      this.status = ADAPTER_STATUS.READY;\n    }\n\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async switchChain(chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.metamaskProvider) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    try {\n      await this.metamaskProvider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{ chainId: chainConfig.chainId }],\n      });\n    } catch (switchError: unknown) {\n      // This error code indicates that the chain has not been added to MetaMask.\n      if ((switchError as { code: number }).code === 4902) {\n        await this.metamaskProvider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [{ chainId: chainConfig.chainId, chainName: chainConfig.displayName, rpcUrls: [chainConfig.rpcTarget] }],\n        });\n      } else {\n        throw switchError;\n      }\n    }\n  }\n}\n\nexport { MetamaskAdapter };\n","export * from \"./metamaskAdapter\";\n"],"names":["detectEthereumProvider","ADAPTER_CATEGORY","ADAPTER_EVENTS","ADAPTER_NAMESPACES","ADAPTER_STATUS","CHAIN_NAMESPACES","getChainConfig","log","WALLET_ADAPTERS","WalletInitializationError","WalletLoginError","BaseEvmAdapter","MetamaskAdapter","adapterOptions","EIP155","EXTERNAL","METAMASK","NOT_READY","chainConfig","sessionTime","status","CONNECTED","metamaskProvider","_","Error","options","mustBeMetaMask","notInstalled","READY","emit","debug","autoConnect","rehydrated","connect","ERRORED","clientId","CONNECTING","adapter","notConnectedError","request","method","chainId","switchChain","provider","once","disconnect","reconnected","connectionError","cleanup","removeAllListeners","DISCONNECTED","params","code","chainName","displayName","rpcUrls","rpcTarget"],"sourceRoot":""}