/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  "ADAPTER_CATEGORY": () => (/* reexport */ ADAPTER_CATEGORY),
  "ADAPTER_EVENTS": () => (/* reexport */ ADAPTER_EVENTS),
  "ADAPTER_NAMESPACES": () => (/* reexport */ ADAPTER_NAMESPACES),
  "ADAPTER_STATUS": () => (/* reexport */ ADAPTER_STATUS),
  "BaseAdapter": () => (/* reexport */ BaseAdapter),
  "BaseNetworkSwitch": () => (/* reexport */ BaseNetworkSwitch),
  "CHAIN_NAMESPACES": () => (/* reexport */ CHAIN_NAMESPACES),
  "EVM_ADAPTERS": () => (/* reexport */ EVM_ADAPTERS),
  "MULTI_CHAIN_ADAPTERS": () => (/* reexport */ MULTI_CHAIN_ADAPTERS),
  "PROVIDER_EVENTS": () => (/* reexport */ PROVIDER_EVENTS),
  "SOLANA_ADAPTERS": () => (/* reexport */ SOLANA_ADAPTERS),
  "WALLET_ADAPTERS": () => (/* reexport */ WALLET_ADAPTERS),
  "WalletInitializationError": () => (/* reexport */ WalletInitializationError),
  "WalletLoginError": () => (/* reexport */ WalletLoginError),
  "Web3AuthError": () => (/* reexport */ Web3AuthError),
  "authServer": () => (/* reexport */ authServer),
  "checkIfTokenIsExpired": () => (/* reexport */ checkIfTokenIsExpired),
  "clearToken": () => (/* reexport */ clearToken),
  "getChainConfig": () => (/* reexport */ getChainConfig),
  "getEvmChainConfig": () => (/* reexport */ getEvmChainConfig),
  "getSavedToken": () => (/* reexport */ getSavedToken),
  "getSolanaChainConfig": () => (/* reexport */ getSolanaChainConfig),
  "isHexStrict": () => (/* reexport */ isHexStrict),
  "log": () => (/* reexport */ loglevel),
  "saveToken": () => (/* reexport */ saveToken),
  "signChallenge": () => (/* reexport */ signChallenge),
  "storageAvailable": () => (/* reexport */ storageAvailable),
  "verifySignedChallenge": () => (/* reexport */ verifySignedChallenge)
});

;// CONCATENATED MODULE: external "@babel/runtime/helpers/classCallCheck"
const classCallCheck_namespaceObject = require("@babel/runtime/helpers/classCallCheck");
var classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/createClass"
const createClass_namespaceObject = require("@babel/runtime/helpers/createClass");
var createClass_default = /*#__PURE__*/__webpack_require__.n(createClass_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/assertThisInitialized"
const assertThisInitialized_namespaceObject = require("@babel/runtime/helpers/assertThisInitialized");
var assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/inherits"
const inherits_namespaceObject = require("@babel/runtime/helpers/inherits");
var inherits_default = /*#__PURE__*/__webpack_require__.n(inherits_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/possibleConstructorReturn"
const possibleConstructorReturn_namespaceObject = require("@babel/runtime/helpers/possibleConstructorReturn");
var possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/getPrototypeOf"
const getPrototypeOf_namespaceObject = require("@babel/runtime/helpers/getPrototypeOf");
var getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/defineProperty"
const defineProperty_namespaceObject = require("@babel/runtime/helpers/defineProperty");
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_namespaceObject);
;// CONCATENATED MODULE: external "@toruslabs/openlogin-jrpc"
const openlogin_jrpc_namespaceObject = require("@toruslabs/openlogin-jrpc");
;// CONCATENATED MODULE: ./src/chain/IChainInterface.ts
var CHAIN_NAMESPACES = {
  EIP155: "eip155",
  SOLANA: "solana",
  OTHER: "other"
};
// eip155 for all evm chains

var ADAPTER_NAMESPACES = {
  EIP155: "eip155",
  SOLANA: "solana",
  MULTICHAIN: "multichain"
};
// eip155 for all evm chains
;// CONCATENATED MODULE: ./src/chain/config.ts

var getDefaultNetworkId = function getDefaultNetworkId(chainNamespace) {
  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {
    return 1;
  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {
    return 1;
  }
  throw new Error("Chain namespace ".concat(chainNamespace, " is not supported"));
};
var getEvmChainConfig = function getEvmChainConfig(chainId) {
  var chainNamespace = CHAIN_NAMESPACES.EIP155;
  if (chainId === 1) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x1",
      rpcTarget: "https://rpc.ankr.com/eth",
      displayName: "Ethereum Mainnet",
      blockExplorer: "https://etherscan.io/",
      ticker: "ETH",
      tickerName: "Ethereum"
    };
  }
  if (chainId === 3) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x3",
      rpcTarget: "https://rpc.ankr.com/eth_ropsten",
      displayName: "Ropsten Testnet",
      blockExplorer: "https://ropsten.etherscan.io/",
      ticker: "ETH",
      tickerName: "Ethereum"
    };
  }
  if (chainId === 4) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x4",
      rpcTarget: "https://rpc.ankr.com/eth_rinkeby",
      displayName: "Rinkeby Testnet",
      blockExplorer: "https://rinkeby.etherscan.io/",
      ticker: "ETH",
      tickerName: "Ethereum"
    };
  }
  if (chainId === 5) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x5",
      rpcTarget: "https://rpc.ankr.com/eth_goerli",
      displayName: "Goerli Testnet",
      blockExplorer: "https://goerli.etherscan.io/",
      ticker: "ETH",
      tickerName: "Ethereum"
    };
  }
  if (chainId === 137) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x89",
      rpcTarget: "https://rpc.ankr.com/polygon",
      displayName: "Polygon Mainnet",
      blockExplorer: "https://polygonscan.com",
      ticker: "MATIC",
      tickerName: "Polygon"
    };
  }
  if (chainId === 80001) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x13881",
      rpcTarget: "https://rpc.ankr.com/polygon_mumbai",
      displayName: "Polygon Mumbai Testnet",
      blockExplorer: "https://mumbai.polygonscan.com/",
      ticker: "MATIC",
      tickerName: "Polygon"
    };
  }
  if (chainId === 56) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x38",
      rpcTarget: "https://rpc.ankr.com/bsc",
      displayName: "Binance SmartChain Mainnet",
      blockExplorer: "https://bscscan.com",
      ticker: "BNB",
      tickerName: "Binance SmartChain"
    };
  }
  if (chainId === 97) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x61",
      rpcTarget: "https://rpc.ankr.com/bsc_testnet_chapel",
      displayName: "Binance SmartChain Testnet",
      blockExplorer: "https://testnet.bscscan.com",
      ticker: "BNB",
      tickerName: "Binance SmartChain"
    };
  }
  if (chainId === 25) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x19",
      rpcTarget: "https://rpc.cronos.org",
      displayName: "Cronos Mainnet",
      blockExplorer: "https://cronoscan.com/",
      ticker: "CRO",
      tickerName: "Cronos"
    };
  }
  if (chainId === 338) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x152",
      rpcTarget: "https://rpc-t3.cronos.org/",
      displayName: "Cronos Testnet",
      blockExplorer: "https://cronoscan.com/",
      ticker: "CRO",
      tickerName: "Cronos"
    };
  }
  if (chainId === 8217) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x2019",
      rpcTarget: "https://public-node-api.klaytnapi.com/v1/cypress",
      displayName: "Klaytn Mainnet",
      blockExplorer: "https://scope.klaytn.com",
      ticker: "KLAY",
      tickerName: "Klaytn"
    };
  }
  return null;
};
var getSolanaChainConfig = function getSolanaChainConfig(chainId) {
  var chainNamespace = CHAIN_NAMESPACES.SOLANA;
  if (chainId === 1) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x1",
      rpcTarget: "https://rpc.ankr.com/solana",
      displayName: "Solana Mainnet",
      blockExplorer: "https://explorer.solana.com",
      ticker: "SOL",
      tickerName: "Solana"
    };
  } else if (chainId === 2) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x2",
      rpcTarget: "https://api.testnet.solana.com",
      displayName: "Solana Testnet",
      blockExplorer: "https://explorer.solana.com?cluster=testnet",
      ticker: "SOL",
      tickerName: "Solana"
    };
  } else if (chainId === 3) {
    return {
      chainNamespace: chainNamespace,
      chainId: "0x3",
      rpcTarget: "https://api.devnet.solana.com",
      displayName: "Solana Devnet",
      blockExplorer: "https://explorer.solana.com?cluster=devnet",
      ticker: "SOL",
      tickerName: "Solana"
    };
  }
  return null;
};
var getChainConfig = function getChainConfig(chainNamespace, chainId) {
  if (chainNamespace === CHAIN_NAMESPACES.OTHER) return null;
  var finalChainId = chainId ? typeof chainId === "number" ? chainId : parseInt(chainId, 16) : getDefaultNetworkId(chainNamespace);
  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {
    return getEvmChainConfig(finalChainId);
  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {
    return getSolanaChainConfig(finalChainId);
  }
  return null;
};
;// CONCATENATED MODULE: external "ts-custom-error"
const external_ts_custom_error_namespaceObject = require("ts-custom-error");
;// CONCATENATED MODULE: ./src/errors/index.ts







function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }


// @flow

var Web3AuthError = /*#__PURE__*/function (_CustomError) {
  inherits_default()(Web3AuthError, _CustomError);
  var _super = _createSuper(Web3AuthError);
  function Web3AuthError(code, message) {
    var _this;
    classCallCheck_default()(this, Web3AuthError);
    // takes care of stack and proto
    _this = _super.call(this, message);
    defineProperty_default()(assertThisInitialized_default()(_this), "code", void 0);
    defineProperty_default()(assertThisInitialized_default()(_this), "message", void 0);
    _this.code = code;
    _this.message = message || "";
    // Set name explicitly as minification can mangle class names
    Object.defineProperty(assertThisInitialized_default()(_this), "name", {
      value: "Web3AuthError"
    });
    return _this;
  }
  createClass_default()(Web3AuthError, [{
    key: "toJSON",
    value: function toJSON() {
      return {
        name: this.name,
        code: this.code,
        message: this.message
      };
    }
  }, {
    key: "toString",
    value: function toString() {
      return JSON.stringify(this.toJSON());
    }
  }]);
  return Web3AuthError;
}(external_ts_custom_error_namespaceObject.CustomError);
var WalletInitializationError = /*#__PURE__*/function (_Web3AuthError) {
  inherits_default()(WalletInitializationError, _Web3AuthError);
  var _super2 = _createSuper(WalletInitializationError);
  function WalletInitializationError(code, message) {
    var _this2;
    classCallCheck_default()(this, WalletInitializationError);
    // takes care of stack and proto
    _this2 = _super2.call(this, code, message);

    // Set name explicitly as minification can mangle class names
    Object.defineProperty(assertThisInitialized_default()(_this2), "name", {
      value: "WalletInitializationError"
    });
    return _this2;
  }
  createClass_default()(WalletInitializationError, null, [{
    key: "fromCode",
    value: function fromCode(code) {
      var extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
      return new WalletInitializationError(code, "".concat(WalletInitializationError.messages[code], ", ").concat(extraMessage));
    }

    // Custom methods
  }, {
    key: "notFound",
    value: function notFound() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5001, extraMessage);
    }
  }, {
    key: "notInstalled",
    value: function notInstalled() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5002, extraMessage);
    }
  }, {
    key: "notReady",
    value: function notReady() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5003, extraMessage);
    }
  }, {
    key: "windowBlocked",
    value: function windowBlocked() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5004, extraMessage);
    }
  }, {
    key: "windowClosed",
    value: function windowClosed() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5005, extraMessage);
    }
  }, {
    key: "incompatibleChainNameSpace",
    value: function incompatibleChainNameSpace() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5006, extraMessage);
    }
  }, {
    key: "duplicateAdapterError",
    value: function duplicateAdapterError() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5007, extraMessage);
    }
  }, {
    key: "invalidProviderConfigError",
    value: function invalidProviderConfigError() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5008, extraMessage);
    }
  }, {
    key: "providerNotReadyError",
    value: function providerNotReadyError() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5009, extraMessage);
    }
  }, {
    key: "rpcConnectionError",
    value: function rpcConnectionError() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5010, extraMessage);
    }
  }, {
    key: "invalidParams",
    value: function invalidParams() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5011, extraMessage);
    }
  }, {
    key: "invalidNetwork",
    value: function invalidNetwork() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletInitializationError.fromCode(5013, extraMessage);
    }
  }]);
  return WalletInitializationError;
}(Web3AuthError);

/**
 * wallet login errors
 */
defineProperty_default()(WalletInitializationError, "messages", {
  5000: "Custom",
  5001: "Wallet is not found",
  5002: "Wallet is not installed",
  5003: "Wallet is not ready yet",
  5004: "Wallet window is blocked",
  5005: "Wallet window has been closed by the user",
  5006: "Incompatible chain namespace provided",
  5007: "Adapter has already been included",
  5008: "Invalid provider Config",
  5009: "Provider is not ready yet",
  5010: "Failed to connect with rpc url",
  5011: "Invalid params passed in",
  5013: "Invalid network provided"
});
var WalletLoginError = /*#__PURE__*/function (_Web3AuthError2) {
  inherits_default()(WalletLoginError, _Web3AuthError2);
  var _super3 = _createSuper(WalletLoginError);
  function WalletLoginError(code, message) {
    var _this3;
    classCallCheck_default()(this, WalletLoginError);
    // takes care of stack and proto
    _this3 = _super3.call(this, code, message);

    // Set name explicitly as minification can mangle class names
    Object.defineProperty(assertThisInitialized_default()(_this3), "name", {
      value: "WalletLoginError"
    });
    return _this3;
  }
  createClass_default()(WalletLoginError, null, [{
    key: "fromCode",
    value: function fromCode(code) {
      var extraMessage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
      return new WalletLoginError(code, "".concat(WalletLoginError.messages[code]).concat(extraMessage));
    }
  }, {
    key: "connectionError",
    value: function connectionError() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletLoginError.fromCode(5111, extraMessage);
    }
  }, {
    key: "disconnectionError",
    value: function disconnectionError() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletLoginError.fromCode(5112, extraMessage);
    }
  }, {
    key: "notConnectedError",
    value: function notConnectedError() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletLoginError.fromCode(5113, extraMessage);
    }
  }, {
    key: "popupClosed",
    value: function popupClosed() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletLoginError.fromCode(5114, extraMessage);
    }
  }, {
    key: "mfaEnabled",
    value: function mfaEnabled() {
      var extraMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
      return WalletLoginError.fromCode(5115, extraMessage);
    }
  }]);
  return WalletLoginError;
}(Web3AuthError);
defineProperty_default()(WalletLoginError, "messages", {
  5000: "Custom",
  5111: "Failed to connect with wallet",
  5112: "Failed to disconnect from wallet",
  5113: "Wallet is not connected",
  5114: "Wallet popup has been closed by the user",
  5115: "User has already enabled mfa, please use the @web3auth/web3auth-web sdk for login with mfa"
});
;// CONCATENATED MODULE: ./src/wallet/index.ts

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { defineProperty_default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var MULTI_CHAIN_ADAPTERS = {
  OPENLOGIN: "openlogin",
  WALLET_CONNECT_V1: "wallet-connect-v1",
  WALLET_CONNECT_V2: "wallet-connect-v2"
};
var SOLANA_ADAPTERS = _objectSpread({
  TORUS_SOLANA: "torus-solana",
  PHANTOM: "phantom",
  SOLLET: "sollet",
  SOLLET_EXTENSION: "sollet-extension",
  SOLFLARE: "solflare",
  SLOPE: "slope"
}, MULTI_CHAIN_ADAPTERS);
var EVM_ADAPTERS = _objectSpread({
  TORUS_EVM: "torus-evm",
  METAMASK: "metamask",
  COINBASE: "coinbase"
}, MULTI_CHAIN_ADAPTERS);
var WALLET_ADAPTERS = _objectSpread(_objectSpread({}, EVM_ADAPTERS), SOLANA_ADAPTERS);
;// CONCATENATED MODULE: ./src/adapter/IAdapter.ts







function IAdapter_createSuper(Derived) { var hasNativeReflectConstruct = IAdapter_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }
function IAdapter_isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function IAdapter_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function IAdapter_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? IAdapter_ownKeys(Object(source), !0).forEach(function (key) { defineProperty_default()(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : IAdapter_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }




var ADAPTER_CATEGORY = {
  EXTERNAL: "external",
  IN_APP: "in_app"
};
var ADAPTER_STATUS = {
  NOT_READY: "not_ready",
  READY: "ready",
  CONNECTING: "connecting",
  CONNECTED: "connected",
  DISCONNECTED: "disconnected",
  ERRORED: "errored"
};
var ADAPTER_EVENTS = IAdapter_objectSpread(IAdapter_objectSpread({}, ADAPTER_STATUS), {}, {
  ADAPTER_DATA_UPDATED: "adapter_data_updated"
});
var BaseAdapter = /*#__PURE__*/function (_SafeEventEmitter) {
  inherits_default()(BaseAdapter, _SafeEventEmitter);
  var _super = IAdapter_createSuper(BaseAdapter);
  function BaseAdapter() {
    var _this;
    classCallCheck_default()(this, BaseAdapter);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _super.call.apply(_super, [this].concat(args));
    defineProperty_default()(assertThisInitialized_default()(_this), "adapterData", {});
    defineProperty_default()(assertThisInitialized_default()(_this), "sessionTime", 86400);
    defineProperty_default()(assertThisInitialized_default()(_this), "chainConfig", null);
    defineProperty_default()(assertThisInitialized_default()(_this), "clientId", void 0);
    defineProperty_default()(assertThisInitialized_default()(_this), "adapterNamespace", void 0);
    defineProperty_default()(assertThisInitialized_default()(_this), "currentChainNamespace", void 0);
    defineProperty_default()(assertThisInitialized_default()(_this), "type", void 0);
    defineProperty_default()(assertThisInitialized_default()(_this), "name", void 0);
    defineProperty_default()(assertThisInitialized_default()(_this), "status", void 0);
    return _this;
  }
  createClass_default()(BaseAdapter, [{
    key: "chainConfigProxy",
    get: function get() {
      return this.chainConfig ? IAdapter_objectSpread({}, this.chainConfig) : null;
    }
  }, {
    key: "setChainConfig",
    value: function setChainConfig(customChainConfig) {
      if (this.status === ADAPTER_STATUS.READY) return;
      if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady("ChainNamespace is required while setting chainConfig");
      var defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);
      this.chainConfig = IAdapter_objectSpread(IAdapter_objectSpread({}, defaultChainConfig), customChainConfig);
    }
  }, {
    key: "setAdapterSettings",
    value: function setAdapterSettings(_) {}
  }, {
    key: "checkConnectionRequirements",
    value: function checkConnectionRequirements() {
      // we reconnect without killing existing wallet connect session on calling connect again.
      if (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V1 && this.status === ADAPTER_STATUS.CONNECTING) return;else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady("Already connecting");
      if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError("Already connected");
      if (this.status !== ADAPTER_STATUS.READY) throw WalletLoginError.connectionError("Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function");
      if (!this.clientId) throw WalletLoginError.connectionError("Please initialize Web3Auth with a valid clientId in constructor");
    }
  }, {
    key: "checkInitializationRequirements",
    value: function checkInitializationRequirements() {
      if (this.status === ADAPTER_STATUS.NOT_READY) return;
      if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady("Already connected");
      if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady("Adapter is already initialized");
    }
  }, {
    key: "updateAdapterData",
    value: function updateAdapterData(data) {
      this.adapterData = data;
      this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, {
        adapterName: this.name,
        data: data
      });
    }
  }]);
  return BaseAdapter;
}(openlogin_jrpc_namespaceObject.SafeEventEmitter);
var BaseNetworkSwitch = /*#__PURE__*/createClass_default()(function BaseNetworkSwitch() {
  classCallCheck_default()(this, BaseNetworkSwitch);
});
;// CONCATENATED MODULE: external "@babel/runtime/helpers/asyncToGenerator"
const asyncToGenerator_namespaceObject = require("@babel/runtime/helpers/asyncToGenerator");
var asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator_namespaceObject);
;// CONCATENATED MODULE: external "@babel/runtime/regenerator"
const regenerator_namespaceObject = require("@babel/runtime/regenerator");
var regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator_namespaceObject);
;// CONCATENATED MODULE: external "@toruslabs/http-helpers"
const http_helpers_namespaceObject = require("@toruslabs/http-helpers");
;// CONCATENATED MODULE: external "jwt-decode"
const external_jwt_decode_namespaceObject = require("jwt-decode");
var external_jwt_decode_default = /*#__PURE__*/__webpack_require__.n(external_jwt_decode_namespaceObject);
;// CONCATENATED MODULE: ./src/constants.ts
var authServer = "https://authjs.web3auth.io";
;// CONCATENATED MODULE: external "loglevel"
const external_loglevel_namespaceObject = require("loglevel");
var external_loglevel_default = /*#__PURE__*/__webpack_require__.n(external_loglevel_namespaceObject);
;// CONCATENATED MODULE: ./src/loglevel.ts

/* harmony default export */ const loglevel = (external_loglevel_default().getLogger("web3auth-logger"));
;// CONCATENATED MODULE: ./src/utils.ts
function storageAvailable(type) {
  var storageExists = false;
  var storageLength = 0;
  var storage;
  try {
    storage = window[type];
    storageExists = true;
    storageLength = storage.length;
    var x = "__storage_test__";
    storage.setItem(x, x);
    storage.removeItem(x);
    return true;
  } catch (error) {
    var _error = error;
    return !!(_error && (
    // everything except Firefox
    _error.code === 22 ||
    // Firefox
    _error.code === 1014 ||
    // test name field too, because code might not be present
    // everything except Firefox
    _error.name === "QuotaExceededError" ||
    // Firefox
    _error.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
    // acknowledge QuotaExceededError only if there's something already stored
    storageExists && storageLength !== 0);
  }
}
var isHexStrict = function isHexStrict(hex) {
  return (typeof hex === "string" || typeof hex === "number") && /^(-)?0x[0-9a-f]*$/i.test(hex);
};
;// CONCATENATED MODULE: ./src/adapter/utils.ts







var checkIfTokenIsExpired = function checkIfTokenIsExpired(token) {
  var decoded = external_jwt_decode_default()(token);
  if (!decoded.exp) {
    return true;
  }
  if (decoded.exp < Math.floor(Date.now() / 1000)) {
    return true;
  }
  return false;
};
var signChallenge = /*#__PURE__*/function () {
  var _ref = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(payload, chainNamespace) {
    var t, header, network, data, res;
    return regenerator_default().wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            t = chainNamespace === "solana" ? "sip99" : "eip191";
            header = {
              t: t
            };
            network = chainNamespace === "solana" ? "solana" : "ethereum";
            data = {
              payload: payload,
              header: header,
              network: network
            };
            _context.next = 6;
            return (0,http_helpers_namespaceObject.post)("".concat(authServer, "/siww/get"), data);
          case 6:
            res = _context.sent;
            if (res.success) {
              _context.next = 9;
              break;
            }
            throw new Error("Failed to authenticate user, Please reach out to Web3Auth Support team");
          case 9:
            return _context.abrupt("return", res.challenge);
          case 10:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return function signChallenge(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
var verifySignedChallenge = /*#__PURE__*/function () {
  var _ref2 = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2(chainNamespace, signedMessage, challenge, issuer, sessionTime, clientId) {
    var t, sigData, idTokenRes;
    return regenerator_default().wrap(function _callee2$(_context2) {
      while (1) {
        switch (_context2.prev = _context2.next) {
          case 0:
            t = chainNamespace === "solana" ? "sip99" : "eip191";
            sigData = {
              signature: {
                s: signedMessage,
                t: t
              },
              message: challenge,
              issuer: issuer,
              audience: window.location.hostname,
              timeout: sessionTime
            };
            _context2.next = 4;
            return (0,http_helpers_namespaceObject.post)("".concat(authServer, "/siww/verify"), sigData, {
              headers: {
                client_id: clientId,
                wallet_provider: issuer
              }
            });
          case 4:
            idTokenRes = _context2.sent;
            if (idTokenRes.success) {
              _context2.next = 8;
              break;
            }
            loglevel.error("Failed to authenticate user, ,message verification failed", idTokenRes.error);
            throw new Error("Failed to authenticate user, ,message verification failed");
          case 8:
            return _context2.abrupt("return", idTokenRes.token);
          case 9:
          case "end":
            return _context2.stop();
        }
      }
    }, _callee2);
  }));
  return function verifySignedChallenge(_x3, _x4, _x5, _x6, _x7, _x8) {
    return _ref2.apply(this, arguments);
  };
}();
var getSavedToken = function getSavedToken(userAddress, issuer) {
  if (storageAvailable("localStorage")) {
    return localStorage.getItem("".concat(userAddress.toLowerCase(), "_").concat(issuer));
  }
  return null;
};
var saveToken = function saveToken(userAddress, issuer, token) {
  if (storageAvailable("localStorage")) {
    return localStorage.setItem("".concat(userAddress.toLowerCase(), "_").concat(issuer), token);
  }
  return null;
};
var clearToken = function clearToken(userAddress, issuer) {
  if (storageAvailable("localStorage")) {
    return localStorage.removeItem("".concat(userAddress.toLowerCase(), "_").concat(issuer));
  }
  return null;
};
;// CONCATENATED MODULE: ./src/adapter/index.ts


;// CONCATENATED MODULE: ./src/provider/IProvider.ts
var PROVIDER_EVENTS = {
  INITIALIZED: "initialized",
  ERRORED: "errored"
};
;// CONCATENATED MODULE: ./src/index.ts










module.exports = __webpack_exports__;
/******/ })()
;
//# sourceMappingURL=base.cjs.js.map