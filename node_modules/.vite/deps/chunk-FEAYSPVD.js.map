{
  "version": 3,
  "sources": ["../../@babel/runtime/helpers/esm/asyncToGenerator.js", "../../@babel/runtime/helpers/esm/classCallCheck.js", "../../@babel/runtime/helpers/esm/typeof.js", "../../@babel/runtime/helpers/esm/toPrimitive.js", "../../@babel/runtime/helpers/esm/toPropertyKey.js", "../../@babel/runtime/helpers/esm/createClass.js", "../../@babel/runtime/helpers/esm/assertThisInitialized.js", "../../@babel/runtime/helpers/esm/setPrototypeOf.js", "../../@babel/runtime/helpers/esm/inherits.js", "../../@babel/runtime/helpers/esm/possibleConstructorReturn.js", "../../@babel/runtime/helpers/esm/getPrototypeOf.js", "../../@babel/runtime/helpers/esm/defineProperty.js", "../../@babel/runtime/helpers/typeof.js", "../../@babel/runtime/helpers/regeneratorRuntime.js", "../../@babel/runtime/regenerator/index.js", "../../@babel/runtime/helpers/esm/superPropBase.js", "../../@babel/runtime/helpers/esm/get.js", "../../@babel/runtime/helpers/esm/isNativeFunction.js", "../../@babel/runtime/helpers/esm/isNativeReflectConstruct.js", "../../@babel/runtime/helpers/esm/construct.js", "../../@babel/runtime/helpers/esm/wrapNativeSuper.js", "../../base64url/dist/pad-string.js", "../../base64url/dist/base64url.js", "../../base64url/index.js", "../../@toruslabs/openlogin-utils/src/randomId.ts", "../../@toruslabs/openlogin-utils/src/url.ts", "../../@toruslabs/openlogin-utils/src/utils.ts", "../../fast-safe-stringify/index.js", "../../@babel/runtime/helpers/esm/arrayWithHoles.js", "../../@babel/runtime/helpers/esm/iterableToArrayLimit.js", "../../@babel/runtime/helpers/esm/arrayLikeToArray.js", "../../@babel/runtime/helpers/esm/unsupportedIterableToArray.js", "../../@babel/runtime/helpers/esm/nonIterableRest.js", "../../@babel/runtime/helpers/esm/slicedToArray.js", "../../@toruslabs/openlogin-jrpc/node_modules/eth-rpc-errors/src/classes.ts", "../../@toruslabs/openlogin-jrpc/node_modules/eth-rpc-errors/src/error-constants.ts", "../../@toruslabs/openlogin-jrpc/node_modules/eth-rpc-errors/src/utils.ts", "../../@toruslabs/openlogin-jrpc/node_modules/eth-rpc-errors/src/errors.ts", "../../@toruslabs/openlogin-jrpc/node_modules/eth-rpc-errors/src/index.ts", "../../wrappy/wrappy.js", "../../once/once.js", "../../end-of-stream/index.js", "browser-external:fs", "../../pump/index.js", "../../@toruslabs/openlogin-jrpc/src/basePostMessageStream.ts", "../../@toruslabs/openlogin-jrpc/src/safeEventEmitter.ts", "../../@toruslabs/openlogin-jrpc/src/serializableError.ts", "../../@toruslabs/openlogin-jrpc/src/jrpc.ts", "../../@toruslabs/openlogin-jrpc/src/jrpcEngine.ts", "../../@toruslabs/openlogin-jrpc/src/substream.ts", "../../@toruslabs/openlogin-jrpc/src/mux.ts", "../../@toruslabs/openlogin-jrpc/src/postMessageStream.ts", "../../ts-custom-error/dist/src/utils.js", "../../ts-custom-error/dist/src/custom-error.js", "../../ts-custom-error/dist/src/factory.js", "../../lodash.merge/index.js", "../../loglevel/lib/loglevel.js", "../../@web3auth/base/node_modules/@toruslabs/http-helpers/src/index.ts", "../../jwt-decode/lib/atob.js", "../../jwt-decode/lib/base64_url_decode.js", "../../jwt-decode/lib/index.js", "../../@web3auth/base/src/chain/IChainInterface.ts", "../../@web3auth/base/src/chain/config.ts", "../../@web3auth/base/src/errors/index.ts", "../../@web3auth/base/src/wallet/index.ts", "../../@web3auth/base/src/adapter/IAdapter.ts", "../../@web3auth/base/src/constants.ts", "../../@web3auth/base/src/loglevel.ts", "../../@web3auth/base/src/utils.ts", "../../@web3auth/base/src/adapter/utils.ts", "../../@web3auth/base/src/provider/IProvider.ts", "../../@noble/curves/node_modules/@noble/hashes/src/_assert.ts", "../../@noble/curves/node_modules/@noble/hashes/src/crypto.ts", "../../@noble/curves/node_modules/@noble/hashes/src/utils.ts", "../../@noble/curves/node_modules/@noble/hashes/src/_sha2.ts", "../../@noble/curves/node_modules/@noble/hashes/src/sha256.ts", "../../@noble/curves/src/abstract/utils.ts", "../../@noble/curves/src/abstract/modular.ts", "../../@noble/curves/src/abstract/curve.ts", "../../@noble/curves/src/abstract/weierstrass.ts", "../../@noble/curves/src/abstract/hash-to-curve.ts", "../../@noble/curves/node_modules/@noble/hashes/src/hmac.ts", "../../@noble/curves/src/_shortw_utils.ts", "../../@noble/curves/src/secp256k1.ts", "../../@ethereumjs/util/node_modules/ethereum-cryptography/secp256k1.js", "../../@ethereumjs/util/src/constants.ts", "../../@ethereumjs/util/src/units.ts", "../../@ethereumjs/rlp/src/index.ts", "../../@ethereumjs/util/node_modules/@noble/hashes/src/_assert.ts", "../../@ethereumjs/util/node_modules/@noble/hashes/src/_u64.ts", "../../@ethereumjs/util/node_modules/@noble/hashes/src/crypto.ts", "../../@ethereumjs/util/node_modules/@noble/hashes/src/utils.ts", "../../@ethereumjs/util/node_modules/@noble/hashes/src/sha3.ts", "../../@ethereumjs/util/node_modules/ethereum-cryptography/utils.js", "../../@ethereumjs/util/node_modules/ethereum-cryptography/keccak.js", "../../@ethereumjs/util/src/internal.ts", "../../@ethereumjs/util/src/helpers.ts", "../../@ethereumjs/util/src/bytes.ts", "../../@ethereumjs/util/src/account.ts", "../../@ethereumjs/util/src/address.ts", "../../@ethereumjs/util/src/types.ts", "../../@ethereumjs/util/src/withdrawal.ts", "../../@ethereumjs/util/src/signature.ts", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/gindex.js", "../../@ethereumjs/util/node_modules/@noble/hashes/src/_sha2.ts", "../../@ethereumjs/util/node_modules/@noble/hashes/src/sha256.ts", "../../@ethereumjs/util/node_modules/@chainsafe/as-sha256/src/hashObject.ts", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/hasher/util.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/hasher/noble.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/hasher/types.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/hasher/index.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/node.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/zeroNode.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/subtree.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/packedNode.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/single.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/tree.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/util.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/multi.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/compactMulti.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/treeOffset.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/index.js", "../../@ethereumjs/util/node_modules/@chainsafe/persistent-merkle-tree/lib/index.js", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/util/zeros.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/util/merkleize.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/util/named.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/arrayBasic.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/value/bitArray.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/util/byteArray.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/util/proof/treePostProcessFromProofNode.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/abstract.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/composite.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/view/abstract.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/view/bitArray.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/viewDU/abstract.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/viewDU/bitArray.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/bitArray.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/bitList.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/bitVector.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/basic.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/boolean.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/byteArray.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/byteList.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/byteVector.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/view/container.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/viewDU/container.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/util/strings.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/container.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/branchNodeStruct.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/view/containerNodeStruct.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/viewDU/containerNodeStruct.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/containerNodeStruct.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/view/arrayBasic.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/view/listBasic.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/viewDU/arrayBasic.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/viewDU/listBasic.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/array.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/listBasic.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/arrayComposite.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/view/arrayComposite.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/view/listComposite.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/viewDU/arrayComposite.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/viewDU/listComposite.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/listComposite.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/none.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/uint.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/union.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/vectorBasic.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/type/vectorComposite.ts", "../../@ethereumjs/util/node_modules/@chainsafe/ssz/src/index.ts", "../../@ethereumjs/util/src/ssz.ts", "../../@ethereumjs/util/src/encoding.ts", "../../@ethereumjs/util/src/asyncEventEmitter.ts", "../../@ethereumjs/util/src/lock.ts", "browser-external:http", "browser-external:https", "browser-external:zlib", "browser-external:url", "../../micro-ftch/index.js", "../../@ethereumjs/util/src/provider.ts", "../../@ethereumjs/util/src/index.ts", "../../bignumber.js/bignumber.mjs", "../../@toruslabs/base-controllers/node_modules/eth-rpc-errors/src/classes.ts", "../../@toruslabs/base-controllers/node_modules/eth-rpc-errors/src/error-constants.ts", "../../@toruslabs/base-controllers/node_modules/eth-rpc-errors/src/utils.ts", "../../@toruslabs/base-controllers/node_modules/eth-rpc-errors/src/errors.ts", "../../@toruslabs/base-controllers/node_modules/eth-rpc-errors/src/index.ts", "../../@toruslabs/base-controllers/node_modules/@toruslabs/openlogin-jrpc/src/basePostMessageStream.ts", "../../@toruslabs/base-controllers/node_modules/@toruslabs/openlogin-jrpc/src/safeEventEmitter.ts", "../../@toruslabs/base-controllers/node_modules/@toruslabs/openlogin-jrpc/src/serializableError.ts", "../../@toruslabs/base-controllers/node_modules/@toruslabs/openlogin-jrpc/src/jrpc.ts", "../../@toruslabs/base-controllers/node_modules/@toruslabs/openlogin-jrpc/src/jrpcEngine.ts", "../../@toruslabs/base-controllers/node_modules/@toruslabs/openlogin-jrpc/src/substream.ts", "../../@toruslabs/base-controllers/node_modules/@toruslabs/openlogin-jrpc/src/mux.ts", "../../@toruslabs/base-controllers/node_modules/@toruslabs/openlogin-jrpc/src/postMessageStream.ts", "../../json-rpc-random-id/index.js", "../../bowser/src/constants.js", "../../bowser/src/utils.js", "../../bowser/src/parser-browsers.js", "../../bowser/src/parser-os.js", "../../bowser/src/parser-platforms.js", "../../bowser/src/parser-engines.js", "../../bowser/src/parser.js", "../../bowser/src/bowser.js", "../../@toruslabs/broadcast-channel/dist/esbrowser/util.js", "../../@toruslabs/broadcast-channel/dist/esbrowser/methods/native.js", "../../oblivious-set/src/index.ts", "../../@toruslabs/broadcast-channel/dist/esbrowser/options.js", "../../@toruslabs/broadcast-channel/dist/esbrowser/methods/indexed-db.js", "../../@toruslabs/broadcast-channel/dist/esbrowser/methods/localstorage.js", "../../engine.io-parser/build/esm/commons.js", "../../engine.io-parser/build/esm/encodePacket.browser.js", "../../engine.io-parser/build/esm/contrib/base64-arraybuffer.js", "../../engine.io-parser/build/esm/decodePacket.browser.js", "../../engine.io-parser/build/esm/index.js", "../../@socket.io/component-emitter/index.mjs", "../../engine.io-client/build/esm/globalThis.browser.js", "../../engine.io-client/build/esm/util.js", "../../engine.io-client/build/esm/transport.js", "../../engine.io-client/build/esm/contrib/yeast.js", "../../engine.io-client/build/esm/contrib/parseqs.js", "../../engine.io-client/build/esm/contrib/has-cors.js", "../../engine.io-client/build/esm/transports/xmlhttprequest.browser.js", "../../engine.io-client/build/esm/transports/polling.js", "../../engine.io-client/build/esm/transports/websocket-constructor.browser.js", "../../engine.io-client/build/esm/transports/websocket.js", "../../engine.io-client/build/esm/transports/index.js", "../../engine.io-client/build/esm/contrib/parseuri.js", "../../engine.io-client/build/esm/socket.js", "../../engine.io-client/build/esm/index.js", "../../socket.io-client/build/esm/url.js", "../../socket.io-parser/build/esm/is-binary.js", "../../socket.io-parser/build/esm/binary.js", "../../socket.io-parser/build/esm/index.js", "../../socket.io-client/build/esm/on.js", "../../socket.io-client/build/esm/socket.js", "../../socket.io-client/build/esm/contrib/backo2.js", "../../socket.io-client/build/esm/manager.js", "../../socket.io-client/build/esm/index.js", "../../@toruslabs/broadcast-channel/node_modules/@toruslabs/eccrypto/browser.js", "../../@toruslabs/metadata-helpers/node_modules/@toruslabs/http-helpers/src/index.ts", "../../jsonify/lib/parse.js", "../../jsonify/lib/stringify.js", "../../jsonify/index.js", "../../json-stable-stringify/index.js", "../../@toruslabs/metadata-helpers/node_modules/@toruslabs/eccrypto/browser.js", "../../@toruslabs/metadata-helpers/src/utils.ts", "../../@toruslabs/metadata-helpers/src/MetadataStorageLayer.ts", "../../@toruslabs/metadata-helpers/src/webAuthnShareResolver.ts", "../../@toruslabs/broadcast-channel/dist/esbrowser/methods/server.js", "../../@toruslabs/broadcast-channel/dist/esbrowser/methods/simulate.js", "../../@toruslabs/broadcast-channel/dist/esbrowser/method-chooser.js", "../../@toruslabs/broadcast-channel/dist/esbrowser/broadcast-channel.js", "../../@toruslabs/broadcast-channel/dist/esbrowser/index.js", "../../@toruslabs/base-controllers/node_modules/@toruslabs/http-helpers/src/index.ts", "../../@toruslabs/base-controllers/src/BaseController.ts", "../../@toruslabs/base-controllers/src/Block/BaseBlockTracker.ts", "../../@toruslabs/base-controllers/src/createEventEmitterProxy.ts", "../../@toruslabs/base-controllers/src/createSwappableProxy.ts", "../../@toruslabs/base-controllers/src/Currency/BaseCurrencyController.ts", "../../@toruslabs/base-controllers/src/Network/INetworkController.ts", "../../@toruslabs/base-controllers/src/enums.ts", "../../@toruslabs/base-controllers/src/Embed/CommunicationMethodMiddleware.ts", "../../@toruslabs/base-controllers/src/Embed/BaseEmbedController.ts", "../../@toruslabs/base-controllers/src/Embed/CommunicationWindowManager.ts", "../../@toruslabs/base-controllers/src/interfaces.ts", "../../@toruslabs/base-controllers/src/utils/txUtils.ts", "../../@toruslabs/base-controllers/src/utils/utils.ts", "../../@toruslabs/base-controllers/src/Keyring/BaseKeyringController.ts", "../../@toruslabs/base-controllers/src/Network/createFetchMiddleware.ts", "../../@toruslabs/base-controllers/src/Network/createLoggerMiddleware.ts", "../../@toruslabs/base-controllers/src/Network/createOriginMiddleware.ts", "../../@toruslabs/base-controllers/src/Popup/BroadcastChannelHandler.ts", "../../@toruslabs/base-controllers/src/Popup/StreamWindow.ts", "../../@toruslabs/base-controllers/src/Popup/PopupHandler.ts", "../../@toruslabs/base-controllers/src/Popup/PopupStoreChannel.ts", "../../@toruslabs/base-controllers/src/Popup/PopupWithBcHandler.ts", "../../@toruslabs/base-controllers/src/Popup/RedirectHandler.ts", "../../@toruslabs/base-controllers/src/Preferences/IPreferencesController.ts", "../../@toruslabs/base-controllers/src/Preferences/BasePreferencesController.ts", "../../@toruslabs/base-controllers/src/Transaction/ITransactionController.ts", "../../@toruslabs/base-controllers/src/Transaction/BaseTransactionStateController.ts", "../../@web3auth/base-provider/node_modules/eth-rpc-errors/src/classes.ts", "../../@web3auth/base-provider/node_modules/eth-rpc-errors/src/error-constants.ts", "../../@web3auth/base-provider/node_modules/eth-rpc-errors/src/utils.ts", "../../@web3auth/base-provider/node_modules/eth-rpc-errors/src/errors.ts", "../../@web3auth/base-provider/node_modules/eth-rpc-errors/src/index.ts", "../../@web3auth/base-provider/src/baseProvider.ts", "../../@web3auth/base-provider/src/commonPrivateKeyProvider.ts", "../../@web3auth/base-provider/src/utils.ts"],
  "sourcesContent": ["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}", "export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}", "export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}", "import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}", "import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}", "export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}", "export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}", "import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}", "export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}", "import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}", "function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;", "// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n", "import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}", "import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}", "export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}", "export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}", "import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}", "import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction padString(input) {\n    var segmentLength = 4;\n    var stringLength = input.length;\n    var diff = stringLength % segmentLength;\n    if (!diff) {\n        return input;\n    }\n    var position = stringLength;\n    var padLength = segmentLength - diff;\n    var paddedStringLength = stringLength + padLength;\n    var buffer = Buffer.alloc(paddedStringLength);\n    buffer.write(input);\n    while (padLength--) {\n        buffer.write(\"=\", position++);\n    }\n    return buffer.toString();\n}\nexports.default = padString;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pad_string_1 = require(\"./pad-string\");\nfunction encode(input, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString(\"base64\"));\n    }\n    return fromBase64(Buffer.from(input, encoding).toString(\"base64\"));\n}\n;\nfunction decode(base64url, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    return Buffer.from(toBase64(base64url), \"base64\").toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return pad_string_1.default(base64url)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction toBuffer(base64url) {\n    return Buffer.from(toBase64(base64url), \"base64\");\n}\nvar base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nexports.default = base64url;\n", "module.exports = require('./dist/base64url').default;\nmodule.exports.default = module.exports;\n", null, null, null, "module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n", "export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}", "export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}", "export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}", "import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}", "export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}", "import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}", null, null, null, null, null, "// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n", "var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n", "var once = require('once');\n\nvar noop = function() {};\n\nvar isRequest = function(stream) {\n\treturn stream.setHeader && typeof stream.abort === 'function';\n};\n\nvar isChildProcess = function(stream) {\n\treturn stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3\n};\n\nvar eos = function(stream, opts, callback) {\n\tif (typeof opts === 'function') return eos(stream, null, opts);\n\tif (!opts) opts = {};\n\n\tcallback = once(callback || noop);\n\n\tvar ws = stream._writableState;\n\tvar rs = stream._readableState;\n\tvar readable = opts.readable || (opts.readable !== false && stream.readable);\n\tvar writable = opts.writable || (opts.writable !== false && stream.writable);\n\tvar cancelled = false;\n\n\tvar onlegacyfinish = function() {\n\t\tif (!stream.writable) onfinish();\n\t};\n\n\tvar onfinish = function() {\n\t\twritable = false;\n\t\tif (!readable) callback.call(stream);\n\t};\n\n\tvar onend = function() {\n\t\treadable = false;\n\t\tif (!writable) callback.call(stream);\n\t};\n\n\tvar onexit = function(exitCode) {\n\t\tcallback.call(stream, exitCode ? new Error('exited with error code: ' + exitCode) : null);\n\t};\n\n\tvar onerror = function(err) {\n\t\tcallback.call(stream, err);\n\t};\n\n\tvar onclose = function() {\n\t\tprocess.nextTick(onclosenexttick);\n\t};\n\n\tvar onclosenexttick = function() {\n\t\tif (cancelled) return;\n\t\tif (readable && !(rs && (rs.ended && !rs.destroyed))) return callback.call(stream, new Error('premature close'));\n\t\tif (writable && !(ws && (ws.ended && !ws.destroyed))) return callback.call(stream, new Error('premature close'));\n\t};\n\n\tvar onrequest = function() {\n\t\tstream.req.on('finish', onfinish);\n\t};\n\n\tif (isRequest(stream)) {\n\t\tstream.on('complete', onfinish);\n\t\tstream.on('abort', onclose);\n\t\tif (stream.req) onrequest();\n\t\telse stream.on('request', onrequest);\n\t} else if (writable && !ws) { // legacy streams\n\t\tstream.on('end', onlegacyfinish);\n\t\tstream.on('close', onlegacyfinish);\n\t}\n\n\tif (isChildProcess(stream)) stream.on('exit', onexit);\n\n\tstream.on('end', onend);\n\tstream.on('finish', onfinish);\n\tif (opts.error !== false) stream.on('error', onerror);\n\tstream.on('close', onclose);\n\n\treturn function() {\n\t\tcancelled = true;\n\t\tstream.removeListener('complete', onfinish);\n\t\tstream.removeListener('abort', onclose);\n\t\tstream.removeListener('request', onrequest);\n\t\tif (stream.req) stream.req.removeListener('finish', onfinish);\n\t\tstream.removeListener('end', onlegacyfinish);\n\t\tstream.removeListener('close', onlegacyfinish);\n\t\tstream.removeListener('finish', onfinish);\n\t\tstream.removeListener('exit', onexit);\n\t\tstream.removeListener('end', onend);\n\t\tstream.removeListener('error', onerror);\n\t\tstream.removeListener('close', onclose);\n\t};\n};\n\nmodule.exports = eos;\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"fs\" has been externalized for browser compatibility. Cannot access \"fs.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "var once = require('once')\nvar eos = require('end-of-stream')\nvar fs = require('fs') // we only need fs to get the ReadStream and WriteStream prototypes\n\nvar noop = function () {}\nvar ancient = /^v?\\.0/.test(process.version)\n\nvar isFn = function (fn) {\n  return typeof fn === 'function'\n}\n\nvar isFS = function (stream) {\n  if (!ancient) return false // newer node version do not need to care about fs is a special way\n  if (!fs) return false // browser\n  return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close)\n}\n\nvar isRequest = function (stream) {\n  return stream.setHeader && isFn(stream.abort)\n}\n\nvar destroyer = function (stream, reading, writing, callback) {\n  callback = once(callback)\n\n  var closed = false\n  stream.on('close', function () {\n    closed = true\n  })\n\n  eos(stream, {readable: reading, writable: writing}, function (err) {\n    if (err) return callback(err)\n    closed = true\n    callback()\n  })\n\n  var destroyed = false\n  return function (err) {\n    if (closed) return\n    if (destroyed) return\n    destroyed = true\n\n    if (isFS(stream)) return stream.close(noop) // use close for fs streams to avoid fd leaks\n    if (isRequest(stream)) return stream.abort() // request.destroy just do .end - .abort is what we want\n\n    if (isFn(stream.destroy)) return stream.destroy()\n\n    callback(err || new Error('stream was destroyed'))\n  }\n}\n\nvar call = function (fn) {\n  fn()\n}\n\nvar pipe = function (from, to) {\n  return from.pipe(to)\n}\n\nvar pump = function () {\n  var streams = Array.prototype.slice.call(arguments)\n  var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop\n\n  if (Array.isArray(streams[0])) streams = streams[0]\n  if (streams.length < 2) throw new Error('pump requires two streams per minimum')\n\n  var error\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1\n    var writing = i > 0\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err\n      if (err) destroys.forEach(call)\n      if (reading) return\n      destroys.forEach(call)\n      callback(error)\n    })\n  })\n\n  return streams.reduce(pipe)\n}\n\nmodule.exports = pump\n", null, null, null, null, null, null, null, null, "export function fixProto(target, prototype) {\n    var setPrototypeOf = Object.setPrototypeOf;\n    setPrototypeOf\n        ? setPrototypeOf(target, prototype)\n        : (target.__proto__ = prototype);\n}\nexport function fixStack(target, fn) {\n    if (fn === void 0) { fn = target.constructor; }\n    var captureStackTrace = Error.captureStackTrace;\n    captureStackTrace && captureStackTrace(target, fn);\n}\n//# sourceMappingURL=utils.js.map", "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { fixProto, fixStack } from './utils';\nvar CustomError = (function (_super) {\n    __extends(CustomError, _super);\n    function CustomError(message, options) {\n        var _newTarget = this.constructor;\n        var _this = _super.call(this, message, options) || this;\n        Object.defineProperty(_this, 'name', {\n            value: _newTarget.name,\n            enumerable: false,\n            configurable: true,\n        });\n        fixProto(_this, _newTarget.prototype);\n        fixStack(_this);\n        return _this;\n    }\n    return CustomError;\n}(Error));\nexport { CustomError };\n//# sourceMappingURL=custom-error.js.map", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { fixStack } from './utils';\nexport function customErrorFactory(fn, parent) {\n    if (parent === void 0) { parent = Error; }\n    function CustomError() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (!(this instanceof CustomError))\n            return new (CustomError.bind.apply(CustomError, __spreadArray([void 0], args, false)))();\n        parent.apply(this, args);\n        Object.defineProperty(this, 'name', {\n            value: fn.name || parent.name,\n            enumerable: false,\n            configurable: true,\n        });\n        fn.apply(this, args);\n        fixStack(this, CustomError);\n    }\n    return Object.defineProperties(CustomError, {\n        prototype: {\n            value: Object.create(parent.prototype, {\n                constructor: {\n                    value: CustomError,\n                    writable: true,\n                    configurable: true,\n                },\n            }),\n        },\n    });\n}\n//# sourceMappingURL=factory.js.map", "/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    asyncTag = '[object AsyncFunction]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    nullTag = '[object Null]',\n    objectTag = '[object Object]',\n    proxyTag = '[object Proxy]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    undefinedTag = '[object Undefined]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    Symbol = root.Symbol,\n    Uint8Array = root.Uint8Array,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n    getPrototype = overArg(Object.getPrototypeOf, Object),\n    objectCreate = Object.create,\n    propertyIsEnumerable = objectProto.propertyIsEnumerable,\n    splice = arrayProto.splice,\n    symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n    nativeMax = Math.max,\n    nativeNow = Date.now;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\n/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = merge;\n", "/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      defaultLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = level;\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          self.setLevel(defaultLevel, false);\n          clearPersistedLevel();\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n", null, "/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\nfunction InvalidCharacterError(message) {\n    this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = \"InvalidCharacterError\";\n\nfunction polyfill(input) {\n    var str = String(input).replace(/=+$/, \"\");\n    if (str.length % 4 == 1) {\n        throw new InvalidCharacterError(\n            \"'atob' failed: The string to be decoded is not correctly encoded.\"\n        );\n    }\n    for (\n        // initialize result and counters\n        var bc = 0, bs, buffer, idx = 0, output = \"\";\n        // get next character\n        (buffer = str.charAt(idx++));\n        // character found in table? initialize bit storage and add its ascii value;\n        ~buffer &&\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\n            // and if not first of each 4 characters,\n            // convert the first 8 bits to one ascii character\n            bc++ % 4) ?\n        (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) :\n        0\n    ) {\n        // try to find character in table (0-63, not found => -1)\n        buffer = chars.indexOf(buffer);\n    }\n    return output;\n}\n\nexport default (typeof window !== \"undefined\" &&\n    window.atob &&\n    window.atob.bind(window)) ||\npolyfill;", "import atob from \"./atob\";\n\nfunction b64DecodeUnicode(str) {\n    return decodeURIComponent(\n        atob(str).replace(/(.)/g, function(m, p) {\n            var code = p.charCodeAt(0).toString(16).toUpperCase();\n            if (code.length < 2) {\n                code = \"0\" + code;\n            }\n            return \"%\" + code;\n        })\n    );\n}\n\nexport default function(str) {\n    var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    switch (output.length % 4) {\n        case 0:\n            break;\n        case 2:\n            output += \"==\";\n            break;\n        case 3:\n            output += \"=\";\n            break;\n        default:\n            throw \"Illegal base64url string!\";\n    }\n\n    try {\n        return b64DecodeUnicode(output);\n    } catch (err) {\n        return atob(output);\n    }\n}", "\"use strict\";\n\nimport base64_url_decode from \"./base64_url_decode\";\n\nexport function InvalidTokenError(message) {\n    this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\n\nexport default function(token, options) {\n    if (typeof token !== \"string\") {\n        throw new InvalidTokenError(\"Invalid token specified\");\n    }\n\n    options = options || {};\n    var pos = options.header === true ? 0 : 1;\n    try {\n        return JSON.parse(base64_url_decode(token.split(\".\")[pos]));\n    } catch (e) {\n        throw new InvalidTokenError(\"Invalid token specified: \" + e.message);\n    }\n}", null, null, null, null, null, null, null, null, null, null, "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst u8a = (a: any): a is Uint8Array => a instanceof Uint8Array;\n\n// We accept hex strings besides Uint8Array for simplicity\nexport type Hex = Uint8Array | string;\n// Very few implementations accept numbers, we do it to ease learning curve\nexport type PrivKey = Hex | bigint;\nexport type CHash = {\n  (message: Uint8Array | string): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create(opts?: { dkLen?: number }): any; // For shake\n};\nexport type FHash = (message: Uint8Array | string) => Uint8Array;\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\nexport function bytesToHex(bytes: Uint8Array): string {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\nexport function numberToHexUnpadded(num: number | bigint): string {\n  const hex = num.toString(16);\n  return hex.length & 1 ? `0${hex}` : hex;\n}\n\nexport function hexToNumber(hex: string): bigint {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  // Big Endian\n  return BigInt(hex === '' ? '0' : `0x${hex}`);\n}\n\n// Caching slows it down 2-3x\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  if (hex.length % 2) throw new Error('hex string is invalid: unpadded ' + hex.length);\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// Big Endian\nexport function bytesToNumberBE(bytes: Uint8Array): bigint {\n  return hexToNumber(bytesToHex(bytes));\n}\nexport function bytesToNumberLE(bytes: Uint8Array): bigint {\n  if (!u8a(bytes)) throw new Error('Uint8Array expected');\n  return hexToNumber(bytesToHex(Uint8Array.from(bytes).reverse()));\n}\n\nexport const numberToBytesBE = (n: bigint, len: number) =>\n  hexToBytes(n.toString(16).padStart(len * 2, '0'));\nexport const numberToBytesLE = (n: bigint, len: number) => numberToBytesBE(n, len).reverse();\n// Returns variable number bytes (minimal bigint encoding?)\nexport const numberToVarBytesBE = (n: bigint) => hexToBytes(numberToHexUnpadded(n));\n\nexport function ensureBytes(title: string, hex: Hex, expectedLength?: number): Uint8Array {\n  let res: Uint8Array;\n  if (typeof hex === 'string') {\n    try {\n      res = hexToBytes(hex);\n    } catch (e) {\n      throw new Error(`${title} must be valid hex string, got \"${hex}\". Cause: ${e}`);\n    }\n  } else if (u8a(hex)) {\n    // Uint8Array.from() instead of hash.slice() because node.js Buffer\n    // is instance of Uint8Array, and its slice() creates **mutable** copy\n    res = Uint8Array.from(hex);\n  } else {\n    throw new Error(`${title} must be hex string or Uint8Array`);\n  }\n  const len = res.length;\n  if (typeof expectedLength === 'number' && len !== expectedLength)\n    throw new Error(`${title} expected ${expectedLength} bytes, got ${len}`);\n  return res;\n}\n\n// Copies several Uint8Arrays into one.\nexport function concatBytes(...arrs: Uint8Array[]): Uint8Array {\n  const r = new Uint8Array(arrs.reduce((sum, a) => sum + a.length, 0));\n  let pad = 0; // walk through each item, ensure they have proper type\n  arrs.forEach((a) => {\n    if (!u8a(a)) throw new Error('Uint8Array expected');\n    r.set(a, pad);\n    pad += a.length;\n  });\n  return r;\n}\n\nexport function equalBytes(b1: Uint8Array, b2: Uint8Array) {\n  // We don't care about timing attacks here\n  if (b1.length !== b2.length) return false;\n  for (let i = 0; i < b1.length; i++) if (b1[i] !== b2[i]) return false;\n  return true;\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\n// Bit operations\n\n// Amount of bits inside bigint (Same as n.toString(2).length)\nexport function bitLen(n: bigint) {\n  let len;\n  for (len = 0; n > _0n; n >>= _1n, len += 1);\n  return len;\n}\n// Gets single bit at position. NOTE: first bit position is 0 (same as arrays)\n// Same as !!+Array.from(n.toString(2)).reverse()[pos]\nexport const bitGet = (n: bigint, pos: number) => (n >> BigInt(pos)) & _1n;\n// Sets single bit at position\nexport const bitSet = (n: bigint, pos: number, value: boolean) =>\n  n | ((value ? _1n : _0n) << BigInt(pos));\n// Return mask for N bits (Same as BigInt(`0b${Array(i).fill('1').join('')}`))\n// Not using ** operator with bigints for old engines.\nexport const bitMask = (n: number) => (_2n << BigInt(n - 1)) - _1n;\n\n// DRBG\n\nconst u8n = (data?: any) => new Uint8Array(data); // creates Uint8Array\nconst u8fr = (arr: any) => Uint8Array.from(arr); // another shortcut\ntype Pred<T> = (v: Uint8Array) => T | undefined;\n/**\n * Minimal HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n * @returns function that will call DRBG until 2nd arg returns something meaningful\n * @example\n *   const drbg = createHmacDRBG<Key>(32, 32, hmac);\n *   drbg(seed, bytesToKey); // bytesToKey must return Key or undefined\n */\nexport function createHmacDrbg<T>(\n  hashLen: number,\n  qByteLen: number,\n  hmacFn: (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array\n): (seed: Uint8Array, predicate: Pred<T>) => T {\n  if (typeof hashLen !== 'number' || hashLen < 2) throw new Error('hashLen must be a number');\n  if (typeof qByteLen !== 'number' || qByteLen < 2) throw new Error('qByteLen must be a number');\n  if (typeof hmacFn !== 'function') throw new Error('hmacFn must be a function');\n  // Step B, Step C: set hashLen to 8*ceil(hlen/8)\n  let v = u8n(hashLen); // Minimal non-full-spec HMAC-DRBG from NIST 800-90 for RFC6979 sigs.\n  let k = u8n(hashLen); // Steps B and C of RFC6979 3.2: set hashLen, in our case always same\n  let i = 0; // Iterations counter, will throw when over 1000\n  const reset = () => {\n    v.fill(1);\n    k.fill(0);\n    i = 0;\n  };\n  const h = (...b: Uint8Array[]) => hmacFn(k, v, ...b); // hmac(k)(v, ...values)\n  const reseed = (seed = u8n()) => {\n    // HMAC-DRBG reseed() function. Steps D-G\n    k = h(u8fr([0x00]), seed); // k = hmac(k || v || 0x00 || seed)\n    v = h(); // v = hmac(k || v)\n    if (seed.length === 0) return;\n    k = h(u8fr([0x01]), seed); // k = hmac(k || v || 0x01 || seed)\n    v = h(); // v = hmac(k || v)\n  };\n  const gen = () => {\n    // HMAC-DRBG generate() function\n    if (i++ >= 1000) throw new Error('drbg: tried 1000 values');\n    let len = 0;\n    const out: Uint8Array[] = [];\n    while (len < qByteLen) {\n      v = h();\n      const sl = v.slice();\n      out.push(sl);\n      len += v.length;\n    }\n    return concatBytes(...out);\n  };\n  const genUntil = (seed: Uint8Array, pred: Pred<T>): T => {\n    reset();\n    reseed(seed); // Steps D-G\n    let res: T | undefined = undefined; // Step H: grind until k is in [1..n-1]\n    while (!(res = pred(gen()))) reseed();\n    reset();\n    return res;\n  };\n  return genUntil;\n}\n\n// Validating curves and fields\n\nconst validatorFns = {\n  bigint: (val: any) => typeof val === 'bigint',\n  function: (val: any) => typeof val === 'function',\n  boolean: (val: any) => typeof val === 'boolean',\n  string: (val: any) => typeof val === 'string',\n  isSafeInteger: (val: any) => Number.isSafeInteger(val),\n  array: (val: any) => Array.isArray(val),\n  field: (val: any, object: any) => (object as any).Fp.isValid(val),\n  hash: (val: any) => typeof val === 'function' && Number.isSafeInteger(val.outputLen),\n} as const;\ntype Validator = keyof typeof validatorFns;\ntype ValMap<T extends Record<string, any>> = { [K in keyof T]?: Validator };\n// type Record<K extends string | number | symbol, T> = { [P in K]: T; }\n\nexport function validateObject<T extends Record<string, any>>(\n  object: T,\n  validators: ValMap<T>,\n  optValidators: ValMap<T> = {}\n) {\n  const checkField = (fieldName: keyof T, type: Validator, isOptional: boolean) => {\n    const checkVal = validatorFns[type];\n    if (typeof checkVal !== 'function')\n      throw new Error(`Invalid validator \"${type}\", expected function`);\n\n    const val = object[fieldName as keyof typeof object];\n    if (isOptional && val === undefined) return;\n    if (!checkVal(val, object)) {\n      throw new Error(\n        `Invalid param ${String(fieldName)}=${val} (${typeof val}), expected ${type}`\n      );\n    }\n  };\n  for (const [fieldName, type] of Object.entries(validators)) checkField(fieldName, type!, false);\n  for (const [fieldName, type] of Object.entries(optValidators)) checkField(fieldName, type!, true);\n  return object;\n}\n// validate type tests\n// const o: { a: number; b: number; c: number } = { a: 1, b: 5, c: 6 };\n// const z0 = validateObject(o, { a: 'isSafeInteger' }, { c: 'bigint' }); // Ok!\n// // Should fail type-check\n// const z1 = validateObject(o, { a: 'tmp' }, { c: 'zz' });\n// const z2 = validateObject(o, { a: 'isSafeInteger' }, { c: 'zz' });\n// const z3 = validateObject(o, { test: 'boolean', z: 'bug' });\n// const z4 = validateObject(o, { a: 'boolean', z: 'bug' });\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Utilities for modular arithmetics and finite fields\nimport {\n  bitMask,\n  numberToBytesBE,\n  numberToBytesLE,\n  bytesToNumberBE,\n  bytesToNumberLE,\n  ensureBytes,\n  validateObject,\n} from './utils.js';\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3);\n// prettier-ignore\nconst _4n = BigInt(4), _5n = BigInt(5), _8n = BigInt(8);\n// prettier-ignore\nconst _9n = BigInt(9), _16n = BigInt(16);\n\n// Calculates a modulo b\nexport function mod(a: bigint, b: bigint): bigint {\n  const result = a % b;\n  return result >= _0n ? result : b + result;\n}\n/**\n * Efficiently exponentiate num to power and do modular division.\n * Unsafe in some contexts: uses ladder, so can expose bigint bits.\n * @example\n * powMod(2n, 6n, 11n) // 64n % 11n == 9n\n */\n// TODO: use field version && remove\nexport function pow(num: bigint, power: bigint, modulo: bigint): bigint {\n  if (modulo <= _0n || power < _0n) throw new Error('Expected power/modulo > 0');\n  if (modulo === _1n) return _0n;\n  let res = _1n;\n  while (power > _0n) {\n    if (power & _1n) res = (res * num) % modulo;\n    num = (num * num) % modulo;\n    power >>= _1n;\n  }\n  return res;\n}\n\n// Does x ^ (2 ^ power) mod p. pow2(30, 4) == 30 ^ (2 ^ 4)\nexport function pow2(x: bigint, power: bigint, modulo: bigint): bigint {\n  let res = x;\n  while (power-- > _0n) {\n    res *= res;\n    res %= modulo;\n  }\n  return res;\n}\n\n// Inverses number over modulo\nexport function invert(number: bigint, modulo: bigint): bigint {\n  if (number === _0n || modulo <= _0n) {\n    throw new Error(`invert: expected positive integers, got n=${number} mod=${modulo}`);\n  }\n  // Eucledian GCD https://brilliant.org/wiki/extended-euclidean-algorithm/\n  // Fermat's little theorem \"CT-like\" version inv(n) = n^(m-2) mod m is 30x slower.\n  let a = mod(number, modulo);\n  let b = modulo;\n  // prettier-ignore\n  let x = _0n, y = _1n, u = _1n, v = _0n;\n  while (a !== _0n) {\n    // JIT applies optimization if those two lines follow each other\n    const q = b / a;\n    const r = b % a;\n    const m = x - u * q;\n    const n = y - v * q;\n    // prettier-ignore\n    b = a, a = r, x = u, y = v, u = m, v = n;\n  }\n  const gcd = b;\n  if (gcd !== _1n) throw new Error('invert: does not exist');\n  return mod(x, modulo);\n}\n\n// Tonelli-Shanks algorithm\n// Paper 1: https://eprint.iacr.org/2012/685.pdf (page 12)\n// Paper 2: Square Roots from 1; 24, 51, 10 to Dan Shanks\nexport function tonelliShanks(P: bigint) {\n  // Legendre constant: used to calculate Legendre symbol (a | p),\n  // which denotes the value of a^((p-1)/2) (mod p).\n  // (a | p) ≡ 1    if a is a square (mod p)\n  // (a | p) ≡ -1   if a is not a square (mod p)\n  // (a | p) ≡ 0    if a ≡ 0 (mod p)\n  const legendreC = (P - _1n) / _2n;\n\n  let Q: bigint, S: number, Z: bigint;\n  // Step 1: By factoring out powers of 2 from p - 1,\n  // find q and s such that p - 1 = q*(2^s) with q odd\n  for (Q = P - _1n, S = 0; Q % _2n === _0n; Q /= _2n, S++);\n\n  // Step 2: Select a non-square z such that (z | p) ≡ -1 and set c ≡ zq\n  for (Z = _2n; Z < P && pow(Z, legendreC, P) !== P - _1n; Z++);\n\n  // Fast-path\n  if (S === 1) {\n    const p1div4 = (P + _1n) / _4n;\n    return function tonelliFast<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Slow-path\n  const Q1div2 = (Q + _1n) / _2n;\n  return function tonelliSlow<T>(Fp: IField<T>, n: T): T {\n    // Step 0: Check that n is indeed a square: (n | p) should not be ≡ -1\n    if (Fp.pow(n, legendreC) === Fp.neg(Fp.ONE)) throw new Error('Cannot find square root');\n    let r = S;\n    // TODO: will fail at Fp2/etc\n    let g = Fp.pow(Fp.mul(Fp.ONE, Z), Q); // will update both x and b\n    let x = Fp.pow(n, Q1div2); // first guess at the square root\n    let b = Fp.pow(n, Q); // first guess at the fudge factor\n\n    while (!Fp.eql(b, Fp.ONE)) {\n      if (Fp.eql(b, Fp.ZERO)) return Fp.ZERO; // https://en.wikipedia.org/wiki/Tonelli%E2%80%93Shanks_algorithm (4. If t = 0, return r = 0)\n      // Find m such b^(2^m)==1\n      let m = 1;\n      for (let t2 = Fp.sqr(b); m < r; m++) {\n        if (Fp.eql(t2, Fp.ONE)) break;\n        t2 = Fp.sqr(t2); // t2 *= t2\n      }\n      // NOTE: r-m-1 can be bigger than 32, need to convert to bigint before shift, otherwise there will be overflow\n      const ge = Fp.pow(g, _1n << BigInt(r - m - 1)); // ge = 2^(r-m-1)\n      g = Fp.sqr(ge); // g = ge * ge\n      x = Fp.mul(x, ge); // x *= ge\n      b = Fp.mul(b, g); // b *= g\n      r = m;\n    }\n    return x;\n  };\n}\n\nexport function FpSqrt(P: bigint) {\n  // NOTE: different algorithms can give different roots, it is up to user to decide which one they want.\n  // For example there is FpSqrtOdd/FpSqrtEven to choice root based on oddness (used for hash-to-curve).\n\n  // P ≡ 3 (mod 4)\n  // √n = n^((P+1)/4)\n  if (P % _4n === _3n) {\n    // Not all roots possible!\n    // const ORDER =\n    //   0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn;\n    // const NUM = 72057594037927816n;\n    const p1div4 = (P + _1n) / _4n;\n    return function sqrt3mod4<T>(Fp: IField<T>, n: T) {\n      const root = Fp.pow(n, p1div4);\n      // Throw if root**2 != n\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // Atkin algorithm for q ≡ 5 (mod 8), https://eprint.iacr.org/2012/685.pdf (page 10)\n  if (P % _8n === _5n) {\n    const c1 = (P - _5n) / _8n;\n    return function sqrt5mod8<T>(Fp: IField<T>, n: T) {\n      const n2 = Fp.mul(n, _2n);\n      const v = Fp.pow(n2, c1);\n      const nv = Fp.mul(n, v);\n      const i = Fp.mul(Fp.mul(nv, _2n), v);\n      const root = Fp.mul(nv, Fp.sub(i, Fp.ONE));\n      if (!Fp.eql(Fp.sqr(root), n)) throw new Error('Cannot find square root');\n      return root;\n    };\n  }\n\n  // P ≡ 9 (mod 16)\n  if (P % _16n === _9n) {\n    // NOTE: tonelli is too slow for bls-Fp2 calculations even on start\n    // Means we cannot use sqrt for constants at all!\n    //\n    // const c1 = Fp.sqrt(Fp.negate(Fp.ONE)); //  1. c1 = sqrt(-1) in F, i.e., (c1^2) == -1 in F\n    // const c2 = Fp.sqrt(c1);                //  2. c2 = sqrt(c1) in F, i.e., (c2^2) == c1 in F\n    // const c3 = Fp.sqrt(Fp.negate(c1));     //  3. c3 = sqrt(-c1) in F, i.e., (c3^2) == -c1 in F\n    // const c4 = (P + _7n) / _16n;           //  4. c4 = (q + 7) / 16        # Integer arithmetic\n    // sqrt = (x) => {\n    //   let tv1 = Fp.pow(x, c4);             //  1. tv1 = x^c4\n    //   let tv2 = Fp.mul(c1, tv1);           //  2. tv2 = c1 * tv1\n    //   const tv3 = Fp.mul(c2, tv1);         //  3. tv3 = c2 * tv1\n    //   let tv4 = Fp.mul(c3, tv1);           //  4. tv4 = c3 * tv1\n    //   const e1 = Fp.equals(Fp.square(tv2), x); //  5.  e1 = (tv2^2) == x\n    //   const e2 = Fp.equals(Fp.square(tv3), x); //  6.  e2 = (tv3^2) == x\n    //   tv1 = Fp.cmov(tv1, tv2, e1); //  7. tv1 = CMOV(tv1, tv2, e1)  # Select tv2 if (tv2^2) == x\n    //   tv2 = Fp.cmov(tv4, tv3, e2); //  8. tv2 = CMOV(tv4, tv3, e2)  # Select tv3 if (tv3^2) == x\n    //   const e3 = Fp.equals(Fp.square(tv2), x); //  9.  e3 = (tv2^2) == x\n    //   return Fp.cmov(tv1, tv2, e3); //  10.  z = CMOV(tv1, tv2, e3)  # Select the sqrt from tv1 and tv2\n    // }\n  }\n\n  // Other cases: Tonelli-Shanks algorithm\n  return tonelliShanks(P);\n}\n\n// Little-endian check for first LE bit (last BE bit);\nexport const isNegativeLE = (num: bigint, modulo: bigint) => (mod(num, modulo) & _1n) === _1n;\n\n// Currently completly inconsistent naming:\n// - readable: add, mul, sqr, sqrt, inv, div, pow, eq, sub\n// - unreadable mess: addition, multiply, square, squareRoot, inversion, divide, power, equals, subtract\n\n// Field is not always over prime, Fp2 for example has ORDER(q)=p^m\nexport interface IField<T> {\n  ORDER: bigint;\n  BYTES: number;\n  BITS: number;\n  MASK: bigint;\n  ZERO: T;\n  ONE: T;\n  // 1-arg\n  create: (num: T) => T;\n  isValid: (num: T) => boolean;\n  is0: (num: T) => boolean;\n  neg(num: T): T;\n  inv(num: T): T;\n  sqrt(num: T): T;\n  sqr(num: T): T;\n  // 2-args\n  eql(lhs: T, rhs: T): boolean;\n  add(lhs: T, rhs: T): T;\n  sub(lhs: T, rhs: T): T;\n  mul(lhs: T, rhs: T | bigint): T;\n  pow(lhs: T, power: bigint): T;\n  div(lhs: T, rhs: T | bigint): T;\n  // N for NonNormalized (for now)\n  addN(lhs: T, rhs: T): T;\n  subN(lhs: T, rhs: T): T;\n  mulN(lhs: T, rhs: T | bigint): T;\n  sqrN(num: T): T;\n\n  // Optional\n  // Should be same as sgn0 function in https://datatracker.ietf.org/doc/draft-irtf-cfrg-hash-to-curve/\n  // NOTE: sgn0 is 'negative in LE', which is same as odd. And negative in LE is kinda strange definition anyway.\n  isOdd?(num: T): boolean; // Odd instead of even since we have it for Fp2\n  // legendre?(num: T): T;\n  pow(lhs: T, power: bigint): T;\n  invertBatch: (lst: T[]) => T[];\n  toBytes(num: T): Uint8Array;\n  fromBytes(bytes: Uint8Array): T;\n  // If c is False, CMOV returns a, otherwise it returns b.\n  cmov(a: T, b: T, c: boolean): T;\n}\n// prettier-ignore\nconst FIELD_FIELDS = [\n  'create', 'isValid', 'is0', 'neg', 'inv', 'sqrt', 'sqr',\n  'eql', 'add', 'sub', 'mul', 'pow', 'div',\n  'addN', 'subN', 'mulN', 'sqrN'\n] as const;\nexport function validateField<T>(field: IField<T>) {\n  const initial = {\n    ORDER: 'bigint',\n    MASK: 'bigint',\n    BYTES: 'isSafeInteger',\n    BITS: 'isSafeInteger',\n  } as Record<string, string>;\n  const opts = FIELD_FIELDS.reduce((map, val: string) => {\n    map[val] = 'function';\n    return map;\n  }, initial);\n  return validateObject(field, opts);\n}\n\n// Generic field functions\nexport function FpPow<T>(f: IField<T>, num: T, power: bigint): T {\n  // Should have same speed as pow for bigints\n  // TODO: benchmark!\n  if (power < _0n) throw new Error('Expected power > 0');\n  if (power === _0n) return f.ONE;\n  if (power === _1n) return num;\n  let p = f.ONE;\n  let d = num;\n  while (power > _0n) {\n    if (power & _1n) p = f.mul(p, d);\n    d = f.sqr(d);\n    power >>= _1n;\n  }\n  return p;\n}\n\n// 0 is non-invertible: non-batched version will throw on 0\nexport function FpInvertBatch<T>(f: IField<T>, nums: T[]): T[] {\n  const tmp = new Array(nums.length);\n  // Walk from first to last, multiply them by each other MOD p\n  const lastMultiplied = nums.reduce((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = acc;\n    return f.mul(acc, num);\n  }, f.ONE);\n  // Invert last element\n  const inverted = f.inv(lastMultiplied);\n  // Walk from last to first, multiply them by inverted each other MOD p\n  nums.reduceRight((acc, num, i) => {\n    if (f.is0(num)) return acc;\n    tmp[i] = f.mul(acc, tmp[i]);\n    return f.mul(acc, num);\n  }, inverted);\n  return tmp;\n}\n\nexport function FpDiv<T>(f: IField<T>, lhs: T, rhs: T | bigint): T {\n  return f.mul(lhs, typeof rhs === 'bigint' ? invert(rhs, f.ORDER) : f.inv(rhs));\n}\n\n// This function returns True whenever the value x is a square in the field F.\nexport function FpIsSquare<T>(f: IField<T>) {\n  const legendreConst = (f.ORDER - _1n) / _2n; // Integer arithmetic\n  return (x: T): boolean => {\n    const p = f.pow(x, legendreConst);\n    return f.eql(p, f.ZERO) || f.eql(p, f.ONE);\n  };\n}\n\n// CURVE.n lengths\nexport function nLength(n: bigint, nBitLength?: number) {\n  // Bit size, byte size of CURVE.n\n  const _nBitLength = nBitLength !== undefined ? nBitLength : n.toString(2).length;\n  const nByteLength = Math.ceil(_nBitLength / 8);\n  return { nBitLength: _nBitLength, nByteLength };\n}\n\ntype FpField = IField<bigint> & Required<Pick<IField<bigint>, 'isOdd'>>;\n/**\n * Initializes a galois field over prime. Non-primes are not supported for now.\n * Do not init in loop: slow. Very fragile: always run a benchmark on change.\n * Major performance gains:\n * a) non-normalized operations like mulN instead of mul\n * b) `Object.freeze`\n * c) Same object shape: never add or remove keys\n * @param ORDER prime positive bigint\n * @param bitLen how many bits the field consumes\n * @param isLE (def: false) if encoding / decoding should be in little-endian\n * @param redef optional faster redefinitions of sqrt and other methods\n */\nexport function Field(\n  ORDER: bigint,\n  bitLen?: number,\n  isLE = false,\n  redef: Partial<IField<bigint>> = {}\n): Readonly<FpField> {\n  if (ORDER <= _0n) throw new Error(`Expected Fp ORDER > 0, got ${ORDER}`);\n  const { nBitLength: BITS, nByteLength: BYTES } = nLength(ORDER, bitLen);\n  if (BYTES > 2048) throw new Error('Field lengths over 2048 bytes are not supported');\n  const sqrtP = FpSqrt(ORDER);\n  const f: Readonly<FpField> = Object.freeze({\n    ORDER,\n    BITS,\n    BYTES,\n    MASK: bitMask(BITS),\n    ZERO: _0n,\n    ONE: _1n,\n    create: (num) => mod(num, ORDER),\n    isValid: (num) => {\n      if (typeof num !== 'bigint')\n        throw new Error(`Invalid field element: expected bigint, got ${typeof num}`);\n      return _0n <= num && num < ORDER; // 0 is valid element, but it's not invertible\n    },\n    is0: (num) => num === _0n,\n    isOdd: (num) => (num & _1n) === _1n,\n    neg: (num) => mod(-num, ORDER),\n    eql: (lhs, rhs) => lhs === rhs,\n\n    sqr: (num) => mod(num * num, ORDER),\n    add: (lhs, rhs) => mod(lhs + rhs, ORDER),\n    sub: (lhs, rhs) => mod(lhs - rhs, ORDER),\n    mul: (lhs, rhs) => mod(lhs * rhs, ORDER),\n    pow: (num, power) => FpPow(f, num, power),\n    div: (lhs, rhs) => mod(lhs * invert(rhs, ORDER), ORDER),\n\n    // Same as above, but doesn't normalize\n    sqrN: (num) => num * num,\n    addN: (lhs, rhs) => lhs + rhs,\n    subN: (lhs, rhs) => lhs - rhs,\n    mulN: (lhs, rhs) => lhs * rhs,\n\n    inv: (num) => invert(num, ORDER),\n    sqrt: redef.sqrt || ((n) => sqrtP(f, n)),\n    invertBatch: (lst) => FpInvertBatch(f, lst),\n    // TODO: do we really need constant cmov?\n    // We don't have const-time bigints anyway, so probably will be not very useful\n    cmov: (a, b, c) => (c ? b : a),\n    toBytes: (num) => (isLE ? numberToBytesLE(num, BYTES) : numberToBytesBE(num, BYTES)),\n    fromBytes: (bytes) => {\n      if (bytes.length !== BYTES)\n        throw new Error(`Fp.fromBytes: expected ${BYTES}, got ${bytes.length}`);\n      return isLE ? bytesToNumberLE(bytes) : bytesToNumberBE(bytes);\n    },\n  } as FpField);\n  return Object.freeze(f);\n}\n\nexport function FpSqrtOdd<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? root : Fp.neg(root);\n}\n\nexport function FpSqrtEven<T>(Fp: IField<T>, elm: T) {\n  if (!Fp.isOdd) throw new Error(`Field doesn't have isOdd`);\n  const root = Fp.sqrt(elm);\n  return Fp.isOdd(root) ? Fp.neg(root) : root;\n}\n\n/**\n * FIPS 186 B.4.1-compliant \"constant-time\" private key generation utility.\n * Can take (n+8) or more bytes of uniform input e.g. from CSPRNG or KDF\n * and convert them into private scalar, with the modulo bias being neglible.\n * Needs at least 40 bytes of input for 32-byte private key.\n * https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/\n * @param hash hash output from SHA3 or a similar function\n * @returns valid private scalar\n */\nexport function hashToPrivateScalar(\n  hash: string | Uint8Array,\n  groupOrder: bigint,\n  isLE = false\n): bigint {\n  hash = ensureBytes('privateHash', hash);\n  const hashLen = hash.length;\n  const minLen = nLength(groupOrder).nByteLength + 8;\n  if (minLen < 24 || hashLen < minLen || hashLen > 1024)\n    throw new Error(`hashToPrivateScalar: expected ${minLen}-1024 bytes of input, got ${hashLen}`);\n  const num = isLE ? bytesToNumberLE(hash) : bytesToNumberBE(hash);\n  return mod(num, groupOrder - _1n) + _1n;\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Abelian group utilities\nimport { IField, validateField, nLength } from './modular.js';\nimport { validateObject } from './utils.js';\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\n\nexport type AffinePoint<T> = {\n  x: T;\n  y: T;\n} & { z?: never; t?: never };\n\nexport interface Group<T extends Group<T>> {\n  double(): T;\n  negate(): T;\n  add(other: T): T;\n  subtract(other: T): T;\n  equals(other: T): boolean;\n  multiply(scalar: bigint): T;\n}\n\nexport type GroupConstructor<T> = {\n  BASE: T;\n  ZERO: T;\n};\nexport type Mapper<T> = (i: T[]) => T[];\n\n// Elliptic curve multiplication of Point by scalar. Fragile.\n// Scalars should always be less than curve order: this should be checked inside of a curve itself.\n// Creates precomputation tables for fast multiplication:\n// - private scalar is split by fixed size windows of W bits\n// - every window point is collected from window's table & added to accumulator\n// - since windows are different, same point inside tables won't be accessed more than once per calc\n// - each multiplication is 'Math.ceil(CURVE_ORDER / 𝑊) + 1' point additions (fixed for any scalar)\n// - +1 window is neccessary for wNAF\n// - wNAF reduces table size: 2x less memory + 2x faster generation, but 10% slower multiplication\n// TODO: Research returning 2d JS array of windows, instead of a single window. This would allow\n// windows to be in different memory locations\nexport function wNAF<T extends Group<T>>(c: GroupConstructor<T>, bits: number) {\n  const constTimeNegate = (condition: boolean, item: T): T => {\n    const neg = item.negate();\n    return condition ? neg : item;\n  };\n  const opts = (W: number) => {\n    const windows = Math.ceil(bits / W) + 1; // +1, because\n    const windowSize = 2 ** (W - 1); // -1 because we skip zero\n    return { windows, windowSize };\n  };\n  return {\n    constTimeNegate,\n    // non-const time multiplication ladder\n    unsafeLadder(elm: T, n: bigint) {\n      let p = c.ZERO;\n      let d: T = elm;\n      while (n > _0n) {\n        if (n & _1n) p = p.add(d);\n        d = d.double();\n        n >>= _1n;\n      }\n      return p;\n    },\n\n    /**\n     * Creates a wNAF precomputation window. Used for caching.\n     * Default window size is set by `utils.precompute()` and is equal to 8.\n     * Number of precomputed points depends on the curve size:\n     * 2^(𝑊−1) * (Math.ceil(𝑛 / 𝑊) + 1), where:\n     * - 𝑊 is the window size\n     * - 𝑛 is the bitlength of the curve order.\n     * For a 256-bit curve and window size 8, the number of precomputed points is 128 * 33 = 4224.\n     * @returns precomputed point tables flattened to a single array\n     */\n    precomputeWindow(elm: T, W: number): Group<T>[] {\n      const { windows, windowSize } = opts(W);\n      const points: T[] = [];\n      let p: T = elm;\n      let base = p;\n      for (let window = 0; window < windows; window++) {\n        base = p;\n        points.push(base);\n        // =1, because we skip zero\n        for (let i = 1; i < windowSize; i++) {\n          base = base.add(p);\n          points.push(base);\n        }\n        p = base.double();\n      }\n      return points;\n    },\n\n    /**\n     * Implements ec multiplication using precomputed tables and w-ary non-adjacent form.\n     * @param W window size\n     * @param precomputes precomputed tables\n     * @param n scalar (we don't check here, but should be less than curve order)\n     * @returns real and fake (for const-time) points\n     */\n    wNAF(W: number, precomputes: T[], n: bigint): { p: T; f: T } {\n      // TODO: maybe check that scalar is less than group order? wNAF behavious is undefined otherwise\n      // But need to carefully remove other checks before wNAF. ORDER == bits here\n      const { windows, windowSize } = opts(W);\n\n      let p = c.ZERO;\n      let f = c.BASE;\n\n      const mask = BigInt(2 ** W - 1); // Create mask with W ones: 0b1111 for W=4 etc.\n      const maxNumber = 2 ** W;\n      const shiftBy = BigInt(W);\n\n      for (let window = 0; window < windows; window++) {\n        const offset = window * windowSize;\n        // Extract W bits.\n        let wbits = Number(n & mask);\n\n        // Shift number by W bits.\n        n >>= shiftBy;\n\n        // If the bits are bigger than max size, we'll split those.\n        // +224 => 256 - 32\n        if (wbits > windowSize) {\n          wbits -= maxNumber;\n          n += _1n;\n        }\n\n        // This code was first written with assumption that 'f' and 'p' will never be infinity point:\n        // since each addition is multiplied by 2 ** W, it cannot cancel each other. However,\n        // there is negate now: it is possible that negated element from low value\n        // would be the same as high element, which will create carry into next window.\n        // It's not obvious how this can fail, but still worth investigating later.\n\n        // Check if we're onto Zero point.\n        // Add random point inside current window to f.\n        const offset1 = offset;\n        const offset2 = offset + Math.abs(wbits) - 1; // -1 because we skip zero\n        const cond1 = window % 2 !== 0;\n        const cond2 = wbits < 0;\n        if (wbits === 0) {\n          // The most important part for const-time getPublicKey\n          f = f.add(constTimeNegate(cond1, precomputes[offset1]));\n        } else {\n          p = p.add(constTimeNegate(cond2, precomputes[offset2]));\n        }\n      }\n      // JIT-compiler should not eliminate f here, since it will later be used in normalizeZ()\n      // Even if the variable is still unused, there are some checks which will\n      // throw an exception, so compiler needs to prove they won't happen, which is hard.\n      // At this point there is a way to F be infinity-point even if p is not,\n      // which makes it less const-time: around 1 bigint multiply.\n      return { p, f };\n    },\n\n    wNAFCached(P: T, precomputesMap: Map<T, T[]>, n: bigint, transform: Mapper<T>): { p: T; f: T } {\n      // @ts-ignore\n      const W: number = P._WINDOW_SIZE || 1;\n      // Calculate precomputes on a first run, reuse them after\n      let comp = precomputesMap.get(P);\n      if (!comp) {\n        comp = this.precomputeWindow(P, W) as T[];\n        if (W !== 1) {\n          precomputesMap.set(P, transform(comp));\n        }\n      }\n      return this.wNAF(W, comp, n);\n    },\n  };\n}\n\n// Generic BasicCurve interface: works even for polynomial fields (BLS): P, n, h would be ok.\n// Though generator can be different (Fp2 / Fp6 for BLS).\nexport type BasicCurve<T> = {\n  Fp: IField<T>; // Field over which we'll do calculations (Fp)\n  n: bigint; // Curve order, total count of valid points in the field\n  nBitLength?: number; // bit length of curve order\n  nByteLength?: number; // byte length of curve order\n  h: bigint; // cofactor. we can assign default=1, but users will just ignore it w/o validation\n  hEff?: bigint; // Number to multiply to clear cofactor\n  Gx: T; // base point X coordinate\n  Gy: T; // base point Y coordinate\n  allowInfinityPoint?: boolean; // bls12-381 requires it. ZERO point is valid, but invalid pubkey\n};\n\nexport function validateBasic<FP, T>(curve: BasicCurve<FP> & T) {\n  validateField(curve.Fp);\n  validateObject(\n    curve,\n    {\n      n: 'bigint',\n      h: 'bigint',\n      Gx: 'field',\n      Gy: 'field',\n    },\n    {\n      nBitLength: 'isSafeInteger',\n      nByteLength: 'isSafeInteger',\n    }\n  );\n  // Set defaults\n  return Object.freeze({\n    ...nLength(curve.n, curve.nBitLength),\n    ...curve,\n    ...{ p: curve.Fp.ORDER },\n  } as const);\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// Short Weierstrass curve. The formula is: y² = x³ + ax + b\nimport * as mod from './modular.js';\nimport * as ut from './utils.js';\nimport { CHash, Hex, PrivKey, ensureBytes } from './utils.js';\nimport { Group, GroupConstructor, wNAF, BasicCurve, validateBasic, AffinePoint } from './curve.js';\n\nexport type { AffinePoint };\ntype HmacFnSync = (key: Uint8Array, ...messages: Uint8Array[]) => Uint8Array;\ntype EndomorphismOpts = {\n  beta: bigint;\n  splitScalar: (k: bigint) => { k1neg: boolean; k1: bigint; k2neg: boolean; k2: bigint };\n};\nexport type BasicWCurve<T> = BasicCurve<T> & {\n  // Params: a, b\n  a: T;\n  b: T;\n\n  // Optional params\n  allowedPrivateKeyLengths?: readonly number[]; // for P521\n  wrapPrivateKey?: boolean; // bls12-381 requires mod(n) instead of rejecting keys >= n\n  endo?: EndomorphismOpts; // Endomorphism options for Koblitz curves\n  // When a cofactor != 1, there can be an effective methods to:\n  // 1. Determine whether a point is torsion-free\n  isTorsionFree?: (c: ProjConstructor<T>, point: ProjPointType<T>) => boolean;\n  // 2. Clear torsion component\n  clearCofactor?: (c: ProjConstructor<T>, point: ProjPointType<T>) => ProjPointType<T>;\n};\n\ntype Entropy = Hex | true;\nexport type SignOpts = { lowS?: boolean; extraEntropy?: Entropy; prehash?: boolean };\nexport type VerOpts = { lowS?: boolean; prehash?: boolean };\n\n/**\n * ### Design rationale for types\n *\n * * Interaction between classes from different curves should fail:\n *   `k256.Point.BASE.add(p256.Point.BASE)`\n * * For this purpose we want to use `instanceof` operator, which is fast and works during runtime\n * * Different calls of `curve()` would return different classes -\n *   `curve(params) !== curve(params)`: if somebody decided to monkey-patch their curve,\n *   it won't affect others\n *\n * TypeScript can't infer types for classes created inside a function. Classes is one instance of nominative types in TypeScript and interfaces only check for shape, so it's hard to create unique type for every function call.\n *\n * We can use generic types via some param, like curve opts, but that would:\n *     1. Enable interaction between `curve(params)` and `curve(params)` (curves of same params)\n *     which is hard to debug.\n *     2. Params can be generic and we can't enforce them to be constant value:\n *     if somebody creates curve from non-constant params,\n *     it would be allowed to interact with other curves with non-constant params\n *\n * TODO: https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#unique-symbol\n */\n\n// Instance for 3d XYZ points\nexport interface ProjPointType<T> extends Group<ProjPointType<T>> {\n  readonly px: T;\n  readonly py: T;\n  readonly pz: T;\n  get x(): T;\n  get y(): T;\n  multiply(scalar: bigint): ProjPointType<T>;\n  toAffine(iz?: T): AffinePoint<T>;\n  isTorsionFree(): boolean;\n  clearCofactor(): ProjPointType<T>;\n  assertValidity(): void;\n  hasEvenY(): boolean;\n  toRawBytes(isCompressed?: boolean): Uint8Array;\n  toHex(isCompressed?: boolean): string;\n\n  multiplyUnsafe(scalar: bigint): ProjPointType<T>;\n  multiplyAndAddUnsafe(Q: ProjPointType<T>, a: bigint, b: bigint): ProjPointType<T> | undefined;\n  _setWindowSize(windowSize: number): void;\n}\n// Static methods for 3d XYZ points\nexport interface ProjConstructor<T> extends GroupConstructor<ProjPointType<T>> {\n  new (x: T, y: T, z: T): ProjPointType<T>;\n  fromAffine(p: AffinePoint<T>): ProjPointType<T>;\n  fromHex(hex: Hex): ProjPointType<T>;\n  fromPrivateKey(privateKey: PrivKey): ProjPointType<T>;\n  normalizeZ(points: ProjPointType<T>[]): ProjPointType<T>[];\n}\n\nexport type CurvePointsType<T> = BasicWCurve<T> & {\n  // Bytes\n  fromBytes?: (bytes: Uint8Array) => AffinePoint<T>;\n  toBytes?: (c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => Uint8Array;\n};\n\nfunction validatePointOpts<T>(curve: CurvePointsType<T>) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      a: 'field',\n      b: 'field',\n    },\n    {\n      allowedPrivateKeyLengths: 'array',\n      wrapPrivateKey: 'boolean',\n      isTorsionFree: 'function',\n      clearCofactor: 'function',\n      allowInfinityPoint: 'boolean',\n      fromBytes: 'function',\n      toBytes: 'function',\n    }\n  );\n  const { endo, Fp, a } = opts;\n  if (endo) {\n    if (!Fp.eql(a, Fp.ZERO)) {\n      throw new Error('Endomorphism can only be defined for Koblitz curves that have a=0');\n    }\n    if (\n      typeof endo !== 'object' ||\n      typeof endo.beta !== 'bigint' ||\n      typeof endo.splitScalar !== 'function'\n    ) {\n      throw new Error('Expected endomorphism with beta: bigint and splitScalar: function');\n    }\n  }\n  return Object.freeze({ ...opts } as const);\n}\n\nexport type CurvePointsRes<T> = {\n  ProjectivePoint: ProjConstructor<T>;\n  normPrivateKeyToScalar: (key: PrivKey) => bigint;\n  weierstrassEquation: (x: T) => T;\n  isWithinCurveOrder: (num: bigint) => boolean;\n};\n\n// ASN.1 DER encoding utilities\nconst { bytesToNumberBE: b2n, hexToBytes: h2b } = ut;\nexport const DER = {\n  // asn.1 DER encoding utils\n  Err: class DERErr extends Error {\n    constructor(m = '') {\n      super(m);\n    }\n  },\n  _parseInt(data: Uint8Array): { d: bigint; l: Uint8Array } {\n    const { Err: E } = DER;\n    if (data.length < 2 || data[0] !== 0x02) throw new E('Invalid signature integer tag');\n    const len = data[1];\n    const res = data.subarray(2, len + 2);\n    if (!len || res.length !== len) throw new E('Invalid signature integer: wrong length');\n    // https://crypto.stackexchange.com/a/57734 Leftmost bit of first byte is 'negative' flag,\n    // since we always use positive integers here. It must always be empty:\n    // - add zero byte if exists\n    // - if next byte doesn't have a flag, leading zero is not allowed (minimal encoding)\n    if (res[0] & 0b10000000) throw new E('Invalid signature integer: negative');\n    if (res[0] === 0x00 && !(res[1] & 0b10000000))\n      throw new E('Invalid signature integer: unnecessary leading zero');\n    return { d: b2n(res), l: data.subarray(len + 2) }; // d is data, l is left\n  },\n  toSig(hex: string | Uint8Array): { r: bigint; s: bigint } {\n    // parse DER signature\n    const { Err: E } = DER;\n    const data = typeof hex === 'string' ? h2b(hex) : hex;\n    if (!(data instanceof Uint8Array)) throw new Error('ui8a expected');\n    let l = data.length;\n    if (l < 2 || data[0] != 0x30) throw new E('Invalid signature tag');\n    if (data[1] !== l - 2) throw new E('Invalid signature: incorrect length');\n    const { d: r, l: sBytes } = DER._parseInt(data.subarray(2));\n    const { d: s, l: rBytesLeft } = DER._parseInt(sBytes);\n    if (rBytesLeft.length) throw new E('Invalid signature: left bytes after parsing');\n    return { r, s };\n  },\n  hexFromSig(sig: { r: bigint; s: bigint }): string {\n    // Add leading zero if first byte has negative bit enabled. More details in '_parseInt'\n    const slice = (s: string): string => (Number.parseInt(s[0], 16) & 0b1000 ? '00' + s : s);\n    const h = (num: number | bigint) => {\n      const hex = num.toString(16);\n      return hex.length & 1 ? `0${hex}` : hex;\n    };\n    const s = slice(h(sig.s));\n    const r = slice(h(sig.r));\n    const shl = s.length / 2;\n    const rhl = r.length / 2;\n    const sl = h(shl);\n    const rl = h(rhl);\n    return `30${h(rhl + shl + 4)}02${rl}${r}02${sl}${s}`;\n  },\n};\n\n// Be friendly to bad ECMAScript parsers by not using bigint literals\n// prettier-ignore\nconst _0n = BigInt(0), _1n = BigInt(1), _2n = BigInt(2), _3n = BigInt(3), _4n = BigInt(4);\n\nexport function weierstrassPoints<T>(opts: CurvePointsType<T>) {\n  const CURVE = validatePointOpts(opts);\n  const { Fp } = CURVE; // All curves has same field / group length as for now, but they can differ\n\n  const toBytes =\n    CURVE.toBytes ||\n    ((c: ProjConstructor<T>, point: ProjPointType<T>, isCompressed: boolean) => {\n      const a = point.toAffine();\n      return ut.concatBytes(Uint8Array.from([0x04]), Fp.toBytes(a.x), Fp.toBytes(a.y));\n    });\n  const fromBytes =\n    CURVE.fromBytes ||\n    ((bytes: Uint8Array) => {\n      // const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // if (head !== 0x04) throw new Error('Only non-compressed encoding is supported');\n      const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n      const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n      return { x, y };\n    });\n\n  /**\n   * y² = x³ + ax + b: Short weierstrass curve formula\n   * @returns y²\n   */\n  function weierstrassEquation(x: T): T {\n    const { a, b } = CURVE;\n    const x2 = Fp.sqr(x); // x * x\n    const x3 = Fp.mul(x2, x); // x2 * x\n    return Fp.add(Fp.add(x3, Fp.mul(x, a)), b); // x3 + a * x + b\n  }\n  // Validate whether the passed curve params are valid.\n  // We check if curve equation works for generator point.\n  // `assertValidity()` won't work: `isTorsionFree()` is not available at this point in bls12-381.\n  // ProjectivePoint class has not been initialized yet.\n  if (!Fp.eql(Fp.sqr(CURVE.Gy), weierstrassEquation(CURVE.Gx)))\n    throw new Error('bad generator point: equation left != right');\n\n  // Valid group elements reside in range 1..n-1\n  function isWithinCurveOrder(num: bigint): boolean {\n    return typeof num === 'bigint' && _0n < num && num < CURVE.n;\n  }\n  function assertGE(num: bigint) {\n    if (!isWithinCurveOrder(num)) throw new Error('Expected valid bigint: 0 < bigint < curve.n');\n  }\n  // Validates if priv key is valid and converts it to bigint.\n  // Supports options allowedPrivateKeyLengths and wrapPrivateKey.\n  function normPrivateKeyToScalar(key: PrivKey): bigint {\n    const { allowedPrivateKeyLengths: lengths, nByteLength, wrapPrivateKey, n } = CURVE;\n    if (lengths && typeof key !== 'bigint') {\n      if (key instanceof Uint8Array) key = ut.bytesToHex(key);\n      // Normalize to hex string, pad. E.g. P521 would norm 130-132 char hex to 132-char bytes\n      if (typeof key !== 'string' || !lengths.includes(key.length)) throw new Error('Invalid key');\n      key = key.padStart(nByteLength * 2, '0');\n    }\n    let num: bigint;\n    try {\n      num =\n        typeof key === 'bigint'\n          ? key\n          : ut.bytesToNumberBE(ensureBytes('private key', key, nByteLength));\n    } catch (error) {\n      throw new Error(`private key must be ${nByteLength} bytes, hex or bigint, not ${typeof key}`);\n    }\n    if (wrapPrivateKey) num = mod.mod(num, n); // disabled by default, enabled for BLS\n    assertGE(num); // num in range [1..N-1]\n    return num;\n  }\n\n  const pointPrecomputes = new Map<Point, Point[]>();\n  function assertPrjPoint(other: unknown) {\n    if (!(other instanceof Point)) throw new Error('ProjectivePoint expected');\n  }\n  /**\n   * Projective Point works in 3d / projective (homogeneous) coordinates: (x, y, z) ∋ (x=x/z, y=y/z)\n   * Default Point works in 2d / affine coordinates: (x, y)\n   * We're doing calculations in projective, because its operations don't require costly inversion.\n   */\n  class Point implements ProjPointType<T> {\n    static readonly BASE = new Point(CURVE.Gx, CURVE.Gy, Fp.ONE);\n    static readonly ZERO = new Point(Fp.ZERO, Fp.ONE, Fp.ZERO);\n\n    constructor(readonly px: T, readonly py: T, readonly pz: T) {\n      if (px == null || !Fp.isValid(px)) throw new Error('x required');\n      if (py == null || !Fp.isValid(py)) throw new Error('y required');\n      if (pz == null || !Fp.isValid(pz)) throw new Error('z required');\n    }\n\n    // Does not validate if the point is on-curve.\n    // Use fromHex instead, or call assertValidity() later.\n    static fromAffine(p: AffinePoint<T>): Point {\n      const { x, y } = p || {};\n      if (!p || !Fp.isValid(x) || !Fp.isValid(y)) throw new Error('invalid affine point');\n      if (p instanceof Point) throw new Error('projective point not allowed');\n      const is0 = (i: T) => Fp.eql(i, Fp.ZERO);\n      // fromAffine(x:0, y:0) would produce (x:0, y:0, z:1), but we need (x:0, y:1, z:0)\n      if (is0(x) && is0(y)) return Point.ZERO;\n      return new Point(x, y, Fp.ONE);\n    }\n\n    get x(): T {\n      return this.toAffine().x;\n    }\n    get y(): T {\n      return this.toAffine().y;\n    }\n\n    /**\n     * Takes a bunch of Projective Points but executes only one\n     * inversion on all of them. Inversion is very slow operation,\n     * so this improves performance massively.\n     * Optimization: converts a list of projective points to a list of identical points with Z=1.\n     */\n    static normalizeZ(points: Point[]): Point[] {\n      const toInv = Fp.invertBatch(points.map((p) => p.pz));\n      return points.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n    }\n\n    /**\n     * Converts hash string or Uint8Array to Point.\n     * @param hex short/long ECDSA hex\n     */\n    static fromHex(hex: Hex): Point {\n      const P = Point.fromAffine(fromBytes(ensureBytes('pointHex', hex)));\n      P.assertValidity();\n      return P;\n    }\n\n    // Multiplies generator point by privateKey.\n    static fromPrivateKey(privateKey: PrivKey) {\n      return Point.BASE.multiply(normPrivateKeyToScalar(privateKey));\n    }\n\n    // We calculate precomputes for elliptic curve point multiplication\n    // using windowed method. This specifies window size and\n    // stores precomputed values. Usually only base point would be precomputed.\n    _WINDOW_SIZE?: number;\n\n    // \"Private method\", don't use it directly\n    _setWindowSize(windowSize: number) {\n      this._WINDOW_SIZE = windowSize;\n      pointPrecomputes.delete(this);\n    }\n\n    // A point on curve is valid if it conforms to equation.\n    assertValidity(): void {\n      // Zero is valid point too!\n      if (this.is0()) {\n        if (CURVE.allowInfinityPoint) return;\n        throw new Error('bad point: ZERO');\n      }\n      // Some 3rd-party test vectors require different wording between here & `fromCompressedHex`\n      const { x, y } = this.toAffine();\n      // Check if x, y are valid field elements\n      if (!Fp.isValid(x) || !Fp.isValid(y)) throw new Error('bad point: x or y not FE');\n      const left = Fp.sqr(y); // y²\n      const right = weierstrassEquation(x); // x³ + ax + b\n      if (!Fp.eql(left, right)) throw new Error('bad point: equation left != right');\n      if (!this.isTorsionFree()) throw new Error('bad point: not in prime-order subgroup');\n    }\n    hasEvenY(): boolean {\n      const { y } = this.toAffine();\n      if (Fp.isOdd) return !Fp.isOdd(y);\n      throw new Error(\"Field doesn't support isOdd\");\n    }\n\n    /**\n     * Compare one point to another.\n     */\n    equals(other: Point): boolean {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      const U1 = Fp.eql(Fp.mul(X1, Z2), Fp.mul(X2, Z1));\n      const U2 = Fp.eql(Fp.mul(Y1, Z2), Fp.mul(Y2, Z1));\n      return U1 && U2;\n    }\n\n    /**\n     * Flips point to one corresponding to (x, -y) in Affine coordinates.\n     */\n    negate(): Point {\n      return new Point(this.px, Fp.neg(this.py), this.pz);\n    }\n\n    // Renes-Costello-Batina exception-free doubling formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 3\n    // Cost: 8M + 3S + 3*a + 2*b3 + 15add.\n    double() {\n      const { a, b } = CURVE;\n      const b3 = Fp.mul(b, _3n);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      let t0 = Fp.mul(X1, X1); // step 1\n      let t1 = Fp.mul(Y1, Y1);\n      let t2 = Fp.mul(Z1, Z1);\n      let t3 = Fp.mul(X1, Y1);\n      t3 = Fp.add(t3, t3); // step 5\n      Z3 = Fp.mul(X1, Z1);\n      Z3 = Fp.add(Z3, Z3);\n      X3 = Fp.mul(a, Z3);\n      Y3 = Fp.mul(b3, t2);\n      Y3 = Fp.add(X3, Y3); // step 10\n      X3 = Fp.sub(t1, Y3);\n      Y3 = Fp.add(t1, Y3);\n      Y3 = Fp.mul(X3, Y3);\n      X3 = Fp.mul(t3, X3);\n      Z3 = Fp.mul(b3, Z3); // step 15\n      t2 = Fp.mul(a, t2);\n      t3 = Fp.sub(t0, t2);\n      t3 = Fp.mul(a, t3);\n      t3 = Fp.add(t3, Z3);\n      Z3 = Fp.add(t0, t0); // step 20\n      t0 = Fp.add(Z3, t0);\n      t0 = Fp.add(t0, t2);\n      t0 = Fp.mul(t0, t3);\n      Y3 = Fp.add(Y3, t0);\n      t2 = Fp.mul(Y1, Z1); // step 25\n      t2 = Fp.add(t2, t2);\n      t0 = Fp.mul(t2, t3);\n      X3 = Fp.sub(X3, t0);\n      Z3 = Fp.mul(t2, t1);\n      Z3 = Fp.add(Z3, Z3); // step 30\n      Z3 = Fp.add(Z3, Z3);\n      return new Point(X3, Y3, Z3);\n    }\n\n    // Renes-Costello-Batina exception-free addition formula.\n    // There is 30% faster Jacobian formula, but it is not complete.\n    // https://eprint.iacr.org/2015/1060, algorithm 1\n    // Cost: 12M + 0S + 3*a + 3*b3 + 23add.\n    add(other: Point): Point {\n      assertPrjPoint(other);\n      const { px: X1, py: Y1, pz: Z1 } = this;\n      const { px: X2, py: Y2, pz: Z2 } = other;\n      let X3 = Fp.ZERO, Y3 = Fp.ZERO, Z3 = Fp.ZERO; // prettier-ignore\n      const a = CURVE.a;\n      const b3 = Fp.mul(CURVE.b, _3n);\n      let t0 = Fp.mul(X1, X2); // step 1\n      let t1 = Fp.mul(Y1, Y2);\n      let t2 = Fp.mul(Z1, Z2);\n      let t3 = Fp.add(X1, Y1);\n      let t4 = Fp.add(X2, Y2); // step 5\n      t3 = Fp.mul(t3, t4);\n      t4 = Fp.add(t0, t1);\n      t3 = Fp.sub(t3, t4);\n      t4 = Fp.add(X1, Z1);\n      let t5 = Fp.add(X2, Z2); // step 10\n      t4 = Fp.mul(t4, t5);\n      t5 = Fp.add(t0, t2);\n      t4 = Fp.sub(t4, t5);\n      t5 = Fp.add(Y1, Z1);\n      X3 = Fp.add(Y2, Z2); // step 15\n      t5 = Fp.mul(t5, X3);\n      X3 = Fp.add(t1, t2);\n      t5 = Fp.sub(t5, X3);\n      Z3 = Fp.mul(a, t4);\n      X3 = Fp.mul(b3, t2); // step 20\n      Z3 = Fp.add(X3, Z3);\n      X3 = Fp.sub(t1, Z3);\n      Z3 = Fp.add(t1, Z3);\n      Y3 = Fp.mul(X3, Z3);\n      t1 = Fp.add(t0, t0); // step 25\n      t1 = Fp.add(t1, t0);\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.mul(b3, t4);\n      t1 = Fp.add(t1, t2);\n      t2 = Fp.sub(t0, t2); // step 30\n      t2 = Fp.mul(a, t2);\n      t4 = Fp.add(t4, t2);\n      t0 = Fp.mul(t1, t4);\n      Y3 = Fp.add(Y3, t0);\n      t0 = Fp.mul(t5, t4); // step 35\n      X3 = Fp.mul(t3, X3);\n      X3 = Fp.sub(X3, t0);\n      t0 = Fp.mul(t3, t1);\n      Z3 = Fp.mul(t5, Z3);\n      Z3 = Fp.add(Z3, t0); // step 40\n      return new Point(X3, Y3, Z3);\n    }\n\n    subtract(other: Point) {\n      return this.add(other.negate());\n    }\n\n    private is0() {\n      return this.equals(Point.ZERO);\n    }\n    private wNAF(n: bigint): { p: Point; f: Point } {\n      return wnaf.wNAFCached(this, pointPrecomputes, n, (comp: Point[]) => {\n        const toInv = Fp.invertBatch(comp.map((p) => p.pz));\n        return comp.map((p, i) => p.toAffine(toInv[i])).map(Point.fromAffine);\n      });\n    }\n\n    /**\n     * Non-constant-time multiplication. Uses double-and-add algorithm.\n     * It's faster, but should only be used when you don't care about\n     * an exposed private key e.g. sig verification, which works over *public* keys.\n     */\n    multiplyUnsafe(n: bigint): Point {\n      const I = Point.ZERO;\n      if (n === _0n) return I;\n      assertGE(n); // Will throw on 0\n      if (n === _1n) return this;\n      const { endo } = CURVE;\n      if (!endo) return wnaf.unsafeLadder(this, n);\n\n      // Apply endomorphism\n      let { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n      let k1p = I;\n      let k2p = I;\n      let d: Point = this;\n      while (k1 > _0n || k2 > _0n) {\n        if (k1 & _1n) k1p = k1p.add(d);\n        if (k2 & _1n) k2p = k2p.add(d);\n        d = d.double();\n        k1 >>= _1n;\n        k2 >>= _1n;\n      }\n      if (k1neg) k1p = k1p.negate();\n      if (k2neg) k2p = k2p.negate();\n      k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n      return k1p.add(k2p);\n    }\n\n    /**\n     * Constant time multiplication.\n     * Uses wNAF method. Windowed method may be 10% faster,\n     * but takes 2x longer to generate and consumes 2x memory.\n     * Uses precomputes when available.\n     * Uses endomorphism for Koblitz curves.\n     * @param scalar by which the point would be multiplied\n     * @returns New point\n     */\n    multiply(scalar: bigint): Point {\n      assertGE(scalar);\n      let n = scalar;\n      let point: Point, fake: Point; // Fake point is used to const-time mult\n      const { endo } = CURVE;\n      if (endo) {\n        const { k1neg, k1, k2neg, k2 } = endo.splitScalar(n);\n        let { p: k1p, f: f1p } = this.wNAF(k1);\n        let { p: k2p, f: f2p } = this.wNAF(k2);\n        k1p = wnaf.constTimeNegate(k1neg, k1p);\n        k2p = wnaf.constTimeNegate(k2neg, k2p);\n        k2p = new Point(Fp.mul(k2p.px, endo.beta), k2p.py, k2p.pz);\n        point = k1p.add(k2p);\n        fake = f1p.add(f2p);\n      } else {\n        const { p, f } = this.wNAF(n);\n        point = p;\n        fake = f;\n      }\n      // Normalize `z` for both points, but return only real one\n      return Point.normalizeZ([point, fake])[0];\n    }\n\n    /**\n     * Efficiently calculate `aP + bQ`. Unsafe, can expose private key, if used incorrectly.\n     * Not using Strauss-Shamir trick: precomputation tables are faster.\n     * The trick could be useful if both P and Q are not G (not in our case).\n     * @returns non-zero affine point\n     */\n    multiplyAndAddUnsafe(Q: Point, a: bigint, b: bigint): Point | undefined {\n      const G = Point.BASE; // No Strauss-Shamir trick: we have 10% faster G precomputes\n      const mul = (\n        P: Point,\n        a: bigint // Select faster multiply() method\n      ) => (a === _0n || a === _1n || !P.equals(G) ? P.multiplyUnsafe(a) : P.multiply(a));\n      const sum = mul(this, a).add(mul(Q, b));\n      return sum.is0() ? undefined : sum;\n    }\n\n    // Converts Projective point to affine (x, y) coordinates.\n    // Can accept precomputed Z^-1 - for example, from invertBatch.\n    // (x, y, z) ∋ (x=x/z, y=y/z)\n    toAffine(iz?: T): AffinePoint<T> {\n      const { px: x, py: y, pz: z } = this;\n      const is0 = this.is0();\n      // If invZ was 0, we return zero point. However we still want to execute\n      // all operations, so we replace invZ with a random number, 1.\n      if (iz == null) iz = is0 ? Fp.ONE : Fp.inv(z);\n      const ax = Fp.mul(x, iz);\n      const ay = Fp.mul(y, iz);\n      const zz = Fp.mul(z, iz);\n      if (is0) return { x: Fp.ZERO, y: Fp.ZERO };\n      if (!Fp.eql(zz, Fp.ONE)) throw new Error('invZ was invalid');\n      return { x: ax, y: ay };\n    }\n    isTorsionFree(): boolean {\n      const { h: cofactor, isTorsionFree } = CURVE;\n      if (cofactor === _1n) return true; // No subgroups, always torsion-free\n      if (isTorsionFree) return isTorsionFree(Point, this);\n      throw new Error('isTorsionFree() has not been declared for the elliptic curve');\n    }\n    clearCofactor(): Point {\n      const { h: cofactor, clearCofactor } = CURVE;\n      if (cofactor === _1n) return this; // Fast-path\n      if (clearCofactor) return clearCofactor(Point, this) as Point;\n      return this.multiplyUnsafe(CURVE.h);\n    }\n\n    toRawBytes(isCompressed = true): Uint8Array {\n      this.assertValidity();\n      return toBytes(Point, this, isCompressed);\n    }\n\n    toHex(isCompressed = true): string {\n      return ut.bytesToHex(this.toRawBytes(isCompressed));\n    }\n  }\n  const _bits = CURVE.nBitLength;\n  const wnaf = wNAF(Point, CURVE.endo ? Math.ceil(_bits / 2) : _bits);\n  // Validate if generator point is on curve\n  return {\n    CURVE,\n    ProjectivePoint: Point as ProjConstructor<T>,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  };\n}\n\n// Instance\nexport interface SignatureType {\n  readonly r: bigint;\n  readonly s: bigint;\n  readonly recovery?: number;\n  assertValidity(): void;\n  addRecoveryBit(recovery: number): SignatureType;\n  hasHighS(): boolean;\n  normalizeS(): SignatureType;\n  recoverPublicKey(msgHash: Hex): ProjPointType<bigint>;\n  toCompactRawBytes(): Uint8Array;\n  toCompactHex(): string;\n  // DER-encoded\n  toDERRawBytes(isCompressed?: boolean): Uint8Array;\n  toDERHex(isCompressed?: boolean): string;\n}\n// Static methods\nexport type SignatureConstructor = {\n  new (r: bigint, s: bigint): SignatureType;\n  fromCompact(hex: Hex): SignatureType;\n  fromDER(hex: Hex): SignatureType;\n};\ntype SignatureLike = { r: bigint; s: bigint };\n\nexport type PubKey = Hex | ProjPointType<bigint>;\n\nexport type CurveType = BasicWCurve<bigint> & {\n  hash: CHash; // CHash not FHash because we need outputLen for DRBG\n  hmac: HmacFnSync;\n  randomBytes: (bytesLength?: number) => Uint8Array;\n  lowS?: boolean;\n  bits2int?: (bytes: Uint8Array) => bigint;\n  bits2int_modN?: (bytes: Uint8Array) => bigint;\n};\n\nfunction validateOpts(curve: CurveType) {\n  const opts = validateBasic(curve);\n  ut.validateObject(\n    opts,\n    {\n      hash: 'hash',\n      hmac: 'function',\n      randomBytes: 'function',\n    },\n    {\n      bits2int: 'function',\n      bits2int_modN: 'function',\n      lowS: 'boolean',\n    }\n  );\n  return Object.freeze({ lowS: true, ...opts } as const);\n}\n\nexport type CurveFn = {\n  CURVE: ReturnType<typeof validateOpts>;\n  getPublicKey: (privateKey: PrivKey, isCompressed?: boolean) => Uint8Array;\n  getSharedSecret: (privateA: PrivKey, publicB: Hex, isCompressed?: boolean) => Uint8Array;\n  sign: (msgHash: Hex, privKey: PrivKey, opts?: SignOpts) => SignatureType;\n  verify: (signature: Hex | SignatureLike, msgHash: Hex, publicKey: Hex, opts?: VerOpts) => boolean;\n  ProjectivePoint: ProjConstructor<bigint>;\n  Signature: SignatureConstructor;\n  utils: {\n    normPrivateKeyToScalar: (key: PrivKey) => bigint;\n    isValidPrivateKey(privateKey: PrivKey): boolean;\n    randomPrivateKey: () => Uint8Array;\n    precompute: (windowSize?: number, point?: ProjPointType<bigint>) => ProjPointType<bigint>;\n  };\n};\n\nexport function weierstrass(curveDef: CurveType): CurveFn {\n  const CURVE = validateOpts(curveDef) as ReturnType<typeof validateOpts>;\n  const { Fp, n: CURVE_ORDER } = CURVE;\n  const compressedLen = Fp.BYTES + 1; // e.g. 33 for 32\n  const uncompressedLen = 2 * Fp.BYTES + 1; // e.g. 65 for 32\n\n  function isValidFieldElement(num: bigint): boolean {\n    return _0n < num && num < Fp.ORDER; // 0 is banned since it's not invertible FE\n  }\n  function modN(a: bigint) {\n    return mod.mod(a, CURVE_ORDER);\n  }\n  function invN(a: bigint) {\n    return mod.invert(a, CURVE_ORDER);\n  }\n\n  const {\n    ProjectivePoint: Point,\n    normPrivateKeyToScalar,\n    weierstrassEquation,\n    isWithinCurveOrder,\n  } = weierstrassPoints({\n    ...CURVE,\n    toBytes(c, point, isCompressed: boolean): Uint8Array {\n      const a = point.toAffine();\n      const x = Fp.toBytes(a.x);\n      const cat = ut.concatBytes;\n      if (isCompressed) {\n        return cat(Uint8Array.from([point.hasEvenY() ? 0x02 : 0x03]), x);\n      } else {\n        return cat(Uint8Array.from([0x04]), x, Fp.toBytes(a.y));\n      }\n    },\n    fromBytes(bytes: Uint8Array) {\n      const len = bytes.length;\n      const head = bytes[0];\n      const tail = bytes.subarray(1);\n      // this.assertValidity() is done inside of fromHex\n      if (len === compressedLen && (head === 0x02 || head === 0x03)) {\n        const x = ut.bytesToNumberBE(tail);\n        if (!isValidFieldElement(x)) throw new Error('Point is not on curve');\n        const y2 = weierstrassEquation(x); // y² = x³ + ax + b\n        let y = Fp.sqrt(y2); // y = y² ^ (p+1)/4\n        const isYOdd = (y & _1n) === _1n;\n        // ECDSA\n        const isHeadOdd = (head & 1) === 1;\n        if (isHeadOdd !== isYOdd) y = Fp.neg(y);\n        return { x, y };\n      } else if (len === uncompressedLen && head === 0x04) {\n        const x = Fp.fromBytes(tail.subarray(0, Fp.BYTES));\n        const y = Fp.fromBytes(tail.subarray(Fp.BYTES, 2 * Fp.BYTES));\n        return { x, y };\n      } else {\n        throw new Error(\n          `Point of length ${len} was invalid. Expected ${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes`\n        );\n      }\n    },\n  });\n  const numToNByteStr = (num: bigint): string =>\n    ut.bytesToHex(ut.numberToBytesBE(num, CURVE.nByteLength));\n\n  function isBiggerThanHalfOrder(number: bigint) {\n    const HALF = CURVE_ORDER >> _1n;\n    return number > HALF;\n  }\n\n  function normalizeS(s: bigint) {\n    return isBiggerThanHalfOrder(s) ? modN(-s) : s;\n  }\n  // slice bytes num\n  const slcNum = (b: Uint8Array, from: number, to: number) => ut.bytesToNumberBE(b.slice(from, to));\n\n  /**\n   * ECDSA signature with its (r, s) properties. Supports DER & compact representations.\n   */\n  class Signature implements SignatureType {\n    constructor(readonly r: bigint, readonly s: bigint, readonly recovery?: number) {\n      this.assertValidity();\n    }\n\n    // pair (bytes of r, bytes of s)\n    static fromCompact(hex: Hex) {\n      const l = CURVE.nByteLength;\n      hex = ensureBytes('compactSignature', hex, l * 2);\n      return new Signature(slcNum(hex, 0, l), slcNum(hex, l, 2 * l));\n    }\n\n    // DER encoded ECDSA signature\n    // https://bitcoin.stackexchange.com/questions/57644/what-are-the-parts-of-a-bitcoin-transaction-input-script\n    static fromDER(hex: Hex) {\n      const { r, s } = DER.toSig(ensureBytes('DER', hex));\n      return new Signature(r, s);\n    }\n\n    assertValidity(): void {\n      // can use assertGE here\n      if (!isWithinCurveOrder(this.r)) throw new Error('r must be 0 < r < CURVE.n');\n      if (!isWithinCurveOrder(this.s)) throw new Error('s must be 0 < s < CURVE.n');\n    }\n\n    addRecoveryBit(recovery: number) {\n      return new Signature(this.r, this.s, recovery);\n    }\n\n    recoverPublicKey(msgHash: Hex): typeof Point.BASE {\n      const { r, s, recovery: rec } = this;\n      const h = bits2int_modN(ensureBytes('msgHash', msgHash)); // Truncate hash\n      if (rec == null || ![0, 1, 2, 3].includes(rec)) throw new Error('recovery id invalid');\n      const radj = rec === 2 || rec === 3 ? r + CURVE.n : r;\n      if (radj >= Fp.ORDER) throw new Error('recovery id 2 or 3 invalid');\n      const prefix = (rec & 1) === 0 ? '02' : '03';\n      const R = Point.fromHex(prefix + numToNByteStr(radj));\n      const ir = invN(radj); // r^-1\n      const u1 = modN(-h * ir); // -hr^-1\n      const u2 = modN(s * ir); // sr^-1\n      const Q = Point.BASE.multiplyAndAddUnsafe(R, u1, u2); // (sr^-1)R-(hr^-1)G = -(hr^-1)G + (sr^-1)\n      if (!Q) throw new Error('point at infinify'); // unsafe is fine: no priv data leaked\n      Q.assertValidity();\n      return Q;\n    }\n\n    // Signatures should be low-s, to prevent malleability.\n    hasHighS(): boolean {\n      return isBiggerThanHalfOrder(this.s);\n    }\n\n    normalizeS() {\n      return this.hasHighS() ? new Signature(this.r, modN(-this.s), this.recovery) : this;\n    }\n\n    // DER-encoded\n    toDERRawBytes() {\n      return ut.hexToBytes(this.toDERHex());\n    }\n    toDERHex() {\n      return DER.hexFromSig({ r: this.r, s: this.s });\n    }\n\n    // padded bytes of r, then padded bytes of s\n    toCompactRawBytes() {\n      return ut.hexToBytes(this.toCompactHex());\n    }\n    toCompactHex() {\n      return numToNByteStr(this.r) + numToNByteStr(this.s);\n    }\n  }\n\n  const utils = {\n    isValidPrivateKey(privateKey: PrivKey) {\n      try {\n        normPrivateKeyToScalar(privateKey);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    normPrivateKeyToScalar: normPrivateKeyToScalar,\n\n    /**\n     * Produces cryptographically secure private key from random of size (nBitLength+64)\n     * as per FIPS 186 B.4.1 with modulo bias being neglible.\n     */\n    randomPrivateKey: (): Uint8Array => {\n      const rand = CURVE.randomBytes(Fp.BYTES + 8);\n      const num = mod.hashToPrivateScalar(rand, CURVE_ORDER);\n      return ut.numberToBytesBE(num, CURVE.nByteLength);\n    },\n\n    /**\n     * Creates precompute table for an arbitrary EC point. Makes point \"cached\".\n     * Allows to massively speed-up `point.multiply(scalar)`.\n     * @returns cached point\n     * @example\n     * const fast = utils.precompute(8, ProjectivePoint.fromHex(someonesPubKey));\n     * fast.multiply(privKey); // much faster ECDH now\n     */\n    precompute(windowSize = 8, point = Point.BASE): typeof Point.BASE {\n      point._setWindowSize(windowSize);\n      point.multiply(BigInt(3)); // 3 is arbitrary, just need any number here\n      return point;\n    },\n  };\n\n  /**\n   * Computes public key for a private key. Checks for validity of the private key.\n   * @param privateKey private key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns Public key, full when isCompressed=false; short when isCompressed=true\n   */\n  function getPublicKey(privateKey: PrivKey, isCompressed = true): Uint8Array {\n    return Point.fromPrivateKey(privateKey).toRawBytes(isCompressed);\n  }\n\n  /**\n   * Quick and dirty check for item being public key. Does not validate hex, or being on-curve.\n   */\n  function isProbPub(item: PrivKey | PubKey): boolean {\n    const arr = item instanceof Uint8Array;\n    const str = typeof item === 'string';\n    const len = (arr || str) && (item as Hex).length;\n    if (arr) return len === compressedLen || len === uncompressedLen;\n    if (str) return len === 2 * compressedLen || len === 2 * uncompressedLen;\n    if (item instanceof Point) return true;\n    return false;\n  }\n\n  /**\n   * ECDH (Elliptic Curve Diffie Hellman).\n   * Computes shared public key from private key and public key.\n   * Checks: 1) private key validity 2) shared key is on-curve.\n   * Does NOT hash the result.\n   * @param privateA private key\n   * @param publicB different public key\n   * @param isCompressed whether to return compact (default), or full key\n   * @returns shared public key\n   */\n  function getSharedSecret(privateA: PrivKey, publicB: Hex, isCompressed = true): Uint8Array {\n    if (isProbPub(privateA)) throw new Error('first arg must be private key');\n    if (!isProbPub(publicB)) throw new Error('second arg must be public key');\n    const b = Point.fromHex(publicB); // check for being on-curve\n    return b.multiply(normPrivateKeyToScalar(privateA)).toRawBytes(isCompressed);\n  }\n\n  // RFC6979: ensure ECDSA msg is X bytes and < N. RFC suggests optional truncating via bits2octets.\n  // FIPS 186-4 4.6 suggests the leftmost min(nBitLen, outLen) bits, which matches bits2int.\n  // bits2int can produce res>N, we can do mod(res, N) since the bitLen is the same.\n  // int2octets can't be used; pads small msgs with 0: unacceptatble for trunc as per RFC vectors\n  const bits2int =\n    CURVE.bits2int ||\n    function (bytes: Uint8Array): bigint {\n      // For curves with nBitLength % 8 !== 0: bits2octets(bits2octets(m)) !== bits2octets(m)\n      // for some cases, since bytes.length * 8 is not actual bitLength.\n      const num = ut.bytesToNumberBE(bytes); // check for == u8 done here\n      const delta = bytes.length * 8 - CURVE.nBitLength; // truncate to nBitLength leftmost bits\n      return delta > 0 ? num >> BigInt(delta) : num;\n    };\n  const bits2int_modN =\n    CURVE.bits2int_modN ||\n    function (bytes: Uint8Array): bigint {\n      return modN(bits2int(bytes)); // can't use bytesToNumberBE here\n    };\n  // NOTE: pads output with zero as per spec\n  const ORDER_MASK = ut.bitMask(CURVE.nBitLength);\n  /**\n   * Converts to bytes. Checks if num in `[0..ORDER_MASK-1]` e.g.: `[0..2^256-1]`.\n   */\n  function int2octets(num: bigint): Uint8Array {\n    if (typeof num !== 'bigint') throw new Error('bigint expected');\n    if (!(_0n <= num && num < ORDER_MASK))\n      throw new Error(`bigint expected < 2^${CURVE.nBitLength}`);\n    // works with order, can have different size than numToField!\n    return ut.numberToBytesBE(num, CURVE.nByteLength);\n  }\n\n  // Steps A, D of RFC6979 3.2\n  // Creates RFC6979 seed; converts msg/privKey to numbers.\n  // Used only in sign, not in verify.\n  // NOTE: we cannot assume here that msgHash has same amount of bytes as curve order, this will be wrong at least for P521.\n  // Also it can be bigger for P224 + SHA256\n  function prepSig(msgHash: Hex, privateKey: PrivKey, opts = defaultSigOpts) {\n    if (['recovered', 'canonical'].some((k) => k in opts))\n      throw new Error('sign() legacy options not supported');\n    const { hash, randomBytes } = CURVE;\n    let { lowS, prehash, extraEntropy: ent } = opts; // generates low-s sigs by default\n    if (lowS == null) lowS = true; // RFC6979 3.2: we skip step A, because we already provide hash\n    msgHash = ensureBytes('msgHash', msgHash);\n    if (prehash) msgHash = ensureBytes('prehashed msgHash', hash(msgHash));\n\n    // We can't later call bits2octets, since nested bits2int is broken for curves\n    // with nBitLength % 8 !== 0. Because of that, we unwrap it here as int2octets call.\n    // const bits2octets = (bits) => int2octets(bits2int_modN(bits))\n    const h1int = bits2int_modN(msgHash);\n    const d = normPrivateKeyToScalar(privateKey); // validate private key, convert to bigint\n    const seedArgs = [int2octets(d), int2octets(h1int)];\n    // extraEntropy. RFC6979 3.6: additional k' (optional).\n    if (ent != null) {\n      // K = HMAC_K(V || 0x00 || int2octets(x) || bits2octets(h1) || k')\n      const e = ent === true ? randomBytes(Fp.BYTES) : ent; // generate random bytes OR pass as-is\n      seedArgs.push(ensureBytes('extraEntropy', e, Fp.BYTES)); // check for being of size BYTES\n    }\n    const seed = ut.concatBytes(...seedArgs); // Step D of RFC6979 3.2\n    const m = h1int; // NOTE: no need to call bits2int second time here, it is inside truncateHash!\n    // Converts signature params into point w r/s, checks result for validity.\n    function k2sig(kBytes: Uint8Array): Signature | undefined {\n      // RFC 6979 Section 3.2, step 3: k = bits2int(T)\n      const k = bits2int(kBytes); // Cannot use fields methods, since it is group element\n      if (!isWithinCurveOrder(k)) return; // Important: all mod() calls here must be done over N\n      const ik = invN(k); // k^-1 mod n\n      const q = Point.BASE.multiply(k).toAffine(); // q = Gk\n      const r = modN(q.x); // r = q.x mod n\n      if (r === _0n) return;\n      // Can use scalar blinding b^-1(bm + bdr) where b ∈ [1,q−1] according to\n      // https://tches.iacr.org/index.php/TCHES/article/view/7337/6509. We've decided against it:\n      // a) dependency on CSPRNG b) 15% slowdown c) doesn't really help since bigints are not CT\n      const s = modN(ik * modN(m + r * d)); // Not using blinding here\n      if (s === _0n) return;\n      let recovery = (q.x === r ? 0 : 2) | Number(q.y & _1n); // recovery bit (2 or 3, when q.x > n)\n      let normS = s;\n      if (lowS && isBiggerThanHalfOrder(s)) {\n        normS = normalizeS(s); // if lowS was passed, ensure s is always\n        recovery ^= 1; // // in the bottom half of N\n      }\n      return new Signature(r, normS, recovery); // use normS, not s\n    }\n    return { seed, k2sig };\n  }\n  const defaultSigOpts: SignOpts = { lowS: CURVE.lowS, prehash: false };\n  const defaultVerOpts: VerOpts = { lowS: CURVE.lowS, prehash: false };\n\n  /**\n   * Signs message hash (not message: you need to hash it by yourself).\n   * ```\n   * sign(m, d, k) where\n   *   (x, y) = G × k\n   *   r = x mod n\n   *   s = (m + dr)/k mod n\n   * ```\n   * @param opts `lowS, extraEntropy, prehash`\n   */\n  function sign(msgHash: Hex, privKey: PrivKey, opts = defaultSigOpts): Signature {\n    const { seed, k2sig } = prepSig(msgHash, privKey, opts); // Steps A, D of RFC6979 3.2.\n    const drbg = ut.createHmacDrbg<Signature>(CURVE.hash.outputLen, CURVE.nByteLength, CURVE.hmac);\n    return drbg(seed, k2sig); // Steps B, C, D, E, F, G\n  }\n\n  // Enable precomputes. Slows down first publicKey computation by 20ms.\n  Point.BASE._setWindowSize(8);\n  // utils.precompute(8, ProjectivePoint.BASE)\n\n  /**\n   * Verifies a signature against message hash and public key.\n   * Rejects lowS signatures by default: to override,\n   * specify option `{lowS: false}`. Implements section 4.1.4 from https://www.secg.org/sec1-v2.pdf:\n   *\n   * ```\n   * verify(r, s, h, P) where\n   *   U1 = hs^-1 mod n\n   *   U2 = rs^-1 mod n\n   *   R = U1⋅G - U2⋅P\n   *   mod(R.x, n) == r\n   * ```\n   */\n  function verify(\n    signature: Hex | SignatureLike,\n    msgHash: Hex,\n    publicKey: Hex,\n    opts = defaultVerOpts\n  ): boolean {\n    const sg = signature;\n    msgHash = ensureBytes('msgHash', msgHash);\n    publicKey = ensureBytes('publicKey', publicKey);\n    if ('strict' in opts) throw new Error('options.strict was renamed to lowS');\n    const { lowS, prehash } = opts;\n\n    let _sig: Signature | undefined = undefined;\n    let P: ProjPointType<bigint>;\n    try {\n      if (typeof sg === 'string' || sg instanceof Uint8Array) {\n        // Signature can be represented in 2 ways: compact (2*nByteLength) & DER (variable-length).\n        // Since DER can also be 2*nByteLength bytes, we check for it first.\n        try {\n          _sig = Signature.fromDER(sg);\n        } catch (derError) {\n          if (!(derError instanceof DER.Err)) throw derError;\n          _sig = Signature.fromCompact(sg);\n        }\n      } else if (typeof sg === 'object' && typeof sg.r === 'bigint' && typeof sg.s === 'bigint') {\n        const { r, s } = sg;\n        _sig = new Signature(r, s);\n      } else {\n        throw new Error('PARSE');\n      }\n      P = Point.fromHex(publicKey);\n    } catch (error) {\n      if ((error as Error).message === 'PARSE')\n        throw new Error(`signature must be Signature instance, Uint8Array or hex string`);\n      return false;\n    }\n    if (lowS && _sig.hasHighS()) return false;\n    if (prehash) msgHash = CURVE.hash(msgHash);\n    const { r, s } = _sig;\n    const h = bits2int_modN(msgHash); // Cannot use fields methods, since it is group element\n    const is = invN(s); // s^-1\n    const u1 = modN(h * is); // u1 = hs^-1 mod n\n    const u2 = modN(r * is); // u2 = rs^-1 mod n\n    const R = Point.BASE.multiplyAndAddUnsafe(P, u1, u2)?.toAffine(); // R = u1⋅G + u2⋅P\n    if (!R) return false;\n    const v = modN(R.x);\n    return v === r;\n  }\n  return {\n    CURVE,\n    getPublicKey,\n    getSharedSecret,\n    sign,\n    verify,\n    ProjectivePoint: Point,\n    Signature,\n    utils,\n  };\n}\n\n// Implementation of the Shallue and van de Woestijne method for any Weierstrass curve\n// TODO: check if there is a way to merge this with uvRatio in Edwards && move to modular?\n// b = True and y = sqrt(u / v) if (u / v) is square in F, and\n// b = False and y = sqrt(Z * (u / v)) otherwise.\nexport function SWUFpSqrtRatio<T>(Fp: mod.IField<T>, Z: T) {\n  // Generic implementation\n  const q = Fp.ORDER;\n  let l = _0n;\n  for (let o = q - _1n; o % _2n === _0n; o /= _2n) l += _1n;\n  const c1 = l; // 1. c1, the largest integer such that 2^c1 divides q - 1.\n  const c2 = (q - _1n) / _2n ** c1; // 2. c2 = (q - 1) / (2^c1)        # Integer arithmetic\n  const c3 = (c2 - _1n) / _2n; // 3. c3 = (c2 - 1) / 2            # Integer arithmetic\n  const c4 = _2n ** c1 - _1n; // 4. c4 = 2^c1 - 1                # Integer arithmetic\n  const c5 = _2n ** (c1 - _1n); // 5. c5 = 2^(c1 - 1)              # Integer arithmetic\n  const c6 = Fp.pow(Z, c2); // 6. c6 = Z^c2\n  const c7 = Fp.pow(Z, (c2 + _1n) / _2n); // 7. c7 = Z^((c2 + 1) / 2)\n  let sqrtRatio = (u: T, v: T): { isValid: boolean; value: T } => {\n    let tv1 = c6; // 1. tv1 = c6\n    let tv2 = Fp.pow(v, c4); // 2. tv2 = v^c4\n    let tv3 = Fp.sqr(tv2); // 3. tv3 = tv2^2\n    tv3 = Fp.mul(tv3, v); // 4. tv3 = tv3 * v\n    let tv5 = Fp.mul(u, tv3); // 5. tv5 = u * tv3\n    tv5 = Fp.pow(tv5, c3); // 6. tv5 = tv5^c3\n    tv5 = Fp.mul(tv5, tv2); // 7. tv5 = tv5 * tv2\n    tv2 = Fp.mul(tv5, v); // 8. tv2 = tv5 * v\n    tv3 = Fp.mul(tv5, u); // 9. tv3 = tv5 * u\n    let tv4 = Fp.mul(tv3, tv2); // 10. tv4 = tv3 * tv2\n    tv5 = Fp.pow(tv4, c5); // 11. tv5 = tv4^c5\n    let isQR = Fp.eql(tv5, Fp.ONE); // 12. isQR = tv5 == 1\n    tv2 = Fp.mul(tv3, c7); // 13. tv2 = tv3 * c7\n    tv5 = Fp.mul(tv4, tv1); // 14. tv5 = tv4 * tv1\n    tv3 = Fp.cmov(tv2, tv3, isQR); // 15. tv3 = CMOV(tv2, tv3, isQR)\n    tv4 = Fp.cmov(tv5, tv4, isQR); // 16. tv4 = CMOV(tv5, tv4, isQR)\n    // 17. for i in (c1, c1 - 1, ..., 2):\n    for (let i = c1; i > _1n; i--) {\n      let tv5 = _2n ** (i - _2n); // 18.    tv5 = i - 2;    19.    tv5 = 2^tv5\n      let tvv5 = Fp.pow(tv4, tv5); // 20.    tv5 = tv4^tv5\n      const e1 = Fp.eql(tvv5, Fp.ONE); // 21.    e1 = tv5 == 1\n      tv2 = Fp.mul(tv3, tv1); // 22.    tv2 = tv3 * tv1\n      tv1 = Fp.mul(tv1, tv1); // 23.    tv1 = tv1 * tv1\n      tvv5 = Fp.mul(tv4, tv1); // 24.    tv5 = tv4 * tv1\n      tv3 = Fp.cmov(tv2, tv3, e1); // 25.    tv3 = CMOV(tv2, tv3, e1)\n      tv4 = Fp.cmov(tvv5, tv4, e1); // 26.    tv4 = CMOV(tv5, tv4, e1)\n    }\n    return { isValid: isQR, value: tv3 };\n  };\n  if (Fp.ORDER % _4n === _3n) {\n    // sqrt_ratio_3mod4(u, v)\n    const c1 = (Fp.ORDER - _3n) / _4n; // 1. c1 = (q - 3) / 4     # Integer arithmetic\n    const c2 = Fp.sqrt(Fp.neg(Z)); // 2. c2 = sqrt(-Z)\n    sqrtRatio = (u: T, v: T) => {\n      let tv1 = Fp.sqr(v); // 1. tv1 = v^2\n      const tv2 = Fp.mul(u, v); // 2. tv2 = u * v\n      tv1 = Fp.mul(tv1, tv2); // 3. tv1 = tv1 * tv2\n      let y1 = Fp.pow(tv1, c1); // 4. y1 = tv1^c1\n      y1 = Fp.mul(y1, tv2); // 5. y1 = y1 * tv2\n      const y2 = Fp.mul(y1, c2); // 6. y2 = y1 * c2\n      const tv3 = Fp.mul(Fp.sqr(y1), v); // 7. tv3 = y1^2; 8. tv3 = tv3 * v\n      const isQR = Fp.eql(tv3, u); // 9. isQR = tv3 == u\n      let y = Fp.cmov(y2, y1, isQR); // 10. y = CMOV(y2, y1, isQR)\n      return { isValid: isQR, value: y }; // 11. return (isQR, y) isQR ? y : y*c2\n    };\n  }\n  // No curves uses that\n  // if (Fp.ORDER % _8n === _5n) // sqrt_ratio_5mod8\n  return sqrtRatio;\n}\n// From draft-irtf-cfrg-hash-to-curve-16\nexport function mapToCurveSimpleSWU<T>(\n  Fp: mod.IField<T>,\n  opts: {\n    A: T;\n    B: T;\n    Z: T;\n  }\n) {\n  mod.validateField(Fp);\n  if (!Fp.isValid(opts.A) || !Fp.isValid(opts.B) || !Fp.isValid(opts.Z))\n    throw new Error('mapToCurveSimpleSWU: invalid opts');\n  const sqrtRatio = SWUFpSqrtRatio(Fp, opts.Z);\n  if (!Fp.isOdd) throw new Error('Fp.isOdd is not implemented!');\n  // Input: u, an element of F.\n  // Output: (x, y), a point on E.\n  return (u: T): { x: T; y: T } => {\n    // prettier-ignore\n    let tv1, tv2, tv3, tv4, tv5, tv6, x, y;\n    tv1 = Fp.sqr(u); // 1.  tv1 = u^2\n    tv1 = Fp.mul(tv1, opts.Z); // 2.  tv1 = Z * tv1\n    tv2 = Fp.sqr(tv1); // 3.  tv2 = tv1^2\n    tv2 = Fp.add(tv2, tv1); // 4.  tv2 = tv2 + tv1\n    tv3 = Fp.add(tv2, Fp.ONE); // 5.  tv3 = tv2 + 1\n    tv3 = Fp.mul(tv3, opts.B); // 6.  tv3 = B * tv3\n    tv4 = Fp.cmov(opts.Z, Fp.neg(tv2), !Fp.eql(tv2, Fp.ZERO)); // 7.  tv4 = CMOV(Z, -tv2, tv2 != 0)\n    tv4 = Fp.mul(tv4, opts.A); // 8.  tv4 = A * tv4\n    tv2 = Fp.sqr(tv3); // 9.  tv2 = tv3^2\n    tv6 = Fp.sqr(tv4); // 10. tv6 = tv4^2\n    tv5 = Fp.mul(tv6, opts.A); // 11. tv5 = A * tv6\n    tv2 = Fp.add(tv2, tv5); // 12. tv2 = tv2 + tv5\n    tv2 = Fp.mul(tv2, tv3); // 13. tv2 = tv2 * tv3\n    tv6 = Fp.mul(tv6, tv4); // 14. tv6 = tv6 * tv4\n    tv5 = Fp.mul(tv6, opts.B); // 15. tv5 = B * tv6\n    tv2 = Fp.add(tv2, tv5); // 16. tv2 = tv2 + tv5\n    x = Fp.mul(tv1, tv3); // 17.   x = tv1 * tv3\n    const { isValid, value } = sqrtRatio(tv2, tv6); // 18. (is_gx1_square, y1) = sqrt_ratio(tv2, tv6)\n    y = Fp.mul(tv1, u); // 19.   y = tv1 * u  -> Z * u^3 * y1\n    y = Fp.mul(y, value); // 20.   y = y * y1\n    x = Fp.cmov(x, tv3, isValid); // 21.   x = CMOV(x, tv3, is_gx1_square)\n    y = Fp.cmov(y, value, isValid); // 22.   y = CMOV(y, y1, is_gx1_square)\n    const e1 = Fp.isOdd!(u) === Fp.isOdd!(y); // 23.  e1 = sgn0(u) == sgn0(y)\n    y = Fp.cmov(Fp.neg(y), y, e1); // 24.   y = CMOV(-y, y, e1)\n    x = Fp.div(x, tv4); // 25.   x = x / tv4\n    return { x, y };\n  };\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport type { Group, GroupConstructor, AffinePoint } from './curve.js';\nimport { mod, IField } from './modular.js';\nimport { bytesToNumberBE, CHash, concatBytes, utf8ToBytes, validateObject } from './utils.js';\n\n/**\n * * `DST` is a domain separation tag, defined in section 2.2.5\n * * `p` characteristic of F, where F is a finite field of characteristic p and order q = p^m\n * * `m` is extension degree (1 for prime fields)\n * * `k` is the target security target in bits (e.g. 128), from section 5.1\n * * `expand` is `xmd` (SHA2, SHA3, BLAKE) or `xof` (SHAKE, BLAKE-XOF)\n * * `hash` conforming to `utils.CHash` interface, with `outputLen` / `blockLen` props\n */\ntype UnicodeOrBytes = string | Uint8Array;\nexport type Opts = {\n  DST: UnicodeOrBytes;\n  p: bigint;\n  m: number;\n  k: number;\n  expand: 'xmd' | 'xof';\n  hash: CHash;\n};\n\nfunction validateDST(dst: UnicodeOrBytes): Uint8Array {\n  if (dst instanceof Uint8Array) return dst;\n  if (typeof dst === 'string') return utf8ToBytes(dst);\n  throw new Error('DST must be Uint8Array or string');\n}\n\n// Octet Stream to Integer. \"spec\" implementation of os2ip is 2.5x slower vs bytesToNumberBE.\nconst os2ip = bytesToNumberBE;\n\n// Integer to Octet Stream (numberToBytesBE)\nfunction i2osp(value: number, length: number): Uint8Array {\n  if (value < 0 || value >= 1 << (8 * length)) {\n    throw new Error(`bad I2OSP call: value=${value} length=${length}`);\n  }\n  const res = Array.from({ length }).fill(0) as number[];\n  for (let i = length - 1; i >= 0; i--) {\n    res[i] = value & 0xff;\n    value >>>= 8;\n  }\n  return new Uint8Array(res);\n}\n\nfunction strxor(a: Uint8Array, b: Uint8Array): Uint8Array {\n  const arr = new Uint8Array(a.length);\n  for (let i = 0; i < a.length; i++) {\n    arr[i] = a[i] ^ b[i];\n  }\n  return arr;\n}\n\nfunction isBytes(item: unknown): void {\n  if (!(item instanceof Uint8Array)) throw new Error('Uint8Array expected');\n}\nfunction isNum(item: unknown): void {\n  if (!Number.isSafeInteger(item)) throw new Error('number expected');\n}\n\n// Produces a uniformly random byte string using a cryptographic hash function H that outputs b bits\n// https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.4.1\nexport function expand_message_xmd(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  if (DST.length > 255) DST = H(concatBytes(utf8ToBytes('H2C-OVERSIZE-DST-'), DST));\n  const { outputLen: b_in_bytes, blockLen: r_in_bytes } = H;\n  const ell = Math.ceil(lenInBytes / b_in_bytes);\n  if (ell > 255) throw new Error('Invalid xmd length');\n  const DST_prime = concatBytes(DST, i2osp(DST.length, 1));\n  const Z_pad = i2osp(0, r_in_bytes);\n  const l_i_b_str = i2osp(lenInBytes, 2); // len_in_bytes_str\n  const b = new Array<Uint8Array>(ell);\n  const b_0 = H(concatBytes(Z_pad, msg, l_i_b_str, i2osp(0, 1), DST_prime));\n  b[0] = H(concatBytes(b_0, i2osp(1, 1), DST_prime));\n  for (let i = 1; i <= ell; i++) {\n    const args = [strxor(b_0, b[i - 1]), i2osp(i + 1, 1), DST_prime];\n    b[i] = H(concatBytes(...args));\n  }\n  const pseudo_random_bytes = concatBytes(...b);\n  return pseudo_random_bytes.slice(0, lenInBytes);\n}\n\nexport function expand_message_xof(\n  msg: Uint8Array,\n  DST: Uint8Array,\n  lenInBytes: number,\n  k: number,\n  H: CHash\n): Uint8Array {\n  isBytes(msg);\n  isBytes(DST);\n  isNum(lenInBytes);\n  // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-5.3.3\n  // DST = H('H2C-OVERSIZE-DST-' || a_very_long_DST, Math.ceil((lenInBytes * k) / 8));\n  if (DST.length > 255) {\n    const dkLen = Math.ceil((2 * k) / 8);\n    DST = H.create({ dkLen }).update(utf8ToBytes('H2C-OVERSIZE-DST-')).update(DST).digest();\n  }\n  if (lenInBytes > 65535 || DST.length > 255)\n    throw new Error('expand_message_xof: invalid lenInBytes');\n  return (\n    H.create({ dkLen: lenInBytes })\n      .update(msg)\n      .update(i2osp(lenInBytes, 2))\n      // 2. DST_prime = DST || I2OSP(len(DST), 1)\n      .update(DST)\n      .update(i2osp(DST.length, 1))\n      .digest()\n  );\n}\n\n/**\n * Hashes arbitrary-length byte strings to a list of one or more elements of a finite field F\n * https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-11#section-5.3\n * @param msg a byte string containing the message to hash\n * @param count the number of elements of F to output\n * @param options `{DST: string, p: bigint, m: number, k: number, expand: 'xmd' | 'xof', hash: H}`, see above\n * @returns [u_0, ..., u_(count - 1)], a list of field elements.\n */\nexport function hash_to_field(msg: Uint8Array, count: number, options: Opts): bigint[][] {\n  validateObject(options, {\n    DST: 'string',\n    p: 'bigint',\n    m: 'isSafeInteger',\n    k: 'isSafeInteger',\n    hash: 'hash',\n  });\n  const { p, k, m, hash, expand, DST: _DST } = options;\n  isBytes(msg);\n  isNum(count);\n  const DST = validateDST(_DST);\n  const log2p = p.toString(2).length;\n  const L = Math.ceil((log2p + k) / 8); // section 5.1 of ietf draft link above\n  const len_in_bytes = count * m * L;\n  let prb; // pseudo_random_bytes\n  if (expand === 'xmd') {\n    prb = expand_message_xmd(msg, DST, len_in_bytes, hash);\n  } else if (expand === 'xof') {\n    prb = expand_message_xof(msg, DST, len_in_bytes, k, hash);\n  } else if (expand === '_internal_pass') {\n    // for internal tests only\n    prb = msg;\n  } else {\n    throw new Error('expand must be \"xmd\" or \"xof\"');\n  }\n  const u = new Array(count);\n  for (let i = 0; i < count; i++) {\n    const e = new Array(m);\n    for (let j = 0; j < m; j++) {\n      const elm_offset = L * (j + i * m);\n      const tv = prb.subarray(elm_offset, elm_offset + L);\n      e[j] = mod(os2ip(tv), p);\n    }\n    u[i] = e;\n  }\n  return u;\n}\n\nexport function isogenyMap<T, F extends IField<T>>(field: F, map: [T[], T[], T[], T[]]) {\n  // Make same order as in spec\n  const COEFF = map.map((i) => Array.from(i).reverse());\n  return (x: T, y: T) => {\n    const [xNum, xDen, yNum, yDen] = COEFF.map((val) =>\n      val.reduce((acc, i) => field.add(field.mul(acc, x), i))\n    );\n    x = field.div(xNum, xDen); // xNum / xDen\n    y = field.mul(y, field.div(yNum, yDen)); // y * (yNum / yDev)\n    return { x, y };\n  };\n}\n\nexport interface H2CPoint<T> extends Group<H2CPoint<T>> {\n  add(rhs: H2CPoint<T>): H2CPoint<T>;\n  toAffine(iz?: bigint): AffinePoint<T>;\n  clearCofactor(): H2CPoint<T>;\n  assertValidity(): void;\n}\n\nexport interface H2CPointConstructor<T> extends GroupConstructor<H2CPoint<T>> {\n  fromAffine(ap: AffinePoint<T>): H2CPoint<T>;\n}\n\nexport type MapToCurve<T> = (scalar: bigint[]) => AffinePoint<T>;\n\n// Separated from initialization opts, so users won't accidentally change per-curve parameters\n// (changing DST is ok!)\nexport type htfBasicOpts = { DST: UnicodeOrBytes };\n\nexport function createHasher<T>(\n  Point: H2CPointConstructor<T>,\n  mapToCurve: MapToCurve<T>,\n  def: Opts & { encodeDST?: UnicodeOrBytes }\n) {\n  if (typeof mapToCurve !== 'function') throw new Error('mapToCurve() must be defined');\n  return {\n    // Encodes byte string to elliptic curve\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    hashToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 2, { ...def, DST: def.DST, ...options } as Opts);\n      const u0 = Point.fromAffine(mapToCurve(u[0]));\n      const u1 = Point.fromAffine(mapToCurve(u[1]));\n      const P = u0.add(u1).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n\n    // https://datatracker.ietf.org/doc/html/draft-irtf-cfrg-hash-to-curve-16#section-3\n    encodeToCurve(msg: Uint8Array, options?: htfBasicOpts) {\n      const u = hash_to_field(msg, 1, { ...def, DST: def.encodeDST, ...options } as Opts);\n      const P = Point.fromAffine(mapToCurve(u[0])).clearCofactor();\n      P.assertValidity();\n      return P;\n    },\n  };\n}\n", "import assert from './_assert.js';\nimport { Hash, CHash, Input, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nclass HMAC<T extends Hash<T>> extends Hash<HMAC<T>> {\n  oHash: T;\n  iHash: T;\n  blockLen: number;\n  outputLen: number;\n  private finished = false;\n  private destroyed = false;\n\n  constructor(hash: CHash, _key: Input) {\n    super();\n    assert.hash(hash);\n    const key = toBytes(_key);\n    this.iHash = hash.create() as T;\n    if (typeof this.iHash.update !== 'function')\n      throw new TypeError('Expected instance of class which extends utils.Hash');\n    this.blockLen = this.iHash.blockLen;\n    this.outputLen = this.iHash.outputLen;\n    const blockLen = this.blockLen;\n    const pad = new Uint8Array(blockLen);\n    // blockLen can be bigger than outputLen\n    pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36;\n    this.iHash.update(pad);\n    // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n    this.oHash = hash.create() as T;\n    // Undo internal XOR && apply outer XOR\n    for (let i = 0; i < pad.length; i++) pad[i] ^= 0x36 ^ 0x5c;\n    this.oHash.update(pad);\n    pad.fill(0);\n  }\n  update(buf: Input) {\n    assert.exists(this);\n    this.iHash.update(buf);\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.bytes(out, this.outputLen);\n    this.finished = true;\n    this.iHash.digestInto(out);\n    this.oHash.update(out);\n    this.oHash.digestInto(out);\n    this.destroy();\n  }\n  digest() {\n    const out = new Uint8Array(this.oHash.outputLen);\n    this.digestInto(out);\n    return out;\n  }\n  _cloneInto(to?: HMAC<T>): HMAC<T> {\n    // Create new instance without calling constructor since key already in state and we don't know it.\n    to ||= Object.create(Object.getPrototypeOf(this), {});\n    const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n    to = to as this;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    to.blockLen = blockLen;\n    to.outputLen = outputLen;\n    to.oHash = oHash._cloneInto(to.oHash);\n    to.iHash = iHash._cloneInto(to.iHash);\n    return to;\n  }\n  destroy() {\n    this.destroyed = true;\n    this.oHash.destroy();\n    this.iHash.destroy();\n  }\n}\n\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash: CHash, key: Input, message: Input): Uint8Array =>\n  new HMAC<any>(hash, key).update(message).digest();\nhmac.create = (hash: CHash, key: Input) => new HMAC<any>(hash, key);\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { hmac } from '@noble/hashes/hmac';\nimport { concatBytes, randomBytes } from '@noble/hashes/utils';\nimport { weierstrass, CurveType } from './abstract/weierstrass.js';\nimport { CHash } from './abstract/utils.js';\n\n// connects noble-curves to noble-hashes\nexport function getHash(hash: CHash) {\n  return {\n    hash,\n    hmac: (key: Uint8Array, ...msgs: Uint8Array[]) => hmac(hash, key, concatBytes(...msgs)),\n    randomBytes,\n  };\n}\n// Same API as @noble/hashes, with ability to create curve with custom hash\ntype CurveDef = Readonly<Omit<CurveType, 'hash' | 'hmac' | 'randomBytes'>>;\nexport function createCurve(curveDef: CurveDef, defHash: CHash) {\n  const create = (hash: CHash) => weierstrass({ ...curveDef, ...getHash(hash) });\n  return Object.freeze({ ...create(defHash), create });\n}\n", "/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256 } from '@noble/hashes/sha256';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { Field, mod, pow2 } from './abstract/modular.js';\nimport { ProjPointType as PointType, mapToCurveSimpleSWU } from './abstract/weierstrass.js';\nimport type { Hex, PrivKey } from './abstract/utils.js';\nimport { bytesToNumberBE, concatBytes, ensureBytes, numberToBytesBE } from './abstract/utils.js';\nimport * as htf from './abstract/hash-to-curve.js';\nimport { createCurve } from './_shortw_utils.js';\n\nconst secp256k1P = BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f');\nconst secp256k1N = BigInt('0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141');\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst divNearest = (a: bigint, b: bigint) => (a + b / _2n) / b;\n\n/**\n * √n = n^((p+1)/4) for fields p = 3 mod 4. We unwrap the loop and multiply bit-by-bit.\n * (P+1n/4n).toString(2) would produce bits [223x 1, 0, 22x 1, 4x 0, 11, 00]\n */\nfunction sqrtMod(y: bigint): bigint {\n  const P = secp256k1P;\n  // prettier-ignore\n  const _3n = BigInt(3), _6n = BigInt(6), _11n = BigInt(11), _22n = BigInt(22);\n  // prettier-ignore\n  const _23n = BigInt(23), _44n = BigInt(44), _88n = BigInt(88);\n  const b2 = (y * y * y) % P; // x^3, 11\n  const b3 = (b2 * b2 * y) % P; // x^7\n  const b6 = (pow2(b3, _3n, P) * b3) % P;\n  const b9 = (pow2(b6, _3n, P) * b3) % P;\n  const b11 = (pow2(b9, _2n, P) * b2) % P;\n  const b22 = (pow2(b11, _11n, P) * b11) % P;\n  const b44 = (pow2(b22, _22n, P) * b22) % P;\n  const b88 = (pow2(b44, _44n, P) * b44) % P;\n  const b176 = (pow2(b88, _88n, P) * b88) % P;\n  const b220 = (pow2(b176, _44n, P) * b44) % P;\n  const b223 = (pow2(b220, _3n, P) * b3) % P;\n  const t1 = (pow2(b223, _23n, P) * b22) % P;\n  const t2 = (pow2(t1, _6n, P) * b2) % P;\n  const root = pow2(t2, _2n, P);\n  if (!Fp.eql(Fp.sqr(root), y)) throw new Error('Cannot find square root');\n  return root;\n}\n\nconst Fp = Field(secp256k1P, undefined, undefined, { sqrt: sqrtMod });\n\nexport const secp256k1 = createCurve(\n  {\n    a: BigInt(0), // equation params: a, b\n    b: BigInt(7), // Seem to be rigid: bitcointalk.org/index.php?topic=289795.msg3183975#msg3183975\n    Fp, // Field's prime: 2n**256n - 2n**32n - 2n**9n - 2n**8n - 2n**7n - 2n**6n - 2n**4n - 1n\n    n: secp256k1N, // Curve order, total count of valid points in the field\n    // Base point (x, y) aka generator point\n    Gx: BigInt('55066263022277343669578718895168534326250603453777594175500187360389116729240'),\n    Gy: BigInt('32670510020758816978083085130507043184471273380659243275938904335757337482424'),\n    h: BigInt(1), // Cofactor\n    lowS: true, // Allow only low-S signatures by default in sign() and verify()\n    /**\n     * secp256k1 belongs to Koblitz curves: it has efficiently computable endomorphism.\n     * Endomorphism uses 2x less RAM, speeds up precomputation by 2x and ECDH / key recovery by 20%.\n     * For precomputed wNAF it trades off 1/2 init time & 1/3 ram for 20% perf hit.\n     * Explanation: https://gist.github.com/paulmillr/eb670806793e84df628a7c434a873066\n     */\n    endo: {\n      beta: BigInt('0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee'),\n      splitScalar: (k: bigint) => {\n        const n = secp256k1N;\n        const a1 = BigInt('0x3086d221a7d46bcde86c90e49284eb15');\n        const b1 = -_1n * BigInt('0xe4437ed6010e88286f547fa90abfe4c3');\n        const a2 = BigInt('0x114ca50f7a8e2f3f657c1108d9d44cfd8');\n        const b2 = a1;\n        const POW_2_128 = BigInt('0x100000000000000000000000000000000'); // (2n**128n).toString(16)\n\n        const c1 = divNearest(b2 * k, n);\n        const c2 = divNearest(-b1 * k, n);\n        let k1 = mod(k - c1 * a1 - c2 * a2, n);\n        let k2 = mod(-c1 * b1 - c2 * b2, n);\n        const k1neg = k1 > POW_2_128;\n        const k2neg = k2 > POW_2_128;\n        if (k1neg) k1 = n - k1;\n        if (k2neg) k2 = n - k2;\n        if (k1 > POW_2_128 || k2 > POW_2_128) {\n          throw new Error('splitScalar: Endomorphism failed, k=' + k);\n        }\n        return { k1neg, k1, k2neg, k2 };\n      },\n    },\n  },\n  sha256\n);\n\n// Schnorr signatures are superior to ECDSA from above. Below is Schnorr-specific BIP0340 code.\n// https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki\nconst _0n = BigInt(0);\nconst fe = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1P;\nconst ge = (x: bigint) => typeof x === 'bigint' && _0n < x && x < secp256k1N;\n/** An object mapping tags to their tagged hash prefix of [SHA256(tag) | SHA256(tag)] */\nconst TAGGED_HASH_PREFIXES: { [tag: string]: Uint8Array } = {};\nfunction taggedHash(tag: string, ...messages: Uint8Array[]): Uint8Array {\n  let tagP = TAGGED_HASH_PREFIXES[tag];\n  if (tagP === undefined) {\n    const tagH = sha256(Uint8Array.from(tag, (c) => c.charCodeAt(0)));\n    tagP = concatBytes(tagH, tagH);\n    TAGGED_HASH_PREFIXES[tag] = tagP;\n  }\n  return sha256(concatBytes(tagP, ...messages));\n}\n\n// ECDSA compact points are 33-byte. Schnorr is 32: we strip first byte 0x02 or 0x03\nconst pointToBytes = (point: PointType<bigint>) => point.toRawBytes(true).slice(1);\nconst numTo32b = (n: bigint) => numberToBytesBE(n, 32);\nconst modP = (x: bigint) => mod(x, secp256k1P);\nconst modN = (x: bigint) => mod(x, secp256k1N);\nconst Point = secp256k1.ProjectivePoint;\nconst GmulAdd = (Q: PointType<bigint>, a: bigint, b: bigint) =>\n  Point.BASE.multiplyAndAddUnsafe(Q, a, b);\n\n// Calculate point, scalar and bytes\nfunction schnorrGetExtPubKey(priv: PrivKey) {\n  let d_ = secp256k1.utils.normPrivateKeyToScalar(priv); // same method executed in fromPrivateKey\n  let p = Point.fromPrivateKey(d_); // P = d'⋅G; 0 < d' < n check is done inside\n  const scalar = p.hasEvenY() ? d_ : modN(-d_);\n  return { scalar: scalar, bytes: pointToBytes(p) };\n}\n/**\n * lift_x from BIP340. Convert 32-byte x coordinate to elliptic curve point.\n * @returns valid point checked for being on-curve\n */\nfunction lift_x(x: bigint): PointType<bigint> {\n  if (!fe(x)) throw new Error('bad x: need 0 < x < p'); // Fail if x ≥ p.\n  const xx = modP(x * x);\n  const c = modP(xx * x + BigInt(7)); // Let c = x³ + 7 mod p.\n  let y = sqrtMod(c); // Let y = c^(p+1)/4 mod p.\n  if (y % _2n !== _0n) y = modP(-y); // Return the unique point P such that x(P) = x and\n  const p = new Point(x, y, _1n); // y(P) = y if y mod 2 = 0 or y(P) = p-y otherwise.\n  p.assertValidity();\n  return p;\n}\n/**\n * Create tagged hash, convert it to bigint, reduce modulo-n.\n */\nfunction challenge(...args: Uint8Array[]): bigint {\n  return modN(bytesToNumberBE(taggedHash('BIP0340/challenge', ...args)));\n}\n\n/**\n * Schnorr public key is just `x` coordinate of Point as per BIP340.\n */\nfunction schnorrGetPublicKey(privateKey: Hex): Uint8Array {\n  return schnorrGetExtPubKey(privateKey).bytes; // d'=int(sk). Fail if d'=0 or d'≥n. Ret bytes(d'⋅G)\n}\n\n/**\n * Creates Schnorr signature as per BIP340. Verifies itself before returning anything.\n * auxRand is optional and is not the sole source of k generation: bad CSPRNG won't be dangerous.\n */\nfunction schnorrSign(\n  message: Hex,\n  privateKey: PrivKey,\n  auxRand: Hex = randomBytes(32)\n): Uint8Array {\n  const m = ensureBytes('message', message);\n  const { bytes: px, scalar: d } = schnorrGetExtPubKey(privateKey); // checks for isWithinCurveOrder\n  const a = ensureBytes('auxRand', auxRand, 32); // Auxiliary random data a: a 32-byte array\n  const t = numTo32b(d ^ bytesToNumberBE(taggedHash('BIP0340/aux', a))); // Let t be the byte-wise xor of bytes(d) and hash/aux(a)\n  const rand = taggedHash('BIP0340/nonce', t, px, m); // Let rand = hash/nonce(t || bytes(P) || m)\n  const k_ = modN(bytesToNumberBE(rand)); // Let k' = int(rand) mod n\n  if (k_ === _0n) throw new Error('sign failed: k is zero'); // Fail if k' = 0.\n  const { bytes: rx, scalar: k } = schnorrGetExtPubKey(k_); // Let R = k'⋅G.\n  const e = challenge(rx, px, m); // Let e = int(hash/challenge(bytes(R) || bytes(P) || m)) mod n.\n  const sig = new Uint8Array(64); // Let sig = bytes(R) || bytes((k + ed) mod n).\n  sig.set(rx, 0);\n  sig.set(numTo32b(modN(k + e * d)), 32);\n  // If Verify(bytes(P), m, sig) (see below) returns failure, abort\n  if (!schnorrVerify(sig, m, px)) throw new Error('sign: Invalid signature produced');\n  return sig;\n}\n\n/**\n * Verifies Schnorr signature.\n * Will swallow errors & return false except for initial type validation of arguments.\n */\nfunction schnorrVerify(signature: Hex, message: Hex, publicKey: Hex): boolean {\n  const sig = ensureBytes('signature', signature, 64);\n  const m = ensureBytes('message', message);\n  const pub = ensureBytes('publicKey', publicKey, 32);\n  try {\n    const P = lift_x(bytesToNumberBE(pub)); // P = lift_x(int(pk)); fail if that fails\n    const r = bytesToNumberBE(sig.subarray(0, 32)); // Let r = int(sig[0:32]); fail if r ≥ p.\n    if (!fe(r)) return false;\n    const s = bytesToNumberBE(sig.subarray(32, 64)); // Let s = int(sig[32:64]); fail if s ≥ n.\n    if (!ge(s)) return false;\n    const e = challenge(numTo32b(r), pointToBytes(P), m); // int(challenge(bytes(r)||bytes(P)||m))%n\n    const R = GmulAdd(P, s, modN(-e)); // R = s⋅G - e⋅P\n    if (!R || !R.hasEvenY() || R.toAffine().x !== r) return false; // -eP == (n-e)P\n    return true; // Fail if is_infinite(R) / not has_even_y(R) / x(R) ≠ r.\n  } catch (error) {\n    return false;\n  }\n}\n\nexport const schnorr = {\n  getPublicKey: schnorrGetPublicKey,\n  sign: schnorrSign,\n  verify: schnorrVerify,\n  utils: {\n    randomPrivateKey: secp256k1.utils.randomPrivateKey,\n    lift_x,\n    pointToBytes,\n    numberToBytesBE,\n    bytesToNumberBE,\n    taggedHash,\n    mod,\n  },\n};\n\nconst isoMap = htf.isogenyMap(\n  Fp,\n  [\n    // xNum\n    [\n      '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7',\n      '0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581',\n      '0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262',\n      '0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c',\n    ],\n    // xDen\n    [\n      '0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b',\n      '0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14',\n      '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n    // yNum\n    [\n      '0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c',\n      '0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3',\n      '0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931',\n      '0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84',\n    ],\n    // yDen\n    [\n      '0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b',\n      '0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573',\n      '0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f',\n      '0x0000000000000000000000000000000000000000000000000000000000000001', // LAST 1\n    ],\n  ].map((i) => i.map((j) => BigInt(j))) as [bigint[], bigint[], bigint[], bigint[]]\n);\nconst mapSWU = mapToCurveSimpleSWU(Fp, {\n  A: BigInt('0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533'),\n  B: BigInt('1771'),\n  Z: Fp.create(BigInt('-11')),\n});\nexport const { hashToCurve, encodeToCurve } = htf.createHasher(\n  secp256k1.ProjectivePoint,\n  (scalars: bigint[]) => {\n    const { x, y } = mapSWU(Fp.create(scalars[0]));\n    return isoMap(x, y);\n  },\n  {\n    DST: 'secp256k1_XMD:SHA-256_SSWU_RO_',\n    encodeDST: 'secp256k1_XMD:SHA-256_SSWU_NU_',\n    p: Fp.ORDER,\n    m: 1,\n    k: 128,\n    expand: 'xmd',\n    hash: sha256,\n  }\n);\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.secp256k1 = void 0;\nvar secp256k1_1 = require(\"@noble/curves/secp256k1\");\nObject.defineProperty(exports, \"secp256k1\", { enumerable: true, get: function () { return secp256k1_1.secp256k1; } });\n", "import { Buffer } from 'buffer'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = BigInt('0xffffffffffffffff')\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = BigInt(\n  '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n)\n\n/**\n * The max integer that the evm can handle (2^256-1) as a bigint\n * 2^256-1 equals to 340282366920938463463374607431768211455\n * We use literal value instead of calculated value for compatibility issue.\n */\nexport const MAX_INTEGER_BIGINT = BigInt(\n  '115792089237316195423570985008687907853269984665640564039457584007913129639935'\n)\n\nexport const SECP256K1_ORDER = secp256k1.CURVE.n\nexport const SECP256K1_ORDER_DIV_2 = secp256k1.CURVE.n / BigInt(2)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = BigInt(\n  '0x10000000000000000000000000000000000000000000000000000000000000000'\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n\n/**\n *  RLP encoded empty string\n */\nexport const RLP_EMPTY_STRING = Buffer.from([0x80])\n\nexport const MAX_WITHDRAWALS_PER_PAYLOAD = 16\n", "/** Easy conversion from Gwei to wei */\nexport const GWEI_TO_WEI = BigInt(1000000000)\n", "export type Input = string | number | bigint | Uint8Array | Array<Input> | null | undefined\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\n\nexport interface Decoded {\n  data: Uint8Array | NestedUint8Array\n  remainder: Uint8Array\n}\n\n/**\n * RLP Encoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * This function takes in data, converts it to Uint8Array if not,\n * and adds a length for recursion.\n * @param input Will be converted to Uint8Array\n * @returns Uint8Array of encoded data\n **/\nexport function encode(input: Input): Uint8Array {\n  if (Array.isArray(input)) {\n    const output: Uint8Array[] = []\n    let outputLength = 0\n    for (let i = 0; i < input.length; i++) {\n      const encoded = encode(input[i])\n      output.push(encoded)\n      outputLength += encoded.length\n    }\n    return concatBytes(encodeLength(outputLength, 192), ...output)\n  }\n  const inputBuf = toBytes(input)\n  if (inputBuf.length === 1 && inputBuf[0] < 128) {\n    return inputBuf\n  }\n  return concatBytes(encodeLength(inputBuf.length, 128), inputBuf)\n}\n\n/**\n * Slices a Uint8Array, throws if the slice goes out-of-bounds of the Uint8Array.\n * E.g. `safeSlice(hexToBytes('aa'), 1, 2)` will throw.\n * @param input\n * @param start\n * @param end\n */\nfunction safeSlice(input: Uint8Array, start: number, end: number) {\n  if (end > input.length) {\n    throw new Error('invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds')\n  }\n  return input.slice(start, end)\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n */\nfunction decodeLength(v: Uint8Array): number {\n  if (v[0] === 0) {\n    throw new Error('invalid RLP: extra zeros')\n  }\n  return parseHexByte(bytesToHex(v))\n}\n\nfunction encodeLength(len: number, offset: number): Uint8Array {\n  if (len < 56) {\n    return Uint8Array.from([len + offset])\n  }\n  const hexLength = numberToHex(len)\n  const lLength = hexLength.length / 2\n  const firstByte = numberToHex(offset + 55 + lLength)\n  return Uint8Array.from(hexToBytes(firstByte + hexLength))\n}\n\n/**\n * RLP Decoding based on https://ethereum.org/en/developers/docs/data-structures-and-encoding/rlp/\n * @param input Will be converted to Uint8Array\n * @param stream Is the input a stream (false by default)\n * @returns decoded Array of Uint8Arrays containing the original message\n **/\nexport function decode(input: Input, stream?: false): Uint8Array | NestedUint8Array\nexport function decode(input: Input, stream?: true): Decoded\nexport function decode(input: Input, stream = false): Uint8Array | NestedUint8Array | Decoded {\n  if (typeof input === 'undefined' || input === null || (input as any).length === 0) {\n    return Uint8Array.from([])\n  }\n\n  const inputBytes = toBytes(input)\n  const decoded = _decode(inputBytes)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid RLP: remainder must be zero')\n  }\n\n  return decoded.data\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Uint8Array): Decoded {\n  let length: number, llength: number, data: Uint8Array, innerRemainder: Uint8Array, d: Decoded\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Uint8Array.from([])\n    } else {\n      data = safeSlice(input, 1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed')\n    }\n\n    return {\n      data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = safeSlice(input, llength, length + llength)\n\n    return {\n      data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between 0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = safeSlice(input, 1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list over 55 bytes long\n    llength = firstByte - 0xf6\n    length = decodeLength(safeSlice(input, 1, llength))\n    if (length < 56) {\n      throw new Error('invalid RLP: encoded list too short')\n    }\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid RLP: total length is larger than the data')\n    }\n\n    innerRemainder = safeSlice(input, llength, totalLength)\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\nconst cachedHexes = Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'))\nfunction bytesToHex(uint8a: Uint8Array): string {\n  // Pre-caching chars with `cachedHexes` speeds this up 6x\n  let hex = ''\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += cachedHexes[uint8a[i]]\n  }\n  return hex\n}\n\nfunction parseHexByte(hexByte: string): number {\n  const byte = Number.parseInt(hexByte, 16)\n  if (Number.isNaN(byte)) throw new Error('Invalid byte sequence')\n  return byte\n}\n\n// Caching slows it down 2-3x\nfunction hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex)\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex')\n  const array = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2\n    array[i] = parseHexByte(hex.slice(j, j + 2))\n  }\n  return array\n}\n\n/** Concatenates two Uint8Arrays into one. */\nfunction concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (arrays.length === 1) return arrays[0]\n  const length = arrays.reduce((a, arr) => a + arr.length, 0)\n  const result = new Uint8Array(length)\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i]\n    result.set(arr, pad)\n    pad += arr.length\n  }\n  return result\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any\ndeclare const TextDecoder: any\n\nfunction utf8ToBytes(utf: string): Uint8Array {\n  return new TextEncoder().encode(utf)\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction numberToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.length >= 2 && str[0] === '0' && str[1] === 'x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform anything into a Uint8Array */\nfunction toBytes(v: Input): Uint8Array {\n  if (v instanceof Uint8Array) {\n    return v\n  }\n  if (typeof v === 'string') {\n    if (isHexPrefixed(v)) {\n      return hexToBytes(padToEven(stripHexPrefix(v)))\n    }\n    return utf8ToBytes(v)\n  }\n  if (typeof v === 'number' || typeof v === 'bigint') {\n    if (!v) {\n      return Uint8Array.from([])\n    }\n    return hexToBytes(numberToHex(v))\n  }\n  if (v === null || v === undefined) {\n    return Uint8Array.from([])\n  }\n  throw new Error('toBytes: received unsupported type ' + typeof v)\n}\n\nexport const utils = {\n  bytesToHex,\n  concatBytes,\n  hexToBytes,\n  utf8ToBytes,\n}\n\nexport const RLP = { encode, decode }\n", "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    assert.number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    assert.exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    assert.exists(this, false);\n    assert.bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    assert.number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    assert.output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructorWithOpts<Keccak, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\n// buf.toString('hex') -> toHex(buf)\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\nexports.crypto = (() => {\n    const webCrypto = typeof self === \"object\" && \"crypto\" in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_1 = require(\"./utils\");\nexports.keccak224 = (0, utils_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_1.wrapHash)(sha3_1.keccak_512);\n", "/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', received ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some === true ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty === true && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (typeof length !== 'undefined' && length > 0 && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n", "import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n", "import { assertIsArray, assertIsBuffer, assertIsHexString } from './helpers'\nimport { isHexPrefixed, isHexString, padToEven, stripHexPrefix } from './internal'\n\nimport type {\n  NestedBufferArray,\n  NestedUint8Array,\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n} from './types'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return ('0x' + stripZeros(a)) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | bigint\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BigInt` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (typeof v === 'bigint') {\n    if (v < BigInt(0)) {\n      throw new Error(`Cannot convert negative bigint to buffer. Given: ${v}`)\n    }\n    let n = v.toString(16)\n    if (n.length % 2) n = '0' + n\n    return Buffer.from(n, 'hex')\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Converts a {@link Buffer} to a {@link bigint}\n */\nexport function bufferToBigInt(buf: Buffer) {\n  const hex = bufferToHex(buf)\n  if (hex === '0x') {\n    return BigInt(0)\n  }\n  return BigInt(hex)\n}\n\n/**\n * Converts a {@link bigint} to a {@link Buffer}\n */\nexport function bigIntToBuffer(num: bigint) {\n  return toBuffer('0x' + num.toString(16))\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  const res = Number(bufferToBigInt(buf))\n  if (!Number.isSafeInteger(res)) throw new Error('Number exceeds 53 bits')\n  return res\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BigInt`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): bigint {\n  return BigInt.asIntN(256, bufferToBigInt(num))\n}\n\n/**\n * Converts a `BigInt` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: bigint): Buffer {\n  return bigIntToBuffer(BigInt.asUintN(256, num))\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Shortens a string  or buffer's hex string representation to maxLength (default 50).\n *\n * Examples:\n *\n * Input:  '657468657265756d000000000000000000000000000000000000000000000000'\n * Output: '657468657265756d0000000000000000000000000000000000…'\n */\nexport function short(buffer: Buffer | string, maxLength: number = 50): string {\n  const bufferStr = Buffer.isBuffer(buffer) ? buffer.toString('hex') : buffer\n  if (bufferStr.length <= maxLength) {\n    return bufferStr\n  }\n  return bufferStr.slice(0, maxLength) + '…'\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n\n/**\n * Converts a {@link bigint} to a `0x` prefixed hex string\n */\nexport const bigIntToHex = (num: bigint) => {\n  return '0x' + num.toString(16)\n}\n\n/**\n * Convert value from bigint to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bigIntToUnpaddedBuffer(value: bigint): Buffer {\n  return unpadBuffer(bigIntToBuffer(value))\n}\n\nexport function intToUnpaddedBuffer(value: number): Buffer {\n  return unpadBuffer(intToBuffer(value))\n}\n", "import { RLP } from '@ethereumjs/rlp'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\nimport { bytesToHex } from 'ethereum-cryptography/utils'\n\nimport {\n  arrToBufArr,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  bufferToHex,\n  toBuffer,\n  zeros,\n} from './bytes'\nimport { KECCAK256_NULL, KECCAK256_RLP } from './constants'\nimport { assertIsBuffer, assertIsHexString, assertIsString } from './helpers'\nimport { stripHexPrefix } from './internal'\n\nimport type { BigIntLike, BufferLike } from './types'\n\nconst _0n = BigInt(0)\n\nexport interface AccountData {\n  nonce?: BigIntLike\n  balance?: BigIntLike\n  storageRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport type AccountBodyBuffer = [Buffer, Buffer, Buffer | Uint8Array, Buffer | Uint8Array]\n\nexport class Account {\n  nonce: bigint\n  balance: bigint\n  storageRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, storageRoot, codeHash } = accountData\n\n    return new Account(\n      nonce !== undefined ? bufferToBigInt(toBuffer(nonce)) : undefined,\n      balance !== undefined ? bufferToBigInt(toBuffer(balance)) : undefined,\n      storageRoot !== undefined ? toBuffer(storageRoot) : undefined,\n      codeHash !== undefined ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized)) as Uint8Array[]) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, storageRoot, codeHash] = values\n\n    return new Account(bufferToBigInt(nonce), bufferToBigInt(balance), storageRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(nonce = _0n, balance = _0n, storageRoot = KECCAK256_RLP, codeHash = KECCAK256_NULL) {\n    this.nonce = nonce\n    this.balance = balance\n    this.storageRoot = storageRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce < _0n) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance < _0n) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.storageRoot.length !== 32) {\n      throw new Error('storageRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.balance),\n      this.storageRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance === _0n && this.nonce === _0n && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId !== undefined) {\n    const chainId = bufferToBigInt(toBuffer(eip1191ChainId))\n    prefix = chainId.toString() + '0x'\n  }\n\n  const buf = Buffer.from(prefix + address, 'utf8')\n  const hash = bytesToHex(keccak256(buf))\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BigIntLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n\n  if (bufferToBigInt(nonce) === BigInt(0)) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, null] as any)))).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(RLP.encode(bufArrToArr([from, nonce])))).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  if (from.length !== 20) {\n    throw new Error('Expected from to be of length 20')\n  }\n  if (salt.length !== 32) {\n    throw new Error('Expected salt to be of length 32')\n  }\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return toBuffer(address).slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return secp256k1.utils.isValidPrivateKey(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    // Automatically checks whether point is on curve\n    try {\n      secp256k1.ProjectivePoint.fromHex(Buffer.concat([Buffer.from([4]), publicKey]))\n      return true\n    } catch (e) {\n      return false\n    }\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  try {\n    secp256k1.ProjectivePoint.fromHex(publicKey)\n    return true\n  } catch (e) {\n    return false\n  }\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(secp256k1.ProjectivePoint.fromHex(pubKey).toRawBytes(false).slice(1))\n  }\n  if (pubKey.length !== 64) {\n    throw new Error('Expected pubKey to be of length 64')\n  }\n  // Only take the lower 160bits of the hash\n  return Buffer.from(keccak256(pubKey)).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(\n    secp256k1.ProjectivePoint.fromPrivateKey(privateKey).toRawBytes(false).slice(1)\n  )\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(secp256k1.ProjectivePoint.fromHex(publicKey).toRawBytes(false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n\nexport function accountBodyFromSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).length === 0 ? KECCAK256_RLP : storageRoot,\n    arrToBufArr(codeHash).length === 0 ? KECCAK256_NULL : codeHash,\n  ]\n}\n\nconst emptyUint8Arr = new Uint8Array(0)\nexport function accountBodyToSlim(body: AccountBodyBuffer) {\n  const [nonce, balance, storageRoot, codeHash] = body\n  return [\n    nonce,\n    balance,\n    arrToBufArr(storageRoot).equals(KECCAK256_RLP) ? emptyUint8Arr : storageRoot,\n    arrToBufArr(codeHash).equals(KECCAK256_NULL) ? emptyUint8Arr : codeHash,\n  ]\n}\n\n/**\n * Converts a slim account (per snap protocol spec) to the RLP encoded version of the account\n * @param body Array of 4 Buffer-like items to represent the account\n * @returns RLP encoded version of the account\n */\nexport function accountBodyToRLP(body: AccountBodyBuffer, couldBeSlim = true) {\n  const accountBody = couldBeSlim ? accountBodyFromSlim(body) : body\n  return arrToBufArr(RLP.encode(accountBody))\n}\n", "import {\n  generateAddress,\n  generateAddress2,\n  isValidAddress,\n  privateToAddress,\n  pubToAddress,\n} from './account'\nimport { bigIntToBuffer, bufferToBigInt, toBuffer, zeros } from './bytes'\n\n/**\n * Handling and generating Ethereum addresses\n */\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    if (buf.length !== 20) {\n      throw new Error('Invalid address length')\n    }\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    if (!isValidAddress(str)) {\n      throw new Error('Invalid address')\n    }\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    if (!Buffer.isBuffer(pubKey)) {\n      throw new Error('Public key should be Buffer')\n    }\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    if (!Buffer.isBuffer(privateKey)) {\n      throw new Error('Private key should be Buffer')\n    }\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: bigint): Address {\n    if (typeof nonce !== 'bigint') {\n      throw new Error('Expected nonce to be a bigint')\n    }\n    return new Address(generateAddress(from.buf, bigIntToBuffer(nonce)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    if (!Buffer.isBuffer(salt)) {\n      throw new Error('Expected salt to be a Buffer')\n    }\n    if (!Buffer.isBuffer(initCode)) {\n      throw new Error('Expected initCode to be a Buffer')\n    }\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const address = bufferToBigInt(this.buf)\n    const rangeMin = BigInt(0)\n    const rangeMax = BigInt('0xffff')\n    return address >= rangeMin && address <= rangeMax\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n", "import { bufferToBigInt, bufferToHex, toBuffer } from './bytes'\nimport { isHexString } from './internal'\n\nimport type { Address } from './address'\nimport type { ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents an input that can be converted to a BigInt.\n */\nexport type BigIntLike = bigint | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents an input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | bigint\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an input that can be converted to an Address.\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BigInt,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BigInt]: bigint\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  switch (outputType) {\n    case TypeOutput.Buffer:\n      return output as TypeOutputReturnType[T]\n    case TypeOutput.BigInt:\n      return bufferToBigInt(output) as TypeOutputReturnType[T]\n    case TypeOutput.Number: {\n      const bigInt = bufferToBigInt(output)\n      if (bigInt > BigInt(Number.MAX_SAFE_INTEGER)) {\n        throw new Error(\n          'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n        )\n      }\n      return Number(bigInt) as TypeOutputReturnType[T]\n    }\n    case TypeOutput.PrefixedHexString:\n      return bufferToHex(output) as TypeOutputReturnType[T]\n    default:\n      throw new Error('unknown outputType')\n  }\n}\n", "import { Address } from './address'\nimport { bigIntToHex } from './bytes'\nimport { TypeOutput, toType } from './types'\n\nimport type { AddressLike, BigIntLike } from './types'\n\n/**\n * Flexible input data type for EIP-4895 withdrawal data with amount in Gwei to\n * match CL representation and for eventual ssz withdrawalsRoot\n */\nexport type WithdrawalData = {\n  index: BigIntLike\n  validatorIndex: BigIntLike\n  address: AddressLike\n  amount: BigIntLike\n}\n\n/**\n * JSON RPC interface for EIP-4895 withdrawal data with amount in Gwei to\n * match CL representation and for eventual ssz withdrawalsRoot\n */\nexport interface JsonRpcWithdrawal {\n  index: string // QUANTITY - bigint 8 bytes\n  validatorIndex: string // QUANTITY - bigint 8 bytes\n  address: string // DATA, 20 Bytes  address to withdraw to\n  amount: string // QUANTITY - bigint amount in Gwei 8 bytes\n}\n\nexport type WithdrawalBuffer = [Buffer, Buffer, Buffer, Buffer]\n\n/**\n * Representation of EIP-4895 withdrawal data\n */\nexport class Withdrawal {\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating a Withdrawal object from varying data types.\n   * Its amount is in Gwei to match CL representation and for eventual ssz withdrawalsRoot\n   */\n  constructor(\n    public readonly index: bigint,\n    public readonly validatorIndex: bigint,\n    public readonly address: Address,\n    /**\n     * withdrawal amount in Gwei to match the CL repesentation and eventually ssz withdrawalsRoot\n     */\n    public readonly amount: bigint\n  ) {}\n\n  public static fromWithdrawalData(withdrawalData: WithdrawalData) {\n    const {\n      index: indexData,\n      validatorIndex: validatorIndexData,\n      address: addressData,\n      amount: amountData,\n    } = withdrawalData\n    const index = toType(indexData, TypeOutput.BigInt)\n    const validatorIndex = toType(validatorIndexData, TypeOutput.BigInt)\n    const address = new Address(toType(addressData, TypeOutput.Buffer))\n    const amount = toType(amountData, TypeOutput.BigInt)\n\n    return new Withdrawal(index, validatorIndex, address, amount)\n  }\n\n  public static fromValuesArray(withdrawalArray: WithdrawalBuffer) {\n    if (withdrawalArray.length !== 4) {\n      throw Error(`Invalid withdrawalArray length expected=4 actual=${withdrawalArray.length}`)\n    }\n    const [index, validatorIndex, address, amount] = withdrawalArray\n    return Withdrawal.fromWithdrawalData({ index, validatorIndex, address, amount })\n  }\n\n  /**\n   * Convert a withdrawal to a buffer array\n   * @param withdrawal the withdrawal to convert\n   * @returns buffer array of the withdrawal\n   */\n  public static toBufferArray(withdrawal: Withdrawal | WithdrawalData): WithdrawalBuffer {\n    const { index, validatorIndex, address, amount } = withdrawal\n    const indexBuffer =\n      toType(index, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(index, TypeOutput.Buffer)\n    const validatorIndexBuffer =\n      toType(validatorIndex, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(validatorIndex, TypeOutput.Buffer)\n    let addressBuffer\n    if (address instanceof Address) {\n      addressBuffer = (<Address>address).buf\n    } else {\n      addressBuffer = toType(address, TypeOutput.Buffer)\n    }\n    const amountBuffer =\n      toType(amount, TypeOutput.BigInt) === BigInt(0)\n        ? Buffer.alloc(0)\n        : toType(amount, TypeOutput.Buffer)\n\n    return [indexBuffer, validatorIndexBuffer, addressBuffer, amountBuffer]\n  }\n\n  raw() {\n    return Withdrawal.toBufferArray(this)\n  }\n\n  toValue() {\n    return {\n      index: this.index,\n      validatorIndex: this.validatorIndex,\n      address: this.address.buf,\n      amount: this.amount,\n    }\n  }\n\n  toJSON() {\n    return {\n      index: bigIntToHex(this.index),\n      validatorIndex: bigIntToHex(this.validatorIndex),\n      address: '0x' + this.address.buf.toString('hex'),\n      amount: bigIntToHex(this.amount),\n    }\n  }\n}\n", "import { keccak256 } from 'ethereum-cryptography/keccak'\nimport { secp256k1 } from 'ethereum-cryptography/secp256k1'\n\nimport { bufferToBigInt, bufferToHex, bufferToInt, setLengthLeft, toBuffer } from './bytes'\nimport { SECP256K1_ORDER, SECP256K1_ORDER_DIV_2 } from './constants'\nimport { assertIsBuffer } from './helpers'\n\nexport interface ECDSASignature {\n  v: bigint\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n *\n * If `chainId` is provided assume an EIP-155-style signature and calculate the `v` value\n * accordingly, otherwise return a \"static\" `v` just derived from the `recovery` bit\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: bigint): ECDSASignature {\n  const sig = secp256k1.sign(msgHash, privateKey)\n  const buf = sig.toCompactRawBytes()\n  const r = Buffer.from(buf.slice(0, 32))\n  const s = Buffer.from(buf.slice(32, 64))\n\n  const v =\n    chainId === undefined\n      ? BigInt(sig.recovery! + 27)\n      : BigInt(sig.recovery! + 35) + BigInt(chainId) * BigInt(2)\n\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: bigint, chainId?: bigint): bigint {\n  if (v === BigInt(0) || v === BigInt(1)) return v\n\n  if (chainId === undefined) {\n    return v - BigInt(27)\n  }\n  return v - (chainId * BigInt(2) + BigInt(35))\n}\n\nfunction isValidSigRecovery(recovery: bigint): boolean {\n  return recovery === BigInt(0) || recovery === BigInt(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  chainId?: bigint\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const sig = secp256k1.Signature.fromCompact(signature).addRecoveryBit(Number(recovery))\n  const senderPubKey = sig.recoverPublicKey(msgHash)\n  return Buffer.from(senderPubKey.toRawBytes(false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: bigint, r: Buffer, s: Buffer, chainId?: bigint): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  let ss = s\n  if ((v > BigInt(28) && v % BigInt(2) === BigInt(1)) || v === BigInt(1) || v === BigInt(28)) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n *\n * NOTE: For an extracted `v` value < 27 (see Geth bug https://github.com/ethereum/go-ethereum/issues/2053)\n * `v + 27` is returned for the `v` value\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: bigint\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToBigInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = BigInt(bufferToInt(buf.slice(32, 33)) >> 7)\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v = v + BigInt(27)\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v === 0 | v === 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: bigint,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: bigint\n): boolean {\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBigInt = bufferToBigInt(r)\n  const sBigInt = bufferToBigInt(s)\n\n  if (\n    rBigInt === BigInt(0) ||\n    rBigInt >= SECP256K1_ORDER ||\n    sBigInt === BigInt(0) ||\n    sBigInt >= SECP256K1_ORDER\n  ) {\n    return false\n  }\n\n  if (homesteadOrLater && sBigInt >= SECP256K1_ORDER_DIV_2) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return Buffer.from(keccak256(Buffer.concat([prefix, message])))\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gindexChild = exports.gindexParent = exports.gindexSibling = exports.concatGindices = exports.getGindexBits = exports.gindexIterator = exports.getGindicesAtDepth = exports.iterateAtDepth = exports.countToDepth = exports.convertGindexToBitstring = exports.toGindexBitstring = exports.toGindex = exports.bitIndexBigInt = void 0;\nfunction bitIndexBigInt(v) {\n    return v.toString(2).length - 1;\n}\nexports.bitIndexBigInt = bitIndexBigInt;\nfunction toGindex(depth, index) {\n    const anchor = BigInt(1) << BigInt(depth);\n    if (index >= anchor) {\n        throw new Error(`index ${index} too large for depth ${depth}`);\n    }\n    return anchor | index;\n}\nexports.toGindex = toGindex;\nfunction toGindexBitstring(depth, index) {\n    const str = index ? Number(index).toString(2) : \"\";\n    if (str.length > depth) {\n        throw new Error(\"index too large for depth\");\n    }\n    else {\n        return \"1\" + str.padStart(depth, \"0\");\n    }\n}\nexports.toGindexBitstring = toGindexBitstring;\nfunction convertGindexToBitstring(gindex) {\n    if (typeof gindex === \"string\") {\n        if (gindex.length === 0) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        return gindex;\n    }\n    else {\n        if (gindex < 1) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        return gindex.toString(2);\n    }\n}\nexports.convertGindexToBitstring = convertGindexToBitstring;\n// Get the depth (root starting at 0) necessary to cover a subtree of `count` elements.\n// (in out): (0 0), (1 0), (2 1), (3 2), (4 2), (5 3), (6 3), (7 3), (8 3), (9 4)\nfunction countToDepth(count) {\n    if (count <= 1) {\n        return 0;\n    }\n    return (count - BigInt(1)).toString(2).length;\n}\nexports.countToDepth = countToDepth;\n/**\n * Iterate through Gindexes at a certain depth\n */\nfunction iterateAtDepth(depth, startIndex, count) {\n    const anchor = BigInt(1) << BigInt(depth);\n    if (startIndex + count > anchor) {\n        throw new Error(\"Too large for depth\");\n    }\n    let i = toGindex(depth, startIndex);\n    const last = i + count;\n    return {\n        [Symbol.iterator]() {\n            return {\n                next() {\n                    if (i < last) {\n                        const value = i;\n                        i++;\n                        return { done: false, value };\n                    }\n                    else {\n                        return { done: true, value: undefined };\n                    }\n                },\n            };\n        },\n    };\n}\nexports.iterateAtDepth = iterateAtDepth;\n/**\n * Return Gindexes at a certain depth\n */\nfunction getGindicesAtDepth(depth, startIndex, count) {\n    const anchor = BigInt(1) << BigInt(depth);\n    if (startIndex + count > anchor) {\n        throw new Error(\"Too large for depth\");\n    }\n    let gindex = toGindex(depth, BigInt(startIndex));\n    const gindices = [];\n    for (let i = 0; i < count; i++) {\n        gindices.push(gindex++);\n    }\n    return gindices;\n}\nexports.getGindicesAtDepth = getGindicesAtDepth;\nconst ERR_INVALID_GINDEX = \"Invalid gindex\";\nfunction gindexIterator(gindex) {\n    let bitstring;\n    if (typeof gindex === \"string\") {\n        if (!gindex.length) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex;\n    }\n    else {\n        if (gindex < 1) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex.toString(2);\n    }\n    let i = 1;\n    const next = () => {\n        if (i === bitstring.length) {\n            return { done: true, value: undefined };\n        }\n        const bit = Number(bitstring[i]);\n        i++;\n        return { done: false, value: bit };\n    };\n    return {\n        [Symbol.iterator]() {\n            return { next };\n        },\n        remainingBitLength() {\n            return bitstring.length - i;\n        },\n    };\n}\nexports.gindexIterator = gindexIterator;\nfunction getGindexBits(gindex) {\n    let bitstring;\n    if (typeof gindex === \"string\") {\n        if (!gindex.length) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex;\n    }\n    else {\n        if (gindex < 1) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex.toString(2);\n    }\n    const bits = [];\n    for (let i = 1; i < bitstring.length; i++) {\n        bits.push(Number(bitstring[i]));\n    }\n    return bits;\n}\nexports.getGindexBits = getGindexBits;\n/**\n * Concatenate Generalized Indices\n * Given generalized indices i1 for A -> B, i2 for B -> C .... i_n for Y -> Z, returns\n * the generalized index for A -> Z.\n */\nfunction concatGindices(gindices) {\n    return BigInt(gindices.reduce((acc, gindex) => acc + gindex.toString(2).slice(1), \"0b1\"));\n}\nexports.concatGindices = concatGindices;\nfunction gindexSibling(gindex) {\n    return gindex ^ BigInt(1);\n}\nexports.gindexSibling = gindexSibling;\nfunction gindexParent(gindex) {\n    return gindex / BigInt(2);\n}\nexports.gindexParent = gindexParent;\nfunction gindexChild(gindex, rightChild) {\n    return gindex * BigInt(2) + BigInt(rightChild);\n}\nexports.gindexChild = gindexChild;\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uint8ArrayToHashObject = exports.hashObjectToUint8Array = void 0;\nconst hashObject_1 = require(\"@chainsafe/as-sha256/lib/hashObject\");\nfunction hashObjectToUint8Array(obj) {\n    const byteArr = new Uint8Array(32);\n    hashObject_1.hashObjectToByteArray(obj, byteArr, 0);\n    return byteArr;\n}\nexports.hashObjectToUint8Array = hashObjectToUint8Array;\nfunction uint8ArrayToHashObject(byteArr) {\n    return hashObject_1.byteArrayToHashObject(byteArr);\n}\nexports.uint8ArrayToHashObject = uint8ArrayToHashObject;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasher = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst util_1 = require(\"./util\");\nconst digest64 = (a, b) => sha256_1.sha256.create().update(a).update(b).digest();\nexports.hasher = {\n    digest64,\n    digest64HashObjects: (a, b) => util_1.uint8ArrayToHashObject(digest64(util_1.hashObjectToUint8Array(a), util_1.hashObjectToUint8Array(b))),\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setHasher = exports.hasher = void 0;\nconst noble_1 = require(\"./noble\");\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./util\"), exports);\n/**\n * Hasher used across the SSZ codebase\n */\nexports.hasher = noble_1.hasher;\n/**\n * Set the hasher to be used across the SSZ codebase\n *\n * WARNING: This function is intended for power users and must be executed before any other SSZ code is imported\n */\nfunction setHasher(newHasher) {\n    exports.hasher = newHasher;\n}\nexports.setHasher = setHasher;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitwiseOrNodeH = exports.setNodeH = exports.getNodeH = exports.compose = exports.identity = exports.LeafNode = exports.BranchNode = exports.Node = void 0;\nconst hasher_1 = require(\"./hasher\");\nconst TWO_POWER_32 = 2 ** 32;\n/**\n * An immutable binary merkle tree node\n */\nclass Node {\n    constructor(h0, h1, h2, h3, h4, h5, h6, h7) {\n        this.h0 = h0;\n        this.h1 = h1;\n        this.h2 = h2;\n        this.h3 = h3;\n        this.h4 = h4;\n        this.h5 = h5;\n        this.h6 = h6;\n        this.h7 = h7;\n    }\n    applyHash(root) {\n        this.h0 = root.h0;\n        this.h1 = root.h1;\n        this.h2 = root.h2;\n        this.h3 = root.h3;\n        this.h4 = root.h4;\n        this.h5 = root.h5;\n        this.h6 = root.h6;\n        this.h7 = root.h7;\n    }\n}\nexports.Node = Node;\n/**\n * An immutable binary merkle tree node that has a `left` and `right` child\n */\nclass BranchNode extends Node {\n    constructor(_left, _right) {\n        // First null value is to save an extra variable to check if a node has a root or not\n        super(null, 0, 0, 0, 0, 0, 0, 0);\n        this._left = _left;\n        this._right = _right;\n        if (!_left) {\n            throw new Error(\"Left node is undefined\");\n        }\n        if (!_right) {\n            throw new Error(\"Right node is undefined\");\n        }\n    }\n    get rootHashObject() {\n        if (this.h0 === null) {\n            super.applyHash(hasher_1.hasher.digest64HashObjects(this.left.rootHashObject, this.right.rootHashObject));\n        }\n        return this;\n    }\n    get root() {\n        return hasher_1.hashObjectToUint8Array(this.rootHashObject);\n    }\n    isLeaf() {\n        return false;\n    }\n    get left() {\n        return this._left;\n    }\n    get right() {\n        return this._right;\n    }\n}\nexports.BranchNode = BranchNode;\n/**\n * An immutable binary merkle tree node that has no children\n */\nclass LeafNode extends Node {\n    static fromRoot(root) {\n        return this.fromHashObject(hasher_1.uint8ArrayToHashObject(root));\n    }\n    /**\n     * New LeafNode from existing HashObject.\n     */\n    static fromHashObject(ho) {\n        return new LeafNode(ho.h0, ho.h1, ho.h2, ho.h3, ho.h4, ho.h5, ho.h6, ho.h7);\n    }\n    /**\n     * New LeafNode with its internal value set to zero. Consider using `zeroNode(0)` if you don't need to mutate.\n     */\n    static fromZero() {\n        return new LeafNode(0, 0, 0, 0, 0, 0, 0, 0);\n    }\n    /**\n     * LeafNode with HashObject `(uint32, 0, 0, 0, 0, 0, 0, 0)`.\n     */\n    static fromUint32(uint32) {\n        return new LeafNode(uint32, 0, 0, 0, 0, 0, 0, 0);\n    }\n    /**\n     * Create a new LeafNode with the same internal values. The returned instance is safe to mutate\n     */\n    clone() {\n        return LeafNode.fromHashObject(this);\n    }\n    get rootHashObject() {\n        return this;\n    }\n    get root() {\n        return hasher_1.hashObjectToUint8Array(this);\n    }\n    isLeaf() {\n        return true;\n    }\n    get left() {\n        throw Error(\"LeafNode has no left node\");\n    }\n    get right() {\n        throw Error(\"LeafNode has no right node\");\n    }\n    writeToBytes(data, start, size) {\n        // TODO: Optimize\n        data.set(this.root.slice(0, size), start);\n    }\n    getUint(uintBytes, offsetBytes, clipInfinity) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            const h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                return 0xff & (h >> bitIndex);\n            }\n            else {\n                return 0xffff & (h >> bitIndex);\n            }\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            return getNodeH(this, hIndex) >>> 0;\n        }\n        // number spans 2 h values\n        else if (uintBytes === 8) {\n            const low = getNodeH(this, hIndex);\n            const high = getNodeH(this, hIndex + 1);\n            if (high === 0) {\n                return low >>> 0;\n            }\n            else if (high === -1 && low === -1 && clipInfinity) {\n                // Limit uint returns\n                return Infinity;\n            }\n            else {\n                return (low >>> 0) + (high >>> 0) * TWO_POWER_32;\n            }\n        }\n        // Bigger uint can't be represented\n        else {\n            throw Error(\"uintBytes > 8\");\n        }\n    }\n    getUintBigint(uintBytes, offsetBytes) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            const h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                return BigInt(0xff & (h >> bitIndex));\n            }\n            else {\n                return BigInt(0xffff & (h >> bitIndex));\n            }\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            return BigInt(getNodeH(this, hIndex) >>> 0);\n        }\n        // number spans multiple h values\n        else {\n            const hRange = Math.ceil(uintBytes / 4);\n            let v = BigInt(0);\n            for (let i = 0; i < hRange; i++) {\n                v += BigInt(getNodeH(this, hIndex + i) >>> 0) << BigInt(32 * i);\n            }\n            return v;\n        }\n    }\n    setUint(uintBytes, offsetBytes, value, clipInfinity) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            let h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                h &= ~(0xff << bitIndex);\n                h |= (0xff && value) << bitIndex;\n            }\n            else {\n                h &= ~(0xffff << bitIndex);\n                h |= (0xffff && value) << bitIndex;\n            }\n            setNodeH(this, hIndex, h);\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            setNodeH(this, hIndex, value);\n        }\n        // number spans 2 h values\n        else if (uintBytes === 8) {\n            if (value === Infinity && clipInfinity) {\n                setNodeH(this, hIndex, -1);\n                setNodeH(this, hIndex + 1, -1);\n            }\n            else {\n                setNodeH(this, hIndex, value & 0xffffffff);\n                setNodeH(this, hIndex + 1, (value / TWO_POWER_32) & 0xffffffff);\n            }\n        }\n        // Bigger uint can't be represented\n        else {\n            throw Error(\"uintBytes > 8\");\n        }\n    }\n    setUintBigint(uintBytes, offsetBytes, valueBN) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const value = Number(valueBN);\n            const bitIndex = (offsetBytes % 4) * 8;\n            let h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                h &= ~(0xff << bitIndex);\n                h |= (0xff && value) << bitIndex;\n            }\n            else {\n                h &= ~(0xffff << bitIndex);\n                h |= (0xffff && value) << bitIndex;\n            }\n            setNodeH(this, hIndex, h);\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            setNodeH(this, hIndex, Number(valueBN));\n        }\n        // number spans multiple h values\n        else {\n            const hEnd = hIndex + Math.ceil(uintBytes / 4);\n            for (let i = hIndex; i < hEnd; i++) {\n                setNodeH(this, i, Number(valueBN & BigInt(0xffffffff)));\n                valueBN = valueBN >> BigInt(32);\n            }\n        }\n    }\n    bitwiseOrUint(uintBytes, offsetBytes, value) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            bitwiseOrNodeH(this, hIndex, value << bitIndex);\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            bitwiseOrNodeH(this, hIndex, value);\n        }\n        // number spans multiple h values\n        else {\n            const hEnd = hIndex + Math.ceil(uintBytes / 4);\n            for (let i = hIndex; i < hEnd; i++) {\n                bitwiseOrNodeH(this, i, value & 0xffffffff);\n                value >>= 32;\n            }\n        }\n    }\n}\nexports.LeafNode = LeafNode;\nfunction identity(n) {\n    return n;\n}\nexports.identity = identity;\nfunction compose(inner, outer) {\n    return function (n) {\n        return outer(inner(n));\n    };\n}\nexports.compose = compose;\nfunction getNodeH(node, hIndex) {\n    if (hIndex === 0)\n        return node.h0;\n    else if (hIndex === 1)\n        return node.h1;\n    else if (hIndex === 2)\n        return node.h2;\n    else if (hIndex === 3)\n        return node.h3;\n    else if (hIndex === 4)\n        return node.h4;\n    else if (hIndex === 5)\n        return node.h5;\n    else if (hIndex === 6)\n        return node.h6;\n    else if (hIndex === 7)\n        return node.h7;\n    else\n        throw Error(\"hIndex > 7\");\n}\nexports.getNodeH = getNodeH;\nfunction setNodeH(node, hIndex, value) {\n    if (hIndex === 0)\n        node.h0 = value;\n    else if (hIndex === 1)\n        node.h1 = value;\n    else if (hIndex === 2)\n        node.h2 = value;\n    else if (hIndex === 3)\n        node.h3 = value;\n    else if (hIndex === 4)\n        node.h4 = value;\n    else if (hIndex === 5)\n        node.h5 = value;\n    else if (hIndex === 6)\n        node.h6 = value;\n    else if (hIndex === 7)\n        node.h7 = value;\n    else\n        throw Error(\"hIndex > 7\");\n}\nexports.setNodeH = setNodeH;\nfunction bitwiseOrNodeH(node, hIndex, value) {\n    if (hIndex === 0)\n        node.h0 |= value;\n    else if (hIndex === 1)\n        node.h1 |= value;\n    else if (hIndex === 2)\n        node.h2 |= value;\n    else if (hIndex === 3)\n        node.h3 |= value;\n    else if (hIndex === 4)\n        node.h4 |= value;\n    else if (hIndex === 5)\n        node.h5 |= value;\n    else if (hIndex === 6)\n        node.h6 |= value;\n    else if (hIndex === 7)\n        node.h7 |= value;\n    else\n        throw Error(\"hIndex > 7\");\n}\nexports.bitwiseOrNodeH = bitwiseOrNodeH;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.zeroNode = void 0;\nconst node_1 = require(\"./node\");\nconst zeroes = [node_1.LeafNode.fromZero()];\n/**\n * Return the `Node` at a specified height from the merkle tree made of \"zero data\"\n * ```\n *           ...\n *          /\n *         x           <- height 2\n *      /     \\\n *     x       x       <- height 1\n *   /  \\      /  \\\n * 0x0  0x0  0x0  0x0  <- height 0\n * ```\n */\nfunction zeroNode(height) {\n    if (height >= zeroes.length) {\n        for (let i = zeroes.length; i <= height; i++) {\n            zeroes[i] = new node_1.BranchNode(zeroes[i - 1], zeroes[i - 1]);\n        }\n    }\n    return zeroes[height];\n}\nexports.zeroNode = zeroNode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.subtreeFillToContents = exports.subtreeFillToLength = exports.subtreeFillToDepth = void 0;\nconst node_1 = require(\"./node\");\nconst zeroNode_1 = require(\"./zeroNode\");\nfunction subtreeFillToDepth(bottom, depth) {\n    let node = bottom;\n    while (depth > 0) {\n        node = new node_1.BranchNode(node, node);\n        depth--;\n    }\n    return node;\n}\nexports.subtreeFillToDepth = subtreeFillToDepth;\nfunction subtreeFillToLength(bottom, depth, length) {\n    const maxLength = 1 << depth;\n    if (length > maxLength)\n        throw new Error(\"ERR_TOO_MANY_NODES\");\n    if (length === maxLength)\n        return subtreeFillToDepth(bottom, depth);\n    if (depth === 0) {\n        if (length === 1)\n            return bottom;\n        else\n            throw new Error(\"ERR_NAVIGATION\");\n    }\n    if (depth === 1) {\n        return new node_1.BranchNode(bottom, length > 1 ? bottom : zeroNode_1.zeroNode(0));\n    }\n    const pivot = maxLength >> 1;\n    if (length <= pivot) {\n        return new node_1.BranchNode(subtreeFillToLength(bottom, depth - 1, length), zeroNode_1.zeroNode(depth - 1));\n    }\n    else {\n        return new node_1.BranchNode(subtreeFillToDepth(bottom, depth - 1), subtreeFillToLength(bottom, depth - 1, length - pivot));\n    }\n}\nexports.subtreeFillToLength = subtreeFillToLength;\n/**\n * WARNING: Mutates the provided nodes array.\n * TODO: Don't mutate the nodes array.\n */\nfunction subtreeFillToContents(nodes, depth) {\n    const maxLength = 2 ** depth;\n    if (nodes.length > maxLength) {\n        throw new Error(`nodes.length ${nodes.length} over maxIndex at depth ${depth}`);\n    }\n    if (nodes.length === 0) {\n        return zeroNode_1.zeroNode(depth);\n    }\n    if (depth === 0) {\n        return nodes[0];\n    }\n    if (depth === 1) {\n        return nodes.length > 1\n            ? // All nodes at depth 1 available\n                new node_1.BranchNode(nodes[0], nodes[1])\n            : // Pad with zero node\n                new node_1.BranchNode(nodes[0], zeroNode_1.zeroNode(0));\n    }\n    let count = nodes.length;\n    for (let d = depth; d > 0; d--) {\n        const countRemainder = count % 2;\n        const countEven = count - countRemainder;\n        // For each depth level compute the new BranchNodes and overwrite the nodes array\n        for (let i = 0; i < countEven; i += 2) {\n            nodes[i / 2] = new node_1.BranchNode(nodes[i], nodes[i + 1]);\n        }\n        if (countRemainder > 0) {\n            nodes[countEven / 2] = new node_1.BranchNode(nodes[countEven], zeroNode_1.zeroNode(depth - d));\n        }\n        // If there was remainer, 2 nodes are added to the count\n        count = countEven / 2 + countRemainder;\n    }\n    return nodes[0];\n}\nexports.subtreeFillToContents = subtreeFillToContents;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.packedNodeRootsToBytes = exports.packedRootsBytesToLeafNodes = exports.packedRootsBytesToNode = void 0;\nconst subtree_1 = require(\"./subtree\");\nconst node_1 = require(\"./node\");\nfunction packedRootsBytesToNode(depth, dataView, start, end) {\n    const leafNodes = packedRootsBytesToLeafNodes(dataView, start, end);\n    return subtree_1.subtreeFillToContents(leafNodes, depth);\n}\nexports.packedRootsBytesToNode = packedRootsBytesToNode;\n/**\n * Optimized deserialization of linear bytes to consecutive leaf nodes\n */\nfunction packedRootsBytesToLeafNodes(dataView, start, end) {\n    const size = end - start;\n    // If the offset in data is not a multiple of 4, Uint32Array can't be used\n    // > start offset of Uint32Array should be a multiple of 4\n    // NOTE: Performance tests show that using a DataView is as fast as Uint32Array\n    const fullNodeCount = Math.floor(size / 32);\n    const leafNodes = new Array(Math.ceil(size / 32));\n    // Efficiently construct the tree writing to hashObjects directly\n    // TODO: Optimize, with this approach each h property is written twice\n    for (let i = 0; i < fullNodeCount; i++) {\n        const offset = start + i * 32;\n        leafNodes[i] = new node_1.LeafNode(dataView.getInt32(offset + 0, true), dataView.getInt32(offset + 4, true), dataView.getInt32(offset + 8, true), dataView.getInt32(offset + 12, true), dataView.getInt32(offset + 16, true), dataView.getInt32(offset + 20, true), dataView.getInt32(offset + 24, true), dataView.getInt32(offset + 28, true));\n    }\n    // Consider that the last node may only include partial data\n    const remainderBytes = size % 32;\n    // Last node\n    if (remainderBytes > 0) {\n        const node = new node_1.LeafNode(0, 0, 0, 0, 0, 0, 0, 0);\n        leafNodes[fullNodeCount] = node;\n        // Loop to dynamically copy the full h values\n        const fullHCount = Math.floor(remainderBytes / 4);\n        for (let h = 0; h < fullHCount; h++) {\n            node_1.setNodeH(node, h, dataView.getInt32(start + fullNodeCount * 32 + h * 4, true));\n        }\n        const remainderUint32 = size % 4;\n        if (remainderUint32 > 0) {\n            let h = 0;\n            for (let i = 0; i < remainderUint32; i++) {\n                h |= dataView.getUint8(start + size - remainderUint32 + i) << (i * 8);\n            }\n            node_1.setNodeH(node, fullHCount, h);\n        }\n    }\n    return leafNodes;\n}\nexports.packedRootsBytesToLeafNodes = packedRootsBytesToLeafNodes;\n/**\n * Optimized serialization of consecutive leave nodes to linear bytes\n */\nfunction packedNodeRootsToBytes(dataView, start, size, nodes) {\n    // If the offset in data is not a multiple of 4, Uint32Array can't be used\n    // > start offset of Uint32Array should be a multiple of 4\n    // NOTE: Performance tests show that using a DataView is as fast as Uint32Array\n    // Consider that the last node may only include partial data\n    const remainderBytes = size % 32;\n    // Full nodes\n    // Efficiently get hashObjects data into data\n    const fullNodeCount = Math.floor(size / 32);\n    for (let i = 0; i < fullNodeCount; i++) {\n        const node = nodes[i];\n        const offset = start + i * 32;\n        dataView.setInt32(offset + 0, node.h0, true);\n        dataView.setInt32(offset + 4, node.h1, true);\n        dataView.setInt32(offset + 8, node.h2, true);\n        dataView.setInt32(offset + 12, node.h3, true);\n        dataView.setInt32(offset + 16, node.h4, true);\n        dataView.setInt32(offset + 20, node.h5, true);\n        dataView.setInt32(offset + 24, node.h6, true);\n        dataView.setInt32(offset + 28, node.h7, true);\n    }\n    // Last node\n    if (remainderBytes > 0) {\n        const node = nodes[fullNodeCount];\n        // Loop to dynamically copy the full h values\n        const fullHCount = Math.floor(remainderBytes / 4);\n        for (let h = 0; h < fullHCount; h++) {\n            dataView.setInt32(start + fullNodeCount * 32 + h * 4, node_1.getNodeH(node, h), true);\n        }\n        const remainderUint32 = size % 4;\n        if (remainderUint32 > 0) {\n            const h = node_1.getNodeH(node, fullHCount);\n            for (let i = 0; i < remainderUint32; i++) {\n                dataView.setUint8(start + size - remainderUint32 + i, (h >> (i * 8)) & 0xff);\n            }\n        }\n    }\n}\nexports.packedNodeRootsToBytes = packedNodeRootsToBytes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeFromSingleProof = exports.createSingleProof = exports.ERR_INVALID_NAV = void 0;\nconst node_1 = require(\"../node\");\nconst gindex_1 = require(\"../gindex\");\nexports.ERR_INVALID_NAV = \"Invalid tree navigation\";\nfunction createSingleProof(rootNode, index) {\n    const witnesses = [];\n    let node = rootNode;\n    for (const i of gindex_1.gindexIterator(index)) {\n        if (i) {\n            if (node.isLeaf())\n                throw new Error(exports.ERR_INVALID_NAV);\n            witnesses.push(node.left.root);\n            node = node.right;\n        }\n        else {\n            if (node.isLeaf())\n                throw new Error(exports.ERR_INVALID_NAV);\n            witnesses.push(node.right.root);\n            node = node.left;\n        }\n    }\n    return [node.root, witnesses.reverse()];\n}\nexports.createSingleProof = createSingleProof;\nfunction createNodeFromSingleProof(gindex, leaf, witnesses) {\n    let node = node_1.LeafNode.fromRoot(leaf);\n    const w = witnesses.slice().reverse();\n    while (gindex > 1) {\n        const sibling = node_1.LeafNode.fromRoot(w.pop());\n        if (gindex % BigInt(2) === BigInt(0)) {\n            node = new node_1.BranchNode(node, sibling);\n        }\n        else {\n            node = new node_1.BranchNode(sibling, node);\n        }\n        gindex = gindex / BigInt(2);\n    }\n    return node;\n}\nexports.createNodeFromSingleProof = createNodeFromSingleProof;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.treeZeroAfterIndex = exports.iterateNodesAtDepth = exports.getNodesAtDepth = exports.setNodesAtDepth = exports.setNodeAtDepth = exports.getNodeAtDepth = exports.setNodeWithFn = exports.setNode = exports.getNode = exports.Tree = void 0;\nconst zeroNode_1 = require(\"./zeroNode\");\nconst gindex_1 = require(\"./gindex\");\nconst node_1 = require(\"./node\");\nconst proof_1 = require(\"./proof\");\nconst single_1 = require(\"./proof/single\");\n/**\n * Binary merkle tree\n *\n * Wrapper around immutable `Node` to support mutability.\n *\n * Mutability between a parent tree and subtree is achieved by maintaining a `hook` callback, which updates the parent when the subtree is updated.\n */\nclass Tree {\n    constructor(node, hook) {\n        this._rootNode = node;\n        if (hook) {\n            if (typeof WeakRef === \"undefined\") {\n                this.hook = hook;\n            }\n            else {\n                this.hook = new WeakRef(hook);\n            }\n        }\n    }\n    /**\n     * Create a `Tree` from a `Proof` object\n     */\n    static createFromProof(proof) {\n        return new Tree(proof_1.createNodeFromProof(proof));\n    }\n    /**\n     * The root node of the tree\n     */\n    get rootNode() {\n        return this._rootNode;\n    }\n    /**\n     *\n     * Setting the root node will trigger a call to the tree's `hook` if it exists.\n     */\n    set rootNode(newRootNode) {\n        this._rootNode = newRootNode;\n        if (this.hook) {\n            // WeakRef should not change status during a program's execution\n            // So, use WeakRef feature detection to assume the type of this.hook\n            // to minimize the memory footprint of Tree\n            if (typeof WeakRef === \"undefined\") {\n                this.hook(newRootNode);\n            }\n            else {\n                const hookVar = this.hook.deref();\n                if (hookVar) {\n                    hookVar(newRootNode);\n                }\n                else {\n                    // Hook has been garbage collected, no need to keep the hookRef\n                    this.hook = undefined;\n                }\n            }\n        }\n    }\n    /**\n     * The root hash of the tree\n     */\n    get root() {\n        return this.rootNode.root;\n    }\n    /**\n     * Return a copy of the tree\n     */\n    clone() {\n        return new Tree(this.rootNode);\n    }\n    /**\n     * Return the subtree at the specified gindex.\n     *\n     * Note: The returned subtree will have a `hook` attached to the parent tree.\n     * Updates to the subtree will result in updates to the parent.\n     */\n    getSubtree(index) {\n        return new Tree(this.getNode(index), (node) => this.setNode(index, node));\n    }\n    /**\n     * Return the node at the specified gindex.\n     */\n    getNode(gindex) {\n        return getNode(this.rootNode, gindex);\n    }\n    /**\n     * Return the node at the specified depth and index.\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    getNodeAtDepth(depth, index) {\n        return getNodeAtDepth(this.rootNode, depth, index);\n    }\n    /**\n     * Return the hash at the specified gindex.\n     */\n    getRoot(index) {\n        return this.getNode(index).root;\n    }\n    /**\n     * Set the node at at the specified gindex.\n     */\n    setNode(gindex, n) {\n        this.rootNode = setNode(this.rootNode, gindex, n);\n    }\n    /**\n     * Traverse to the node at the specified gindex,\n     * then apply the function to get a new node and set the node at the specified gindex with the result.\n     *\n     * This is a convenient method to avoid traversing the tree 2 times to\n     * get and set.\n     */\n    setNodeWithFn(gindex, getNewNode) {\n        this.rootNode = setNodeWithFn(this.rootNode, gindex, getNewNode);\n    }\n    /**\n     * Set the node at the specified depth and index.\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    setNodeAtDepth(depth, index, node) {\n        this.rootNode = setNodeAtDepth(this.rootNode, depth, index, node);\n    }\n    /**\n     * Set the hash at the specified gindex.\n     *\n     * Note: This will set a new `LeafNode` at the specified gindex.\n     */\n    setRoot(index, root) {\n        this.setNode(index, node_1.LeafNode.fromRoot(root));\n    }\n    /**\n     * Fast read-only iteration\n     * In-order traversal of nodes at `depth`\n     * starting from the `startIndex`-indexed node\n     * iterating through `count` nodes\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    getNodesAtDepth(depth, startIndex, count) {\n        return getNodesAtDepth(this.rootNode, depth, startIndex, count);\n    }\n    /**\n     * Fast read-only iteration\n     * In-order traversal of nodes at `depth`\n     * starting from the `startIndex`-indexed node\n     * iterating through `count` nodes\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    iterateNodesAtDepth(depth, startIndex, count) {\n        return iterateNodesAtDepth(this.rootNode, depth, startIndex, count);\n    }\n    /**\n     * Return a merkle proof for the node at the specified gindex.\n     */\n    getSingleProof(index) {\n        return single_1.createSingleProof(this.rootNode, index)[1];\n    }\n    /**\n     * Return a merkle proof for the proof input.\n     *\n     * This method can be used to create multiproofs.\n     */\n    getProof(input) {\n        return proof_1.createProof(this.rootNode, input);\n    }\n}\nexports.Tree = Tree;\n/**\n * Return the node at the specified gindex.\n */\nfunction getNode(rootNode, gindex) {\n    const gindexBitstring = gindex_1.convertGindexToBitstring(gindex);\n    let node = rootNode;\n    for (let i = 1; i < gindexBitstring.length; i++) {\n        if (node.isLeaf()) {\n            throw new Error(`Invalid tree - found leaf at depth ${i}`);\n        }\n        // If bit is set, means navigate right\n        node = gindexBitstring[i] === \"1\" ? node.right : node.left;\n    }\n    return node;\n}\nexports.getNode = getNode;\n/**\n * Set the node at at the specified gindex.\n * Returns the new root node.\n */\nfunction setNode(rootNode, gindex, n) {\n    // Pre-compute entire bitstring instead of using an iterator (25% faster)\n    const gindexBitstring = gindex_1.convertGindexToBitstring(gindex);\n    const parentNodes = getParentNodes(rootNode, gindexBitstring);\n    return rebindNodeToRoot(gindexBitstring, parentNodes, n);\n}\nexports.setNode = setNode;\n/**\n * Traverse to the node at the specified gindex,\n * then apply the function to get a new node and set the node at the specified gindex with the result.\n *\n * This is a convenient method to avoid traversing the tree 2 times to\n * get and set.\n *\n * Returns the new root node.\n */\nfunction setNodeWithFn(rootNode, gindex, getNewNode) {\n    // Pre-compute entire bitstring instead of using an iterator (25% faster)\n    const gindexBitstring = gindex_1.convertGindexToBitstring(gindex);\n    const parentNodes = getParentNodes(rootNode, gindexBitstring);\n    const lastParentNode = parentNodes[parentNodes.length - 1];\n    const lastBit = gindexBitstring[gindexBitstring.length - 1];\n    const oldNode = lastBit === \"1\" ? lastParentNode.right : lastParentNode.left;\n    const newNode = getNewNode(oldNode);\n    return rebindNodeToRoot(gindexBitstring, parentNodes, newNode);\n}\nexports.setNodeWithFn = setNodeWithFn;\n/**\n * Traverse the tree from root node, ignore the last bit to get all parent nodes\n * of the specified bitstring.\n */\nfunction getParentNodes(rootNode, bitstring) {\n    let node = rootNode;\n    // Keep a list of all parent nodes of node at gindex `index`. Then walk the list\n    // backwards to rebind them \"recursively\" with the new nodes without using functions\n    const parentNodes = [rootNode];\n    // Ignore the first bit, left right directions are at bits [1,..]\n    // Ignore the last bit, no need to push the target node to the parentNodes array\n    for (let i = 1; i < bitstring.length - 1; i++) {\n        // Compare to string directly to prevent unnecessary type conversions\n        if (bitstring[i] === \"1\") {\n            node = node.right;\n        }\n        else {\n            node = node.left;\n        }\n        parentNodes.push(node);\n    }\n    return parentNodes;\n}\n/**\n * Build a new tree structure from bitstring, parentNodes and a new node.\n * Returns the new root node.\n */\nfunction rebindNodeToRoot(bitstring, parentNodes, newNode) {\n    let node = newNode;\n    // Ignore the first bit, left right directions are at bits [1,..]\n    // Iterate the list backwards including the last bit, but offset the parentNodes array\n    // by one since the first bit in bitstring was ignored in the previous loop\n    for (let i = bitstring.length - 1; i >= 1; i--) {\n        if (bitstring[i] === \"1\") {\n            node = new node_1.BranchNode(parentNodes[i - 1].left, node);\n        }\n        else {\n            node = new node_1.BranchNode(node, parentNodes[i - 1].right);\n        }\n    }\n    return node;\n}\n/**\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n */\nfunction getNodeAtDepth(rootNode, depth, index) {\n    if (depth === 0) {\n        return rootNode;\n    }\n    if (depth === 1) {\n        return index === 0 ? rootNode.left : rootNode.right;\n    }\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = depth - 1;\n    const depthiParent = 0;\n    let node = rootNode;\n    for (let d = depthiRoot; d >= depthiParent; d--) {\n        node = isLeftNode(d, index) ? node.left : node.right;\n    }\n    return node;\n}\nexports.getNodeAtDepth = getNodeAtDepth;\n/**\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n */\nfunction setNodeAtDepth(rootNode, nodesDepth, index, nodeChanged) {\n    // TODO: OPTIMIZE (if necessary)\n    return setNodesAtDepth(rootNode, nodesDepth, [index], [nodeChanged]);\n}\nexports.setNodeAtDepth = setNodeAtDepth;\n/**\n * Set multiple nodes in batch, editing and traversing nodes strictly once.\n *\n * - gindexes MUST be sorted in ascending order beforehand.\n * - All gindexes must be at the exact same depth.\n * - Depth must be > 0, if 0 just replace the root node.\n *\n * Strategy: for each gindex in `gindexes` navigate to the depth of its parent,\n * and create a new parent. Then calculate the closest common depth with the next\n * gindex and navigate upwards creating or caching nodes as necessary. Loop and repeat.\n *\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n */\nfunction setNodesAtDepth(rootNode, nodesDepth, indexes, nodes) {\n    // depth depthi   gindexes   indexes\n    // 0     1           1          0\n    // 1     0         2   3      0   1\n    // 2     -        4 5 6 7    0 1 2 3\n    // '10' means, at depth 1, node is at the left\n    //\n    // For index N check if the bit at position depthi is set to navigate right at depthi\n    // ```\n    // mask = 1 << depthi\n    // goRight = (N & mask) == mask\n    // ```\n    // If depth is 0 there's only one node max and the optimization below will cause a navigation error.\n    // For this case, check if there's a new root node and return it, otherwise the current rootNode.\n    if (nodesDepth === 0) {\n        return nodes.length > 0 ? nodes[0] : rootNode;\n    }\n    /**\n     * Contiguous filled stack of parent nodes. It get filled in the first descent\n     * Indexed by depthi\n     */\n    const parentNodeStack = new Array(nodesDepth);\n    /**\n     * Temp stack of left parent nodes, index by depthi.\n     * Node leftParentNodeStack[depthi] is a node at d = depthi - 1, such that:\n     * ```\n     * parentNodeStack[depthi].left = leftParentNodeStack[depthi]\n     * ```\n     */\n    const leftParentNodeStack = new Array(nodesDepth);\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = nodesDepth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    // TODO: Iterate to depth 32 to allow using bit ops\n    // for (; depthi >= 32; depthi--) {\n    //   node = node.left;\n    // }\n    for (let i = 0; i < indexes.length; i++) {\n        const index = indexes[i];\n        // Navigate down until parent depth, and store the chain of nodes\n        //\n        // Starts from latest common depth, so node is the parent node at `depthi`\n        // When persisting the next node, store at the `d - 1` since its the child of node at `depthi`\n        //\n        // Stops at the level above depthiParent. For the re-binding routing below node must be at depthiParent\n        for (let d = depthi; d > depthiParent; d--) {\n            node = isLeftNode(d, index) ? node.left : node.right;\n            parentNodeStack[d - 1] = node;\n        }\n        depthi = depthiParent;\n        // If this is the left node, check first it the next node is on the right\n        //\n        //   -    If both nodes exist, create new\n        //  / \\\n        // x   x\n        //\n        //   -    If only the left node exists, rebind left\n        //  / \\\n        // x   -\n        //\n        //   -    If this is the right node, only the right node exists, rebind right\n        //  / \\\n        // -   x\n        // d = 0, mask = 1 << d = 1\n        const isLeftLeafNode = (index & 1) !== 1;\n        if (isLeftLeafNode) {\n            // Next node is the very next to the right of current node\n            if (index + 1 === indexes[i + 1]) {\n                node = new node_1.BranchNode(nodes[i], nodes[i + 1]);\n                // Move pointer one extra forward since node has consumed two nodes\n                i++;\n            }\n            else {\n                node = new node_1.BranchNode(nodes[i], node.right);\n            }\n        }\n        else {\n            node = new node_1.BranchNode(node.left, nodes[i]);\n        }\n        // Here `node` is the new BranchNode at depthi `depthiParent`\n        // Now climb upwards until finding the common node with the next index\n        // For the last iteration, climb to the root at `depthiRoot`\n        const isLastIndex = i >= indexes.length - 1;\n        const diffDepthi = isLastIndex ? depthiRoot : findDiffDepthi(index, indexes[i + 1]);\n        // When climbing up from a left node there are two possible paths\n        // 1. Go to the right of the parent: Store left node to rebind latter\n        // 2. Go another level up: Will never visit the left node again, so must rebind now\n        // 🡼 \\     Rebind left only, will never visit this node again\n        // 🡽 /\\\n        //\n        //    / 🡽  Rebind left only (same as above)\n        // 🡽 /\\\n        //\n        // 🡽 /\\ 🡾  Store left node to rebind the entire node when returning\n        //\n        // 🡼 \\     Rebind right with left if exists, will never visit this node again\n        //   /\\ 🡼\n        //\n        //    / 🡽  Rebind right with left if exists (same as above)\n        //   /\\ 🡼\n        for (let d = depthiParent + 1; d <= diffDepthi; d++) {\n            // If node is on the left, store for latter\n            // If node is on the right merge with stored left node\n            if (isLeftNode(d, index)) {\n                if (isLastIndex || d !== diffDepthi) {\n                    // If it's last index, bind with parent since it won't navigate to the right anymore\n                    // Also, if still has to move upwards, rebind since the node won't be visited anymore\n                    node = new node_1.BranchNode(node, parentNodeStack[d].right);\n                }\n                else {\n                    // Only store the left node if it's at d = diffDepth\n                    leftParentNodeStack[d] = node;\n                    node = parentNodeStack[d];\n                }\n            }\n            else {\n                const leftNode = leftParentNodeStack[d];\n                if (leftNode !== undefined) {\n                    node = new node_1.BranchNode(leftNode, node);\n                    leftParentNodeStack[d] = undefined;\n                }\n                else {\n                    node = new node_1.BranchNode(parentNodeStack[d].left, node);\n                }\n            }\n        }\n        // Prepare next loop\n        // Go to the parent of the depth with diff, to switch branches to the right\n        depthi = diffDepthi;\n    }\n    // Done, return new root node\n    return node;\n}\nexports.setNodesAtDepth = setNodesAtDepth;\n/**\n * Fast read-only iteration\n * In-order traversal of nodes at `depth`\n * starting from the `startIndex`-indexed node\n * iterating through `count` nodes\n *\n * **Strategy**\n * 1. Navigate down to parentDepth storing a stack of parents\n * 2. At target level push current node\n * 3. Go up to the first level that navigated left\n * 4. Repeat (1) for next index\n */\nfunction getNodesAtDepth(rootNode, depth, startIndex, count) {\n    // Optimized paths for short trees (x20 times faster)\n    if (depth === 0) {\n        return startIndex === 0 && count > 0 ? [rootNode] : [];\n    }\n    else if (depth === 1) {\n        if (count === 0) {\n            return [];\n        }\n        else if (count === 1) {\n            return startIndex === 0 ? [rootNode.left] : [rootNode.right];\n        }\n        else {\n            return [rootNode.left, rootNode.right];\n        }\n    }\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = depth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Contiguous filled stack of parent nodes. It get filled in the first descent\n    // Indexed by depthi\n    const parentNodeStack = new Array(depth);\n    const isLeftStack = new Array(depth);\n    const nodes = new Array(count);\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    for (let i = 0; i < count; i++) {\n        for (let d = depthi; d >= depthiParent; d--) {\n            if (d !== depthi) {\n                parentNodeStack[d] = node;\n            }\n            const isLeft = isLeftNode(d, startIndex + i);\n            isLeftStack[d] = isLeft;\n            node = isLeft ? node.left : node.right;\n        }\n        nodes[i] = node;\n        // Find the first depth where navigation when left.\n        // Store that height and go right from there\n        for (let d = depthiParent; d <= depthiRoot; d++) {\n            if (isLeftStack[d] === true) {\n                depthi = d;\n                break;\n            }\n        }\n        node = parentNodeStack[depthi];\n    }\n    return nodes;\n}\nexports.getNodesAtDepth = getNodesAtDepth;\n/**\n * @see getNodesAtDepth but instead of pushing to an array, it yields\n */\nfunction* iterateNodesAtDepth(rootNode, depth, startIndex, count) {\n    const endIndex = startIndex + count;\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = depth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Contiguous filled stack of parent nodes. It get filled in the first descent\n    // Indexed by depthi\n    const parentNodeStack = new Array(depth);\n    const isLeftStack = new Array(depth);\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    for (let index = startIndex; index < endIndex; index++) {\n        for (let d = depthi; d >= depthiParent; d--) {\n            if (d !== depthi) {\n                parentNodeStack[d] = node;\n            }\n            const isLeft = isLeftNode(d, index);\n            isLeftStack[d] = isLeft;\n            node = isLeft ? node.left : node.right;\n        }\n        yield node;\n        // Find the first depth where navigation when left.\n        // Store that height and go right from there\n        for (let d = depthiParent; d <= depthiRoot; d++) {\n            if (isLeftStack[d] === true) {\n                depthi = d;\n                break;\n            }\n        }\n        node = parentNodeStack[depthi];\n    }\n}\nexports.iterateNodesAtDepth = iterateNodesAtDepth;\n/**\n * Zero's all nodes right of index with constant depth of `nodesDepth`.\n *\n * For example, zero-ing this tree at depth 2 after index 0\n * ```\n *    X              X\n *  X   X    ->    X   0\n * X X X X        X 0 0 0\n * ```\n *\n * Or, zero-ing this tree at depth 3 after index 2\n * ```\n *        X                     X\n *    X       X             X       0\n *  X   X   X   X    ->   X   X   0   0\n * X X X X X X X X       X X X 0 0 0 0 0\n * ```\n *\n * The strategy is to first navigate down to `nodesDepth` and `index` and keep a stack of parents.\n * Then navigate up re-binding:\n * - If navigated to the left rebind with zeroNode()\n * - If navigated to the right rebind with parent.left from the stack\n */\nfunction treeZeroAfterIndex(rootNode, nodesDepth, index) {\n    // depth depthi   gindexes   indexes\n    // 0     1           1          0\n    // 1     0         2   3      0   1\n    // 2     -        4 5 6 7    0 1 2 3\n    // '10' means, at depth 1, node is at the left\n    //\n    // For index N check if the bit at position depthi is set to navigate right at depthi\n    // ```\n    // mask = 1 << depthi\n    // goRight = (N & mask) == mask\n    // ```\n    // Degenerate case where tree is zero after a negative index (-1).\n    // All positive indexes are zero, so the entire tree is zero. Return cached zero node as root.\n    if (index < 0) {\n        return zeroNode_1.zeroNode(nodesDepth);\n    }\n    /**\n     * Contiguous filled stack of parent nodes. It get filled in the first descent\n     * Indexed by depthi\n     */\n    const parentNodeStack = new Array(nodesDepth);\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = nodesDepth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    // Navigate down until parent depth, and store the chain of nodes\n    //\n    // Stops at the depthiParent level. To rebind below down to `nodesDepth`\n    for (let d = depthi; d >= depthiParent; d--) {\n        node = isLeftNode(d, index) ? node.left : node.right;\n        parentNodeStack[d - 1] = node;\n    }\n    depthi = depthiParent;\n    // Now climb up re-binding with either zero of existing tree.\n    for (let d = depthiParent; d <= depthiRoot; d++) {\n        if (isLeftNode(d, index)) {\n            // If navigated to the left, then all the child nodes of the right node are NOT part of the new tree.\n            // So re-bind new `node` with a zeroNode at the current depth.\n            node = new node_1.BranchNode(node, zeroNode_1.zeroNode(d));\n        }\n        else {\n            // If navigated to the right, then all the child nodes of the left node are part of the new tree.\n            // So re-bind new `node` with the existing left node of the parent.\n            node = new node_1.BranchNode(parentNodeStack[d].left, node);\n        }\n    }\n    // Done, return new root node\n    return node;\n}\nexports.treeZeroAfterIndex = treeZeroAfterIndex;\n/**\n * Returns true if the `index` at `depth` is a left node, false if it is a right node.\n *\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n * In Eth2 case the biggest tree's index is 2**40 (VALIDATOR_REGISTRY_LIMIT)\n */\nfunction isLeftNode(depthi, index) {\n    if (depthi > 31) {\n        // Javascript can only do bitwise ops with 32 bit numbers.\n        // Shifting left 1 by 32 wraps around and becomes 1.\n        // Get the high part of `index` and adjust depthi\n        const indexHi = (index / 2 ** 32) >>> 0;\n        const mask = 1 << (depthi - 32);\n        return (indexHi & mask) !== mask;\n    }\n    const mask = 1 << depthi;\n    return (index & mask) !== mask;\n}\n/**\n * depth depthi   gindexes   indexes\n * 0     1           1          0\n * 1     0         2   3      0   1\n * 2     -        4 5 6 7    0 1 2 3\n *\n * **Conditions**:\n * - `from` and `to` must not be equal\n *\n * @param from Index\n * @param to Index\n */\nfunction findDiffDepthi(from, to) {\n    return (\n    // (0,0) -> 0 | (0,1) -> 1 | (0,2) -> 2\n    Math.ceil(Math.log2(-~(from ^ to))) -\n        // Must offset by one to match the depthi scale\n        1);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeMultiProofBitstrings = exports.SortOrder = exports.filterParentBitstrings = exports.sortDecreasingBitstrings = exports.sortInOrderBitstrings = exports.computeProofBitstrings = exports.computeProofGindices = void 0;\nconst gindex_1 = require(\"../gindex\");\n// Not currently in use, but simpler implementation useful for testing\n/**\n * Compute both the path and branch indices\n *\n * Path indices are parent indices upwards toward the root\n * Branch indices are witnesses required for a merkle proof\n */\nfunction computeProofGindices(gindex) {\n    const path = new Set();\n    const branch = new Set();\n    let g = gindex;\n    while (g > 1) {\n        path.add(g);\n        branch.add(gindex_1.gindexSibling(g));\n        g = gindex_1.gindexParent(g);\n    }\n    return { path, branch };\n}\nexports.computeProofGindices = computeProofGindices;\n/**\n * Compute both the path and branch indices\n *\n * Path indices are parent indices upwards toward the root\n * Branch indices are witnesses required for a merkle proof\n */\nfunction computeProofBitstrings(gindex) {\n    const path = new Set();\n    const branch = new Set();\n    let g = gindex;\n    while (g.length > 1) {\n        path.add(g);\n        const lastBit = g[g.length - 1];\n        const parent = g.substring(0, g.length - 1);\n        branch.add(parent + (Number(lastBit) ^ 1));\n        g = parent;\n    }\n    return { path, branch };\n}\nexports.computeProofBitstrings = computeProofBitstrings;\n/**\n * Sort generalized indices in-order\n * @param bitLength maximum bit length of generalized indices to sort\n */\nfunction sortInOrderBitstrings(gindices, bitLength) {\n    if (!gindices.length) {\n        return [];\n    }\n    return gindices\n        .map((g) => g.padEnd(bitLength))\n        .sort()\n        .map((g) => g.trim());\n}\nexports.sortInOrderBitstrings = sortInOrderBitstrings;\n/**\n * Sort generalized indices in decreasing order\n */\nfunction sortDecreasingBitstrings(gindices) {\n    if (!gindices.length) {\n        return [];\n    }\n    return gindices.sort((a, b) => {\n        if (a.length < b.length) {\n            return 1;\n        }\n        else if (b.length < a.length) {\n            return -1;\n        }\n        let aPos0 = a.indexOf(\"0\");\n        let bPos0 = b.indexOf(\"0\");\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            if (aPos0 === -1) {\n                return -1;\n            }\n            else if (bPos0 === -1) {\n                return 1;\n            }\n            if (aPos0 < bPos0) {\n                return 1;\n            }\n            else if (bPos0 < aPos0) {\n                return -1;\n            }\n            aPos0 = a.indexOf(\"0\", aPos0 + 1);\n            bPos0 = b.indexOf(\"0\", bPos0 + 1);\n        }\n    });\n}\nexports.sortDecreasingBitstrings = sortDecreasingBitstrings;\n/**\n * Filter out parent generalized indices\n */\nfunction filterParentBitstrings(gindices) {\n    const sortedBitstrings = gindices.slice().sort((a, b) => a.length - b.length);\n    const filtered = [];\n    outer: for (let i = 0; i < sortedBitstrings.length; i++) {\n        const bsA = sortedBitstrings[i];\n        for (let j = i + 1; j < sortedBitstrings.length; j++) {\n            const bsB = sortedBitstrings[j];\n            if (bsB.startsWith(bsA)) {\n                continue outer;\n            }\n        }\n        filtered.push(bsA);\n    }\n    return filtered;\n}\nexports.filterParentBitstrings = filterParentBitstrings;\nvar SortOrder;\n(function (SortOrder) {\n    SortOrder[SortOrder[\"InOrder\"] = 0] = \"InOrder\";\n    SortOrder[SortOrder[\"Decreasing\"] = 1] = \"Decreasing\";\n    SortOrder[SortOrder[\"Unsorted\"] = 2] = \"Unsorted\";\n})(SortOrder = exports.SortOrder || (exports.SortOrder = {}));\n/**\n * Return the set of generalized indices required for a multiproof\n * This may include all leaves and any necessary witnesses\n * @param gindices leaves to include in proof\n * @returns all generalized indices required for a multiproof (leaves and witnesses), deduplicated and sorted\n */\nfunction computeMultiProofBitstrings(gindices, includeLeaves = true, sortOrder = SortOrder.InOrder) {\n    const leaves = filterParentBitstrings(gindices);\n    // Maybe initialize the proof indices with the leaves\n    const proof = new Set(includeLeaves ? leaves : []);\n    const paths = new Set();\n    const branches = new Set();\n    // Collect all path indices and all branch indices\n    let maxBitLength = 1;\n    for (const gindex of leaves) {\n        if (gindex.length > maxBitLength)\n            maxBitLength = gindex.length;\n        const { path, branch } = computeProofBitstrings(gindex);\n        path.forEach((g) => paths.add(g));\n        branch.forEach((g) => branches.add(g));\n    }\n    // Remove all branches that are included in the paths\n    paths.forEach((g) => branches.delete(g));\n    // Add all remaining branches to the leaves\n    branches.forEach((g) => proof.add(g));\n    switch (sortOrder) {\n        case SortOrder.InOrder:\n            return sortInOrderBitstrings(Array.from(proof), maxBitLength);\n        case SortOrder.Decreasing:\n            return sortDecreasingBitstrings(Array.from(proof));\n        case SortOrder.Unsorted:\n            return Array.from(proof);\n    }\n}\nexports.computeMultiProofBitstrings = computeMultiProofBitstrings;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeFromMultiProof = exports.createMultiProof = void 0;\nconst node_1 = require(\"../node\");\nconst tree_1 = require(\"../tree\");\nconst util_1 = require(\"./util\");\n/**\n * Create an multiproof\n *\n * See https://github.com/ethereum/consensus-specs/blob/dev/ssz/merkle-proofs.md#merkle-multiproofs\n *\n * @param rootNode the root node of the tree\n * @param gindices generalized indices of leaves to include in the proof\n */\nfunction createMultiProof(rootNode, gindices) {\n    const tree = new tree_1.Tree(rootNode);\n    const witnessGindices = util_1.computeMultiProofBitstrings(gindices.map((gindex) => gindex.toString(2)), false, util_1.SortOrder.Decreasing);\n    const leafGindices = gindices.slice().sort((a, b) => (a < b ? 1 : -1));\n    const leaves = leafGindices.map((gindex) => tree.getRoot(gindex));\n    const witnesses = witnessGindices.map((gindex) => tree.getRoot(gindex));\n    return [leaves, witnesses, leafGindices];\n}\nexports.createMultiProof = createMultiProof;\n/**\n * Recreate a `Node` given a multiproof\n *\n * See https://github.com/ethereum/consensus-specs/blob/dev/ssz/merkle-proofs.md#merkle-multiproofs\n *\n * @param leaves leaves of a EF multiproof\n * @param witnesses witnesses of a EF multiproof\n * @param gindices generalized indices of the leaves\n */\nfunction createNodeFromMultiProof(leaves, witnesses, gindices) {\n    if (leaves.length !== gindices.length) {\n        throw new Error(\"Leaves length should equal gindices length\");\n    }\n    const leafBitstrings = gindices.map((gindex) => gindex.toString(2));\n    const witnessBitstrings = util_1.computeMultiProofBitstrings(leafBitstrings, false, util_1.SortOrder.Decreasing);\n    if (witnessBitstrings.length !== witnesses.length) {\n        throw new Error(\"Witnesses length should equal witnesses gindices length\");\n    }\n    // Algorithm:\n    // create an object which tracks key-values for each level\n    // pre-load leaves and witnesses into the level object\n    // level by level, starting from the bottom,\n    // find the sibling, create the parent, store it in the next level up\n    // the root is in level 1\n    const maxLevel = Math.max(leafBitstrings[0]?.length ?? 0, witnessBitstrings[0]?.length ?? 0);\n    const levels = Object.fromEntries(Array.from({ length: maxLevel }, (_, i) => [i + 1, {}]));\n    // preload leaves and witnesses\n    for (let i = 0; i < leafBitstrings.length; i++) {\n        const leafBitstring = leafBitstrings[i];\n        const leaf = leaves[i];\n        levels[leafBitstring.length][leafBitstring] = node_1.LeafNode.fromRoot(leaf);\n    }\n    for (let i = 0; i < witnessBitstrings.length; i++) {\n        const witnessBitstring = witnessBitstrings[i];\n        const witness = witnesses[i];\n        levels[witnessBitstring.length][witnessBitstring] = node_1.LeafNode.fromRoot(witness);\n    }\n    for (let i = maxLevel; i > 1; i--) {\n        const level = levels[i];\n        const parentLevel = levels[i - 1];\n        for (const bitstring of Object.keys(level)) {\n            const node = level[bitstring];\n            // if the node doesn't exist, we've already processed its sibling\n            if (!node) {\n                continue;\n            }\n            const isLeft = bitstring[bitstring.length - 1] === \"0\";\n            const parentBitstring = bitstring.substring(0, bitstring.length - 1);\n            const siblingBitstring = parentBitstring + (isLeft ? \"1\" : \"0\");\n            const siblingNode = level[siblingBitstring];\n            if (!siblingNode) {\n                throw new Error(`Sibling not found: ${siblingBitstring}`);\n            }\n            // store the parent node\n            const parentNode = isLeft ? new node_1.BranchNode(node, siblingNode) : new node_1.BranchNode(siblingNode, node);\n            parentLevel[parentBitstring] = parentNode;\n            // delete the used nodes\n            delete level[bitstring];\n            delete level[siblingBitstring];\n        }\n    }\n    const root = levels[1][\"1\"];\n    if (!root) {\n        throw new Error(\"Internal consistency error: no root found\");\n    }\n    return root;\n}\nexports.createNodeFromMultiProof = createNodeFromMultiProof;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeFromCompactMultiProof = exports.createCompactMultiProof = exports.compactMultiProofToNode = exports.nodeToCompactMultiProof = exports.descriptorToBitlist = exports.computeDescriptor = void 0;\nconst gindex_1 = require(\"../gindex\");\nconst node_1 = require(\"../node\");\nconst util_1 = require(\"./util\");\nfunction computeDescriptor(indices) {\n    // include all helper indices\n    const proofBitstrings = new Set();\n    const pathBitstrings = new Set();\n    for (const leafIndex of indices) {\n        const leafBitstring = gindex_1.convertGindexToBitstring(leafIndex);\n        proofBitstrings.add(leafBitstring);\n        const { branch, path } = util_1.computeProofBitstrings(leafBitstring);\n        path.delete(leafBitstring);\n        for (const pathIndex of path) {\n            pathBitstrings.add(pathIndex);\n        }\n        for (const branchIndex of branch) {\n            proofBitstrings.add(branchIndex);\n        }\n    }\n    for (const pathIndex of pathBitstrings) {\n        proofBitstrings.delete(pathIndex);\n    }\n    // sort gindex bitstrings in-order\n    const allBitstringsSorted = Array.from(proofBitstrings).sort((a, b) => a.localeCompare(b));\n    // convert gindex bitstrings into descriptor bitstring\n    let descriptorBitstring = \"\";\n    for (const gindexBitstring of allBitstringsSorted) {\n        for (let i = 0; i < gindexBitstring.length; i++) {\n            if (gindexBitstring[gindexBitstring.length - 1 - i] === \"1\") {\n                descriptorBitstring += \"1\".padStart(i + 1, \"0\");\n                break;\n            }\n        }\n    }\n    // append zero bits to byte-alignt\n    if (descriptorBitstring.length % 8 != 0) {\n        descriptorBitstring = descriptorBitstring.padEnd(8 - (descriptorBitstring.length % 8) + descriptorBitstring.length, \"0\");\n    }\n    // convert descriptor bitstring to bytes\n    const descriptor = new Uint8Array(descriptorBitstring.length / 8);\n    for (let i = 0; i < descriptor.length; i++) {\n        descriptor[i] = Number(\"0b\" + descriptorBitstring.substring(i * 8, (i + 1) * 8));\n    }\n    return descriptor;\n}\nexports.computeDescriptor = computeDescriptor;\nfunction getBit(bitlist, bitIndex) {\n    const bit = bitIndex % 8;\n    const byteIdx = Math.floor(bitIndex / 8);\n    const byte = bitlist[byteIdx];\n    switch (bit) {\n        case 0:\n            return (byte & 0b1000_0000) !== 0;\n        case 1:\n            return (byte & 0b0100_0000) !== 0;\n        case 2:\n            return (byte & 0b0010_0000) !== 0;\n        case 3:\n            return (byte & 0b0001_0000) !== 0;\n        case 4:\n            return (byte & 0b0000_1000) !== 0;\n        case 5:\n            return (byte & 0b0000_0100) !== 0;\n        case 6:\n            return (byte & 0b0000_0010) !== 0;\n        case 7:\n            return (byte & 0b0000_0001) !== 0;\n        default:\n            throw new Error(\"unreachable\");\n    }\n}\nfunction descriptorToBitlist(descriptor) {\n    const bools = [];\n    const maxBitLength = descriptor.length * 8;\n    let count0 = 0;\n    let count1 = 0;\n    for (let i = 0; i < maxBitLength; i++) {\n        const bit = getBit(descriptor, i);\n        bools.push(bit);\n        if (bit) {\n            count1++;\n        }\n        else {\n            count0++;\n        }\n        if (count1 > count0) {\n            i++;\n            if (i + 7 < maxBitLength) {\n                throw new Error(\"Invalid descriptor: too many bytes\");\n            }\n            for (; i < maxBitLength; i++) {\n                const bit = getBit(descriptor, i);\n                if (bit) {\n                    throw new Error(\"Invalid descriptor: too many 1 bits\");\n                }\n            }\n            return bools;\n        }\n    }\n    throw new Error(\"Invalid descriptor: not enough 1 bits\");\n}\nexports.descriptorToBitlist = descriptorToBitlist;\nfunction nodeToCompactMultiProof(node, bitlist, bitIndex) {\n    if (bitlist[bitIndex]) {\n        return [node.root];\n    }\n    else {\n        const left = nodeToCompactMultiProof(node.left, bitlist, bitIndex + 1);\n        const right = nodeToCompactMultiProof(node.right, bitlist, bitIndex + left.length * 2);\n        return [...left, ...right];\n    }\n}\nexports.nodeToCompactMultiProof = nodeToCompactMultiProof;\n/**\n * Create a Node given a validated bitlist, leaves, and a pointer into the bitlist and leaves\n *\n * Recursive definition\n */\nfunction compactMultiProofToNode(bitlist, leaves, pointer) {\n    if (bitlist[pointer.bitIndex++]) {\n        return node_1.LeafNode.fromRoot(leaves[pointer.leafIndex++]);\n    }\n    else {\n        return new node_1.BranchNode(compactMultiProofToNode(bitlist, leaves, pointer), compactMultiProofToNode(bitlist, leaves, pointer));\n    }\n}\nexports.compactMultiProofToNode = compactMultiProofToNode;\nfunction createCompactMultiProof(rootNode, descriptor) {\n    return nodeToCompactMultiProof(rootNode, descriptorToBitlist(descriptor), 0);\n}\nexports.createCompactMultiProof = createCompactMultiProof;\nfunction createNodeFromCompactMultiProof(leaves, descriptor) {\n    const bools = descriptorToBitlist(descriptor);\n    if (bools.length !== leaves.length * 2 - 1) {\n        throw new Error(\"Invalid multiproof: invalid number of leaves\");\n    }\n    return compactMultiProofToNode(bools, leaves, { bitIndex: 0, leafIndex: 0 });\n}\nexports.createNodeFromCompactMultiProof = createNodeFromCompactMultiProof;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeTreeOffsetProof = exports.serializeTreeOffsetProof = exports.computeTreeOffsetProofSerializedLength = exports.createNodeFromTreeOffsetProof = exports.createTreeOffsetProof = exports.treeOffsetProofToNode = exports.nodeToTreeOffsetProof = void 0;\nconst node_1 = require(\"../node\");\nconst util_1 = require(\"./util\");\n/**\n * Compute offsets and leaves of a tree-offset proof\n *\n * Recursive function\n *\n * See https://github.com/protolambda/eth-merkle-trees/blob/master/tree_offsets.md\n * @param node current node in the tree\n * @param gindex current generalized index in the tree\n * @param proofGindices generalized indices to left include in the proof - must be sorted in-order according to the tree\n */\nfunction nodeToTreeOffsetProof(node, gindex, proofGindices) {\n    if (!proofGindices.length || !proofGindices[0].startsWith(gindex)) {\n        // there are no proof indices left OR the current subtree contains no remaining proof indices\n        return [[], []];\n    }\n    else if (gindex === proofGindices[0]) {\n        // the current node is at the next proof index\n        proofGindices.shift();\n        return [[], [node.root]];\n    }\n    else {\n        // recursively compute offsets, leaves for the left and right subtree\n        const [leftOffsets, leftLeaves] = nodeToTreeOffsetProof(node.left, gindex + \"0\", proofGindices);\n        const [rightOffsets, rightLeaves] = nodeToTreeOffsetProof(node.right, gindex + \"1\", proofGindices);\n        // the offset prepended to the list is # of leaves in the left subtree\n        const pivot = leftLeaves.length;\n        return [[pivot].concat(leftOffsets, rightOffsets), leftLeaves.concat(rightLeaves)];\n    }\n}\nexports.nodeToTreeOffsetProof = nodeToTreeOffsetProof;\n/**\n * Recreate a `Node` given offsets and leaves of a tree-offset proof\n *\n * Recursive definition\n *\n * See https://github.com/protolambda/eth-merkle-trees/blob/master/tree_offsets.md\n */\nfunction treeOffsetProofToNode(offsets, leaves) {\n    if (!leaves.length) {\n        throw new Error(\"Proof must contain gt 0 leaves\");\n    }\n    else if (leaves.length === 1) {\n        return node_1.LeafNode.fromRoot(leaves[0]);\n    }\n    else {\n        // the offset popped from the list is the # of leaves in the left subtree\n        const pivot = offsets[0];\n        return new node_1.BranchNode(treeOffsetProofToNode(offsets.slice(1, pivot), leaves.slice(0, pivot)), treeOffsetProofToNode(offsets.slice(pivot), leaves.slice(pivot)));\n    }\n}\nexports.treeOffsetProofToNode = treeOffsetProofToNode;\n/**\n * Create a tree-offset proof\n *\n * @param rootNode the root node of the tree\n * @param gindices generalized indices to include in the proof\n */\nfunction createTreeOffsetProof(rootNode, gindices) {\n    return nodeToTreeOffsetProof(rootNode, \"1\", util_1.computeMultiProofBitstrings(gindices.map((g) => g.toString(2))));\n}\nexports.createTreeOffsetProof = createTreeOffsetProof;\n/**\n * Recreate a `Node` given a tree-offset proof\n *\n * @param offsets offsets of a tree-offset proof\n * @param leaves leaves of a tree-offset proof\n */\nfunction createNodeFromTreeOffsetProof(offsets, leaves) {\n    // TODO validation\n    return treeOffsetProofToNode(offsets, leaves);\n}\nexports.createNodeFromTreeOffsetProof = createNodeFromTreeOffsetProof;\nfunction computeTreeOffsetProofSerializedLength(offsets, leaves) {\n    // add 1 for # of leaves\n    return (offsets.length + 1) * 2 + leaves.length * 32;\n}\nexports.computeTreeOffsetProofSerializedLength = computeTreeOffsetProofSerializedLength;\n// Serialized tree offset proof structure:\n// # of leaves - 2 bytes\n// offsets - 2 bytes each\n// leaves - 32 bytes each\nfunction serializeTreeOffsetProof(output, byteOffset, offsets, leaves) {\n    const writer = new DataView(output.buffer, output.byteOffset, output.byteLength);\n    // set # of leaves\n    writer.setUint16(byteOffset, leaves.length, true);\n    // set offsets\n    const offsetsStartIndex = byteOffset + 2;\n    for (let i = 0; i < offsets.length; i++) {\n        writer.setUint16(i * 2 + offsetsStartIndex, offsets[i], true);\n    }\n    // set leaves\n    const leavesStartIndex = offsetsStartIndex + offsets.length * 2;\n    for (let i = 0; i < leaves.length; i++) {\n        output.set(leaves[i], i * 32 + leavesStartIndex);\n    }\n}\nexports.serializeTreeOffsetProof = serializeTreeOffsetProof;\nfunction deserializeTreeOffsetProof(data, byteOffset) {\n    const reader = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    // get # of leaves\n    const leafCount = reader.getUint16(byteOffset, true);\n    if (data.length < (leafCount - 1) * 2 + leafCount * 32) {\n        throw new Error(\"Unable to deserialize tree offset proof: not enough bytes\");\n    }\n    // get offsets\n    const offsetsStartIndex = byteOffset + 2;\n    const offsets = Array.from({ length: leafCount - 1 }, (_, i) => reader.getUint16(i * 2 + offsetsStartIndex, true));\n    // get leaves\n    const leavesStartIndex = offsetsStartIndex + offsets.length * 2;\n    const leaves = Array.from({ length: leafCount }, (_, i) => data.subarray(i * 32 + leavesStartIndex, (i + 1) * 32 + leavesStartIndex));\n    return [offsets, leaves];\n}\nexports.deserializeTreeOffsetProof = deserializeTreeOffsetProof;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeProof = exports.serializeProof = exports.createNodeFromProof = exports.createProof = exports.ProofTypeSerialized = exports.ProofType = exports.descriptorToBitlist = exports.computeDescriptor = void 0;\nconst multi_1 = require(\"./multi\");\nconst compactMulti_1 = require(\"./compactMulti\");\nconst single_1 = require(\"./single\");\nconst treeOffset_1 = require(\"./treeOffset\");\nvar compactMulti_2 = require(\"./compactMulti\");\nObject.defineProperty(exports, \"computeDescriptor\", { enumerable: true, get: function () { return compactMulti_2.computeDescriptor; } });\nObject.defineProperty(exports, \"descriptorToBitlist\", { enumerable: true, get: function () { return compactMulti_2.descriptorToBitlist; } });\nvar ProofType;\n(function (ProofType) {\n    ProofType[\"single\"] = \"single\";\n    ProofType[\"treeOffset\"] = \"treeOffset\";\n    ProofType[\"multi\"] = \"multi\";\n    ProofType[\"compactMulti\"] = \"compactMulti\";\n})(ProofType = exports.ProofType || (exports.ProofType = {}));\n/**\n * Serialized proofs are prepended with a single byte, denoting their type\n */\nexports.ProofTypeSerialized = [\n    ProofType.single,\n    ProofType.treeOffset,\n    ProofType.multi,\n    ProofType.compactMulti, // 3\n];\nfunction createProof(rootNode, input) {\n    switch (input.type) {\n        case ProofType.single: {\n            const [leaf, witnesses] = single_1.createSingleProof(rootNode, input.gindex);\n            return {\n                type: ProofType.single,\n                gindex: input.gindex,\n                leaf,\n                witnesses,\n            };\n        }\n        case ProofType.treeOffset: {\n            const [offsets, leaves] = treeOffset_1.createTreeOffsetProof(rootNode, input.gindices);\n            return {\n                type: ProofType.treeOffset,\n                offsets,\n                leaves,\n            };\n        }\n        case ProofType.multi: {\n            const [leaves, witnesses, gindices] = multi_1.createMultiProof(rootNode, input.gindices);\n            return {\n                type: ProofType.multi,\n                leaves,\n                witnesses,\n                gindices,\n            };\n        }\n        case ProofType.compactMulti: {\n            const leaves = compactMulti_1.createCompactMultiProof(rootNode, input.descriptor);\n            return {\n                type: ProofType.compactMulti,\n                leaves,\n                descriptor: input.descriptor,\n            };\n        }\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.createProof = createProof;\nfunction createNodeFromProof(proof) {\n    switch (proof.type) {\n        case ProofType.single:\n            return single_1.createNodeFromSingleProof(proof.gindex, proof.leaf, proof.witnesses);\n        case ProofType.treeOffset:\n            return treeOffset_1.createNodeFromTreeOffsetProof(proof.offsets, proof.leaves);\n        case ProofType.multi:\n            return multi_1.createNodeFromMultiProof(proof.leaves, proof.witnesses, proof.gindices);\n        case ProofType.compactMulti:\n            return compactMulti_1.createNodeFromCompactMultiProof(proof.leaves, proof.descriptor);\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.createNodeFromProof = createNodeFromProof;\nfunction serializeProof(proof) {\n    switch (proof.type) {\n        case ProofType.single:\n        case ProofType.multi:\n            throw new Error(\"Not implemented\");\n        case ProofType.treeOffset: {\n            const output = new Uint8Array(1 + treeOffset_1.computeTreeOffsetProofSerializedLength(proof.offsets, proof.leaves));\n            output[0] = exports.ProofTypeSerialized.indexOf(ProofType.treeOffset);\n            treeOffset_1.serializeTreeOffsetProof(output, 1, proof.offsets, proof.leaves);\n            return output;\n        }\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.serializeProof = serializeProof;\nfunction deserializeProof(data) {\n    const proofType = exports.ProofTypeSerialized[data[0]];\n    if (!proofType) {\n        throw new Error(\"Invalid proof type\");\n    }\n    switch (proofType) {\n        case ProofType.single:\n        case ProofType.multi:\n            throw new Error(\"Not implemented\");\n        case ProofType.treeOffset: {\n            const [offsets, leaves] = treeOffset_1.deserializeTreeOffsetProof(data, 1);\n            return {\n                type: ProofType.treeOffset,\n                offsets,\n                leaves,\n            };\n        }\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.deserializeProof = deserializeProof;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./gindex\"), exports);\n__exportStar(require(\"./hasher\"), exports);\n__exportStar(require(\"./node\"), exports);\n__exportStar(require(\"./packedNode\"), exports);\n__exportStar(require(\"./proof\"), exports);\n__exportStar(require(\"./subtree\"), exports);\n__exportStar(require(\"./tree\"), exports);\n__exportStar(require(\"./zeroNode\"), exports);\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "import {\n  ByteVectorType,\n  ContainerType,\n  ListCompositeType,\n  UintBigintType,\n  UintNumberType,\n} from '@chainsafe/ssz'\n\nimport { MAX_WITHDRAWALS_PER_PAYLOAD } from './constants'\n\nexport const UintNum64 = new UintNumberType(8)\nexport const UintBigInt64 = new UintBigintType(8)\nexport const Bytes20 = new ByteVectorType(20)\n\nexport const Withdrawal = new ContainerType(\n  {\n    index: UintBigInt64,\n    validatorIndex: UintBigInt64,\n    address: Bytes20,\n    amount: UintBigInt64,\n  },\n  { typeName: 'Withdrawal', jsonCase: 'eth2' }\n)\nexport const Withdrawals = new ListCompositeType(Withdrawal, MAX_WITHDRAWALS_PER_PAYLOAD)\n", "// Reference: https://ethereum.org/en/developers/docs/data-structures-and-encoding/patricia-merkle-trie/\n/**\n *\n * @param s byte sequence\n * @returns boolean indicating if input hex nibble sequence has terminator indicating leaf-node\n *          terminator is represented with 16 because a nibble ranges from 0 - 15(f)\n */\nexport const hasTerminator = (nibbles: Uint8Array) => {\n  return nibbles.length > 0 && nibbles[nibbles.length - 1] === 16\n}\n\nexport const nibblesToBytes = (nibbles: Uint8Array, bytes: Uint8Array) => {\n  for (let bi = 0, ni = 0; ni < nibbles.length; bi += 1, ni += 2) {\n    bytes[bi] = (nibbles[ni] << 4) | nibbles[ni + 1]\n  }\n}\n\nexport const nibblesToCompactBytes = (nibbles: Uint8Array) => {\n  let terminator = 0\n  if (hasTerminator(nibbles)) {\n    terminator = 1\n    // Remove the terminator from the sequence\n    nibbles = nibbles.subarray(0, nibbles.length - 1)\n  }\n  const buf = new Uint8Array(nibbles.length / 2 + 1)\n  // Shift the terminator info into the first nibble of buf[0]\n  buf[0] = terminator << 5\n  // If odd length, then add that flag into the first nibble and put the odd nibble to\n  // second part of buf[0] which otherwise will be left padded with a 0\n  if ((nibbles.length & 1) === 1) {\n    buf[0] |= 1 << 4\n    buf[0] |= nibbles[0]\n    nibbles = nibbles.subarray(1)\n  }\n  // create bytes out of the rest even nibbles\n  nibblesToBytes(nibbles, buf.subarray(1))\n  return buf\n}\n\nexport const bytesToNibbles = (str: Uint8Array) => {\n  const l = str.length * 2 + 1\n  const nibbles = new Uint8Array(l)\n  for (let i = 0; i < str.length; i++) {\n    const b = str[i]\n    nibbles[i * 2] = b / 16\n    nibbles[i * 2 + 1] = b % 16\n  }\n  // This will get removed from calling function if the first nibble\n  // indicates that terminator is not present\n  nibbles[l - 1] = 16\n  return nibbles\n}\n\nexport const compactBytesToNibbles = (compact: Uint8Array) => {\n  if (compact.length === 0) {\n    return compact\n  }\n  let base = bytesToNibbles(compact)\n  // delete terminator flag if terminator flag was not in first nibble\n  if (base[0] < 2) {\n    base = base.subarray(0, base.length - 1)\n  }\n  // chop the terminator nibble and the even padding (if there is one)\n  // i.e.  chop 2 left nibbles when even else 1 when odd\n  const chop = 2 - (base[0] & 1)\n  return base.subarray(chop)\n}\n\n/**\n * A test helper to generates compact path for a subset of key bytes\n *\n * TODO: Commenting the code for now as this seems to be helper function\n * (from geth codebase )\n *\n */\n//\n//\n// export const getPathTo = (tillBytes: number, key: Buffer) => {\n//   const hexNibbles = bytesToNibbles(key).subarray(0, tillBytes)\n//   // Remove the terminator if its there, although it would be there only if tillBytes >= key.length\n//   // This seems to be a test helper to generate paths so correctness of this isn't necessary\n//   hexNibbles[hexNibbles.length - 1] = 0\n//   const compactBytes = nibblesToCompactBytes(hexNibbles)\n//   return [Buffer.from(compactBytes)]\n// }\n", "/**\n * Ported to Typescript from original implementation below:\n * https://github.com/ahultgren/async-eventemitter -- MIT licensed\n *\n * Type Definitions based on work by: patarapolw <https://github.com/patarapolw> -- MIT licensed\n * that was contributed to Definitely Typed below:\n * https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/async-eventemitter\n */\n\nimport { EventEmitter } from 'events'\ntype AsyncListener<T, R> =\n  | ((data: T, callback?: (result?: R) => void) => Promise<R>)\n  | ((data: T, callback?: (result?: R) => void) => void)\nexport interface EventMap {\n  [event: string]: AsyncListener<any, any>\n}\n\nasync function runInSeries(\n  context: any,\n  tasks: Array<(data: unknown, callback?: (error?: Error) => void) => void>,\n  data: unknown\n): Promise<void> {\n  let error: Error | undefined\n  for await (const task of tasks) {\n    try {\n      if (task.length < 2) {\n        //sync\n        task.call(context, data)\n      } else {\n        await new Promise<void>((resolve, reject) => {\n          task.call(context, data, (error) => {\n            if (error) {\n              reject(error)\n            } else {\n              resolve()\n            }\n          })\n        })\n      }\n    } catch (e: unknown) {\n      error = e as Error\n    }\n  }\n  if (error) {\n    throw error\n  }\n}\n\nexport class AsyncEventEmitter<T extends EventMap> extends EventEmitter {\n  emit<E extends keyof T>(event: E & string, ...args: Parameters<T[E]>) {\n    let [data, callback] = args\n    const self = this\n\n    let listeners = (self as any)._events[event] ?? []\n\n    // Optional data argument\n    if (callback === undefined && typeof data === 'function') {\n      callback = data\n      data = undefined\n    }\n\n    // Special treatment of internal newListener and removeListener events\n    if (event === 'newListener' || event === 'removeListener') {\n      data = {\n        event: data,\n        fn: callback,\n      }\n\n      callback = undefined\n    }\n\n    // A single listener is just a function not an array...\n    listeners = Array.isArray(listeners) ? listeners : [listeners]\n    runInSeries(self, listeners.slice(), data).then(callback).catch(callback)\n\n    return self.listenerCount(event) > 0\n  }\n\n  once<E extends keyof T>(event: E & string, listener: T[E]): this {\n    const self = this\n    let g: (...args: any[]) => void\n\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Hack to support set arity\n    if (listener.length >= 2) {\n      g = function (e: E, next: any) {\n        self.removeListener(event, g as T[E])\n        void listener(e, next)\n      }\n    } else {\n      g = function (e: E) {\n        self.removeListener(event, g as T[E])\n        void listener(e, g)\n      }\n    }\n\n    self.on(event, g as T[E])\n\n    return self\n  }\n\n  first<E extends keyof T>(event: E & string, listener: T[E]): this {\n    let listeners = (this as any)._events[event] ?? []\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    listeners.unshift(listener)\n\n    return this\n  }\n\n  before<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener)\n  }\n\n  after<E extends keyof T>(event: E & string, target: T[E], listener: T[E]): this {\n    return this.beforeOrAfter(event, target, listener, 'after')\n  }\n\n  private beforeOrAfter<E extends keyof T>(\n    event: E & string,\n    target: T[E],\n    listener: T[E],\n    beforeOrAfter?: string\n  ) {\n    let listeners = (this as any)._events[event] ?? []\n    let i\n    let index\n    const add = beforeOrAfter === 'after' ? 1 : 0\n\n    // Contract\n    if (typeof listener !== 'function') {\n      throw new TypeError('listener must be a function')\n    }\n    if (typeof target !== 'function') {\n      throw new TypeError('target must be a function')\n    }\n\n    // Listeners are not always an array\n    if (!Array.isArray(listeners)) {\n      ;(this as any)._events[event] = listeners = [listeners]\n    }\n\n    index = listeners.length\n\n    for (i = listeners.length; i--; ) {\n      if (listeners[i] === target) {\n        index = i + add\n        break\n      }\n    }\n\n    listeners.splice(index, 0, listener)\n\n    return this\n  }\n\n  on<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.on(event, listener)\n  }\n\n  addListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.addListener(event, listener)\n  }\n\n  prependListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependListener(event, listener)\n  }\n\n  prependOnceListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.prependOnceListener(event, listener)\n  }\n\n  removeAllListeners(event?: keyof T & string): this {\n    return super.removeAllListeners(event)\n  }\n\n  removeListener<E extends keyof T>(event: E & string, listener: T[E]): this {\n    return super.removeListener(event, listener)\n  }\n\n  eventNames(): Array<keyof T & string> {\n    return super.eventNames() as keyof T & string[]\n  }\n\n  listeners<E extends keyof T>(event: E & string): Array<T[E]> {\n    return super.listeners(event) as T[E][]\n  }\n\n  listenerCount(event: keyof T & string): number {\n    return super.listenerCount(event)\n  }\n\n  getMaxListeners(): number {\n    return super.getMaxListeners()\n  }\n\n  setMaxListeners(maxListeners: number): this {\n    return super.setMaxListeners(maxListeners)\n  }\n}\n", "// Based on https://github.com/jsoendermann/semaphore-async-await/blob/master/src/Semaphore.ts\nexport class Lock {\n  private permits: number = 1\n  private promiseResolverQueue: Array<(v: boolean) => void> = []\n\n  /**\n   * Returns a promise used to wait for a permit to become available. This method should be awaited on.\n   * @returns  A promise that gets resolved when execution is allowed to proceed.\n   */\n  public async acquire(): Promise<boolean> {\n    if (this.permits > 0) {\n      this.permits -= 1\n      return Promise.resolve(true)\n    }\n\n    // If there is no permit available, we return a promise that resolves once the semaphore gets\n    // signaled enough times that permits is equal to one.\n    return new Promise<boolean>((resolver) => this.promiseResolverQueue.push(resolver))\n  }\n\n  /**\n   * Increases the number of permits by one. If there are other functions waiting, one of them will\n   * continue to execute in a future iteration of the event loop.\n   */\n  public release(): void {\n    this.permits += 1\n\n    if (this.permits > 1 && this.promiseResolverQueue.length > 0) {\n      // eslint-disable-next-line no-console\n      console.warn('Lock.permits should never be > 0 when there is someone waiting.')\n    } else if (this.permits === 1 && this.promiseResolverQueue.length > 0) {\n      // If there is someone else waiting, immediately consume the permit that was released\n      // at the beginning of this function and let the waiting function resume.\n      this.permits -= 1\n\n      const nextResolver = this.promiseResolverQueue.shift()\n      if (nextResolver) {\n        nextResolver(true)\n      }\n    }\n  }\n}\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"url\" has been externalized for browser compatibility. Cannot access \"url.${key}\" in client code. See http://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvalidStatusCodeError = exports.InvalidCertError = void 0;\nconst DEFAULT_OPT = Object.freeze({\n    redirect: true,\n    expectStatusCode: 200,\n    headers: {},\n    full: false,\n    keepAlive: true,\n    cors: false,\n    referrer: false,\n    sslAllowSelfSigned: false,\n    _redirectCount: 0,\n});\nclass InvalidCertError extends Error {\n    constructor(msg, fingerprint256) {\n        super(msg);\n        this.fingerprint256 = fingerprint256;\n    }\n}\nexports.InvalidCertError = InvalidCertError;\nclass InvalidStatusCodeError extends Error {\n    constructor(statusCode) {\n        super(`Request Failed. Status Code: ${statusCode}`);\n        this.statusCode = statusCode;\n    }\n}\nexports.InvalidStatusCodeError = InvalidStatusCodeError;\nfunction detectType(b, type) {\n    if (!type || type === 'text' || type === 'json') {\n        try {\n            let text = new TextDecoder('utf8', { fatal: true }).decode(b);\n            if (type === 'text')\n                return text;\n            try {\n                return JSON.parse(text);\n            }\n            catch (err) {\n                if (type === 'json')\n                    throw err;\n                return text;\n            }\n        }\n        catch (err) {\n            if (type === 'text' || type === 'json')\n                throw err;\n        }\n    }\n    return b;\n}\nlet agents = {};\nfunction fetchNode(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const http = require('http');\n    const https = require('https');\n    const zlib = require('zlib');\n    const { promisify } = require('util');\n    const { resolve: urlResolve } = require('url');\n    const isSecure = !!/^https/.test(url);\n    let opts = {\n        method: options.method || 'GET',\n        headers: { 'Accept-Encoding': 'gzip, deflate, br' },\n    };\n    const compactFP = (s) => s.replace(/:| /g, '').toLowerCase();\n    if (options.keepAlive) {\n        const agentOpt = {\n            keepAlive: true,\n            keepAliveMsecs: 30 * 1000,\n            maxFreeSockets: 1024,\n            maxCachedSessions: 1024,\n        };\n        const agentKey = [\n            isSecure,\n            isSecure && options.sslPinnedCertificates?.map((i) => compactFP(i)).sort(),\n        ].join();\n        opts.agent =\n            agents[agentKey] || (agents[agentKey] = new (isSecure ? https : http).Agent(agentOpt));\n    }\n    if (options.type === 'json')\n        opts.headers['Content-Type'] = 'application/json';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    opts.headers = { ...opts.headers, ...options.headers };\n    if (options.sslAllowSelfSigned)\n        opts.rejectUnauthorized = false;\n    const handleRes = async (res) => {\n        const status = res.statusCode;\n        if (options.redirect && 300 <= status && status < 400 && res.headers['location']) {\n            if (options._redirectCount == 10)\n                throw new Error('Request failed. Too much redirects.');\n            options._redirectCount += 1;\n            return await fetchNode(urlResolve(url, res.headers['location']), options);\n        }\n        if (options.expectStatusCode && status !== options.expectStatusCode) {\n            res.resume();\n            throw new InvalidStatusCodeError(status);\n        }\n        let buf = [];\n        for await (const chunk of res)\n            buf.push(chunk);\n        let bytes = Buffer.concat(buf);\n        const encoding = res.headers['content-encoding'];\n        if (encoding === 'br')\n            bytes = await promisify(zlib.brotliDecompress)(bytes);\n        if (encoding === 'gzip' || encoding === 'deflate')\n            bytes = await promisify(zlib.unzip)(bytes);\n        const body = detectType(bytes, options.type);\n        if (options.full)\n            return { headers: res.headers, status, body };\n        return body;\n    };\n    return new Promise((resolve, reject) => {\n        const handleError = async (err) => {\n            if (err && err.code === 'DEPTH_ZERO_SELF_SIGNED_CERT') {\n                try {\n                    await fetchNode(url, { ...options, sslAllowSelfSigned: true, sslPinnedCertificates: [] });\n                }\n                catch (e) {\n                    if (e && e.fingerprint256) {\n                        err = new InvalidCertError(`Self-signed SSL certificate: ${e.fingerprint256}`, e.fingerprint256);\n                    }\n                }\n            }\n            reject(err);\n        };\n        const req = (isSecure ? https : http).request(url, opts, (res) => {\n            res.on('error', handleError);\n            (async () => {\n                try {\n                    resolve(await handleRes(res));\n                }\n                catch (error) {\n                    reject(error);\n                }\n            })();\n        });\n        req.on('error', handleError);\n        const pinned = options.sslPinnedCertificates?.map((i) => compactFP(i));\n        const mfetchSecureConnect = (socket) => {\n            const fp256 = compactFP(socket.getPeerCertificate()?.fingerprint256 || '');\n            if (!fp256 && socket.isSessionReused())\n                return;\n            if (pinned.includes(fp256))\n                return;\n            req.emit('error', new InvalidCertError(`Invalid SSL certificate: ${fp256} Expected: ${pinned}`, fp256));\n            return req.abort();\n        };\n        if (options.sslPinnedCertificates) {\n            req.on('socket', (socket) => {\n                const hasListeners = socket\n                    .listeners('secureConnect')\n                    .map((i) => (i.name || '').replace('bound ', ''))\n                    .includes('mfetchSecureConnect');\n                if (hasListeners)\n                    return;\n                socket.on('secureConnect', mfetchSecureConnect.bind(null, socket));\n            });\n        }\n        if (options.keepAlive)\n            req.setNoDelay(true);\n        if (opts.body)\n            req.write(opts.body);\n        req.end();\n    });\n}\nconst SAFE_HEADERS = new Set(['Accept', 'Accept-Language', 'Content-Language', 'Content-Type'].map((i) => i.toLowerCase()));\nconst FORBIDDEN_HEADERS = new Set(['Accept-Charset', 'Accept-Encoding', 'Access-Control-Request-Headers', 'Access-Control-Request-Method',\n    'Connection', 'Content-Length', 'Cookie', 'Cookie2', 'Date', 'DNT', 'Expect', 'Host', 'Keep-Alive', 'Origin', 'Referer', 'TE', 'Trailer',\n    'Transfer-Encoding', 'Upgrade', 'Via'].map((i) => i.toLowerCase()));\nasync function fetchBrowser(url, _options) {\n    let options = { ...DEFAULT_OPT, ..._options };\n    const headers = new Headers();\n    if (options.type === 'json')\n        headers.set('Content-Type', 'application/json');\n    let parsed = new URL(url);\n    if (parsed.username) {\n        const auth = btoa(`${parsed.username}:${parsed.password}`);\n        headers.set('Authorization', `Basic ${auth}`);\n        parsed.username = '';\n        parsed.password = '';\n    }\n    url = '' + parsed;\n    for (let k in options.headers) {\n        const name = k.toLowerCase();\n        if (SAFE_HEADERS.has(name) || (options.cors && !FORBIDDEN_HEADERS.has(name)))\n            headers.set(k, options.headers[k]);\n    }\n    let opts = { headers, redirect: options.redirect ? 'follow' : 'manual' };\n    if (!options.referrer)\n        opts.referrerPolicy = 'no-referrer';\n    if (options.cors)\n        opts.mode = 'cors';\n    if (options.data) {\n        if (!options.method)\n            opts.method = 'POST';\n        opts.body = options.type === 'json' ? JSON.stringify(options.data) : options.data;\n    }\n    const res = await fetch(url, opts);\n    if (options.expectStatusCode && res.status !== options.expectStatusCode)\n        throw new InvalidStatusCodeError(res.status);\n    const body = detectType(new Uint8Array(await res.arrayBuffer()), options.type);\n    if (options.full)\n        return { headers: Object.fromEntries(res.headers.entries()), status: res.status, body };\n    return body;\n}\nconst IS_NODE = !!(typeof process == 'object' &&\n    process.versions &&\n    process.versions.node &&\n    process.versions.v8);\nfunction fetchUrl(url, options) {\n    const fn = IS_NODE ? fetchNode : fetchBrowser;\n    return fn(url, options);\n}\nexports.default = fetchUrl;\n", "import fetch from 'micro-ftch'\n\ntype rpcParams = {\n  method: string\n  params: (string | boolean | number)[]\n}\nexport const fetchFromProvider = async (url: string, params: rpcParams) => {\n  const res = await fetch(url, {\n    headers: {\n      'content-type': 'application/json',\n    },\n    type: 'json',\n    data: {\n      method: params.method,\n      params: params.params,\n      jsonrpc: '2.0',\n      id: 1,\n    },\n  })\n\n  return res.result\n}\n\nexport const getProvider = (provider: string | any) => {\n  if (typeof provider === 'string') {\n    return provider\n  } else if (provider?.connection?.url !== undefined) {\n    return provider.connection.url\n  } else {\n    throw new Error('Must provide valid provider URL or Web3Provider')\n  }\n}\n", "/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Units helpers\n */\nexport * from './units'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Withdrawal type\n */\nexport * from './withdrawal'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * SSZ containers\n */\nexport * as ssz from './ssz'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Helper function for working with compact encoding\n */\nexport * from './encoding'\n\n/**\n * Export ethjs-util methods\n */\nexport * from './asyncEventEmitter'\nexport {\n  arrayContainsArray,\n  fromAscii,\n  fromUtf8,\n  getBinarySize,\n  getKeys,\n  isHexPrefixed,\n  isHexString,\n  padToEven,\n  stripHexPrefix,\n  toAscii,\n} from './internal'\nexport * from './lock'\nexport * from './provider'\n", "/*\r\n *      bignumber.js v9.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2022 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\nvar\r\n  isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n  mathceil = Math.ceil,\r\n  mathfloor = Math.floor,\r\n\r\n  bignumberError = '[BigNumber Error] ',\r\n  tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n  BASE = 1e14,\r\n  LOG_BASE = 14,\r\n  MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n  // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n  POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n  SQRT_BASE = 1e7,\r\n\r\n  // EDITABLE\r\n  // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n  // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n  MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n/*\r\n * Create and return a BigNumber constructor.\r\n */\r\nfunction clone(configObject) {\r\n  var div, convertBase, parseNumeric,\r\n    P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n    ONE = new BigNumber(1),\r\n\r\n\r\n    //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n    // The default values below must be integers within the inclusive ranges stated.\r\n    // The values can also be changed at run-time using BigNumber.set.\r\n\r\n    // The maximum number of decimal places for operations involving division.\r\n    DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n    // The rounding mode used when rounding to the above decimal places, and when using\r\n    // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n    // UP         0 Away from zero.\r\n    // DOWN       1 Towards zero.\r\n    // CEIL       2 Towards +Infinity.\r\n    // FLOOR      3 Towards -Infinity.\r\n    // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n    // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n    // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n    // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n    // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n    ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n    // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n    // The exponent value at and beneath which toString returns exponential notation.\r\n    // Number type: -7\r\n    TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n    // The exponent value at and above which toString returns exponential notation.\r\n    // Number type: 21\r\n    TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n    // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n    // The minimum exponent value, beneath which underflow to zero occurs.\r\n    // Number type: -324  (5e-324)\r\n    MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n    // The maximum exponent value, above which overflow to Infinity occurs.\r\n    // Number type:  308  (1.7976931348623157e+308)\r\n    // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n    MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n    // Whether to use cryptographically-secure random number generation, if available.\r\n    CRYPTO = false,                          // true or false\r\n\r\n    // The modulo mode used when calculating the modulus: a mod n.\r\n    // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n    // The remainder (r) is calculated as: r = a - n * q.\r\n    //\r\n    // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n    // DOWN      1 The remainder has the same sign as the dividend.\r\n    //             This modulo mode is commonly known as 'truncated division' and is\r\n    //             equivalent to (a % n) in JavaScript.\r\n    // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n    // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n    // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n    //             The remainder is always positive.\r\n    //\r\n    // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n    // modes are commonly used for the modulus operation.\r\n    // Although the other rounding modes can also be used, they may not give useful results.\r\n    MODULO_MODE = 1,                         // 0 to 9\r\n\r\n    // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n    // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n    POW_PRECISION = 0,                       // 0 to MAX\r\n\r\n    // The format specification used by the BigNumber.prototype.toFormat method.\r\n    FORMAT = {\r\n      prefix: '',\r\n      groupSize: 3,\r\n      secondaryGroupSize: 0,\r\n      groupSeparator: ',',\r\n      decimalSeparator: '.',\r\n      fractionGroupSize: 0,\r\n      fractionGroupSeparator: '\\xA0',        // non-breaking space\r\n      suffix: ''\r\n    },\r\n\r\n    // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n    // '-', '.', whitespace, or repeated character.\r\n    // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n    ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz',\r\n    alphabetHasNormalDecimalDigits = true;\r\n\r\n\r\n  //------------------------------------------------------------------------------------------\r\n\r\n\r\n  // CONSTRUCTOR\r\n\r\n\r\n  /*\r\n   * The BigNumber constructor and exported function.\r\n   * Create and return a new instance of a BigNumber object.\r\n   *\r\n   * v {number|string|BigNumber} A numeric value.\r\n   * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n   */\r\n  function BigNumber(v, b) {\r\n    var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n      x = this;\r\n\r\n    // Enable constructor call without `new`.\r\n    if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n    if (b == null) {\r\n\r\n      if (v && v._isBigNumber === true) {\r\n        x.s = v.s;\r\n\r\n        if (!v.c || v.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n        } else if (v.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = v.e;\r\n          x.c = v.c.slice();\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n        // Use `1 / n` to handle minus zero also.\r\n        x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n        // Fast path for integers, where n < 2147483648 (2**31).\r\n        if (v === ~~v) {\r\n          for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n          if (e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else {\r\n            x.e = e;\r\n            x.c = [v];\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        str = String(v);\r\n      } else {\r\n\r\n        if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n        x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n      // Exponential form?\r\n      if ((i = str.search(/e/i)) > 0) {\r\n\r\n        // Determine exponent.\r\n        if (e < 0) e = i;\r\n        e += +str.slice(i + 1);\r\n        str = str.substring(0, i);\r\n      } else if (e < 0) {\r\n\r\n        // Integer.\r\n        e = str.length;\r\n      }\r\n\r\n    } else {\r\n\r\n      // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n      intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n      // Allow exponential notation to be used with base 10 argument, while\r\n      // also rounding to DECIMAL_PLACES as with other bases.\r\n      if (b == 10 && alphabetHasNormalDecimalDigits) {\r\n        x = new BigNumber(v);\r\n        return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n      }\r\n\r\n      str = String(v);\r\n\r\n      if (isNum = typeof v == 'number') {\r\n\r\n        // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n        if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n        x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n          throw Error\r\n           (tooManyDigits + v);\r\n        }\r\n      } else {\r\n        x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n      }\r\n\r\n      alphabet = ALPHABET.slice(0, b);\r\n      e = i = 0;\r\n\r\n      // Check that str is a valid base b number.\r\n      // Don't use RegExp, so alphabet can contain special characters.\r\n      for (len = str.length; i < len; i++) {\r\n        if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n          if (c == '.') {\r\n\r\n            // If '.' is not the first character and it has not be found before.\r\n            if (i > e) {\r\n              e = len;\r\n              continue;\r\n            }\r\n          } else if (!caseChanged) {\r\n\r\n            // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n            if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n              caseChanged = true;\r\n              i = -1;\r\n              e = 0;\r\n              continue;\r\n            }\r\n          }\r\n\r\n          return parseNumeric(x, String(v), isNum, b);\r\n        }\r\n      }\r\n\r\n      // Prevent later check for length on converted number.\r\n      isNum = false;\r\n      str = convertBase(str, b, 10, x.s);\r\n\r\n      // Decimal point?\r\n      if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n      else e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n    if (str = str.slice(i, ++len)) {\r\n      len -= i;\r\n\r\n      // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n      if (isNum && BigNumber.DEBUG &&\r\n        len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n          throw Error\r\n           (tooManyDigits + (x.s * v));\r\n      }\r\n\r\n       // Overflow?\r\n      if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        x.c = x.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      } else {\r\n        x.e = e;\r\n        x.c = [];\r\n\r\n        // Transform base\r\n\r\n        // e is the base 10 exponent.\r\n        // i is where to slice str to get the first element of the coefficient array.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n        if (i < len) {\r\n          if (i) x.c.push(+str.slice(0, i));\r\n\r\n          for (len -= LOG_BASE; i < len;) {\r\n            x.c.push(+str.slice(i, i += LOG_BASE));\r\n          }\r\n\r\n          i = LOG_BASE - (str = str.slice(i)).length;\r\n        } else {\r\n          i -= len;\r\n        }\r\n\r\n        for (; i--; str += '0');\r\n        x.c.push(+str);\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.c = [x.e = 0];\r\n    }\r\n  }\r\n\r\n\r\n  // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n  BigNumber.clone = clone;\r\n\r\n  BigNumber.ROUND_UP = 0;\r\n  BigNumber.ROUND_DOWN = 1;\r\n  BigNumber.ROUND_CEIL = 2;\r\n  BigNumber.ROUND_FLOOR = 3;\r\n  BigNumber.ROUND_HALF_UP = 4;\r\n  BigNumber.ROUND_HALF_DOWN = 5;\r\n  BigNumber.ROUND_HALF_EVEN = 6;\r\n  BigNumber.ROUND_HALF_CEIL = 7;\r\n  BigNumber.ROUND_HALF_FLOOR = 8;\r\n  BigNumber.EUCLID = 9;\r\n\r\n\r\n  /*\r\n   * Configure infrequently-changing library-wide settings.\r\n   *\r\n   * Accept an object with the following optional properties (if the value of a property is\r\n   * a number, it must be an integer within the inclusive range stated):\r\n   *\r\n   *   DECIMAL_PLACES   {number}           0 to MAX\r\n   *   ROUNDING_MODE    {number}           0 to 8\r\n   *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n   *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n   *   CRYPTO           {boolean}          true or false\r\n   *   MODULO_MODE      {number}           0 to 9\r\n   *   POW_PRECISION       {number}           0 to MAX\r\n   *   ALPHABET         {string}           A string of two or more unique characters which does\r\n   *                                       not contain '.'.\r\n   *   FORMAT           {object}           An object with some of the following properties:\r\n   *     prefix                 {string}\r\n   *     groupSize              {number}\r\n   *     secondaryGroupSize     {number}\r\n   *     groupSeparator         {string}\r\n   *     decimalSeparator       {string}\r\n   *     fractionGroupSize      {number}\r\n   *     fractionGroupSeparator {string}\r\n   *     suffix                 {string}\r\n   *\r\n   * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n   *\r\n   * E.g.\r\n   * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n   *\r\n   * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n   *\r\n   * Return an object with the properties current values.\r\n   */\r\n  BigNumber.config = BigNumber.set = function (obj) {\r\n    var p, v;\r\n\r\n    if (obj != null) {\r\n\r\n      if (typeof obj == 'object') {\r\n\r\n        // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          DECIMAL_PLACES = v;\r\n        }\r\n\r\n        // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n        // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 8, p);\r\n          ROUNDING_MODE = v;\r\n        }\r\n\r\n        // EXPONENTIAL_AT {number|number[]}\r\n        // Integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n        // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, 0, p);\r\n            intCheck(v[1], 0, MAX, p);\r\n            TO_EXP_NEG = v[0];\r\n            TO_EXP_POS = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n          }\r\n        }\r\n\r\n        // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n        // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n        // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n        if (obj.hasOwnProperty(p = 'RANGE')) {\r\n          v = obj[p];\r\n          if (v && v.pop) {\r\n            intCheck(v[0], -MAX, -1, p);\r\n            intCheck(v[1], 1, MAX, p);\r\n            MIN_EXP = v[0];\r\n            MAX_EXP = v[1];\r\n          } else {\r\n            intCheck(v, -MAX, MAX, p);\r\n            if (v) {\r\n              MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' cannot be zero: ' + v);\r\n            }\r\n          }\r\n        }\r\n\r\n        // CRYPTO {boolean} true or false.\r\n        // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n        // '[BigNumber Error] crypto unavailable'\r\n        if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n          v = obj[p];\r\n          if (v === !!v) {\r\n            if (v) {\r\n              if (typeof crypto != 'undefined' && crypto &&\r\n               (crypto.getRandomValues || crypto.randomBytes)) {\r\n                CRYPTO = v;\r\n              } else {\r\n                CRYPTO = !v;\r\n                throw Error\r\n                 (bignumberError + 'crypto unavailable');\r\n              }\r\n            } else {\r\n              CRYPTO = v;\r\n            }\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' not true or false: ' + v);\r\n          }\r\n        }\r\n\r\n        // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n        // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, 9, p);\r\n          MODULO_MODE = v;\r\n        }\r\n\r\n        // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n        // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n        if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n          v = obj[p];\r\n          intCheck(v, 0, MAX, p);\r\n          POW_PRECISION = v;\r\n        }\r\n\r\n        // FORMAT {object}\r\n        // '[BigNumber Error] FORMAT not an object: {v}'\r\n        if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n          v = obj[p];\r\n          if (typeof v == 'object') FORMAT = v;\r\n          else throw Error\r\n           (bignumberError + p + ' not an object: ' + v);\r\n        }\r\n\r\n        // ALPHABET {string}\r\n        // '[BigNumber Error] ALPHABET invalid: {v}'\r\n        if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n          v = obj[p];\r\n\r\n          // Disallow if less than two characters,\r\n          // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n          if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n            alphabetHasNormalDecimalDigits = v.slice(0, 10) == '0123456789';\r\n            ALPHABET = v;\r\n          } else {\r\n            throw Error\r\n             (bignumberError + p + ' invalid: ' + v);\r\n          }\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Object expected: {v}'\r\n        throw Error\r\n         (bignumberError + 'Object expected: ' + obj);\r\n      }\r\n    }\r\n\r\n    return {\r\n      DECIMAL_PLACES: DECIMAL_PLACES,\r\n      ROUNDING_MODE: ROUNDING_MODE,\r\n      EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n      RANGE: [MIN_EXP, MAX_EXP],\r\n      CRYPTO: CRYPTO,\r\n      MODULO_MODE: MODULO_MODE,\r\n      POW_PRECISION: POW_PRECISION,\r\n      FORMAT: FORMAT,\r\n      ALPHABET: ALPHABET\r\n    };\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if v is a BigNumber instance, otherwise return false.\r\n   *\r\n   * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n   *\r\n   * v {any}\r\n   *\r\n   * '[BigNumber Error] Invalid BigNumber: {v}'\r\n   */\r\n  BigNumber.isBigNumber = function (v) {\r\n    if (!v || v._isBigNumber !== true) return false;\r\n    if (!BigNumber.DEBUG) return true;\r\n\r\n    var i, n,\r\n      c = v.c,\r\n      e = v.e,\r\n      s = v.s;\r\n\r\n    out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n      if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n        // If the first element is zero, the BigNumber value must be zero.\r\n        if (c[0] === 0) {\r\n          if (e === 0 && c.length === 1) return true;\r\n          break out;\r\n        }\r\n\r\n        // Calculate number of digits that c[0] should have, based on the exponent.\r\n        i = (e + 1) % LOG_BASE;\r\n        if (i < 1) i += LOG_BASE;\r\n\r\n        // Calculate number of digits of c[0].\r\n        //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n        if (String(c[0]).length == i) {\r\n\r\n          for (i = 0; i < c.length; i++) {\r\n            n = c[i];\r\n            if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n          }\r\n\r\n          // Last element cannot be zero, unless it is the only element.\r\n          if (n !== 0) return true;\r\n        }\r\n      }\r\n\r\n    // Infinity/NaN\r\n    } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n      return true;\r\n    }\r\n\r\n    throw Error\r\n      (bignumberError + 'Invalid BigNumber: ' + v);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.maximum = BigNumber.max = function () {\r\n    return maxOrMin(arguments, P.lt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.minimum = BigNumber.min = function () {\r\n    return maxOrMin(arguments, P.gt);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n   * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n   * zeros are produced).\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n   * '[BigNumber Error] crypto unavailable'\r\n   */\r\n  BigNumber.random = (function () {\r\n    var pow2_53 = 0x20000000000000;\r\n\r\n    // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n    // Check if Math.random() produces more than 32 bits of randomness.\r\n    // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n    // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n    var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n     ? function () { return mathfloor(Math.random() * pow2_53); }\r\n     : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n       (Math.random() * 0x800000 | 0); };\r\n\r\n    return function (dp) {\r\n      var a, b, e, k, v,\r\n        i = 0,\r\n        c = [],\r\n        rand = new BigNumber(ONE);\r\n\r\n      if (dp == null) dp = DECIMAL_PLACES;\r\n      else intCheck(dp, 0, MAX);\r\n\r\n      k = mathceil(dp / LOG_BASE);\r\n\r\n      if (CRYPTO) {\r\n\r\n        // Browsers supporting crypto.getRandomValues.\r\n        if (crypto.getRandomValues) {\r\n\r\n          a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n          for (; i < k;) {\r\n\r\n            // 53 bits:\r\n            // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n            // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n            // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n            //                                     11111 11111111 11111111\r\n            // 0x20000 is 2^21.\r\n            v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n            // Rejection sampling:\r\n            // 0 <= v < 9007199254740992\r\n            // Probability that v >= 9e15, is\r\n            // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n            if (v >= 9e15) {\r\n              b = crypto.getRandomValues(new Uint32Array(2));\r\n              a[i] = b[0];\r\n              a[i + 1] = b[1];\r\n            } else {\r\n\r\n              // 0 <= v <= 8999999999999999\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 2;\r\n            }\r\n          }\r\n          i = k / 2;\r\n\r\n        // Node.js supporting crypto.randomBytes.\r\n        } else if (crypto.randomBytes) {\r\n\r\n          // buffer\r\n          a = crypto.randomBytes(k *= 7);\r\n\r\n          for (; i < k;) {\r\n\r\n            // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n            // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n            // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n            // 0 <= v < 9007199254740992\r\n            v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n               (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n               (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n            if (v >= 9e15) {\r\n              crypto.randomBytes(7).copy(a, i);\r\n            } else {\r\n\r\n              // 0 <= (v % 1e14) <= 99999999999999\r\n              c.push(v % 1e14);\r\n              i += 7;\r\n            }\r\n          }\r\n          i = k / 7;\r\n        } else {\r\n          CRYPTO = false;\r\n          throw Error\r\n           (bignumberError + 'crypto unavailable');\r\n        }\r\n      }\r\n\r\n      // Use Math.random.\r\n      if (!CRYPTO) {\r\n\r\n        for (; i < k;) {\r\n          v = random53bitInt();\r\n          if (v < 9e15) c[i++] = v % 1e14;\r\n        }\r\n      }\r\n\r\n      k = c[--i];\r\n      dp %= LOG_BASE;\r\n\r\n      // Convert trailing digits to zeros according to dp.\r\n      if (k && dp) {\r\n        v = POWS_TEN[LOG_BASE - dp];\r\n        c[i] = mathfloor(k / v) * v;\r\n      }\r\n\r\n      // Remove trailing elements which are zero.\r\n      for (; c[i] === 0; c.pop(), i--);\r\n\r\n      // Zero?\r\n      if (i < 0) {\r\n        c = [e = 0];\r\n      } else {\r\n\r\n        // Remove leading elements which are zero and adjust exponent accordingly.\r\n        for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n        // Count the digits of the first element of c to determine leading zeros, and...\r\n        for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n        // adjust the exponent accordingly.\r\n        if (i < LOG_BASE) e -= LOG_BASE - i;\r\n      }\r\n\r\n      rand.e = e;\r\n      rand.c = c;\r\n      return rand;\r\n    };\r\n  })();\r\n\r\n\r\n   /*\r\n   * Return a BigNumber whose value is the sum of the arguments.\r\n   *\r\n   * arguments {number|string|BigNumber}\r\n   */\r\n  BigNumber.sum = function () {\r\n    var i = 1,\r\n      args = arguments,\r\n      sum = new BigNumber(args[0]);\r\n    for (; i < args.length;) sum = sum.plus(args[i++]);\r\n    return sum;\r\n  };\r\n\r\n\r\n  // PRIVATE FUNCTIONS\r\n\r\n\r\n  // Called by BigNumber and BigNumber.prototype.toString.\r\n  convertBase = (function () {\r\n    var decimal = '0123456789';\r\n\r\n    /*\r\n     * Convert string of baseIn to an array of numbers of baseOut.\r\n     * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n     * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n     */\r\n    function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n      var j,\r\n        arr = [0],\r\n        arrL,\r\n        i = 0,\r\n        len = str.length;\r\n\r\n      for (; i < len;) {\r\n        for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n        arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n        for (j = 0; j < arr.length; j++) {\r\n\r\n          if (arr[j] > baseOut - 1) {\r\n            if (arr[j + 1] == null) arr[j + 1] = 0;\r\n            arr[j + 1] += arr[j] / baseOut | 0;\r\n            arr[j] %= baseOut;\r\n          }\r\n        }\r\n      }\r\n\r\n      return arr.reverse();\r\n    }\r\n\r\n    // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n    // If the caller is toString, we are converting from base 10 to baseOut.\r\n    // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n    return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n      var alphabet, d, e, k, r, x, xc, y,\r\n        i = str.indexOf('.'),\r\n        dp = DECIMAL_PLACES,\r\n        rm = ROUNDING_MODE;\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        k = POW_PRECISION;\r\n\r\n        // Unlimited precision.\r\n        POW_PRECISION = 0;\r\n        str = str.replace('.', '');\r\n        y = new BigNumber(baseIn);\r\n        x = y.pow(str.length - i);\r\n        POW_PRECISION = k;\r\n\r\n        // Convert str as if an integer, then restore the fraction part by dividing the\r\n        // result by its base raised to a power.\r\n\r\n        y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n         10, baseOut, decimal);\r\n        y.e = y.c.length;\r\n      }\r\n\r\n      // Convert the number as integer.\r\n\r\n      xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n       ? (alphabet = ALPHABET, decimal)\r\n       : (alphabet = decimal, ALPHABET));\r\n\r\n      // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n      e = k = xc.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xc[--k] == 0; xc.pop());\r\n\r\n      // Zero?\r\n      if (!xc[0]) return alphabet.charAt(0);\r\n\r\n      // Does str represent an integer? If so, no need for the division.\r\n      if (i < 0) {\r\n        --e;\r\n      } else {\r\n        x.c = xc;\r\n        x.e = e;\r\n\r\n        // The sign is needed for correct rounding.\r\n        x.s = sign;\r\n        x = div(x, y, dp, rm, baseOut);\r\n        xc = x.c;\r\n        r = x.r;\r\n        e = x.e;\r\n      }\r\n\r\n      // xc now represents str converted to baseOut.\r\n\r\n      // THe index of the rounding digit.\r\n      d = e + dp + 1;\r\n\r\n      // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n      i = xc[d];\r\n\r\n      // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n      k = baseOut / 2;\r\n      r = r || d < 0 || xc[d + 1] != null;\r\n\r\n      r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n            : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n      // If the index of the rounding digit is not greater than zero, or xc represents\r\n      // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n      // such as 0.00001.\r\n      if (d < 1 || !xc[0]) {\r\n\r\n        // 1^-dp or 0\r\n        str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n      } else {\r\n\r\n        // Truncate xc to the required number of decimal places.\r\n        xc.length = d;\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (--baseOut; ++xc[--d] > baseOut;) {\r\n            xc[d] = 0;\r\n\r\n            if (!d) {\r\n              ++e;\r\n              xc = [1].concat(xc);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (k = xc.length; !xc[--k];);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n        // Add leading zeros, decimal point and trailing zeros as required.\r\n        str = toFixedPoint(str, e, alphabet.charAt(0));\r\n      }\r\n\r\n      // The caller will add the sign.\r\n      return str;\r\n    };\r\n  })();\r\n\r\n\r\n  // Perform division in the specified base. Called by div and convertBase.\r\n  div = (function () {\r\n\r\n    // Assume non-zero x and k.\r\n    function multiply(x, k, base) {\r\n      var m, temp, xlo, xhi,\r\n        carry = 0,\r\n        i = x.length,\r\n        klo = k % SQRT_BASE,\r\n        khi = k / SQRT_BASE | 0;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        xlo = x[i] % SQRT_BASE;\r\n        xhi = x[i] / SQRT_BASE | 0;\r\n        m = khi * xlo + xhi * klo;\r\n        temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n        carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n        x[i] = temp % base;\r\n      }\r\n\r\n      if (carry) x = [carry].concat(x);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, cmp;\r\n\r\n      if (aL != bL) {\r\n        cmp = aL > bL ? 1 : -1;\r\n      } else {\r\n\r\n        for (i = cmp = 0; i < aL; i++) {\r\n\r\n          if (a[i] != b[i]) {\r\n            cmp = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return cmp;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n    }\r\n\r\n    // x: dividend, y: divisor.\r\n    return function (x, y, dp, rm, base) {\r\n      var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n        yL, yz,\r\n        s = x.s == y.s ? 1 : -1,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n        return new BigNumber(\r\n\r\n         // Return NaN if either NaN, or both Infinity or 0.\r\n         !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n          // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n          xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n       );\r\n      }\r\n\r\n      q = new BigNumber(s);\r\n      qc = q.c = [];\r\n      e = x.e - y.e;\r\n      s = dp + e + 1;\r\n\r\n      if (!base) {\r\n        base = BASE;\r\n        e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n        s = s / LOG_BASE | 0;\r\n      }\r\n\r\n      // Result exponent may be one less then the current value of e.\r\n      // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n      for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n      if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n      if (s < 0) {\r\n        qc.push(1);\r\n        more = true;\r\n      } else {\r\n        xL = xc.length;\r\n        yL = yc.length;\r\n        i = 0;\r\n        s += 2;\r\n\r\n        // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n        n = mathfloor(base / (yc[0] + 1));\r\n\r\n        // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n        // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n        if (n > 1) {\r\n          yc = multiply(yc, n, base);\r\n          xc = multiply(xc, n, base);\r\n          yL = yc.length;\r\n          xL = xc.length;\r\n        }\r\n\r\n        xi = yL;\r\n        rem = xc.slice(0, yL);\r\n        remL = rem.length;\r\n\r\n        // Add zeros to make remainder as long as divisor.\r\n        for (; remL < yL; rem[remL++] = 0);\r\n        yz = yc.slice();\r\n        yz = [0].concat(yz);\r\n        yc0 = yc[0];\r\n        if (yc[1] >= base / 2) yc0++;\r\n        // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n        // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n        do {\r\n          n = 0;\r\n\r\n          // Compare divisor and remainder.\r\n          cmp = compare(yc, rem, yL, remL);\r\n\r\n          // If divisor < remainder.\r\n          if (cmp < 0) {\r\n\r\n            // Calculate trial digit, n.\r\n\r\n            rem0 = rem[0];\r\n            if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n            // n is how many times the divisor goes into the current remainder.\r\n            n = mathfloor(rem0 / yc0);\r\n\r\n            //  Algorithm:\r\n            //  product = divisor multiplied by trial digit (n).\r\n            //  Compare product and remainder.\r\n            //  If product is greater than remainder:\r\n            //    Subtract divisor from product, decrement trial digit.\r\n            //  Subtract product from remainder.\r\n            //  If product was less than remainder at the last compare:\r\n            //    Compare new remainder and divisor.\r\n            //    If remainder is greater than divisor:\r\n            //      Subtract divisor from remainder, increment trial digit.\r\n\r\n            if (n > 1) {\r\n\r\n              // n may be > base only when base is 3.\r\n              if (n >= base) n = base - 1;\r\n\r\n              // product = divisor * trial digit.\r\n              prod = multiply(yc, n, base);\r\n              prodL = prod.length;\r\n              remL = rem.length;\r\n\r\n              // Compare product and remainder.\r\n              // If product > remainder then trial digit n too high.\r\n              // n is 1 too high about 5% of the time, and is not known to have\r\n              // ever been more than 1 too high.\r\n              while (compare(prod, rem, prodL, remL) == 1) {\r\n                n--;\r\n\r\n                // Subtract divisor from product.\r\n                subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                prodL = prod.length;\r\n                cmp = 1;\r\n              }\r\n            } else {\r\n\r\n              // n is 0 or 1, cmp is -1.\r\n              // If n is 0, there is no need to compare yc and rem again below,\r\n              // so change cmp to 1 to avoid it.\r\n              // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n              if (n == 0) {\r\n\r\n                // divisor < remainder, so n must be at least 1.\r\n                cmp = n = 1;\r\n              }\r\n\r\n              // product = divisor\r\n              prod = yc.slice();\r\n              prodL = prod.length;\r\n            }\r\n\r\n            if (prodL < remL) prod = [0].concat(prod);\r\n\r\n            // Subtract product from remainder.\r\n            subtract(rem, prod, remL, base);\r\n            remL = rem.length;\r\n\r\n             // If product was < remainder.\r\n            if (cmp == -1) {\r\n\r\n              // Compare divisor and new remainder.\r\n              // If divisor < new remainder, subtract divisor from remainder.\r\n              // Trial digit n too low.\r\n              // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n              while (compare(yc, rem, yL, remL) < 1) {\r\n                n++;\r\n\r\n                // Subtract divisor from remainder.\r\n                subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                remL = rem.length;\r\n              }\r\n            }\r\n          } else if (cmp === 0) {\r\n            n++;\r\n            rem = [0];\r\n          } // else cmp === 1 and n will be 0\r\n\r\n          // Add the next digit, n, to the result array.\r\n          qc[i++] = n;\r\n\r\n          // Update the remainder.\r\n          if (rem[0]) {\r\n            rem[remL++] = xc[xi] || 0;\r\n          } else {\r\n            rem = [xc[xi]];\r\n            remL = 1;\r\n          }\r\n        } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n        more = rem[0] != null;\r\n\r\n        // Leading zero?\r\n        if (!qc[0]) qc.splice(0, 1);\r\n      }\r\n\r\n      if (base == BASE) {\r\n\r\n        // To calculate q.e, first get the number of digits of qc[0].\r\n        for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n        round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n      // Caller is convertBase.\r\n      } else {\r\n        q.e = e;\r\n        q.r = +more;\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n   * notation rounded to the specified decimal places or significant digits.\r\n   *\r\n   * n: a BigNumber.\r\n   * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n   * rm: the rounding mode.\r\n   * id: 1 (toExponential) or 2 (toPrecision).\r\n   */\r\n  function format(n, i, rm, id) {\r\n    var c0, e, ne, len, str;\r\n\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n\r\n    if (!n.c) return n.toString();\r\n\r\n    c0 = n.c[0];\r\n    ne = n.e;\r\n\r\n    if (i == null) {\r\n      str = coeffToString(n.c);\r\n      str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n       ? toExponential(str, ne)\r\n       : toFixedPoint(str, ne, '0');\r\n    } else {\r\n      n = round(new BigNumber(n), i, rm);\r\n\r\n      // n.e may have changed if the value was rounded up.\r\n      e = n.e;\r\n\r\n      str = coeffToString(n.c);\r\n      len = str.length;\r\n\r\n      // toPrecision returns exponential notation if the number of significant digits\r\n      // specified is less than the number of digits necessary to represent the integer\r\n      // part of the value in fixed-point notation.\r\n\r\n      // Exponential notation.\r\n      if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n        // Append zeros?\r\n        for (; len < i; str += '0', len++);\r\n        str = toExponential(str, e);\r\n\r\n      // Fixed-point notation.\r\n      } else {\r\n        i -= ne;\r\n        str = toFixedPoint(str, e, '0');\r\n\r\n        // Append zeros?\r\n        if (e + 1 > len) {\r\n          if (--i > 0) for (str += '.'; i--; str += '0');\r\n        } else {\r\n          i += e - len;\r\n          if (i > 0) {\r\n            if (e + 1 == len) str += '.';\r\n            for (; i--; str += '0');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return n.s < 0 && c0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Handle BigNumber.max and BigNumber.min.\r\n  function maxOrMin(args, method) {\r\n    var n,\r\n      i = 1,\r\n      m = new BigNumber(args[0]);\r\n\r\n    for (; i < args.length; i++) {\r\n      n = new BigNumber(args[i]);\r\n\r\n      // If any number is NaN, return NaN.\r\n      if (!n.s) {\r\n        m = n;\r\n        break;\r\n      } else if (method.call(m, n)) {\r\n        m = n;\r\n      }\r\n    }\r\n\r\n    return m;\r\n  }\r\n\r\n\r\n  /*\r\n   * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n   * Called by minus, plus and times.\r\n   */\r\n  function normalise(n, c, e) {\r\n    var i = 1,\r\n      j = c.length;\r\n\r\n     // Remove trailing zeros.\r\n    for (; !c[--j]; c.pop());\r\n\r\n    // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n    for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n    // Overflow?\r\n    if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n      // Infinity.\r\n      n.c = n.e = null;\r\n\r\n    // Underflow?\r\n    } else if (e < MIN_EXP) {\r\n\r\n      // Zero.\r\n      n.c = [n.e = 0];\r\n    } else {\r\n      n.e = e;\r\n      n.c = c;\r\n    }\r\n\r\n    return n;\r\n  }\r\n\r\n\r\n  // Handle values that fail the validity test in BigNumber.\r\n  parseNumeric = (function () {\r\n    var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n      dotAfter = /^([^.]+)\\.$/,\r\n      dotBefore = /^\\.([^.]+)$/,\r\n      isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n      whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n    return function (x, str, isNum, b) {\r\n      var base,\r\n        s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n      // No exception on ±Infinity or NaN.\r\n      if (isInfinityOrNaN.test(s)) {\r\n        x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n      } else {\r\n        if (!isNum) {\r\n\r\n          // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n          s = s.replace(basePrefix, function (m, p1, p2) {\r\n            base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n            return !b || b == base ? p1 : m;\r\n          });\r\n\r\n          if (b) {\r\n            base = b;\r\n\r\n            // E.g. '1.' to '1', '.1' to '0.1'\r\n            s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n          }\r\n\r\n          if (str != s) return new BigNumber(s, base);\r\n        }\r\n\r\n        // '[BigNumber Error] Not a number: {n}'\r\n        // '[BigNumber Error] Not a base {b} number: {n}'\r\n        if (BigNumber.DEBUG) {\r\n          throw Error\r\n            (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n        }\r\n\r\n        // NaN\r\n        x.s = null;\r\n      }\r\n\r\n      x.c = x.e = null;\r\n    }\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n   * If r is truthy, it is known that there are more digits after the rounding digit.\r\n   */\r\n  function round(x, sd, rm, r) {\r\n    var d, i, j, k, n, ni, rd,\r\n      xc = x.c,\r\n      pows10 = POWS_TEN;\r\n\r\n    // if x is not Infinity or NaN...\r\n    if (xc) {\r\n\r\n      // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n      // ni is the index of n within x.c.\r\n      // d is the number of digits of n.\r\n      // i is the index of rd within n including leading zeros.\r\n      // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n      out: {\r\n\r\n        // Get the number of digits of the first element of xc.\r\n        for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n        i = sd - d;\r\n\r\n        // If the rounding digit is in the first element of xc...\r\n        if (i < 0) {\r\n          i += LOG_BASE;\r\n          j = sd;\r\n          n = xc[ni = 0];\r\n\r\n          // Get the rounding digit at index j of n.\r\n          rd = n / pows10[d - j - 1] % 10 | 0;\r\n        } else {\r\n          ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n          if (ni >= xc.length) {\r\n\r\n            if (r) {\r\n\r\n              // Needed by sqrt.\r\n              for (; xc.length <= ni; xc.push(0));\r\n              n = rd = 0;\r\n              d = 1;\r\n              i %= LOG_BASE;\r\n              j = i - LOG_BASE + 1;\r\n            } else {\r\n              break out;\r\n            }\r\n          } else {\r\n            n = k = xc[ni];\r\n\r\n            // Get the number of digits of n.\r\n            for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n            // Get the index of rd within n.\r\n            i %= LOG_BASE;\r\n\r\n            // Get the index of rd within n, adjusted for leading zeros.\r\n            // The number of leading zeros of n is given by LOG_BASE - d.\r\n            j = i - LOG_BASE + d;\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n          }\r\n        }\r\n\r\n        r = r || sd < 0 ||\r\n\r\n        // Are there any non-zero digits after the rounding digit?\r\n        // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n        // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n         xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n        r = rm < 4\r\n         ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n         : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n           rm == (x.s < 0 ? 8 : 7));\r\n\r\n        if (sd < 1 || !xc[0]) {\r\n          xc.length = 0;\r\n\r\n          if (r) {\r\n\r\n            // Convert sd to decimal places.\r\n            sd -= x.e + 1;\r\n\r\n            // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n            xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n            x.e = -sd || 0;\r\n          } else {\r\n\r\n            // Zero.\r\n            xc[0] = x.e = 0;\r\n          }\r\n\r\n          return x;\r\n        }\r\n\r\n        // Remove excess digits.\r\n        if (i == 0) {\r\n          xc.length = ni;\r\n          k = 1;\r\n          ni--;\r\n        } else {\r\n          xc.length = ni + 1;\r\n          k = pows10[LOG_BASE - i];\r\n\r\n          // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n          // j > 0 means i > number of leading zeros of n.\r\n          xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n        }\r\n\r\n        // Round up?\r\n        if (r) {\r\n\r\n          for (; ;) {\r\n\r\n            // If the digit to be rounded up is in the first element of xc...\r\n            if (ni == 0) {\r\n\r\n              // i will be the length of xc[0] before k is added.\r\n              for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n              j = xc[0] += k;\r\n              for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n              // if i != k the length has increased.\r\n              if (i != k) {\r\n                x.e++;\r\n                if (xc[0] == BASE) xc[0] = 1;\r\n              }\r\n\r\n              break;\r\n            } else {\r\n              xc[ni] += k;\r\n              if (xc[ni] != BASE) break;\r\n              xc[ni--] = 0;\r\n              k = 1;\r\n            }\r\n          }\r\n        }\r\n\r\n        // Remove trailing zeros.\r\n        for (i = xc.length; xc[--i] === 0; xc.pop());\r\n      }\r\n\r\n      // Overflow? Infinity.\r\n      if (x.e > MAX_EXP) {\r\n        x.c = x.e = null;\r\n\r\n      // Underflow? Zero.\r\n      } else if (x.e < MIN_EXP) {\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function valueOf(n) {\r\n    var str,\r\n      e = n.e;\r\n\r\n    if (e === null) return n.toString();\r\n\r\n    str = coeffToString(n.c);\r\n\r\n    str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n      ? toExponential(str, e)\r\n      : toFixedPoint(str, e, '0');\r\n\r\n    return n.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new BigNumber(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   *   0 if they have the same value,\r\n   *   or null if the value of either is NaN.\r\n   */\r\n  P.comparedTo = function (y, b) {\r\n    return compare(this, new BigNumber(y, b));\r\n  };\r\n\r\n\r\n  /*\r\n   * If dp is undefined or null or true or false, return the number of decimal places of the\r\n   * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   *\r\n   * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.decimalPlaces = P.dp = function (dp, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), dp + x.e + 1, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n    // Subtract the number of trailing zeros of the last number.\r\n    if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n    if (n < 0) n = 0;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n   * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.dividedBy = P.div = function (y, b) {\r\n    return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n   * BigNumber by the value of BigNumber(y, b).\r\n   */\r\n  P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n    return div(this, new BigNumber(y, b), 0, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n   *\r\n   * If m is present, return the result modulo m.\r\n   * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n   *\r\n   * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n   * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n   *\r\n   * n {number|string|BigNumber} The exponent. An integer.\r\n   * [m] {number|string|BigNumber} The modulus.\r\n   *\r\n   * '[BigNumber Error] Exponent not an integer: {n}'\r\n   */\r\n  P.exponentiatedBy = P.pow = function (n, m) {\r\n    var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n      x = this;\r\n\r\n    n = new BigNumber(n);\r\n\r\n    // Allow NaN and ±Infinity, but not other non-integers.\r\n    if (n.c && !n.isInteger()) {\r\n      throw Error\r\n        (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n    }\r\n\r\n    if (m != null) m = new BigNumber(m);\r\n\r\n    // Exponent of MAX_SAFE_INTEGER is 15.\r\n    nIsBig = n.e > 14;\r\n\r\n    // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n    if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n      // The sign of the result of pow when x is negative depends on the evenness of n.\r\n      // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n      y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? n.s * (2 - isOdd(n)) : +valueOf(n)));\r\n      return m ? y.mod(m) : y;\r\n    }\r\n\r\n    nIsNeg = n.s < 0;\r\n\r\n    if (m) {\r\n\r\n      // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n      if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n      isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n      if (isModExp) x = x.mod(m);\r\n\r\n    // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n    // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n    } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n      // [1, 240000000]\r\n      ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n      // [80000000000000]  [99999750000000]\r\n      : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n      // If x is negative and n is odd, k = -0, else k = 0.\r\n      k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n      // If x >= 1, k = ±Infinity.\r\n      if (x.e > -1) k = 1 / k;\r\n\r\n      // If n is negative return ±0, else return ±Infinity.\r\n      return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n    } else if (POW_PRECISION) {\r\n\r\n      // Truncating each coefficient array to a length of k after each multiplication\r\n      // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n      // i.e. there will be a minimum of 28 guard digits retained.\r\n      k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n    }\r\n\r\n    if (nIsBig) {\r\n      half = new BigNumber(0.5);\r\n      if (nIsNeg) n.s = 1;\r\n      nIsOdd = isOdd(n);\r\n    } else {\r\n      i = Math.abs(+valueOf(n));\r\n      nIsOdd = i % 2;\r\n    }\r\n\r\n    y = new BigNumber(ONE);\r\n\r\n    // Performs 54 loop iterations for n of 9007199254740991.\r\n    for (; ;) {\r\n\r\n      if (nIsOdd) {\r\n        y = y.times(x);\r\n        if (!y.c) break;\r\n\r\n        if (k) {\r\n          if (y.c.length > k) y.c.length = k;\r\n        } else if (isModExp) {\r\n          y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (i) {\r\n        i = mathfloor(i / 2);\r\n        if (i === 0) break;\r\n        nIsOdd = i % 2;\r\n      } else {\r\n        n = n.times(half);\r\n        round(n, n.e + 1, 1);\r\n\r\n        if (n.e > 14) {\r\n          nIsOdd = isOdd(n);\r\n        } else {\r\n          i = +valueOf(n);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        }\r\n      }\r\n\r\n      x = x.times(x);\r\n\r\n      if (k) {\r\n        if (x.c && x.c.length > k) x.c.length = k;\r\n      } else if (isModExp) {\r\n        x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n      }\r\n    }\r\n\r\n    if (isModExp) return y;\r\n    if (nIsNeg) y = ONE.div(y);\r\n\r\n    return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n   * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n   */\r\n  P.integerValue = function (rm) {\r\n    var n = new BigNumber(this);\r\n    if (rm == null) rm = ROUNDING_MODE;\r\n    else intCheck(rm, 0, 8);\r\n    return round(n, n.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isEqualTo = P.eq = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.c;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isGreaterThan = P.gt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is greater than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n   */\r\n  P.isInteger = function () {\r\n    return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n   * otherwise return false.\r\n   */\r\n  P.isLessThan = P.lt = function (y, b) {\r\n    return compare(this, new BigNumber(y, b)) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is less than or equal to the value of\r\n   * BigNumber(y, b), otherwise return false.\r\n   */\r\n  P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n    return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is negative, otherwise return false.\r\n   */\r\n  P.isNegative = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is positive, otherwise return false.\r\n   */\r\n  P.isPositive = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.c && this.c[0] == 0;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.minus = function (y, b) {\r\n    var i, j, t, xLTy,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n    if (a != b) {\r\n      y.s = -b;\r\n      return x.plus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Either Infinity?\r\n      if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n      // Either zero?\r\n      if (!xc[0] || !yc[0]) {\r\n\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n         // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n         ROUNDING_MODE == 3 ? -0 : 0);\r\n      }\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Determine which is the bigger number.\r\n    if (a = xe - ye) {\r\n\r\n      if (xLTy = a < 0) {\r\n        a = -a;\r\n        t = xc;\r\n      } else {\r\n        ye = xe;\r\n        t = yc;\r\n      }\r\n\r\n      t.reverse();\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      for (b = a; b--; t.push(0));\r\n      t.reverse();\r\n    } else {\r\n\r\n      // Exponents equal. Check digit by digit.\r\n      j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n      for (a = b = 0; b < j; b++) {\r\n\r\n        if (xc[b] != yc[b]) {\r\n          xLTy = xc[b] < yc[b];\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    // x < y? Point xc to the array of the bigger number.\r\n    if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n    b = (j = yc.length) - (i = xc.length);\r\n\r\n    // Append zeros to xc if shorter.\r\n    // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n    if (b > 0) for (; b--; xc[i++] = 0);\r\n    b = BASE - 1;\r\n\r\n    // Subtract yc from xc.\r\n    for (; j > a;) {\r\n\r\n      if (xc[--j] < yc[j]) {\r\n        for (i = j; i && !xc[--i]; xc[i] = b);\r\n        --xc[i];\r\n        xc[j] += BASE;\r\n      }\r\n\r\n      xc[j] -= yc[j];\r\n    }\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n    // Zero?\r\n    if (!xc[0]) {\r\n\r\n      // Following IEEE 754 (2008) 6.3,\r\n      // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n      y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n      y.c = [y.e = 0];\r\n      return y;\r\n    }\r\n\r\n    // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n    // for finite x and y.\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n   * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n   */\r\n  P.modulo = P.mod = function (y, b) {\r\n    var q, s,\r\n      x = this;\r\n\r\n    y = new BigNumber(y, b);\r\n\r\n    // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n    if (!x.c || !y.s || y.c && !y.c[0]) {\r\n      return new BigNumber(NaN);\r\n\r\n    // Return x if y is Infinity or x is zero.\r\n    } else if (!y.c || x.c && !x.c[0]) {\r\n      return new BigNumber(x);\r\n    }\r\n\r\n    if (MODULO_MODE == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // r = x - qy    where  0 <= r < abs(y)\r\n      s = y.s;\r\n      y.s = 1;\r\n      q = div(x, y, 0, 3);\r\n      y.s = s;\r\n      q.s *= s;\r\n    } else {\r\n      q = div(x, y, 0, MODULO_MODE);\r\n    }\r\n\r\n    y = x.minus(q.times(y));\r\n\r\n    // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n    if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n    return y;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n   * of BigNumber(y, b).\r\n   */\r\n  P.multipliedBy = P.times = function (y, b) {\r\n    var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n      base, sqrtBase,\r\n      x = this,\r\n      xc = x.c,\r\n      yc = (y = new BigNumber(y, b)).c;\r\n\r\n    // Either NaN, ±Infinity or ±0?\r\n    if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n      // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n      if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n        y.c = y.e = y.s = null;\r\n      } else {\r\n        y.s *= x.s;\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        if (!xc || !yc) {\r\n          y.c = y.e = null;\r\n\r\n        // Return ±0 if either is ±0.\r\n        } else {\r\n          y.c = [0];\r\n          y.e = 0;\r\n        }\r\n      }\r\n\r\n      return y;\r\n    }\r\n\r\n    e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n    y.s *= x.s;\r\n    xcL = xc.length;\r\n    ycL = yc.length;\r\n\r\n    // Ensure xc points to longer array and xcL to its length.\r\n    if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n    // Initialise the result array with zeros.\r\n    for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n    base = BASE;\r\n    sqrtBase = SQRT_BASE;\r\n\r\n    for (i = ycL; --i >= 0;) {\r\n      c = 0;\r\n      ylo = yc[i] % sqrtBase;\r\n      yhi = yc[i] / sqrtBase | 0;\r\n\r\n      for (k = xcL, j = i + k; j > i;) {\r\n        xlo = xc[--k] % sqrtBase;\r\n        xhi = xc[k] / sqrtBase | 0;\r\n        m = yhi * xlo + xhi * ylo;\r\n        xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n        c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n        zc[j--] = xlo % base;\r\n      }\r\n\r\n      zc[j] = c;\r\n    }\r\n\r\n    if (c) {\r\n      ++e;\r\n    } else {\r\n      zc.splice(0, 1);\r\n    }\r\n\r\n    return normalise(y, zc, e);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n   * i.e. multiplied by -1.\r\n   */\r\n  P.negated = function () {\r\n    var x = new BigNumber(this);\r\n    x.s = -x.s || null;\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n   * BigNumber(y, b).\r\n   */\r\n  P.plus = function (y, b) {\r\n    var t,\r\n      x = this,\r\n      a = x.s;\r\n\r\n    y = new BigNumber(y, b);\r\n    b = y.s;\r\n\r\n    // Either NaN?\r\n    if (!a || !b) return new BigNumber(NaN);\r\n\r\n    // Signs differ?\r\n     if (a != b) {\r\n      y.s = -b;\r\n      return x.minus(y);\r\n    }\r\n\r\n    var xe = x.e / LOG_BASE,\r\n      ye = y.e / LOG_BASE,\r\n      xc = x.c,\r\n      yc = y.c;\r\n\r\n    if (!xe || !ye) {\r\n\r\n      // Return ±Infinity if either ±Infinity.\r\n      if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n      // Either zero?\r\n      // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n      if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n    }\r\n\r\n    xe = bitFloor(xe);\r\n    ye = bitFloor(ye);\r\n    xc = xc.slice();\r\n\r\n    // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n    if (a = xe - ye) {\r\n      if (a > 0) {\r\n        ye = xe;\r\n        t = yc;\r\n      } else {\r\n        a = -a;\r\n        t = xc;\r\n      }\r\n\r\n      t.reverse();\r\n      for (; a--; t.push(0));\r\n      t.reverse();\r\n    }\r\n\r\n    a = xc.length;\r\n    b = yc.length;\r\n\r\n    // Point xc to the longer array, and b to the shorter length.\r\n    if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n    // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n    for (a = 0; b;) {\r\n      a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n      xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n    }\r\n\r\n    if (a) {\r\n      xc = [a].concat(xc);\r\n      ++ye;\r\n    }\r\n\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    // ye = MAX_EXP + 1 possible\r\n    return normalise(y, xc, ye);\r\n  };\r\n\r\n\r\n  /*\r\n   * If sd is undefined or null or true or false, return the number of significant digits of\r\n   * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n   * If sd is true include integer-part trailing zeros in the count.\r\n   *\r\n   * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n   * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n   * ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n   *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.precision = P.sd = function (sd, rm) {\r\n    var c, n, v,\r\n      x = this;\r\n\r\n    if (sd != null && sd !== !!sd) {\r\n      intCheck(sd, 1, MAX);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      return round(new BigNumber(x), sd, rm);\r\n    }\r\n\r\n    if (!(c = x.c)) return null;\r\n    v = c.length - 1;\r\n    n = v * LOG_BASE + 1;\r\n\r\n    if (v = c[v]) {\r\n\r\n      // Subtract the number of trailing zeros of the last element.\r\n      for (; v % 10 == 0; v /= 10, n--);\r\n\r\n      // Add the number of digits of the first element.\r\n      for (v = c[0]; v >= 10; v /= 10, n++);\r\n    }\r\n\r\n    if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n   * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n   *\r\n   * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n   */\r\n  P.shiftedBy = function (k) {\r\n    intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n    return this.times('1e' + k);\r\n  };\r\n\r\n\r\n  /*\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N) =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I) =  I\r\n   *  sqrt(0) =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n   * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, r, rep, t,\r\n      x = this,\r\n      c = x.c,\r\n      s = x.s,\r\n      e = x.e,\r\n      dp = DECIMAL_PLACES + 4,\r\n      half = new BigNumber('0.5');\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !c || !c[0]) {\r\n      return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n    }\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+valueOf(x));\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = coeffToString(c);\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(+n);\r\n      e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new BigNumber(n);\r\n    } else {\r\n      r = new BigNumber(s + '');\r\n    }\r\n\r\n    // Check for zero.\r\n    // r could be zero if MIN_EXP is changed after the this value was created.\r\n    // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n    // coeffToString to throw.\r\n    if (r.c[0]) {\r\n      e = r.e;\r\n      s = e + dp;\r\n      if (s < 3) s = 0;\r\n\r\n      // Newton-Raphson iteration.\r\n      for (; ;) {\r\n        t = r;\r\n        r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n        if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n          // The exponent of r may here be one less than the final result exponent,\r\n          // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n          // are indexed correctly.\r\n          if (r.e < e) --s;\r\n          n = n.slice(s - 3, s + 1);\r\n\r\n          // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n          // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n          // iteration.\r\n          if (n == '9999' || !rep && n == '4999') {\r\n\r\n            // On the first iteration only, check to see if rounding up gives the\r\n            // exact result as the nines may infinitely repeat.\r\n            if (!rep) {\r\n              round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n              if (t.times(t).eq(x)) {\r\n                r = t;\r\n                break;\r\n              }\r\n            }\r\n\r\n            dp += 4;\r\n            s += 4;\r\n            rep = 1;\r\n          } else {\r\n\r\n            // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n            // result. If not, then there are further digits and m will be truthy.\r\n            if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n              // Truncate to the first rounding digit.\r\n              round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n              m = !r.times(r).eq(x);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in exponential notation and\r\n   * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp++;\r\n    }\r\n    return format(this, dp, rm, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n   * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n   *\r\n   * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n   * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    if (dp != null) {\r\n      intCheck(dp, 0, MAX);\r\n      dp = dp + this.e + 1;\r\n    }\r\n    return format(this, dp, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n   * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n   * of the format or FORMAT object (see BigNumber.set).\r\n   *\r\n   * The formatting object may contain some or all of the properties shown below.\r\n   *\r\n   * FORMAT = {\r\n   *   prefix: '',\r\n   *   groupSize: 3,\r\n   *   secondaryGroupSize: 0,\r\n   *   groupSeparator: ',',\r\n   *   decimalSeparator: '.',\r\n   *   fractionGroupSize: 0,\r\n   *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n   *   suffix: ''\r\n   * };\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   * [format] {object} Formatting options. See FORMAT pbject above.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n   * '[BigNumber Error] Argument not an object: {format}'\r\n   */\r\n  P.toFormat = function (dp, rm, format) {\r\n    var str,\r\n      x = this;\r\n\r\n    if (format == null) {\r\n      if (dp != null && rm && typeof rm == 'object') {\r\n        format = rm;\r\n        rm = null;\r\n      } else if (dp && typeof dp == 'object') {\r\n        format = dp;\r\n        dp = rm = null;\r\n      } else {\r\n        format = FORMAT;\r\n      }\r\n    } else if (typeof format != 'object') {\r\n      throw Error\r\n        (bignumberError + 'Argument not an object: ' + format);\r\n    }\r\n\r\n    str = x.toFixed(dp, rm);\r\n\r\n    if (x.c) {\r\n      var i,\r\n        arr = str.split('.'),\r\n        g1 = +format.groupSize,\r\n        g2 = +format.secondaryGroupSize,\r\n        groupSeparator = format.groupSeparator || '',\r\n        intPart = arr[0],\r\n        fractionPart = arr[1],\r\n        isNeg = x.s < 0,\r\n        intDigits = isNeg ? intPart.slice(1) : intPart,\r\n        len = intDigits.length;\r\n\r\n      if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n      if (g1 > 0 && len > 0) {\r\n        i = len % g1 || g1;\r\n        intPart = intDigits.substr(0, i);\r\n        for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n        if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n        if (isNeg) intPart = '-' + intPart;\r\n      }\r\n\r\n      str = fractionPart\r\n       ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n        ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n         '$&' + (format.fractionGroupSeparator || ''))\r\n        : fractionPart)\r\n       : intPart;\r\n    }\r\n\r\n    return (format.prefix || '') + str + (format.suffix || '');\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n   * fraction with an integer numerator and an integer denominator.\r\n   * The denominator will be a positive non-zero value less than or equal to the specified\r\n   * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n   * the lowest value necessary to represent the number exactly.\r\n   *\r\n   * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n   *\r\n   * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n   */\r\n  P.toFraction = function (md) {\r\n    var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n      x = this,\r\n      xc = x.c;\r\n\r\n    if (md != null) {\r\n      n = new BigNumber(md);\r\n\r\n      // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n      if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n        throw Error\r\n          (bignumberError + 'Argument ' +\r\n            (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n      }\r\n    }\r\n\r\n    if (!xc) return new BigNumber(x);\r\n\r\n    d = new BigNumber(ONE);\r\n    n1 = d0 = new BigNumber(ONE);\r\n    d1 = n0 = new BigNumber(ONE);\r\n    s = coeffToString(xc);\r\n\r\n    // Determine initial denominator.\r\n    // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n    e = d.e = s.length - x.e - 1;\r\n    d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n    md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n    exp = MAX_EXP;\r\n    MAX_EXP = 1 / 0;\r\n    n = new BigNumber(s);\r\n\r\n    // n0 = d1 = 0\r\n    n0.c[0] = 0;\r\n\r\n    for (; ;)  {\r\n      q = div(n, d, 0, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.comparedTo(md) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      n1 = n0.plus(q.times(d2 = n1));\r\n      n0 = d2;\r\n      d = n.minus(q.times(d2 = d));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = div(md.minus(d0), d1, 0, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n    e = e * 2;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n    r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n        div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n    MAX_EXP = exp;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this BigNumber converted to a number primitive.\r\n   */\r\n  P.toNumber = function () {\r\n    return +valueOf(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n   * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n   * necessary to represent the integer part of the value in fixed-point notation, then use\r\n   * exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    if (sd != null) intCheck(sd, 1, MAX);\r\n    return format(this, sd, rm, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n   * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n   * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n   * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n   * TO_EXP_NEG, return exponential notation.\r\n   *\r\n   * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n   *\r\n   * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n   */\r\n  P.toString = function (b) {\r\n    var str,\r\n      n = this,\r\n      s = n.s,\r\n      e = n.e;\r\n\r\n    // Infinity or NaN?\r\n    if (e === null) {\r\n      if (s) {\r\n        str = 'Infinity';\r\n        if (s < 0) str = '-' + str;\r\n      } else {\r\n        str = 'NaN';\r\n      }\r\n    } else {\r\n      if (b == null) {\r\n        str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n         ? toExponential(coeffToString(n.c), e)\r\n         : toFixedPoint(coeffToString(n.c), e, '0');\r\n      } else if (b === 10 && alphabetHasNormalDecimalDigits) {\r\n        n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n        str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n      } else {\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n        str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n      }\r\n\r\n      if (s < 0 && n.c[0]) str = '-' + str;\r\n    }\r\n\r\n    return str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return as toString, but do not accept a base argument, and include the minus sign for\r\n   * negative zero.\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    return valueOf(this);\r\n  };\r\n\r\n\r\n  P._isBigNumber = true;\r\n\r\n  P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n  // Node.js v10.12.0+\r\n  P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n\r\n  if (configObject != null) BigNumber.set(configObject);\r\n\r\n  return BigNumber;\r\n}\r\n\r\n\r\n// PRIVATE HELPER FUNCTIONS\r\n\r\n// These functions don't need access to variables,\r\n// e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\nfunction bitFloor(n) {\r\n  var i = n | 0;\r\n  return n > 0 || n === i ? i : i - 1;\r\n}\r\n\r\n\r\n// Return a coefficient array as a string of base 10 digits.\r\nfunction coeffToString(a) {\r\n  var s, z,\r\n    i = 1,\r\n    j = a.length,\r\n    r = a[0] + '';\r\n\r\n  for (; i < j;) {\r\n    s = a[i++] + '';\r\n    z = LOG_BASE - s.length;\r\n    for (; z--; s = '0' + s);\r\n    r += s;\r\n  }\r\n\r\n  // Determine trailing zeros.\r\n  for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n  return r.slice(0, j + 1 || 1);\r\n}\r\n\r\n\r\n// Compare the value of BigNumbers x and y.\r\nfunction compare(x, y) {\r\n  var a, b,\r\n    xc = x.c,\r\n    yc = y.c,\r\n    i = x.s,\r\n    j = y.s,\r\n    k = x.e,\r\n    l = y.e;\r\n\r\n  // Either NaN?\r\n  if (!i || !j) return null;\r\n\r\n  a = xc && !xc[0];\r\n  b = yc && !yc[0];\r\n\r\n  // Either zero?\r\n  if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n  // Signs differ?\r\n  if (i != j) return i;\r\n\r\n  a = i < 0;\r\n  b = k == l;\r\n\r\n  // Either Infinity?\r\n  if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n  // Compare exponents.\r\n  if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n  j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n  // Compare digit by digit.\r\n  for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n  // Compare lengths.\r\n  return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n}\r\n\r\n\r\n/*\r\n * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n */\r\nfunction intCheck(n, min, max, name) {\r\n  if (n < min || n > max || n !== mathfloor(n)) {\r\n    throw Error\r\n     (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n       ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n       : ' not a primitive number: ') + String(n));\r\n  }\r\n}\r\n\r\n\r\n// Assumes finite n.\r\nfunction isOdd(n) {\r\n  var k = n.c.length - 1;\r\n  return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n}\r\n\r\n\r\nfunction toExponential(str, e) {\r\n  return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n   (e < 0 ? 'e' : 'e+') + e;\r\n}\r\n\r\n\r\nfunction toFixedPoint(str, e, z) {\r\n  var len, zs;\r\n\r\n  // Negative exponent?\r\n  if (e < 0) {\r\n\r\n    // Prepend zeros.\r\n    for (zs = z + '.'; ++e; zs += z);\r\n    str = zs + str;\r\n\r\n  // Positive exponent\r\n  } else {\r\n    len = str.length;\r\n\r\n    // Append zeros.\r\n    if (++e > len) {\r\n      for (zs = z, e -= len; --e; zs += z);\r\n      str += zs;\r\n    } else if (e < len) {\r\n      str = str.slice(0, e) + '.' + str.slice(e);\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n\r\n// EXPORT\r\n\r\n\r\nexport var BigNumber = clone();\r\n\r\nexport default BigNumber;\r\n", null, null, null, null, null, null, null, null, null, null, null, null, null, "module.exports = IdIterator\n\nfunction IdIterator(opts){\n  opts = opts || {}\n  var max = opts.max || Number.MAX_SAFE_INTEGER\n  var idCounter = typeof opts.start !== 'undefined' ? opts.start : Math.floor(Math.random() * max)\n\n  return function createRandomId () {\n    idCounter = idCounter % max\n    return idCounter++\n  }\n\n}", "// NOTE: this list must be up-to-date with browsers listed in\n// test/acceptance/useragentstrings.yml\nexport const BROWSER_ALIASES_MAP = {\n  'Amazon Silk': 'amazon_silk',\n  'Android Browser': 'android',\n  Bada: 'bada',\n  BlackBerry: 'blackberry',\n  Chrome: 'chrome',\n  Chromium: 'chromium',\n  Electron: 'electron',\n  Epiphany: 'epiphany',\n  Firefox: 'firefox',\n  Focus: 'focus',\n  Generic: 'generic',\n  'Google Search': 'google_search',\n  Googlebot: 'googlebot',\n  'Internet Explorer': 'ie',\n  'K-Meleon': 'k_meleon',\n  Maxthon: 'maxthon',\n  'Microsoft Edge': 'edge',\n  'MZ Browser': 'mz',\n  'NAVER Whale Browser': 'naver',\n  Opera: 'opera',\n  'Opera Coast': 'opera_coast',\n  PhantomJS: 'phantomjs',\n  Puffin: 'puffin',\n  QupZilla: 'qupzilla',\n  QQ: 'qq',\n  QQLite: 'qqlite',\n  Safari: 'safari',\n  Sailfish: 'sailfish',\n  'Samsung Internet for Android': 'samsung_internet',\n  SeaMonkey: 'seamonkey',\n  Sleipnir: 'sleipnir',\n  Swing: 'swing',\n  Tizen: 'tizen',\n  'UC Browser': 'uc',\n  Vivaldi: 'vivaldi',\n  'WebOS Browser': 'webos',\n  WeChat: 'wechat',\n  'Yandex Browser': 'yandex',\n  Roku: 'roku',\n};\n\nexport const BROWSER_MAP = {\n  amazon_silk: 'Amazon Silk',\n  android: 'Android Browser',\n  bada: 'Bada',\n  blackberry: 'BlackBerry',\n  chrome: 'Chrome',\n  chromium: 'Chromium',\n  electron: 'Electron',\n  epiphany: 'Epiphany',\n  firefox: 'Firefox',\n  focus: 'Focus',\n  generic: 'Generic',\n  googlebot: 'Googlebot',\n  google_search: 'Google Search',\n  ie: 'Internet Explorer',\n  k_meleon: 'K-Meleon',\n  maxthon: 'Maxthon',\n  edge: 'Microsoft Edge',\n  mz: 'MZ Browser',\n  naver: 'NAVER Whale Browser',\n  opera: 'Opera',\n  opera_coast: 'Opera Coast',\n  phantomjs: 'PhantomJS',\n  puffin: 'Puffin',\n  qupzilla: 'QupZilla',\n  qq: 'QQ Browser',\n  qqlite: 'QQ Browser Lite',\n  safari: 'Safari',\n  sailfish: 'Sailfish',\n  samsung_internet: 'Samsung Internet for Android',\n  seamonkey: 'SeaMonkey',\n  sleipnir: 'Sleipnir',\n  swing: 'Swing',\n  tizen: 'Tizen',\n  uc: 'UC Browser',\n  vivaldi: 'Vivaldi',\n  webos: 'WebOS Browser',\n  wechat: 'WeChat',\n  yandex: 'Yandex Browser',\n};\n\nexport const PLATFORMS_MAP = {\n  tablet: 'tablet',\n  mobile: 'mobile',\n  desktop: 'desktop',\n  tv: 'tv',\n};\n\nexport const OS_MAP = {\n  WindowsPhone: 'Windows Phone',\n  Windows: 'Windows',\n  MacOS: 'macOS',\n  iOS: 'iOS',\n  Android: 'Android',\n  WebOS: 'WebOS',\n  BlackBerry: 'BlackBerry',\n  Bada: 'Bada',\n  Tizen: 'Tizen',\n  Linux: 'Linux',\n  ChromeOS: 'Chrome OS',\n  PlayStation4: 'PlayStation 4',\n  Roku: 'Roku',\n};\n\nexport const ENGINE_MAP = {\n  EdgeHTML: 'EdgeHTML',\n  Blink: 'Blink',\n  Trident: 'Trident',\n  Presto: 'Presto',\n  Gecko: 'Gecko',\n  WebKit: 'WebKit',\n};\n", "import { BROWSER_MAP, BROWSER_ALIASES_MAP } from './constants.js';\n\nexport default class Utils {\n  /**\n   * Get first matched item for a string\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getFirstMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 0 && match[1]) || '';\n  }\n\n  /**\n   * Get second matched item for a string\n   * @param regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getSecondMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 1 && match[2]) || '';\n  }\n\n  /**\n   * Match a regexp and return a constant or undefined\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @param {*} _const Any const that will be returned if regexp matches the string\n   * @return {*}\n   */\n  static matchAndReturnConst(regexp, ua, _const) {\n    if (regexp.test(ua)) {\n      return _const;\n    }\n    return void (0);\n  }\n\n  static getWindowsVersionName(version) {\n    switch (version) {\n      case 'NT': return 'NT';\n      case 'XP': return 'XP';\n      case 'NT 5.0': return '2000';\n      case 'NT 5.1': return 'XP';\n      case 'NT 5.2': return '2003';\n      case 'NT 6.0': return 'Vista';\n      case 'NT 6.1': return '7';\n      case 'NT 6.2': return '8';\n      case 'NT 6.3': return '8.1';\n      case 'NT 10.0': return '10';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get macOS version name\n   *    10.5 - Leopard\n   *    10.6 - Snow Leopard\n   *    10.7 - Lion\n   *    10.8 - Mountain Lion\n   *    10.9 - Mavericks\n   *    10.10 - Yosemite\n   *    10.11 - El Capitan\n   *    10.12 - Sierra\n   *    10.13 - High Sierra\n   *    10.14 - Mojave\n   *    10.15 - Catalina\n   *\n   * @example\n   *   getMacOSVersionName(\"10.14\") // 'Mojave'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getMacOSVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] !== 10) return undefined;\n    switch (v[1]) {\n      case 5: return 'Leopard';\n      case 6: return 'Snow Leopard';\n      case 7: return 'Lion';\n      case 8: return 'Mountain Lion';\n      case 9: return 'Mavericks';\n      case 10: return 'Yosemite';\n      case 11: return 'El Capitan';\n      case 12: return 'Sierra';\n      case 13: return 'High Sierra';\n      case 14: return 'Mojave';\n      case 15: return 'Catalina';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get Android version name\n   *    1.5 - Cupcake\n   *    1.6 - Donut\n   *    2.0 - Eclair\n   *    2.1 - Eclair\n   *    2.2 - Froyo\n   *    2.x - Gingerbread\n   *    3.x - Honeycomb\n   *    4.0 - Ice Cream Sandwich\n   *    4.1 - Jelly Bean\n   *    4.4 - KitKat\n   *    5.x - Lollipop\n   *    6.x - Marshmallow\n   *    7.x - Nougat\n   *    8.x - Oreo\n   *    9.x - Pie\n   *\n   * @example\n   *   getAndroidVersionName(\"7.0\") // 'Nougat'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getAndroidVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] === 1 && v[1] < 5) return undefined;\n    if (v[0] === 1 && v[1] < 6) return 'Cupcake';\n    if (v[0] === 1 && v[1] >= 6) return 'Donut';\n    if (v[0] === 2 && v[1] < 2) return 'Eclair';\n    if (v[0] === 2 && v[1] === 2) return 'Froyo';\n    if (v[0] === 2 && v[1] > 2) return 'Gingerbread';\n    if (v[0] === 3) return 'Honeycomb';\n    if (v[0] === 4 && v[1] < 1) return 'Ice Cream Sandwich';\n    if (v[0] === 4 && v[1] < 4) return 'Jelly Bean';\n    if (v[0] === 4 && v[1] >= 4) return 'KitKat';\n    if (v[0] === 5) return 'Lollipop';\n    if (v[0] === 6) return 'Marshmallow';\n    if (v[0] === 7) return 'Nougat';\n    if (v[0] === 8) return 'Oreo';\n    if (v[0] === 9) return 'Pie';\n    return undefined;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  static getVersionPrecision(version) {\n    return version.split('.').length;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions('1.10.2.1',  '1.8.2.1.90')    // 1\n   *   compareVersions('1.010.2.1', '1.09.2.1.90');  // 1\n   *   compareVersions('1.10.2.1',  '1.10.2.1');     // 0\n   *   compareVersions('1.10.2.1',  '1.0800.2');     // -1\n   *   compareVersions('1.10.2.1',  '1.10',  true);  // 0\n   *\n   * @param {String} versionA versions versions to compare\n   * @param {String} versionB versions versions to compare\n   * @param {boolean} [isLoose] enable loose comparison\n   * @return {Number} comparison result: -1 when versionA is lower,\n   * 1 when versionA is bigger, 0 when both equal\n   */\n  /* eslint consistent-return: 1 */\n  static compareVersions(versionA, versionB, isLoose = false) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    const versionAPrecision = Utils.getVersionPrecision(versionA);\n    const versionBPrecision = Utils.getVersionPrecision(versionB);\n\n    let precision = Math.max(versionAPrecision, versionBPrecision);\n    let lastPrecision = 0;\n\n    const chunks = Utils.map([versionA, versionB], (version) => {\n      const delta = precision - Utils.getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      const _version = version + new Array(delta + 1).join('.0');\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return Utils.map(_version.split('.'), chunk => new Array(20 - chunk.length).join('0') + chunk).reverse();\n    });\n\n    // adjust precision for loose comparison\n    if (isLoose) {\n      lastPrecision = precision - Math.min(versionAPrecision, versionBPrecision);\n    }\n\n    // iterate in reverse order by reversed chunks array\n    precision -= 1;\n    while (precision >= lastPrecision) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n\n      if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === lastPrecision) {\n          // all version chunks are same\n          return 0;\n        }\n\n        precision -= 1;\n      } else if (chunks[0][precision] < chunks[1][precision]) {\n        return -1;\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  static map(arr, iterator) {\n    const result = [];\n    let i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i += 1) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Array::find polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} predicate\n   * @return {Array}\n   */\n  static find(arr, predicate) {\n    let i;\n    let l;\n    if (Array.prototype.find) {\n      return Array.prototype.find.call(arr, predicate);\n    }\n    for (i = 0, l = arr.length; i < l; i += 1) {\n      const value = arr[i];\n      if (predicate(value, i)) {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Object::assign polyfill\n   *\n   * @param  {Object} obj\n   * @param  {Object} ...objs\n   * @return {Object}\n   */\n  static assign(obj, ...assigners) {\n    const result = obj;\n    let i;\n    let l;\n    if (Object.assign) {\n      return Object.assign(obj, ...assigners);\n    }\n    for (i = 0, l = assigners.length; i < l; i += 1) {\n      const assigner = assigners[i];\n      if (typeof assigner === 'object' && assigner !== null) {\n        const keys = Object.keys(assigner);\n        keys.forEach((key) => {\n          result[key] = assigner[key];\n        });\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('Microsoft Edge') // edge\n   *\n   * @param  {string} browserName\n   * @return {string}\n   */\n  static getBrowserAlias(browserName) {\n    return BROWSER_ALIASES_MAP[browserName];\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('edge') // Microsoft Edge\n   *\n   * @param  {string} browserAlias\n   * @return {string}\n   */\n  static getBrowserTypeByAlias(browserAlias) {\n    return BROWSER_MAP[browserAlias] || '';\n  }\n}\n", "/**\n * Browsers' descriptors\n *\n * The idea of descriptors is simple. You should know about them two simple things:\n * 1. Every descriptor has a method or property called `test` and a `describe` method.\n * 2. Order of descriptors is important.\n *\n * More details:\n * 1. Method or property `test` serves as a way to detect whether the UA string\n * matches some certain browser or not. The `describe` method helps to make a result\n * object with params that show some browser-specific things: name, version, etc.\n * 2. Order of descriptors is important because a Parser goes through them one by one\n * in course. For example, if you insert Chrome's descriptor as the first one,\n * more then a half of browsers will be described as Chrome, because they will pass\n * the Chrome descriptor's test.\n *\n * Descriptor's `test` could be a property with an array of RegExps, where every RegExp\n * will be applied to a UA string to test it whether it matches or not.\n * If a descriptor has two or more regexps in the `test` array it tests them one by one\n * with a logical sum operation. Parser stops if it has found any RegExp that matches the UA.\n *\n * Or `test` could be a method. In that case it gets a Parser instance and should\n * return true/false to get the Parser know if this browser descriptor matches the UA or not.\n */\n\nimport Utils from './utils.js';\n\nconst commonVersionIdentifier = /version\\/(\\d+(\\.?_?\\d+)+)/i;\n\nconst browsersList = [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe(ua) {\n      const browser = {\n        name: 'Googlebot',\n      };\n      const version = Utils.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera < 13.0 */\n  {\n    test: [/opera/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera > 13.0 */\n  {\n    test: [/opr\\/|opios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/SamsungBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Samsung Internet for Android',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Whale/i],\n    describe(ua) {\n      const browser = {\n        name: 'NAVER Whale Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MZBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'MZ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/focus/i],\n    describe(ua) {\n      const browser = {\n        name: 'Focus',\n      };\n      const version = Utils.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/swing/i],\n    describe(ua) {\n      const browser = {\n        name: 'Swing',\n      };\n      const version = Utils.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/coast/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Coast',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/opt\\/\\d+(?:.?_?\\d+)+/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Touch',\n      };\n      const version = Utils.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/yabrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Yandex Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/ucbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'UC Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Maxthon|mxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Maxthon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/epiphany/i],\n    describe(ua) {\n      const browser = {\n        name: 'Epiphany',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/puffin/i],\n    describe(ua) {\n      const browser = {\n        name: 'Puffin',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sleipnir/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sleipnir',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/k-meleon/i],\n    describe(ua) {\n      const browser = {\n        name: 'K-Meleon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/micromessenger/i],\n    describe(ua) {\n      const browser = {\n        name: 'WeChat',\n      };\n      const version = Utils.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qqbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: (/qqbrowserlite/i).test(ua) ? 'QQ Browser Lite' : 'QQ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/msie|trident/i],\n    describe(ua) {\n      const browser = {\n        name: 'Internet Explorer',\n      };\n      const version = Utils.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/\\sedg\\//i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/edg([ea]|ios)/i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/vivaldi/i],\n    describe(ua) {\n      const browser = {\n        name: 'Vivaldi',\n      };\n      const version = Utils.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/seamonkey/i],\n    describe(ua) {\n      const browser = {\n        name: 'SeaMonkey',\n      };\n      const version = Utils.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sailfish/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sailfish',\n      };\n\n      const version = Utils.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/silk/i],\n    describe(ua) {\n      const browser = {\n        name: 'Amazon Silk',\n      };\n      const version = Utils.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/phantom/i],\n    describe(ua) {\n      const browser = {\n        name: 'PhantomJS',\n      };\n      const version = Utils.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/slimerjs/i],\n    describe(ua) {\n      const browser = {\n        name: 'SlimerJS',\n      };\n      const version = Utils.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const browser = {\n        name: 'BlackBerry',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const browser = {\n        name: 'WebOS Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const browser = {\n        name: 'Bada',\n      };\n      const version = Utils.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const browser = {\n        name: 'Tizen',\n      };\n      const version = Utils.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qupzilla/i],\n    describe(ua) {\n      const browser = {\n        name: 'QupZilla',\n      };\n      const version = Utils.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/firefox|iceweasel|fxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Firefox',\n      };\n      const version = Utils.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/electron/i],\n    describe(ua) {\n      const browser = {\n        name: 'Electron',\n      };\n      const version = Utils.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MiuiBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Miui',\n      };\n      const version = Utils.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chromium/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chromium',\n      };\n      const version = Utils.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chrome|crios|crmo/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chrome',\n      };\n      const version = Utils.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/GSA/i],\n    describe(ua) {\n      const browser = {\n        name: 'Google Search',\n      };\n      const version = Utils.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Android Browser */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const browser = {\n        name: 'Android Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test: [/playstation 4/i],\n    describe(ua) {\n      const browser = {\n        name: 'PlayStation 4',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Safari */\n  {\n    test: [/safari|applewebkit/i],\n    describe(ua) {\n      const browser = {\n        name: 'Safari',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Something else */\n  {\n    test: [/.*/i],\n    describe(ua) {\n      /* Here we try to make sure that there are explicit details about the device\n       * in order to decide what regexp exactly we want to apply\n       * (as there is a specific decision based on that conclusion)\n       */\n      const regexpWithoutDeviceSpec = /^(.*)\\/(.*) /;\n      const regexpWithDeviceSpec = /^(.*)\\/(.*)[ \\t]\\((.*)/;\n      const hasDeviceSpec = ua.search('\\\\(') !== -1;\n      const regexp = hasDeviceSpec ? regexpWithDeviceSpec : regexpWithoutDeviceSpec;\n      return {\n        name: Utils.getFirstMatch(regexp, ua),\n        version: Utils.getSecondMatch(regexp, ua),\n      };\n    },\n  },\n];\n\nexport default browsersList;\n", "import Utils from './utils.js';\nimport { OS_MAP } from './constants.js';\n\nexport default [\n  /* Roku */\n  {\n    test: [/Roku\\/DVP/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i, ua);\n      return {\n        name: OS_MAP.Roku,\n        version,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test: [/windows phone/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.WindowsPhone,\n        version,\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test: [/windows /i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i, ua);\n      const versionName = Utils.getWindowsVersionName(version);\n\n      return {\n        name: OS_MAP.Windows,\n        version,\n        versionName,\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe(ua) {\n      const result = {\n        name: OS_MAP.iOS,\n      };\n      const version = Utils.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/, ua);\n      if (version) {\n        result.version = version;\n      }\n      return result;\n    },\n  },\n\n  /* macOS */\n  {\n    test: [/macintosh/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i, ua).replace(/[_\\s]/g, '.');\n      const versionName = Utils.getMacOSVersionName(version);\n\n      const os = {\n        name: OS_MAP.MacOS,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* iOS */\n  {\n    test: [/(ipod|iphone|ipad)/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i, ua).replace(/[_\\s]/g, '.');\n\n      return {\n        name: OS_MAP.iOS,\n        version,\n      };\n    },\n  },\n\n  /* Android */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const version = Utils.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i, ua);\n      const versionName = Utils.getAndroidVersionName(version);\n      const os = {\n        name: OS_MAP.Android,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* WebOS */\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i, ua);\n      const os = {\n        name: OS_MAP.WebOS,\n      };\n\n      if (version && version.length) {\n        os.version = version;\n      }\n      return os;\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/\\bbb(\\d+)/i, ua);\n\n      return {\n        name: OS_MAP.BlackBerry,\n        version,\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Bada,\n        version,\n      };\n    },\n  },\n\n  /* Tizen */\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Tizen,\n        version,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test: [/linux/i],\n    describe() {\n      return {\n        name: OS_MAP.Linux,\n      };\n    },\n  },\n\n  /* Chrome OS */\n  {\n    test: [/CrOS/],\n    describe() {\n      return {\n        name: OS_MAP.ChromeOS,\n      };\n    },\n  },\n\n  /* Playstation 4 */\n  {\n    test: [/PlayStation 4/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.PlayStation4,\n        version,\n      };\n    },\n  },\n];\n", "import Utils from './utils.js';\nimport { PLATFORMS_MAP } from './constants.js';\n\n/*\n * Tablets go first since usually they have more specific\n * signs to detect.\n */\n\nexport default [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe() {\n      return {\n        type: 'bot',\n        vendor: 'Google',\n      };\n    },\n  },\n\n  /* Huawei */\n  {\n    test: [/huawei/i],\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(can-l01)/i, ua) && 'Nova';\n      const platform = {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Huawei',\n      };\n      if (model) {\n        platform.model = model;\n      }\n      return platform;\n    },\n  },\n\n  /* Nexus Tablet */\n  {\n    test: [/nexus\\s*(?:7|8|9|10).*/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* iPad */\n  {\n    test: [/ipad/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Amazon Kindle Fire */\n  {\n    test: [/kftt build/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n        model: 'Kindle Fire HD 7',\n      };\n    },\n  },\n\n  /* Another Amazon Tablet with Silk */\n  {\n    test: [/silk/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n      };\n    },\n  },\n\n  /* Tablet */\n  {\n    test: [/tablet(?! pc)/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* iPod/iPhone */\n  {\n    test(parser) {\n      const iDevice = parser.test(/ipod|iphone/i);\n      const likeIDevice = parser.test(/like (ipod|iphone)/i);\n      return iDevice && !likeIDevice;\n    },\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(ipod|iphone)/i, ua);\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Apple',\n        model,\n      };\n    },\n  },\n\n  /* Nexus Mobile */\n  {\n    test: [/nexus\\s*[0-6].*/i, /galaxy nexus/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* Mobile */\n  {\n    test: [/[^-]mobi/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'blackberry';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'BlackBerry',\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'bada';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test(parser) {\n      return parser.getBrowserName() === 'windows phone';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Microsoft',\n      };\n    },\n  },\n\n  /* Android Tablet */\n  {\n    test(parser) {\n      const osMajorVersion = Number(String(parser.getOSVersion()).split('.')[0]);\n      return parser.getOSName(true) === 'android' && (osMajorVersion >= 3);\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* Android Mobile */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'android';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* desktop */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'macos';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n        vendor: 'Apple',\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'windows';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'linux';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'playstation 4';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n\n  /* Roku */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'roku';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n];\n", "import Utils from './utils.js';\nimport { ENGINE_MAP } from './constants.js';\n\n/*\n * More specific goes first\n */\nexport default [\n  /* EdgeHTML */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'microsoft edge';\n    },\n    describe(ua) {\n      const isBlinkBased = /\\sedg\\//i.test(ua);\n\n      // return blink if it's blink-based one\n      if (isBlinkBased) {\n        return {\n          name: ENGINE_MAP.Blink,\n        };\n      }\n\n      // otherwise match the version and return EdgeHTML\n      const version = Utils.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      return {\n        name: ENGINE_MAP.EdgeHTML,\n        version,\n      };\n    },\n  },\n\n  /* Trident */\n  {\n    test: [/trident/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Trident,\n      };\n\n      const version = Utils.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Presto */\n  {\n    test(parser) {\n      return parser.test(/presto/i);\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Presto,\n      };\n\n      const version = Utils.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Gecko */\n  {\n    test(parser) {\n      const isGecko = parser.test(/gecko/i);\n      const likeGecko = parser.test(/like gecko/i);\n      return isGecko && !likeGecko;\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Gecko,\n      };\n\n      const version = Utils.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Blink */\n  {\n    test: [/(apple)?webkit\\/537\\.36/i],\n    describe() {\n      return {\n        name: ENGINE_MAP.Blink,\n      };\n    },\n  },\n\n  /* WebKit */\n  {\n    test: [/(apple)?webkit/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.WebKit,\n      };\n\n      const version = Utils.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n];\n", "import browserParsersList from './parser-browsers.js';\nimport osParsersList from './parser-os.js';\nimport platformParsersList from './parser-platforms.js';\nimport enginesParsersList from './parser-engines.js';\nimport Utils from './utils.js';\n\n/**\n * The main class that arranges the whole parsing process.\n */\nclass Parser {\n  /**\n   * Create instance of Parser\n   *\n   * @param {String} UA User-Agent string\n   * @param {Boolean} [skipParsing=false] parser can skip parsing in purpose of performance\n   * improvements if you need to make a more particular parsing\n   * like {@link Parser#parseBrowser} or {@link Parser#parsePlatform}\n   *\n   * @throw {Error} in case of empty UA String\n   *\n   * @constructor\n   */\n  constructor(UA, skipParsing = false) {\n    if (UA === void (0) || UA === null || UA === '') {\n      throw new Error(\"UserAgent parameter can't be empty\");\n    }\n\n    this._ua = UA;\n\n    /**\n     * @typedef ParsedResult\n     * @property {Object} browser\n     * @property {String|undefined} [browser.name]\n     * Browser name, like `\"Chrome\"` or `\"Internet Explorer\"`\n     * @property {String|undefined} [browser.version] Browser version as a String `\"12.01.45334.10\"`\n     * @property {Object} os\n     * @property {String|undefined} [os.name] OS name, like `\"Windows\"` or `\"macOS\"`\n     * @property {String|undefined} [os.version] OS version, like `\"NT 5.1\"` or `\"10.11.1\"`\n     * @property {String|undefined} [os.versionName] OS name, like `\"XP\"` or `\"High Sierra\"`\n     * @property {Object} platform\n     * @property {String|undefined} [platform.type]\n     * platform type, can be either `\"desktop\"`, `\"tablet\"` or `\"mobile\"`\n     * @property {String|undefined} [platform.vendor] Vendor of the device,\n     * like `\"Apple\"` or `\"Samsung\"`\n     * @property {String|undefined} [platform.model] Device model,\n     * like `\"iPhone\"` or `\"Kindle Fire HD 7\"`\n     * @property {Object} engine\n     * @property {String|undefined} [engine.name]\n     * Can be any of this: `WebKit`, `Blink`, `Gecko`, `Trident`, `Presto`, `EdgeHTML`\n     * @property {String|undefined} [engine.version] String version of the engine\n     */\n    this.parsedResult = {};\n\n    if (skipParsing !== true) {\n      this.parse();\n    }\n  }\n\n  /**\n   * Get UserAgent string of current Parser instance\n   * @return {String} User-Agent String of the current <Parser> object\n   *\n   * @public\n   */\n  getUA() {\n    return this._ua;\n  }\n\n  /**\n   * Test a UA string for a regexp\n   * @param {RegExp} regex\n   * @return {Boolean}\n   */\n  test(regex) {\n    return regex.test(this._ua);\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   */\n  parseBrowser() {\n    this.parsedResult.browser = {};\n\n    const browserDescriptor = Utils.find(browserParsersList, (_browser) => {\n      if (typeof _browser.test === 'function') {\n        return _browser.test(this);\n      }\n\n      if (_browser.test instanceof Array) {\n        return _browser.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (browserDescriptor) {\n      this.parsedResult.browser = browserDescriptor.describe(this.getUA());\n    }\n\n    return this.parsedResult.browser;\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   *\n   * @public\n   */\n  getBrowser() {\n    if (this.parsedResult.browser) {\n      return this.parsedResult.browser;\n    }\n\n    return this.parseBrowser();\n  }\n\n  /**\n   * Get browser's name\n   * @return {String} Browser's name or an empty string\n   *\n   * @public\n   */\n  getBrowserName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getBrowser().name).toLowerCase() || '';\n    }\n    return this.getBrowser().name || '';\n  }\n\n\n  /**\n   * Get browser's version\n   * @return {String} version of browser\n   *\n   * @public\n   */\n  getBrowserVersion() {\n    return this.getBrowser().version;\n  }\n\n  /**\n   * Get OS\n   * @return {Object}\n   *\n   * @example\n   * this.getOS();\n   * {\n   *   name: 'macOS',\n   *   version: '10.11.12'\n   * }\n   */\n  getOS() {\n    if (this.parsedResult.os) {\n      return this.parsedResult.os;\n    }\n\n    return this.parseOS();\n  }\n\n  /**\n   * Parse OS and save it to this.parsedResult.os\n   * @return {*|{}}\n   */\n  parseOS() {\n    this.parsedResult.os = {};\n\n    const os = Utils.find(osParsersList, (_os) => {\n      if (typeof _os.test === 'function') {\n        return _os.test(this);\n      }\n\n      if (_os.test instanceof Array) {\n        return _os.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (os) {\n      this.parsedResult.os = os.describe(this.getUA());\n    }\n\n    return this.parsedResult.os;\n  }\n\n  /**\n   * Get OS name\n   * @param {Boolean} [toLowerCase] return lower-cased value\n   * @return {String} name of the OS — macOS, Windows, Linux, etc.\n   */\n  getOSName(toLowerCase) {\n    const { name } = this.getOS();\n\n    if (toLowerCase) {\n      return String(name).toLowerCase() || '';\n    }\n\n    return name || '';\n  }\n\n  /**\n   * Get OS version\n   * @return {String} full version with dots ('10.11.12', '5.6', etc)\n   */\n  getOSVersion() {\n    return this.getOS().version;\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  getPlatform() {\n    if (this.parsedResult.platform) {\n      return this.parsedResult.platform;\n    }\n\n    return this.parsePlatform();\n  }\n\n  /**\n   * Get platform name\n   * @param {Boolean} [toLowerCase=false]\n   * @return {*}\n   */\n  getPlatformType(toLowerCase = false) {\n    const { type } = this.getPlatform();\n\n    if (toLowerCase) {\n      return String(type).toLowerCase() || '';\n    }\n\n    return type || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parsePlatform() {\n    this.parsedResult.platform = {};\n\n    const platform = Utils.find(platformParsersList, (_platform) => {\n      if (typeof _platform.test === 'function') {\n        return _platform.test(this);\n      }\n\n      if (_platform.test instanceof Array) {\n        return _platform.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (platform) {\n      this.parsedResult.platform = platform.describe(this.getUA());\n    }\n\n    return this.parsedResult.platform;\n  }\n\n  /**\n   * Get parsed engine\n   * @return {{}}\n   */\n  getEngine() {\n    if (this.parsedResult.engine) {\n      return this.parsedResult.engine;\n    }\n\n    return this.parseEngine();\n  }\n\n  /**\n   * Get engines's name\n   * @return {String} Engines's name or an empty string\n   *\n   * @public\n   */\n  getEngineName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getEngine().name).toLowerCase() || '';\n    }\n    return this.getEngine().name || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parseEngine() {\n    this.parsedResult.engine = {};\n\n    const engine = Utils.find(enginesParsersList, (_engine) => {\n      if (typeof _engine.test === 'function') {\n        return _engine.test(this);\n      }\n\n      if (_engine.test instanceof Array) {\n        return _engine.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (engine) {\n      this.parsedResult.engine = engine.describe(this.getUA());\n    }\n\n    return this.parsedResult.engine;\n  }\n\n  /**\n   * Parse full information about the browser\n   * @returns {Parser}\n   */\n  parse() {\n    this.parseBrowser();\n    this.parseOS();\n    this.parsePlatform();\n    this.parseEngine();\n\n    return this;\n  }\n\n  /**\n   * Get parsed result\n   * @return {ParsedResult}\n   */\n  getResult() {\n    return Utils.assign({}, this.parsedResult);\n  }\n\n  /**\n   * Check if parsed browser matches certain conditions\n   *\n   * @param {Object} checkTree It's one or two layered object,\n   * which can include a platform or an OS on the first layer\n   * and should have browsers specs on the bottom-laying layer\n   *\n   * @returns {Boolean|undefined} Whether the browser satisfies the set conditions or not.\n   * Returns `undefined` when the browser is no described in the checkTree object.\n   *\n   * @example\n   * const browser = Bowser.getParser(window.navigator.userAgent);\n   * if (browser.satisfies({chrome: '>118.01.1322' }))\n   * // or with os\n   * if (browser.satisfies({windows: { chrome: '>118.01.1322' } }))\n   * // or with platforms\n   * if (browser.satisfies({desktop: { chrome: '>118.01.1322' } }))\n   */\n  satisfies(checkTree) {\n    const platformsAndOSes = {};\n    let platformsAndOSCounter = 0;\n    const browsers = {};\n    let browsersCounter = 0;\n\n    const allDefinitions = Object.keys(checkTree);\n\n    allDefinitions.forEach((key) => {\n      const currentDefinition = checkTree[key];\n      if (typeof currentDefinition === 'string') {\n        browsers[key] = currentDefinition;\n        browsersCounter += 1;\n      } else if (typeof currentDefinition === 'object') {\n        platformsAndOSes[key] = currentDefinition;\n        platformsAndOSCounter += 1;\n      }\n    });\n\n    if (platformsAndOSCounter > 0) {\n      const platformsAndOSNames = Object.keys(platformsAndOSes);\n      const OSMatchingDefinition = Utils.find(platformsAndOSNames, name => (this.isOS(name)));\n\n      if (OSMatchingDefinition) {\n        const osResult = this.satisfies(platformsAndOSes[OSMatchingDefinition]);\n\n        if (osResult !== void 0) {\n          return osResult;\n        }\n      }\n\n      const platformMatchingDefinition = Utils.find(\n        platformsAndOSNames,\n        name => (this.isPlatform(name)),\n      );\n      if (platformMatchingDefinition) {\n        const platformResult = this.satisfies(platformsAndOSes[platformMatchingDefinition]);\n\n        if (platformResult !== void 0) {\n          return platformResult;\n        }\n      }\n    }\n\n    if (browsersCounter > 0) {\n      const browserNames = Object.keys(browsers);\n      const matchingDefinition = Utils.find(browserNames, name => (this.isBrowser(name, true)));\n\n      if (matchingDefinition !== void 0) {\n        return this.compareVersion(browsers[matchingDefinition]);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Check if the browser name equals the passed string\n   * @param browserName The string to compare with the browser name\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {boolean}\n   */\n  isBrowser(browserName, includingAlias = false) {\n    const defaultBrowserName = this.getBrowserName().toLowerCase();\n    let browserNameLower = browserName.toLowerCase();\n    const alias = Utils.getBrowserTypeByAlias(browserNameLower);\n\n    if (includingAlias && alias) {\n      browserNameLower = alias.toLowerCase();\n    }\n    return browserNameLower === defaultBrowserName;\n  }\n\n  compareVersion(version) {\n    let expectedResults = [0];\n    let comparableVersion = version;\n    let isLoose = false;\n\n    const currentBrowserVersion = this.getBrowserVersion();\n\n    if (typeof currentBrowserVersion !== 'string') {\n      return void 0;\n    }\n\n    if (version[0] === '>' || version[0] === '<') {\n      comparableVersion = version.substr(1);\n      if (version[1] === '=') {\n        isLoose = true;\n        comparableVersion = version.substr(2);\n      } else {\n        expectedResults = [];\n      }\n      if (version[0] === '>') {\n        expectedResults.push(1);\n      } else {\n        expectedResults.push(-1);\n      }\n    } else if (version[0] === '=') {\n      comparableVersion = version.substr(1);\n    } else if (version[0] === '~') {\n      isLoose = true;\n      comparableVersion = version.substr(1);\n    }\n\n    return expectedResults.indexOf(\n      Utils.compareVersions(currentBrowserVersion, comparableVersion, isLoose),\n    ) > -1;\n  }\n\n  isOS(osName) {\n    return this.getOSName(true) === String(osName).toLowerCase();\n  }\n\n  isPlatform(platformType) {\n    return this.getPlatformType(true) === String(platformType).toLowerCase();\n  }\n\n  isEngine(engineName) {\n    return this.getEngineName(true) === String(engineName).toLowerCase();\n  }\n\n  /**\n   * Is anything? Check if the browser is called \"anything\",\n   * the OS called \"anything\" or the platform called \"anything\"\n   * @param {String} anything\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {Boolean}\n   */\n  is(anything, includingAlias = false) {\n    return this.isBrowser(anything, includingAlias) || this.isOS(anything)\n      || this.isPlatform(anything);\n  }\n\n  /**\n   * Check if any of the given values satisfies this.is(anything)\n   * @param {String[]} anythings\n   * @returns {Boolean}\n   */\n  some(anythings = []) {\n    return anythings.some(anything => this.is(anything));\n  }\n}\n\nexport default Parser;\n", "/*!\n * Bowser - a browser detector\n * https://github.com/lancedikson/bowser\n * MIT License | (c) Dustin Diaz 2012-2015\n * MIT License | (c) Denis Demchenko 2015-2019\n */\nimport Parser from './parser.js';\nimport {\n  BROWSER_MAP,\n  ENGINE_MAP,\n  OS_MAP,\n  PLATFORMS_MAP,\n} from './constants.js';\n\n/**\n * Bowser class.\n * Keep it simple as much as it can be.\n * It's supposed to work with collections of {@link Parser} instances\n * rather then solve one-instance problems.\n * All the one-instance stuff is located in Parser class.\n *\n * @class\n * @classdesc Bowser is a static object, that provides an API to the Parsers\n * @hideconstructor\n */\nclass Bowser {\n  /**\n   * Creates a {@link Parser} instance\n   *\n   * @param {String} UA UserAgent string\n   * @param {Boolean} [skipParsing=false] Will make the Parser postpone parsing until you ask it\n   * explicitly. Same as `skipParsing` for {@link Parser}.\n   * @returns {Parser}\n   * @throws {Error} when UA is not a String\n   *\n   * @example\n   * const parser = Bowser.getParser(window.navigator.userAgent);\n   * const result = parser.getResult();\n   */\n  static getParser(UA, skipParsing = false) {\n    if (typeof UA !== 'string') {\n      throw new Error('UserAgent should be a string');\n    }\n    return new Parser(UA, skipParsing);\n  }\n\n  /**\n   * Creates a {@link Parser} instance and runs {@link Parser.getResult} immediately\n   *\n   * @param UA\n   * @return {ParsedResult}\n   *\n   * @example\n   * const result = Bowser.parse(window.navigator.userAgent);\n   */\n  static parse(UA) {\n    return (new Parser(UA)).getResult();\n  }\n\n  static get BROWSER_MAP() {\n    return BROWSER_MAP;\n  }\n\n  static get ENGINE_MAP() {\n    return ENGINE_MAP;\n  }\n\n  static get OS_MAP() {\n    return OS_MAP;\n  }\n\n  static get PLATFORMS_MAP() {\n    return PLATFORMS_MAP;\n  }\n}\n\nexport default Bowser;\n", "import Bowser from 'bowser';\nimport loglevel from 'loglevel';\n\n/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  if (obj && typeof obj.then === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ms = new Date().getTime();\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\nexport function are3PCSupported() {\n  if (typeof navigator === 'undefined') return false;\n  var browserInfo = Bowser.parse(navigator.userAgent);\n  log.info(JSON.stringify(browserInfo), 'current browser info');\n  var thirdPartyCookieSupport = true;\n  // brave\n  if (navigator.brave) {\n    thirdPartyCookieSupport = false;\n  }\n  // All webkit & gecko engine instances use itp (intelligent tracking prevention -\n  // https://webkit.org/tracking-prevention/#intelligent-tracking-prevention-itp)\n  if (browserInfo.engine.name === Bowser.ENGINE_MAP.WebKit || browserInfo.engine.name === Bowser.ENGINE_MAP.Gecko) {\n    thirdPartyCookieSupport = false;\n  }\n  return thirdPartyCookieSupport;\n}\nexport var log = loglevel.getLogger('broadcast-channel');\nlog.setLevel('error');\nexport var setLogLevel = function setLogLevel(level) {\n  log.setLevel(level);\n};", "import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed(options) {\n  /**\n   * in the electron-renderer, isNode will be true even if we are in browser-context\n   * so we also check if window is undefined\n   */\n  if (typeof window === 'undefined') return false;\n  if (!options.support3PC) return false;\n  if (typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else return false;\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "\n/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nexport class ObliviousSet<T = any> {\n    public readonly map = new Map();\n\n    /**\n     * Creating calls to setTimeout() is expensive,\n     * so we only do that if there is not timeout already open.\n     */\n    public _to: boolean = false;\n    constructor(\n        public readonly ttl: number\n    ) { }\n\n    has(value: T): boolean {\n        return this.map.has(value);\n    }\n\n    add(value: T): void {\n        this.map.set(value, now());\n\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(() => {\n                this._to = false;\n                removeTooOldValues(this);\n            }, 0);\n        }\n    }\n\n    clear() {\n        this.map.clear();\n    }\n}\n\n\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(\n    obliviousSet: ObliviousSet\n) {\n    const olderThen = now() - obliviousSet.ttl;\n    const iterator = obliviousSet.map[Symbol.iterator]();\n\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n\n        const next = iterator.next().value;\n\n        if (!next) {\n            return; // no more elements\n        }\n        const value = next[0];\n        const time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        } else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\n\nexport function now(): number {\n    return new Date().getTime();\n}\n\n\n", "import { are3PCSupported } from './util';\nexport function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n  if (typeof options.support3PC === 'undefined') options.support3PC = are3PCSupported();\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // server\n  if (!options.server) options.server = {};\n  if (!options.server.url) options.server.url = 'https://broadcast-server.tor.us';\n  if (!options.server.removeTimeout) options.server.removeTimeout = 1000 * 60 * 5; // 5 minutes\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n  return options;\n}", "/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n *\n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  var dbPromise = new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n  return dbPromise;\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(db, ids) {\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n          return;\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(db, ttl) {\n  return getOldMessages(db, ttl).then(function (tooOld) {\n    return removeMessagesById(db, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parrallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined some times\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState.db, channelState.options.idb.ttl);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed(options) {\n  if (!options.support3PC) return false;\n  var idb = getIdb();\n  if (!idb) return false;\n  return true;\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options';\nimport { sleep, randomToken, microSeconds as micro } from '../util';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n * writes the new message to the storage\n * and fires the storage-event so other readers can find it\n */\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed(options)) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed(options) {\n  if (!options.support3PC) return false;\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n", "import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n", "// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n", "import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n", "import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n", "/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n", "export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n", "import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n", "import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n}\n", "// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n", "// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n", "// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n", "// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n", "import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n", "import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n", "import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n", "import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling,\n};\n", "// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n", "import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n", "import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n", "import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n", "const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n", "import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n", "import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n", "export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n", "import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n", "/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n", "import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n", "import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n", "\"use strict\";\n\nvar EC = require(\"elliptic\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar browserCrypto = global.crypto || global.msCrypto || {};\nvar subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n\nvar nodeCrypto = require('crypto');\n\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex');\nconst ZERO32 = Buffer.alloc(32, 0);\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isValidPrivateKey(privateKey) {\n  if (!isScalar(privateKey))\n  {\n    return false;\n  }\n  return privateKey.compare(ZERO32) > 0 && // > 0\n  privateKey.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  var res = 0;\n  for (var i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i];  // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  if (typeof browserCrypto.getRandomValues === 'undefined') {\n    return Buffer.from(nodeCrypto.randomBytes(size));\n  } else {\n    browserCrypto.getRandomValues(arr);\n  }\n  return Buffer.from(arr);\n}\n\nfunction sha512(msg) {\n  return new Promise(function(resolve) {\n    var hash = nodeCrypto.createHash('sha512');\n    var result = hash.update(msg).digest();\n    resolve(new Uint8Array(result));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    return new Promise(function(resolve) {\n      if (subtle) {\n        var importAlgorithm = {name: \"AES-CBC\"};\n        var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n        return keyp.then(function(cryptoKey) {\n          var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n          return subtle[op](encAlgorithm, cryptoKey, data);\n        }).then(function(result) {\n          resolve(Buffer.from(new Uint8Array(result)));\n        });\n      } else {\n        if (op === 'encrypt') {\n          var cipher = nodeCrypto.createCipheriv('aes-256-cbc', key, iv);\n          let firstChunk = cipher.update(data);\n          let secondChunk = cipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n        else if (op === 'decrypt') {\n          var decipher = nodeCrypto.createDecipheriv('aes-256-cbc', key, iv);\n          let firstChunk = decipher.update(data);\n          let secondChunk = decipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n      }\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var result = hmac.digest();\n    resolve(result);\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var expectedSig = hmac.digest();\n    resolve(equalConstTime(expectedSig, sig));\n  });\n}\n\n/**\n  * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n  * depending on your browser.\n  * @return {Buffer} A 32-byte private key.\n  * @function\n  */\nexports.generatePrivate = function () {\n  var privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nvar getPublicCompressed = exports.getPublicCompressed = function(privateKey) { // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  let compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKey), \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(Buffer.from(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n    if (publicKey.length === 65)\n    {\n      assert(publicKey[0] === 4, \"Bad public key\");\n    }\n    if (publicKey.length === 33)\n    {\n      assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n    }\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\n\nvar deriveUnpadded = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n    assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n    if (publicKeyB.length === 65)\n    {\n      assert(publicKeyB[0] === 4, \"Bad public key\");\n    }\n    if (publicKeyB.length === 33)\n    {\n      assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n    }\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(Buffer.from(Px.toArray()));\n  });\n};\n\nvar derivePadded = exports.derivePadded = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n    assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n    if (publicKeyB.length === 65)\n    {\n      assert(publicKeyB[0] === 4, \"Bad public key\");\n    }\n    if (publicKeyB.length === 33)\n    {\n      assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n    }\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(Buffer.from(Px.toString(16, 64), 'hex'));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    // There is a very unlikely possibility that it is not a valid key\n    while(!isValidPrivateKey(ephemPrivateKey))\n    {\n      ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    }\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(deriveUnpadded(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nconst decrypt = function(privateKey, opts, padding = false) {\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  const derive = padding ? derivePadded : deriveUnpadded;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    if (!macGood && padding === false) {\n      return decrypt(privateKey, opts, true);\n    } else if (!macGood && padding === true) {\n      throw new Error(\"bad MAC after trying padded\");\n    }\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext).then(function(msg) {\n      return Buffer.from(new Uint8Array(msg));\n    });\n  })\n};\n\nexports.decrypt = decrypt;\n\n", null, "'use strict';\n\nvar at; // The index of the current character\nvar ch; // The current character\nvar escapee = {\n\t'\"': '\"',\n\t'\\\\': '\\\\',\n\t'/': '/',\n\tb: '\\b',\n\tf: '\\f',\n\tn: '\\n',\n\tr: '\\r',\n\tt: '\\t'\n};\nvar text;\n\n// Call error when something is wrong.\nfunction error(m) {\n\tthrow {\n\t\tname: 'SyntaxError',\n\t\tmessage: m,\n\t\tat: at,\n\t\ttext: text\n\t};\n}\n\nfunction next(c) {\n\t// If a c parameter is provided, verify that it matches the current character.\n\tif (c && c !== ch) {\n\t\terror(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n\t}\n\n\t// Get the next character. When there are no more characters, return the empty string.\n\n\tch = text.charAt(at);\n\tat += 1;\n\treturn ch;\n}\n\nfunction number() {\n\t// Parse a number value.\n\tvar num;\n\tvar str = '';\n\n\tif (ch === '-') {\n\t\tstr = '-';\n\t\tnext('-');\n\t}\n\twhile (ch >= '0' && ch <= '9') {\n\t\tstr += ch;\n\t\tnext();\n\t}\n\tif (ch === '.') {\n\t\tstr += '.';\n\t\twhile (next() && ch >= '0' && ch <= '9') {\n\t\t\tstr += ch;\n\t\t}\n\t}\n\tif (ch === 'e' || ch === 'E') {\n\t\tstr += ch;\n\t\tnext();\n\t\tif (ch === '-' || ch === '+') {\n\t\t\tstr += ch;\n\t\t\tnext();\n\t\t}\n\t\twhile (ch >= '0' && ch <= '9') {\n\t\t\tstr += ch;\n\t\t\tnext();\n\t\t}\n\t}\n\tnum = Number(str);\n\tif (!isFinite(num)) {\n\t\terror('Bad number');\n\t}\n\treturn num;\n}\n\nfunction string() {\n\t// Parse a string value.\n\tvar hex;\n\tvar i;\n\tvar str = '';\n\tvar uffff;\n\n\t// When parsing for string values, we must look for \" and \\ characters.\n\tif (ch === '\"') {\n\t\twhile (next()) {\n\t\t\tif (ch === '\"') {\n\t\t\t\tnext();\n\t\t\t\treturn str;\n\t\t\t} else if (ch === '\\\\') {\n\t\t\t\tnext();\n\t\t\t\tif (ch === 'u') {\n\t\t\t\t\tuffff = 0;\n\t\t\t\t\tfor (i = 0; i < 4; i += 1) {\n\t\t\t\t\t\thex = parseInt(next(), 16);\n\t\t\t\t\t\tif (!isFinite(hex)) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuffff = (uffff * 16) + hex;\n\t\t\t\t\t}\n\t\t\t\t\tstr += String.fromCharCode(uffff);\n\t\t\t\t} else if (typeof escapee[ch] === 'string') {\n\t\t\t\t\tstr += escapee[ch];\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tstr += ch;\n\t\t\t}\n\t\t}\n\t}\n\terror('Bad string');\n}\n\n// Skip whitespace.\nfunction white() {\n\twhile (ch && ch <= ' ') {\n\t\tnext();\n\t}\n}\n\n// true, false, or null.\nfunction word() {\n\tswitch (ch) {\n\t\tcase 't':\n\t\t\tnext('t');\n\t\t\tnext('r');\n\t\t\tnext('u');\n\t\t\tnext('e');\n\t\t\treturn true;\n\t\tcase 'f':\n\t\t\tnext('f');\n\t\t\tnext('a');\n\t\t\tnext('l');\n\t\t\tnext('s');\n\t\t\tnext('e');\n\t\t\treturn false;\n\t\tcase 'n':\n\t\t\tnext('n');\n\t\t\tnext('u');\n\t\t\tnext('l');\n\t\t\tnext('l');\n\t\t\treturn null;\n\t\tdefault:\n\t\t\terror(\"Unexpected '\" + ch + \"'\");\n\t}\n}\n\n// Parse an array value.\nfunction array() {\n\tvar arr = [];\n\n\tif (ch === '[') {\n\t\tnext('[');\n\t\twhite();\n\t\tif (ch === ']') {\n\t\t\tnext(']');\n\t\t\treturn arr; // empty array\n\t\t}\n\t\twhile (ch) {\n\t\t\tarr.push(value()); // eslint-disable-line no-use-before-define\n\t\t\twhite();\n\t\t\tif (ch === ']') {\n\t\t\t\tnext(']');\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tnext(',');\n\t\t\twhite();\n\t\t}\n\t}\n\terror('Bad array');\n}\n\n// Parse an object value.\nfunction object() {\n\tvar key;\n\tvar obj = {};\n\n\tif (ch === '{') {\n\t\tnext('{');\n\t\twhite();\n\t\tif (ch === '}') {\n\t\t\tnext('}');\n\t\t\treturn obj; // empty object\n\t\t}\n\t\twhile (ch) {\n\t\t\tkey = string();\n\t\t\twhite();\n\t\t\tnext(':');\n\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\terror('Duplicate key \"' + key + '\"');\n\t\t\t}\n\t\t\tobj[key] = value(); // eslint-disable-line no-use-before-define\n\t\t\twhite();\n\t\t\tif (ch === '}') {\n\t\t\t\tnext('}');\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t\tnext(',');\n\t\t\twhite();\n\t\t}\n\t}\n\terror('Bad object');\n}\n\n// Parse a JSON value. It could be an object, an array, a string, a number, or a word.\nfunction value() {\n\twhite();\n\tswitch (ch) {\n\t\tcase '{':\n\t\t\treturn object();\n\t\tcase '[':\n\t\t\treturn array();\n\t\tcase '\"':\n\t\t\treturn string();\n\t\tcase '-':\n\t\t\treturn number();\n\t\tdefault:\n\t\t\treturn ch >= '0' && ch <= '9' ? number() : word();\n\t}\n}\n\n// Return the json_parse function. It will have access to all of the above functions and variables.\nmodule.exports = function (source, reviver) {\n\tvar result;\n\n\ttext = source;\n\tat = 0;\n\tch = ' ';\n\tresult = value();\n\twhite();\n\tif (ch) {\n\t\terror('Syntax error');\n\t}\n\n\t// If there is a reviver function, we recursively walk the new structure,\n\t// passing each name/value pair to the reviver function for possible\n\t// transformation, starting with a temporary root object that holds the result\n\t// in an empty key. If there is not a reviver function, we simply return the\n\t// result.\n\n\treturn typeof reviver === 'function' ? (function walk(holder, key) {\n\t\tvar k;\n\t\tvar v;\n\t\tvar val = holder[key];\n\t\tif (val && typeof val === 'object') {\n\t\t\tfor (k in value) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(val, k)) {\n\t\t\t\t\tv = walk(val, k);\n\t\t\t\t\tif (typeof v === 'undefined') {\n\t\t\t\t\t\tdelete val[k];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tval[k] = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn reviver.call(holder, key, val);\n\t}({ '': result }, '')) : result;\n};\n", "'use strict';\n\nvar escapable = /[\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g;\nvar gap;\nvar indent;\nvar meta = { // table of character substitutions\n\t'\\b': '\\\\b',\n\t'\\t': '\\\\t',\n\t'\\n': '\\\\n',\n\t'\\f': '\\\\f',\n\t'\\r': '\\\\r',\n\t'\"': '\\\\\"',\n\t'\\\\': '\\\\\\\\'\n};\nvar rep;\n\nfunction quote(string) {\n\t// If the string contains no control characters, no quote characters, and no\n\t// backslash characters, then we can safely slap some quotes around it.\n\t// Otherwise we must also replace the offending characters with safe escape sequences.\n\n\tescapable.lastIndex = 0;\n\treturn escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n\t\tvar c = meta[a];\n\t\treturn typeof c === 'string' ? c\n\t\t\t: '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n\t}) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n\t// Produce a string from holder[key].\n\tvar i; // The loop counter.\n\tvar k; // The member key.\n\tvar v; // The member value.\n\tvar length;\n\tvar mind = gap;\n\tvar partial;\n\tvar value = holder[key];\n\n\t// If the value has a toJSON method, call it to obtain a replacement value.\n\tif (value && typeof value === 'object' && typeof value.toJSON === 'function') {\n\t\tvalue = value.toJSON(key);\n\t}\n\n\t// If we were called with a replacer function, then call the replacer to obtain a replacement value.\n\tif (typeof rep === 'function') {\n\t\tvalue = rep.call(holder, key, value);\n\t}\n\n\t// What happens next depends on the value's type.\n\tswitch (typeof value) {\n\t\tcase 'string':\n\t\t\treturn quote(value);\n\n\t\tcase 'number':\n\t\t\t// JSON numbers must be finite. Encode non-finite numbers as null.\n\t\t\treturn isFinite(value) ? String(value) : 'null';\n\n\t\tcase 'boolean':\n\t\tcase 'null':\n\t\t\t// If the value is a boolean or null, convert it to a string. Note:\n\t\t\t// typeof null does not produce 'null'. The case is included here in\n\t\t\t// the remote chance that this gets fixed someday.\n\t\t\treturn String(value);\n\n\t\tcase 'object':\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t}\n\t\t\tgap += indent;\n\t\t\tpartial = [];\n\n\t\t\t// Array.isArray\n\t\t\tif (Object.prototype.toString.apply(value) === '[object Array]') {\n\t\t\t\tlength = value.length;\n\t\t\t\tfor (i = 0; i < length; i += 1) {\n\t\t\t\t\tpartial[i] = str(i, value) || 'null';\n\t\t\t\t}\n\n\t\t\t\t// Join all of the elements together, separated with commas, and wrap them in brackets.\n\t\t\t\tv = partial.length === 0 ? '[]' : gap\n\t\t\t\t\t? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n\t\t\t\t\t: '[' + partial.join(',') + ']';\n\t\t\t\tgap = mind;\n\t\t\t\treturn v;\n\t\t\t}\n\n\t\t\t// If the replacer is an array, use it to select the members to be stringified.\n\t\t\tif (rep && typeof rep === 'object') {\n\t\t\t\tlength = rep.length;\n\t\t\t\tfor (i = 0; i < length; i += 1) {\n\t\t\t\t\tk = rep[i];\n\t\t\t\t\tif (typeof k === 'string') {\n\t\t\t\t\t\tv = str(k, value);\n\t\t\t\t\t\tif (v) {\n\t\t\t\t\t\t\tpartial.push(quote(k) + (gap ? ': ' : ':') + v);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Otherwise, iterate through all of the keys in the object.\n\t\t\t\tfor (k in value) {\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(value, k)) {\n\t\t\t\t\t\tv = str(k, value);\n\t\t\t\t\t\tif (v) {\n\t\t\t\t\t\t\tpartial.push(quote(k) + (gap ? ': ' : ':') + v);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Join all of the member texts together, separated with commas, and wrap them in braces.\n\n\t\t\tv = partial.length === 0 ? '{}' : gap\n\t\t\t\t? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n\t\t\t\t: '{' + partial.join(',') + '}';\n\t\t\tgap = mind;\n\t\t\treturn v;\n\t\tdefault:\n\t}\n}\n\nmodule.exports = function (value, replacer, space) {\n\tvar i;\n\tgap = '';\n\tindent = '';\n\n\t// If the space parameter is a number, make an indent string containing that many spaces.\n\tif (typeof space === 'number') {\n\t\tfor (i = 0; i < space; i += 1) {\n\t\t\tindent += ' ';\n\t\t}\n\t} else if (typeof space === 'string') {\n\t\t// If the space parameter is a string, it will be used as the indent string.\n\t\tindent = space;\n\t}\n\n\t// If there is a replacer, it must be a function or an array. Otherwise, throw an error.\n\trep = replacer;\n\tif (\n\t\treplacer\n\t\t&& typeof replacer !== 'function'\n\t\t&& (typeof replacer !== 'object' || typeof replacer.length !== 'number')\n\t) {\n\t\tthrow new Error('JSON.stringify');\n\t}\n\n\t// Make a fake root object containing our value under the key of ''.\n\t// Return the result of stringifying the value.\n\treturn str('', { '': value });\n};\n", "'use strict';\n\nexports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n", "'use strict';\n\nvar json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nvar isArray = Array.isArray || function (x) {\n\treturn {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n\tvar has = Object.prototype.hasOwnProperty || function () { return true; };\n\tvar keys = [];\n\tfor (var key in obj) {\n\t\tif (has.call(obj, key)) { keys.push(key); }\n\t}\n\treturn keys;\n};\n\nmodule.exports = function (obj, opts) {\n\tif (!opts) { opts = {}; }\n\tif (typeof opts === 'function') { opts = { cmp: opts }; }\n\tvar space = opts.space || '';\n\tif (typeof space === 'number') { space = Array(space + 1).join(' '); }\n\tvar cycles = typeof opts.cycles === 'boolean' ? opts.cycles : false;\n\tvar replacer = opts.replacer || function (key, value) { return value; };\n\n\tvar cmp = opts.cmp && (function (f) {\n\t\treturn function (node) {\n\t\t\treturn function (a, b) {\n\t\t\t\tvar aobj = { key: a, value: node[a] };\n\t\t\t\tvar bobj = { key: b, value: node[b] };\n\t\t\t\treturn f(aobj, bobj);\n\t\t\t};\n\t\t};\n\t}(opts.cmp));\n\n\tvar seen = [];\n\treturn (function stringify(parent, key, node, level) {\n\t\tvar indent = space ? '\\n' + new Array(level + 1).join(space) : '';\n\t\tvar colonSeparator = space ? ': ' : ':';\n\n\t\tif (node && node.toJSON && typeof node.toJSON === 'function') {\n\t\t\tnode = node.toJSON();\n\t\t}\n\n\t\tnode = replacer.call(parent, key, node);\n\n\t\tif (node === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tif (typeof node !== 'object' || node === null) {\n\t\t\treturn json.stringify(node);\n\t\t}\n\t\tif (isArray(node)) {\n\t\t\tvar out = [];\n\t\t\tfor (var i = 0; i < node.length; i++) {\n\t\t\t\tvar item = stringify(node, i, node[i], level + 1) || json.stringify(null);\n\t\t\t\tout.push(indent + space + item);\n\t\t\t}\n\t\t\treturn '[' + out.join(',') + indent + ']';\n\t\t}\n\n\t\tif (seen.indexOf(node) !== -1) {\n\t\t\tif (cycles) { return json.stringify('__cycle__'); }\n\t\t\tthrow new TypeError('Converting circular structure to JSON');\n\t\t} else { seen.push(node); }\n\n\t\tvar keys = objectKeys(node).sort(cmp && cmp(node));\n\t\tvar out = [];\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar key = keys[i];\n\t\t\tvar value = stringify(node, key, node[key], level + 1);\n\n\t\t\tif (!value) { continue; }\n\n\t\t\tvar keyValue = json.stringify(key)\n\t\t\t\t\t+ colonSeparator\n\t\t\t\t\t+ value;\n\n\t\t\tout.push(indent + space + keyValue);\n\t\t}\n\t\tseen.splice(seen.indexOf(node), 1);\n\t\treturn '{' + out.join(',') + indent + '}';\n\n\t}({ '': obj }, '', obj, 0));\n};\n", "\"use strict\";\n\nvar EC = require(\"elliptic\").ec;\n\nvar ec = new EC(\"secp256k1\");\nvar browserCrypto = global.crypto || global.msCrypto || {};\nvar subtle = browserCrypto.subtle || browserCrypto.webkitSubtle;\n\nvar nodeCrypto = require('crypto');\n\nconst EC_GROUP_ORDER = Buffer.from('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 'hex');\nconst ZERO32 = Buffer.alloc(32, 0);\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message || \"Assertion failed\");\n  }\n}\n\nfunction isScalar (x) {\n  return Buffer.isBuffer(x) && x.length === 32;\n}\n\nfunction isValidPrivateKey(privateKey) {\n  if (!isScalar(privateKey))\n  {\n    return false;\n  }\n  return privateKey.compare(ZERO32) > 0 && // > 0\n  privateKey.compare(EC_GROUP_ORDER) < 0; // < G\n}\n\n// Compare two buffers in constant time to prevent timing attacks.\nfunction equalConstTime(b1, b2) {\n  if (b1.length !== b2.length) {\n    return false;\n  }\n  var res = 0;\n  for (var i = 0; i < b1.length; i++) {\n    res |= b1[i] ^ b2[i];  // jshint ignore:line\n  }\n  return res === 0;\n}\n\n/* This must check if we're in the browser or\nnot, since the functions are different and does\nnot convert using browserify */\nfunction randomBytes(size) {\n  var arr = new Uint8Array(size);\n  if (typeof browserCrypto.getRandomValues === 'undefined') {\n    return Buffer.from(nodeCrypto.randomBytes(size));\n  } else {\n    browserCrypto.getRandomValues(arr);\n  }\n  return Buffer.from(arr);\n}\n\nfunction sha512(msg) {\n  return new Promise(function(resolve) {\n    var hash = nodeCrypto.createHash('sha512');\n    var result = hash.update(msg).digest();\n    resolve(new Uint8Array(result));\n  });\n}\n\nfunction getAes(op) {\n  return function(iv, key, data) {\n    return new Promise(function(resolve) {\n      if (subtle) {\n        var importAlgorithm = {name: \"AES-CBC\"};\n        var keyp = subtle.importKey(\"raw\", key, importAlgorithm, false, [op]);\n        return keyp.then(function(cryptoKey) {\n          var encAlgorithm = {name: \"AES-CBC\", iv: iv};\n          return subtle[op](encAlgorithm, cryptoKey, data);\n        }).then(function(result) {\n          resolve(Buffer.from(new Uint8Array(result)));\n        });\n      } else {\n        if (op === 'encrypt') {\n          var cipher = nodeCrypto.createCipheriv('aes-256-cbc', key, iv);\n          let firstChunk = cipher.update(data);\n          let secondChunk = cipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n        else if (op === 'decrypt') {\n          var decipher = nodeCrypto.createDecipheriv('aes-256-cbc', key, iv);\n          let firstChunk = decipher.update(data);\n          let secondChunk = decipher.final();\n          resolve(Buffer.concat([firstChunk, secondChunk]));\n        }\n      }\n    });\n  };\n}\n\nvar aesCbcEncrypt = getAes(\"encrypt\");\nvar aesCbcDecrypt = getAes(\"decrypt\");\n\nfunction hmacSha256Sign(key, msg) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var result = hmac.digest();\n    resolve(result);\n  });\n}\n\nfunction hmacSha256Verify(key, msg, sig) {\n  return new Promise(function(resolve) {\n    var hmac = nodeCrypto.createHmac('sha256', Buffer.from(key));\n    hmac.update(msg);\n    var expectedSig = hmac.digest();\n    resolve(equalConstTime(expectedSig, sig));\n  });\n}\n\n/**\n  * Generate a new valid private key. Will use the window.crypto or window.msCrypto as source\n  * depending on your browser.\n  * @return {Buffer} A 32-byte private key.\n  * @function\n  */\nexports.generatePrivate = function () {\n  var privateKey = randomBytes(32);\n  while (!isValidPrivateKey(privateKey)) {\n    privateKey = randomBytes(32);\n  }\n  return privateKey;\n};\n\nvar getPublic = exports.getPublic = function(privateKey) {\n  // This function has sync API so we throw an error immediately.\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // XXX(Kagami): `elliptic.utils.encode` returns array for every\n  // encoding except `hex`.\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(\"arr\"));\n};\n\n/**\n * Get compressed version of public key.\n */\nvar getPublicCompressed = exports.getPublicCompressed = function(privateKey) { // jshint ignore:line\n  assert(privateKey.length === 32, \"Bad private key\");\n  assert(isValidPrivateKey(privateKey), \"Bad private key\");\n  // See https://github.com/wanderer/secp256k1-node/issues/46\n  let compressed = true;\n  return Buffer.from(ec.keyFromPrivate(privateKey).getPublic(compressed, \"arr\"));\n};\n\n// NOTE(Kagami): We don't use promise shim in Browser implementation\n// because it's supported natively in new browsers (see\n// <http://caniuse.com/#feat=promises>) and we can use only new browsers\n// because of the WebCryptoAPI (see\n// <http://caniuse.com/#feat=cryptography>).\nexports.sign = function(privateKey, msg) {\n  return new Promise(function(resolve) {\n    assert(privateKey.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKey), \"Bad private key\");\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    resolve(Buffer.from(ec.sign(msg, privateKey, {canonical: true}).toDER()));\n  });\n};\n\nexports.verify = function(publicKey, msg, sig) {\n  return new Promise(function(resolve, reject) {\n    assert(publicKey.length === 65 || publicKey.length === 33, \"Bad public key\");\n    if (publicKey.length === 65)\n    {\n      assert(publicKey[0] === 4, \"Bad public key\");\n    }\n    if (publicKey.length === 33)\n    {\n      assert(publicKey[0] === 2 || publicKey[0] === 3, \"Bad public key\");\n    }\n    assert(msg.length > 0, \"Message should not be empty\");\n    assert(msg.length <= 32, \"Message is too long\");\n    if (ec.verify(msg, sig, publicKey)) {\n      resolve(null);\n    } else {\n      reject(new Error(\"Bad signature\"));\n    }\n  });\n};\n\n\nvar deriveUnpadded = exports.derive = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n    assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n    if (publicKeyB.length === 65)\n    {\n      assert(publicKeyB[0] === 4, \"Bad public key\");\n    }\n    if (publicKeyB.length === 33)\n    {\n      assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n    }\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(Buffer.from(Px.toArray()));\n  });\n};\n\nvar derivePadded = exports.derivePadded = function(privateKeyA, publicKeyB) {\n  return new Promise(function(resolve) {\n    assert(Buffer.isBuffer(privateKeyA), \"Bad private key\");\n    assert(Buffer.isBuffer(publicKeyB), \"Bad public key\");\n    assert(privateKeyA.length === 32, \"Bad private key\");\n    assert(isValidPrivateKey(privateKeyA), \"Bad private key\");\n    assert(publicKeyB.length === 65 || publicKeyB.length === 33, \"Bad public key\");\n    if (publicKeyB.length === 65)\n    {\n      assert(publicKeyB[0] === 4, \"Bad public key\");\n    }\n    if (publicKeyB.length === 33)\n    {\n      assert(publicKeyB[0] === 2 || publicKeyB[0] === 3, \"Bad public key\");\n    }\n    var keyA = ec.keyFromPrivate(privateKeyA);\n    var keyB = ec.keyFromPublic(publicKeyB);\n    var Px = keyA.derive(keyB.getPublic());  // BN instance\n    resolve(Buffer.from(Px.toString(16, 64), 'hex'));\n  });\n};\n\nexports.encrypt = function(publicKeyTo, msg, opts) {\n  opts = opts || {};\n  // Tmp variables to save context from flat promises;\n  var iv, ephemPublicKey, ciphertext, macKey;\n  return new Promise(function(resolve) {\n    var ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    // There is a very unlikely possibility that it is not a valid key\n    while(!isValidPrivateKey(ephemPrivateKey))\n    {\n      ephemPrivateKey = opts.ephemPrivateKey || randomBytes(32);\n    }\n    ephemPublicKey = getPublic(ephemPrivateKey);\n    resolve(deriveUnpadded(ephemPrivateKey, publicKeyTo));\n  }).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    iv = opts.iv || randomBytes(16);\n    var encryptionKey = hash.slice(0, 32);\n    macKey = hash.slice(32);\n    return aesCbcEncrypt(iv, encryptionKey, msg);\n  }).then(function(data) {\n    ciphertext = data;\n    var dataToMac = Buffer.concat([iv, ephemPublicKey, ciphertext]);\n    return hmacSha256Sign(macKey, dataToMac);\n  }).then(function(mac) {\n    return {\n      iv: iv,\n      ephemPublicKey: ephemPublicKey,\n      ciphertext: ciphertext,\n      mac: mac,\n    };\n  });\n};\n\nconst decrypt = function(privateKey, opts, padding = false) {\n  // Tmp variable to save context from flat promises;\n  var encryptionKey;\n  const derive = padding ? derivePadded : deriveUnpadded;\n  return derive(privateKey, opts.ephemPublicKey).then(function(Px) {\n    return sha512(Px);\n  }).then(function(hash) {\n    encryptionKey = hash.slice(0, 32);\n    var macKey = hash.slice(32);\n    var dataToMac = Buffer.concat([\n      opts.iv,\n      opts.ephemPublicKey,\n      opts.ciphertext\n    ]);\n    return hmacSha256Verify(macKey, dataToMac, opts.mac);\n  }).then(function(macGood) {\n    if (!macGood && padding === false) {\n      return decrypt(privateKey, opts, true);\n    } else if (!macGood && padding === true) {\n      throw new Error(\"bad MAC after trying padded\");\n    }\n    return aesCbcDecrypt(opts.iv, encryptionKey, opts.ciphertext).then(function(msg) {\n      return Buffer.from(new Uint8Array(msg));\n    });\n  })\n};\n\nexports.decrypt = decrypt;\n\n", null, null, null, "import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside of webworkers because they have no access to locastorage\n * This is basically implemented to support IE9 or your grandmothers toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { io } from 'socket.io-client';\nimport { getPublic, sign } from '@toruslabs/eccrypto';\nimport { encryptData, decryptData } from '@toruslabs/metadata-helpers';\nimport createKeccakHash from 'keccak';\nimport { log } from '../util';\nimport { fillOptionsWithDefaults } from '../options';\nimport { sleep, randomToken, microSeconds as micro } from '../util';\nexport var microSeconds = micro;\n\n// PASS IN STRING/BUFFER TO GET BUFFER\nexport function keccak256(a) {\n  return createKeccakHash('keccak256').update(a).digest();\n}\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'server';\nvar SOCKET_CONN_INSTANCE = null;\n// used to decide to reconnect socket e.g. when socket connection is disconnected unexpectedly\nvar runningChannels = new Set();\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n * writes the new message to the storage\n * and fires the storage-event so other readers can find it\n */\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res, rej) {\n    sleep().then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var key, channelEncPrivKey, encData, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            key = storageKey(channelState.channelName);\n            channelEncPrivKey = keccak256(key);\n            _context.next = 4;\n            return encryptData(channelEncPrivKey.toString('hex'), {\n              token: randomToken(),\n              time: new Date().getTime(),\n              data: messageJson,\n              uuid: channelState.uuid\n            });\n          case 4:\n            encData = _context.sent;\n            _context.t0 = getPublic(channelEncPrivKey).toString('hex');\n            _context.t1 = encData;\n            _context.next = 9;\n            return sign(channelEncPrivKey, keccak256(encData));\n          case 9:\n            _context.t2 = _context.sent.toString('hex');\n            body = {\n              key: _context.t0,\n              data: _context.t1,\n              signature: _context.t2\n            };\n            if (channelState.timeout) body.timeout = channelState.timeout;\n            return _context.abrupt(\"return\", fetch(channelState.serverUrl + '/channel/set', {\n              method: 'POST',\n              body: JSON.stringify(body),\n              headers: {\n                'Content-Type': 'application/json; charset=utf-8'\n              }\n            }).then(res)[\"catch\"](rej));\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    })));\n  });\n}\nexport function getSocketInstance(serverUrl) {\n  if (SOCKET_CONN_INSTANCE) {\n    return SOCKET_CONN_INSTANCE;\n  }\n  var SOCKET_CONN = io(serverUrl, {\n    transports: ['websocket', 'polling'],\n    // use WebSocket first, if available\n    withCredentials: true,\n    reconnectionDelayMax: 10000,\n    reconnectionAttempts: 10\n  });\n  SOCKET_CONN.on('connect_error', function (err) {\n    // revert to classic upgrade\n    SOCKET_CONN.io.opts.transports = ['polling', 'websocket'];\n    log.error('connect error', err);\n  });\n  SOCKET_CONN.on('connect', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var engine;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          engine = SOCKET_CONN.io.engine;\n          log.debug('initially connected to', engine.transport.name); // in most cases, prints \"polling\"\n          engine.once('upgrade', function () {\n            // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n            log.debug('upgraded', engine.transport.name); // in most cases, prints \"websocket\"\n          });\n\n          engine.once('close', function (reason) {\n            // called when the underlying connection is closed\n            log.debug('connection closed', reason);\n          });\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  })));\n  SOCKET_CONN.on('error', function (err) {\n    log.error('socket errored', err);\n    SOCKET_CONN.disconnect();\n  });\n  SOCKET_CONN_INSTANCE = SOCKET_CONN;\n  return SOCKET_CONN;\n}\nexport function setupSocketConnection(serverUrl, channelName, fn) {\n  var socketConn = getSocketInstance(serverUrl);\n  var key = storageKey(channelName);\n  var channelEncPrivKey = keccak256(key);\n  var channelPubKey = getPublic(channelEncPrivKey).toString('hex');\n  if (socketConn.connected) {\n    socketConn.emit('check_auth_status', channelPubKey);\n  } else {\n    socketConn.once('connect', function () {\n      log.debug('connected with socket');\n      socketConn.emit('check_auth_status', channelPubKey);\n    });\n  }\n  var reconnect = function reconnect() {\n    socketConn.once('connect', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            socketConn.emit('check_auth_status', channelPubKey);\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    })));\n  };\n  var visibilityListener = function visibilityListener() {\n    // if channel is closed, then remove the listener.\n    if (!socketConn) {\n      document.removeEventListener('visibilitychange', visibilityListener);\n      return;\n    }\n    // if not connected, then wait for connection and ping server for latest msg.\n    if (!socketConn.connected && document.visibilityState === 'visible') {\n      reconnect();\n    }\n  };\n  var listener = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(ev) {\n      var decData;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.prev = 0;\n            _context4.next = 3;\n            return decryptData(channelEncPrivKey.toString('hex'), ev);\n          case 3:\n            decData = _context4.sent;\n            log.info(decData);\n            fn(decData);\n            _context4.next = 11;\n            break;\n          case 8:\n            _context4.prev = 8;\n            _context4.t0 = _context4[\"catch\"](0);\n            log.error(_context4.t0);\n          case 11:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[0, 8]]);\n    }));\n    return function listener(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  socketConn.on('disconnect', function () {\n    log.debug('socket disconnected');\n    if (runningChannels.has(channelName)) {\n      log.error('socket disconnected unexpectedly, reconnecting socket');\n      reconnect();\n    }\n  });\n  socketConn.on(channelPubKey + \"_success\", listener);\n  if (typeof document !== 'undefined') document.addEventListener('visibilitychange', visibilityListener);\n  return socketConn;\n}\nexport function removeStorageEventListener() {\n  if (SOCKET_CONN_INSTANCE) {\n    SOCKET_CONN_INSTANCE.disconnect();\n  }\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed(options)) {\n    throw new Error('BroadcastChannel: server cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.server.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs,\n    // emittedMessagesIds\n    serverUrl: options.server.url\n  };\n  if (options.server.timeout) state.timeout = options.server.timeout;\n  setupSocketConnection(options.server.url, channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === state.uuid) return; // own message\n    if (!msgObj.token || state.eMIs.has(msgObj.token)) return; // already emitted\n    // if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    state.eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  runningChannels.add(channelName);\n  return state;\n}\nexport function close(channelState) {\n  runningChannels[\"delete\"](channelState.channelName);\n  // give 2 sec for all msgs which are in transit to be consumed\n  // by receiver.\n  // window.setTimeout(() => {\n  //     removeStorageEventListener(channelState);\n  //     SOCKET_CONN_INSTANCE = null;\n  // }, 1000);\n}\n\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 500;\n  // TODO: Maybe increase it based on operation\n  return defaultTime;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "import { microSeconds as micro } from '../util';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return 5;\n}\nexport default {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "import NativeMethod from './methods/native.js';\nimport IndexeDbMethod from './methods/indexed-db.js';\nimport LocalstorageMethod from './methods/localstorage.js';\nimport ServerMethod from './methods/server.js';\nimport SimulateMethod from './methods/simulate.js';\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexeDbMethod, LocalstorageMethod, ServerMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage is been chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed(options);\n  });\n  if (!useMethod) throw new Error(\"No useable method found in \" + JSON.stringify(METHODS.map(function (m) {\n    return m.type;\n  })));else return useMethod;\n}", "import { isPromise, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsend message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was realy hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsend messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        /**\n         * Getting the current time in JavaScript has no good precision.\n         * So instead of only listening to events that happend 'after' the listener\n         * was added, we also listen to events that happended 100ms before it.\n         * This ensures that when another process, like a WebWorker, sends events\n         * we do not miss them out because their timestamp is a bit off compared to the main process.\n         * Not doing this would make messages missing when we send data directly after subscribing and awaiting a response.\n         * @link https://johnresig.com/blog/accuracy-of-javascript-time/\n         */\n        var hundredMsInMicro = 100 * 1000;\n        var minMessageTime = listenerObject.time - hundredMsInMicro;\n        if (msgObj.time >= minMessageTime) {\n          listenerObject.fn(msgObj.data);\n        } else if (channel.method.type === 'server') {\n          // server msg might lag based on connection.\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // noone is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}", "export { BroadcastChannel, enforceOptions, OPEN_BROADCAST_CHANNELS } from './broadcast-channel';", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,mBAAmB,KAAK,SAAS,QAAQ,OAAO,QAAQ,KAAK,KAAK;AACzE,MAAI;AACF,QAAI,OAAO,IAAI,GAAG,EAAE,GAAG;AACvB,QAAIA,SAAQ,KAAK;AAAA,EACnB,SAAS,OAAP;AACA,WAAO,KAAK;AACZ;AAAA,EACF;AACA,MAAI,KAAK,MAAM;AACb,YAAQA,MAAK;AAAA,EACf,OAAO;AACL,YAAQ,QAAQA,MAAK,EAAE,KAAK,OAAO,MAAM;AAAA,EAC3C;AACF;AACe,SAAR,kBAAmC,IAAI;AAC5C,SAAO,WAAY;AACjB,QAAIC,QAAO,MACT,OAAO;AACT,WAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,UAAI,MAAM,GAAG,MAAMA,OAAM,IAAI;AAC7B,eAAS,MAAMD,QAAO;AACpB,2BAAmB,KAAK,SAAS,QAAQ,OAAO,QAAQ,QAAQA,MAAK;AAAA,MACvE;AACA,eAAS,OAAO,KAAK;AACnB,2BAAmB,KAAK,SAAS,QAAQ,OAAO,QAAQ,SAAS,GAAG;AAAA,MACtE;AACA,YAAM,MAAS;AAAA,IACjB,CAAC;AAAA,EACH;AACF;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAe,SAAR,gBAAiC,UAAU,aAAa;AAC7D,MAAI,EAAE,oBAAoB,cAAc;AACtC,UAAM,IAAI,UAAU,mCAAmC;AAAA,EACzD;AACF;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAe,SAAR,QAAyB,KAAK;AACnC;AAEA,SAAO,UAAU,cAAc,OAAO,UAAU,YAAY,OAAO,OAAO,WAAW,SAAUE,MAAK;AAClG,WAAO,OAAOA;AAAA,EAChB,IAAI,SAAUA,MAAK;AACjB,WAAOA,QAAO,cAAc,OAAO,UAAUA,KAAI,gBAAgB,UAAUA,SAAQ,OAAO,YAAY,WAAW,OAAOA;AAAA,EAC1H,GAAG,QAAQ,GAAG;AAChB;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCe,SAAR,aAA8B,OAAO,MAAM;AAChD,MAAI,QAAQ,KAAK,MAAM,YAAY,UAAU;AAAM,WAAO;AAC1D,MAAI,OAAO,MAAM,OAAO,WAAW;AACnC,MAAI,SAAS,QAAW;AACtB,QAAI,MAAM,KAAK,KAAK,OAAO,QAAQ,SAAS;AAC5C,QAAI,QAAQ,GAAG,MAAM;AAAU,aAAO;AACtC,UAAM,IAAI,UAAU,8CAA8C;AAAA,EACpE;AACA,UAAQ,SAAS,WAAW,SAAS,QAAQ,KAAK;AACpD;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEe,SAAR,eAAgC,KAAK;AAC1C,MAAI,MAAM,aAAY,KAAK,QAAQ;AACnC,SAAO,QAAQ,GAAG,MAAM,WAAW,MAAM,OAAO,GAAG;AACrD;AALA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACAA,SAAS,kBAAkB,QAAQ,OAAO;AACxC,WAASC,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,QAAI,aAAa,MAAMA,EAAC;AACxB,eAAW,aAAa,WAAW,cAAc;AACjD,eAAW,eAAe;AAC1B,QAAI,WAAW;AAAY,iBAAW,WAAW;AACjD,WAAO,eAAe,QAAQ,eAAc,WAAW,GAAG,GAAG,UAAU;AAAA,EACzE;AACF;AACe,SAAR,aAA8B,aAAa,YAAY,aAAa;AACzE,MAAI;AAAY,sBAAkB,YAAY,WAAW,UAAU;AACnE,MAAI;AAAa,sBAAkB,aAAa,WAAW;AAC3D,SAAO,eAAe,aAAa,aAAa;AAAA,IAC9C,UAAU;AAAA,EACZ,CAAC;AACD,SAAO;AACT;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAe,SAAR,uBAAwCC,OAAM;AACnD,MAAIA,UAAS,QAAQ;AACnB,UAAM,IAAI,eAAe,2DAA2D;AAAA,EACtF;AACA,SAAOA;AACT;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAe,SAAR,gBAAiCC,IAAG,GAAG;AAC5C,oBAAkB,OAAO,iBAAiB,OAAO,eAAe,KAAK,IAAI,SAASC,iBAAgBD,IAAGE,IAAG;AACtG,IAAAF,GAAE,YAAYE;AACd,WAAOF;AAAA,EACT;AACA,SAAO,gBAAgBA,IAAG,CAAC;AAC7B;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCe,SAAR,UAA2B,UAAU,YAAY;AACtD,MAAI,OAAO,eAAe,cAAc,eAAe,MAAM;AAC3D,UAAM,IAAI,UAAU,oDAAoD;AAAA,EAC1E;AACA,WAAS,YAAY,OAAO,OAAO,cAAc,WAAW,WAAW;AAAA,IACrE,aAAa;AAAA,MACX,OAAO;AAAA,MACP,UAAU;AAAA,MACV,cAAc;AAAA,IAChB;AAAA,EACF,CAAC;AACD,SAAO,eAAe,UAAU,aAAa;AAAA,IAC3C,UAAU;AAAA,EACZ,CAAC;AACD,MAAI;AAAY,oBAAe,UAAU,UAAU;AACrD;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEe,SAAR,2BAA4CG,OAAM,MAAM;AAC7D,MAAI,SAAS,QAAQ,IAAI,MAAM,YAAY,OAAO,SAAS,aAAa;AACtE,WAAO;AAAA,EACT,WAAW,SAAS,QAAQ;AAC1B,UAAM,IAAI,UAAU,0DAA0D;AAAA,EAChF;AACA,SAAO,uBAAsBA,KAAI;AACnC;AATA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACDe,SAAR,gBAAiCC,IAAG;AACzC,oBAAkB,OAAO,iBAAiB,OAAO,eAAe,KAAK,IAAI,SAASC,iBAAgBD,IAAG;AACnG,WAAOA,GAAE,aAAa,OAAO,eAAeA,EAAC;AAAA,EAC/C;AACA,SAAO,gBAAgBA,EAAC;AAC1B;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCe,SAAR,gBAAiC,KAAK,KAAKE,QAAO;AACvD,QAAM,eAAc,GAAG;AACvB,MAAI,OAAO,KAAK;AACd,WAAO,eAAe,KAAK,KAAK;AAAA,MAC9B,OAAOA;AAAA,MACP,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,IACZ,CAAC;AAAA,EACH,OAAO;AACL,QAAI,GAAG,IAAIA;AAAA,EACb;AACA,SAAO;AACT;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA,aAASC,SAAQ,KAAK;AACpB;AAEA,aAAQ,OAAO,UAAUA,WAAU,cAAc,OAAO,UAAU,YAAY,OAAO,OAAO,WAAW,SAAUC,MAAK;AACpH,eAAO,OAAOA;AAAA,MAChB,IAAI,SAAUA,MAAK;AACjB,eAAOA,QAAO,cAAc,OAAO,UAAUA,KAAI,gBAAgB,UAAUA,SAAQ,OAAO,YAAY,WAAW,OAAOA;AAAA,MAC1H,GAAG,OAAO,QAAQ,aAAa,MAAM,OAAO,QAAQ,SAAS,IAAI,OAAO,SAAUD,SAAQ,GAAG;AAAA,IAC/F;AACA,WAAO,UAAUA,UAAS,OAAO,QAAQ,aAAa,MAAM,OAAO,QAAQ,SAAS,IAAI,OAAO;AAAA;AAAA;;;ACT/F;AAAA;AAAA;AAAA;AAAA,QAAIE,WAAU,iBAAuB,SAAS;AAC9C,aAASC,uBAAsB;AAC7B;AACA,aAAO,UAAUA,uBAAsB,SAASA,uBAAsB;AACpE,eAAOC;AAAA,MACT,GAAG,OAAO,QAAQ,aAAa,MAAM,OAAO,QAAQ,SAAS,IAAI,OAAO;AACxE,UAAIA,WAAU,CAAC,GACb,KAAK,OAAO,WACZ,SAAS,GAAG,gBACZ,iBAAiB,OAAO,kBAAkB,SAAU,KAAK,KAAK,MAAM;AAClE,YAAI,GAAG,IAAI,KAAK;AAAA,MAClB,GACA,UAAU,cAAc,OAAO,SAAS,SAAS,CAAC,GAClD,iBAAiB,QAAQ,YAAY,cACrC,sBAAsB,QAAQ,iBAAiB,mBAC/C,oBAAoB,QAAQ,eAAe;AAC7C,eAASC,QAAO,KAAK,KAAKC,QAAO;AAC/B,eAAO,OAAO,eAAe,KAAK,KAAK;AAAA,UACrC,OAAOA;AAAA,UACP,YAAY;AAAA,UACZ,cAAc;AAAA,UACd,UAAU;AAAA,QACZ,CAAC,GAAG,IAAI,GAAG;AAAA,MACb;AACA,UAAI;AACF,QAAAD,QAAO,CAAC,GAAG,EAAE;AAAA,MACf,SAAS,KAAP;AACA,QAAAA,UAAS,SAASA,QAAO,KAAK,KAAKC,QAAO;AACxC,iBAAO,IAAI,GAAG,IAAIA;AAAA,QACpB;AAAA,MACF;AACA,eAAS,KAAK,SAAS,SAASC,OAAM,aAAa;AACjD,YAAI,iBAAiB,WAAW,QAAQ,qBAAqB,YAAY,UAAU,WACjF,YAAY,OAAO,OAAO,eAAe,SAAS,GAClD,UAAU,IAAI,QAAQ,eAAe,CAAC,CAAC;AACzC,eAAO,eAAe,WAAW,WAAW;AAAA,UAC1C,OAAO,iBAAiB,SAASA,OAAM,OAAO;AAAA,QAChD,CAAC,GAAG;AAAA,MACN;AACA,eAAS,SAAS,IAAI,KAAK,KAAK;AAC9B,YAAI;AACF,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,KAAK,GAAG,KAAK,KAAK,GAAG;AAAA,UACvB;AAAA,QACF,SAAS,KAAP;AACA,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,KAAK;AAAA,UACP;AAAA,QACF;AAAA,MACF;AACA,MAAAH,SAAQ,OAAO;AACf,UAAI,mBAAmB,CAAC;AACxB,eAAS,YAAY;AAAA,MAAC;AACtB,eAAS,oBAAoB;AAAA,MAAC;AAC9B,eAAS,6BAA6B;AAAA,MAAC;AACvC,UAAI,oBAAoB,CAAC;AACzB,MAAAC,QAAO,mBAAmB,gBAAgB,WAAY;AACpD,eAAO;AAAA,MACT,CAAC;AACD,UAAI,WAAW,OAAO,gBACpB,0BAA0B,YAAY,SAAS,SAAS,OAAO,CAAC,CAAC,CAAC,CAAC;AACrE,iCAA2B,4BAA4B,MAAM,OAAO,KAAK,yBAAyB,cAAc,MAAM,oBAAoB;AAC1I,UAAI,KAAK,2BAA2B,YAAY,UAAU,YAAY,OAAO,OAAO,iBAAiB;AACrG,eAAS,sBAAsB,WAAW;AACxC,SAAC,QAAQ,SAAS,QAAQ,EAAE,QAAQ,SAAU,QAAQ;AACpD,UAAAA,QAAO,WAAW,QAAQ,SAAU,KAAK;AACvC,mBAAO,KAAK,QAAQ,QAAQ,GAAG;AAAA,UACjC,CAAC;AAAA,QACH,CAAC;AAAA,MACH;AACA,eAAS,cAAc,WAAW,aAAa;AAC7C,iBAAS,OAAO,QAAQ,KAAK,SAAS,QAAQ;AAC5C,cAAI,SAAS,SAAS,UAAU,MAAM,GAAG,WAAW,GAAG;AACvD,cAAI,YAAY,OAAO,MAAM;AAC3B,gBAAI,SAAS,OAAO,KAClBC,SAAQ,OAAO;AACjB,mBAAOA,UAAS,YAAYJ,SAAQI,MAAK,KAAK,OAAO,KAAKA,QAAO,SAAS,IAAI,YAAY,QAAQA,OAAM,OAAO,EAAE,KAAK,SAAUA,QAAO;AACrI,qBAAO,QAAQA,QAAO,SAAS,MAAM;AAAA,YACvC,GAAG,SAAU,KAAK;AAChB,qBAAO,SAAS,KAAK,SAAS,MAAM;AAAA,YACtC,CAAC,IAAI,YAAY,QAAQA,MAAK,EAAE,KAAK,SAAU,WAAW;AACxD,qBAAO,QAAQ,WAAW,QAAQ,MAAM;AAAA,YAC1C,GAAG,SAAU,OAAO;AAClB,qBAAO,OAAO,SAAS,OAAO,SAAS,MAAM;AAAA,YAC/C,CAAC;AAAA,UACH;AACA,iBAAO,OAAO,GAAG;AAAA,QACnB;AACA,YAAI;AACJ,uBAAe,MAAM,WAAW;AAAA,UAC9B,OAAO,SAASA,OAAM,QAAQ,KAAK;AACjC,qBAAS,6BAA6B;AACpC,qBAAO,IAAI,YAAY,SAAU,SAAS,QAAQ;AAChD,uBAAO,QAAQ,KAAK,SAAS,MAAM;AAAA,cACrC,CAAC;AAAA,YACH;AACA,mBAAO,kBAAkB,kBAAkB,gBAAgB,KAAK,4BAA4B,0BAA0B,IAAI,2BAA2B;AAAA,UACvJ;AAAA,QACF,CAAC;AAAA,MACH;AACA,eAAS,iBAAiB,SAASC,OAAM,SAAS;AAChD,YAAI,QAAQ;AACZ,eAAO,SAAU,QAAQ,KAAK;AAC5B,cAAI,gBAAgB;AAAO,kBAAM,IAAI,MAAM,8BAA8B;AACzE,cAAI,gBAAgB,OAAO;AACzB,gBAAI,YAAY;AAAQ,oBAAM;AAC9B,mBAAO,WAAW;AAAA,UACpB;AACA,eAAK,QAAQ,SAAS,QAAQ,QAAQ,MAAM,SAAO;AACjD,gBAAI,WAAW,QAAQ;AACvB,gBAAI,UAAU;AACZ,kBAAI,iBAAiB,oBAAoB,UAAU,OAAO;AAC1D,kBAAI,gBAAgB;AAClB,oBAAI,mBAAmB;AAAkB;AACzC,uBAAO;AAAA,cACT;AAAA,YACF;AACA,gBAAI,WAAW,QAAQ;AAAQ,sBAAQ,OAAO,QAAQ,QAAQ,QAAQ;AAAA,qBAAa,YAAY,QAAQ,QAAQ;AAC7G,kBAAI,qBAAqB;AAAO,sBAAM,QAAQ,aAAa,QAAQ;AACnE,sBAAQ,kBAAkB,QAAQ,GAAG;AAAA,YACvC;AAAO,2BAAa,QAAQ,UAAU,QAAQ,OAAO,UAAU,QAAQ,GAAG;AAC1E,oBAAQ;AACR,gBAAI,SAAS,SAAS,SAASA,OAAM,OAAO;AAC5C,gBAAI,aAAa,OAAO,MAAM;AAC5B,kBAAI,QAAQ,QAAQ,OAAO,cAAc,kBAAkB,OAAO,QAAQ;AAAkB;AAC5F,qBAAO;AAAA,gBACL,OAAO,OAAO;AAAA,gBACd,MAAM,QAAQ;AAAA,cAChB;AAAA,YACF;AACA,wBAAY,OAAO,SAAS,QAAQ,aAAa,QAAQ,SAAS,SAAS,QAAQ,MAAM,OAAO;AAAA,UAClG;AAAA,QACF;AAAA,MACF;AACA,eAAS,oBAAoB,UAAU,SAAS;AAC9C,YAAI,aAAa,QAAQ,QACvB,SAAS,SAAS,SAAS,UAAU;AACvC,YAAI,WAAc;AAAQ,iBAAO,QAAQ,WAAW,MAAM,YAAY,cAAc,SAAS,SAAS,QAAQ,MAAM,QAAQ,SAAS,UAAU,QAAQ,MAAM,QAAW,oBAAoB,UAAU,OAAO,GAAG,YAAY,QAAQ,WAAW,aAAa,eAAe,QAAQ,SAAS,SAAS,QAAQ,MAAM,IAAI,UAAU,sCAAsC,aAAa,UAAU,IAAI;AAClY,YAAI,SAAS,SAAS,QAAQ,SAAS,UAAU,QAAQ,GAAG;AAC5D,YAAI,YAAY,OAAO;AAAM,iBAAO,QAAQ,SAAS,SAAS,QAAQ,MAAM,OAAO,KAAK,QAAQ,WAAW,MAAM;AACjH,YAAI,OAAO,OAAO;AAClB,eAAO,OAAO,KAAK,QAAQ,QAAQ,SAAS,UAAU,IAAI,KAAK,OAAO,QAAQ,OAAO,SAAS,SAAS,aAAa,QAAQ,WAAW,QAAQ,SAAS,QAAQ,QAAQ,MAAM,SAAY,QAAQ,WAAW,MAAM,oBAAoB,QAAQ,QAAQ,SAAS,SAAS,QAAQ,MAAM,IAAI,UAAU,kCAAkC,GAAG,QAAQ,WAAW,MAAM;AAAA,MACrW;AACA,eAAS,aAAa,MAAM;AAC1B,YAAI,QAAQ;AAAA,UACV,QAAQ,KAAK,CAAC;AAAA,QAChB;AACA,aAAK,SAAS,MAAM,WAAW,KAAK,CAAC,IAAI,KAAK,SAAS,MAAM,aAAa,KAAK,CAAC,GAAG,MAAM,WAAW,KAAK,CAAC,IAAI,KAAK,WAAW,KAAK,KAAK;AAAA,MAC1I;AACA,eAAS,cAAc,OAAO;AAC5B,YAAI,SAAS,MAAM,cAAc,CAAC;AAClC,eAAO,OAAO,UAAU,OAAO,OAAO,KAAK,MAAM,aAAa;AAAA,MAChE;AACA,eAAS,QAAQ,aAAa;AAC5B,aAAK,aAAa,CAAC;AAAA,UACjB,QAAQ;AAAA,QACV,CAAC,GAAG,YAAY,QAAQ,cAAc,IAAI,GAAG,KAAK,MAAM,IAAE;AAAA,MAC5D;AACA,eAAS,OAAO,UAAU;AACxB,YAAI,UAAU;AACZ,cAAI,iBAAiB,SAAS,cAAc;AAC5C,cAAI;AAAgB,mBAAO,eAAe,KAAK,QAAQ;AACvD,cAAI,cAAc,OAAO,SAAS;AAAM,mBAAO;AAC/C,cAAI,CAAC,MAAM,SAAS,MAAM,GAAG;AAC3B,gBAAIC,KAAI,IACN,OAAO,SAASC,QAAO;AACrB,qBAAO,EAAED,KAAI,SAAS;AAAS,oBAAI,OAAO,KAAK,UAAUA,EAAC;AAAG,yBAAOC,MAAK,QAAQ,SAASD,EAAC,GAAGC,MAAK,OAAO,OAAIA;AAC9G,qBAAOA,MAAK,QAAQ,QAAWA,MAAK,OAAO,MAAIA;AAAA,YACjD;AACF,mBAAO,KAAK,OAAO;AAAA,UACrB;AAAA,QACF;AACA,eAAO;AAAA,UACL,MAAM;AAAA,QACR;AAAA,MACF;AACA,eAAS,aAAa;AACpB,eAAO;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,QACR;AAAA,MACF;AACA,aAAO,kBAAkB,YAAY,4BAA4B,eAAe,IAAI,eAAe;AAAA,QACjG,OAAO;AAAA,QACP,cAAc;AAAA,MAChB,CAAC,GAAG,eAAe,4BAA4B,eAAe;AAAA,QAC5D,OAAO;AAAA,QACP,cAAc;AAAA,MAChB,CAAC,GAAG,kBAAkB,cAAcJ,QAAO,4BAA4B,mBAAmB,mBAAmB,GAAGD,SAAQ,sBAAsB,SAAU,QAAQ;AAC9J,YAAI,OAAO,cAAc,OAAO,UAAU,OAAO;AACjD,eAAO,CAAC,CAAC,SAAS,SAAS,qBAAqB,yBAAyB,KAAK,eAAe,KAAK;AAAA,MACpG,GAAGA,SAAQ,OAAO,SAAU,QAAQ;AAClC,eAAO,OAAO,iBAAiB,OAAO,eAAe,QAAQ,0BAA0B,KAAK,OAAO,YAAY,4BAA4BC,QAAO,QAAQ,mBAAmB,mBAAmB,IAAI,OAAO,YAAY,OAAO,OAAO,EAAE,GAAG;AAAA,MAC5O,GAAGD,SAAQ,QAAQ,SAAU,KAAK;AAChC,eAAO;AAAA,UACL,SAAS;AAAA,QACX;AAAA,MACF,GAAG,sBAAsB,cAAc,SAAS,GAAGC,QAAO,cAAc,WAAW,qBAAqB,WAAY;AAClH,eAAO;AAAA,MACT,CAAC,GAAGD,SAAQ,gBAAgB,eAAeA,SAAQ,QAAQ,SAAU,SAAS,SAASG,OAAM,aAAa,aAAa;AACrH,mBAAW,gBAAgB,cAAc;AACzC,YAAI,OAAO,IAAI,cAAc,KAAK,SAAS,SAASA,OAAM,WAAW,GAAG,WAAW;AACnF,eAAOH,SAAQ,oBAAoB,OAAO,IAAI,OAAO,KAAK,KAAK,EAAE,KAAK,SAAU,QAAQ;AACtF,iBAAO,OAAO,OAAO,OAAO,QAAQ,KAAK,KAAK;AAAA,QAChD,CAAC;AAAA,MACH,GAAG,sBAAsB,EAAE,GAAGC,QAAO,IAAI,mBAAmB,WAAW,GAAGA,QAAO,IAAI,gBAAgB,WAAY;AAC/G,eAAO;AAAA,MACT,CAAC,GAAGA,QAAO,IAAI,YAAY,WAAY;AACrC,eAAO;AAAA,MACT,CAAC,GAAGD,SAAQ,OAAO,SAAU,KAAK;AAChC,YAAI,SAAS,OAAO,GAAG,GACrB,OAAO,CAAC;AACV,iBAAS,OAAO;AAAQ,eAAK,KAAK,GAAG;AACrC,eAAO,KAAK,QAAQ,GAAG,SAAS,OAAO;AACrC,iBAAO,KAAK,UAAS;AACnB,gBAAIM,OAAM,KAAK,IAAI;AACnB,gBAAIA,QAAO;AAAQ,qBAAO,KAAK,QAAQA,MAAK,KAAK,OAAO,OAAI;AAAA,UAC9D;AACA,iBAAO,KAAK,OAAO,MAAI;AAAA,QACzB;AAAA,MACF,GAAGN,SAAQ,SAAS,QAAQ,QAAQ,YAAY;AAAA,QAC9C,aAAa;AAAA,QACb,OAAO,SAAS,MAAM,eAAe;AACnC,cAAI,KAAK,OAAO,GAAG,KAAK,OAAO,GAAG,KAAK,OAAO,KAAK,QAAQ,QAAW,KAAK,OAAO,OAAI,KAAK,WAAW,MAAM,KAAK,SAAS,QAAQ,KAAK,MAAM,QAAW,KAAK,WAAW,QAAQ,aAAa,GAAG,CAAC;AAAe,qBAAS,QAAQ;AAAM,sBAAQ,KAAK,OAAO,CAAC,KAAK,OAAO,KAAK,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,MAAM,CAAC,CAAC,MAAM,KAAK,IAAI,IAAI;AAAA,QACtU;AAAA,QACA,MAAM,SAAS,OAAO;AACpB,eAAK,OAAO;AACZ,cAAI,aAAa,KAAK,WAAW,CAAC,EAAE;AACpC,cAAI,YAAY,WAAW;AAAM,kBAAM,WAAW;AAClD,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,mBAAmB,SAAS,kBAAkB,WAAW;AACvD,cAAI,KAAK;AAAM,kBAAM;AACrB,cAAI,UAAU;AACd,mBAAS,OAAO,KAAK,QAAQ;AAC3B,mBAAO,OAAO,OAAO,SAAS,OAAO,MAAM,WAAW,QAAQ,OAAO,KAAK,WAAW,QAAQ,SAAS,QAAQ,QAAQ,MAAM,SAAY,CAAC,CAAC;AAAA,UAC5I;AACA,mBAASI,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAG,EAAEA,IAAG;AACpD,gBAAI,QAAQ,KAAK,WAAWA,EAAC,GAC3B,SAAS,MAAM;AACjB,gBAAI,WAAW,MAAM;AAAQ,qBAAO,OAAO,KAAK;AAChD,gBAAI,MAAM,UAAU,KAAK,MAAM;AAC7B,kBAAI,WAAW,OAAO,KAAK,OAAO,UAAU,GAC1C,aAAa,OAAO,KAAK,OAAO,YAAY;AAC9C,kBAAI,YAAY,YAAY;AAC1B,oBAAI,KAAK,OAAO,MAAM;AAAU,yBAAO,OAAO,MAAM,UAAU,IAAE;AAChE,oBAAI,KAAK,OAAO,MAAM;AAAY,yBAAO,OAAO,MAAM,UAAU;AAAA,cAClE,WAAW,UAAU;AACnB,oBAAI,KAAK,OAAO,MAAM;AAAU,yBAAO,OAAO,MAAM,UAAU,IAAE;AAAA,cAClE,OAAO;AACL,oBAAI,CAAC;AAAY,wBAAM,IAAI,MAAM,wCAAwC;AACzE,oBAAI,KAAK,OAAO,MAAM;AAAY,yBAAO,OAAO,MAAM,UAAU;AAAA,cAClE;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,QAAQ,SAAS,OAAOG,OAAM,KAAK;AACjC,mBAASH,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAG,EAAEA,IAAG;AACpD,gBAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,gBAAI,MAAM,UAAU,KAAK,QAAQ,OAAO,KAAK,OAAO,YAAY,KAAK,KAAK,OAAO,MAAM,YAAY;AACjG,kBAAI,eAAe;AACnB;AAAA,YACF;AAAA,UACF;AACA,2BAAiB,YAAYG,SAAQ,eAAeA,UAAS,aAAa,UAAU,OAAO,OAAO,aAAa,eAAe,eAAe;AAC7I,cAAI,SAAS,eAAe,aAAa,aAAa,CAAC;AACvD,iBAAO,OAAO,OAAOA,OAAM,OAAO,MAAM,KAAK,gBAAgB,KAAK,SAAS,QAAQ,KAAK,OAAO,aAAa,YAAY,oBAAoB,KAAK,SAAS,MAAM;AAAA,QAClK;AAAA,QACA,UAAU,SAAS,SAAS,QAAQ,UAAU;AAC5C,cAAI,YAAY,OAAO;AAAM,kBAAM,OAAO;AAC1C,iBAAO,YAAY,OAAO,QAAQ,eAAe,OAAO,OAAO,KAAK,OAAO,OAAO,MAAM,aAAa,OAAO,QAAQ,KAAK,OAAO,KAAK,MAAM,OAAO,KAAK,KAAK,SAAS,UAAU,KAAK,OAAO,SAAS,aAAa,OAAO,QAAQ,aAAa,KAAK,OAAO,WAAW;AAAA,QACtQ;AAAA,QACA,QAAQ,SAAS,OAAO,YAAY;AAClC,mBAASH,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAG,EAAEA,IAAG;AACpD,gBAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,gBAAI,MAAM,eAAe;AAAY,qBAAO,KAAK,SAAS,MAAM,YAAY,MAAM,QAAQ,GAAG,cAAc,KAAK,GAAG;AAAA,UACrH;AAAA,QACF;AAAA,QACA,SAAS,SAAS,OAAO,QAAQ;AAC/B,mBAASA,KAAI,KAAK,WAAW,SAAS,GAAGA,MAAK,GAAG,EAAEA,IAAG;AACpD,gBAAI,QAAQ,KAAK,WAAWA,EAAC;AAC7B,gBAAI,MAAM,WAAW,QAAQ;AAC3B,kBAAI,SAAS,MAAM;AACnB,kBAAI,YAAY,OAAO,MAAM;AAC3B,oBAAI,SAAS,OAAO;AACpB,8BAAc,KAAK;AAAA,cACrB;AACA,qBAAO;AAAA,YACT;AAAA,UACF;AACA,gBAAM,IAAI,MAAM,uBAAuB;AAAA,QACzC;AAAA,QACA,eAAe,SAAS,cAAc,UAAU,YAAY,SAAS;AACnE,iBAAO,KAAK,WAAW;AAAA,YACrB,UAAU,OAAO,QAAQ;AAAA,YACzB;AAAA,YACA;AAAA,UACF,GAAG,WAAW,KAAK,WAAW,KAAK,MAAM,SAAY;AAAA,QACvD;AAAA,MACF,GAAGJ;AAAA,IACL;AACA,WAAO,UAAUD,sBAAqB,OAAO,QAAQ,aAAa,MAAM,OAAO,QAAQ,SAAS,IAAI,OAAO;AAAA;AAAA;;;AC/S3G;AAAA;AAAA;AAAA;AAEA,QAAI,UAAU,6BAAyC;AACvD,WAAO,UAAU;AAGjB,QAAI;AACF,2BAAqB;AAAA,IACvB,SAAS,sBAAP;AACA,UAAI,OAAO,eAAe,UAAU;AAClC,mBAAW,qBAAqB;AAAA,MAClC,OAAO;AACL,iBAAS,KAAK,wBAAwB,EAAE,OAAO;AAAA,MACjD;AAAA,IACF;AAAA;AAAA;;;ACbe,SAAR,eAAgC,QAAQ,UAAU;AACvD,SAAO,CAAC,OAAO,UAAU,eAAe,KAAK,QAAQ,QAAQ,GAAG;AAC9D,aAAS,gBAAe,MAAM;AAC9B,QAAI,WAAW;AAAM;AAAA,EACvB;AACA,SAAO;AACT;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCe,SAAR,OAAwB;AAC7B,MAAI,OAAO,YAAY,eAAe,QAAQ,KAAK;AACjD,WAAO,QAAQ,IAAI,KAAK;AAAA,EAC1B,OAAO;AACL,WAAO,SAASS,MAAK,QAAQ,UAAU,UAAU;AAC/C,UAAI,OAAO,eAAc,QAAQ,QAAQ;AACzC,UAAI,CAAC;AAAM;AACX,UAAI,OAAO,OAAO,yBAAyB,MAAM,QAAQ;AACzD,UAAI,KAAK,KAAK;AACZ,eAAO,KAAK,IAAI,KAAK,UAAU,SAAS,IAAI,SAAS,QAAQ;AAAA,MAC/D;AACA,aAAO,KAAK;AAAA,IACd;AAAA,EACF;AACA,SAAO,KAAK,MAAM,MAAM,SAAS;AACnC;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAe,SAAR,kBAAmC,IAAI;AAC5C,SAAO,SAAS,SAAS,KAAK,EAAE,EAAE,QAAQ,eAAe,MAAM;AACjE;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAe,SAAR,4BAA6C;AAClD,MAAI,OAAO,YAAY,eAAe,CAAC,QAAQ;AAAW,WAAO;AACjE,MAAI,QAAQ,UAAU;AAAM,WAAO;AACnC,MAAI,OAAO,UAAU;AAAY,WAAO;AACxC,MAAI;AACF,YAAQ,UAAU,QAAQ,KAAK,QAAQ,UAAU,SAAS,CAAC,GAAG,WAAY;AAAA,IAAC,CAAC,CAAC;AAC7E,WAAO;AAAA,EACT,SAASC,IAAP;AACA,WAAO;AAAA,EACT;AACF;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACEe,SAAR,WAA4B,QAAQ,MAAM,OAAO;AACtD,MAAI,0BAAyB,GAAG;AAC9B,iBAAa,QAAQ,UAAU,KAAK;AAAA,EACtC,OAAO;AACL,iBAAa,SAASC,YAAWC,SAAQC,OAAMC,QAAO;AACpD,UAAI,IAAI,CAAC,IAAI;AACb,QAAE,KAAK,MAAM,GAAGD,KAAI;AACpB,UAAI,cAAc,SAAS,KAAK,MAAMD,SAAQ,CAAC;AAC/C,UAAI,WAAW,IAAI,YAAY;AAC/B,UAAIE;AAAO,wBAAe,UAAUA,OAAM,SAAS;AACnD,aAAO;AAAA,IACT;AAAA,EACF;AACA,SAAO,WAAW,MAAM,MAAM,SAAS;AACzC;AAhBA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;;;ACGe,SAAR,iBAAkC,OAAO;AAC9C,MAAI,SAAS,OAAO,QAAQ,aAAa,oBAAI,IAAI,IAAI;AACrD,qBAAmB,SAASC,kBAAiBC,QAAO;AAClD,QAAIA,WAAU,QAAQ,CAAC,kBAAiBA,MAAK;AAAG,aAAOA;AACvD,QAAI,OAAOA,WAAU,YAAY;AAC/B,YAAM,IAAI,UAAU,oDAAoD;AAAA,IAC1E;AACA,QAAI,OAAO,WAAW,aAAa;AACjC,UAAI,OAAO,IAAIA,MAAK;AAAG,eAAO,OAAO,IAAIA,MAAK;AAC9C,aAAO,IAAIA,QAAO,OAAO;AAAA,IAC3B;AACA,aAAS,UAAU;AACjB,aAAO,WAAUA,QAAO,WAAW,gBAAe,IAAI,EAAE,WAAW;AAAA,IACrE;AACA,YAAQ,YAAY,OAAO,OAAOA,OAAM,WAAW;AAAA,MACjD,aAAa;AAAA,QACX,OAAO;AAAA,QACP,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,cAAc;AAAA,MAChB;AAAA,IACF,CAAC;AACD,WAAO,gBAAe,SAASA,MAAK;AAAA,EACtC;AACA,SAAO,iBAAiB,KAAK;AAC/B;AA7BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;ACHA;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,aAAS,UAAU,OAAO;AACtB,UAAI,gBAAgB;AACpB,UAAI,eAAe,MAAM;AACzB,UAAI,OAAO,eAAe;AAC1B,UAAI,CAAC,MAAM;AACP,eAAO;AAAA,MACX;AACA,UAAI,WAAW;AACf,UAAI,YAAY,gBAAgB;AAChC,UAAI,qBAAqB,eAAe;AACxC,UAAI,SAAS,OAAO,MAAM,kBAAkB;AAC5C,aAAO,MAAM,KAAK;AAClB,aAAO,aAAa;AAChB,eAAO,MAAM,KAAK,UAAU;AAAA,MAChC;AACA,aAAO,OAAO,SAAS;AAAA,IAC3B;AACA,YAAQ,UAAU;AAAA;AAAA;;;ACnBlB;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,QAAI,eAAe;AACnB,aAASC,QAAO,OAAO,UAAU;AAC7B,UAAI,aAAa,QAAQ;AAAE,mBAAW;AAAA,MAAQ;AAC9C,UAAI,OAAO,SAAS,KAAK,GAAG;AACxB,eAAO,WAAW,MAAM,SAAS,QAAQ,CAAC;AAAA,MAC9C;AACA,aAAO,WAAW,OAAO,KAAK,OAAO,QAAQ,EAAE,SAAS,QAAQ,CAAC;AAAA,IACrE;AAEA,aAASC,QAAOC,YAAW,UAAU;AACjC,UAAI,aAAa,QAAQ;AAAE,mBAAW;AAAA,MAAQ;AAC9C,aAAO,OAAO,KAAK,SAASA,UAAS,GAAG,QAAQ,EAAE,SAAS,QAAQ;AAAA,IACvE;AACA,aAAS,SAASA,YAAW;AACzB,MAAAA,aAAYA,WAAU,SAAS;AAC/B,aAAO,aAAa,QAAQA,UAAS,EAChC,QAAQ,OAAO,GAAG,EAClB,QAAQ,MAAM,GAAG;AAAA,IAC1B;AACA,aAAS,WAAW,QAAQ;AACxB,aAAO,OACF,QAAQ,MAAM,EAAE,EAChB,QAAQ,OAAO,GAAG,EAClB,QAAQ,OAAO,GAAG;AAAA,IAC3B;AACA,aAAS,SAASA,YAAW;AACzB,aAAO,OAAO,KAAK,SAASA,UAAS,GAAG,QAAQ;AAAA,IACpD;AACA,QAAIA,aAAYF;AAChB,IAAAE,WAAU,SAASF;AACnB,IAAAE,WAAU,SAASD;AACnB,IAAAC,WAAU,WAAW;AACrB,IAAAA,WAAU,aAAa;AACvB,IAAAA,WAAU,WAAW;AACrB,YAAQ,UAAUA;AAAA;AAAA;;;ACpClB,IAAAC,qBAAA;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU,oBAA4B;AAC7C,WAAO,QAAQ,UAAU,OAAO;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AGQ1B,SAAUC,SAASC,KAAW;AAElC,SAAOC,UAAUC,OAAOF,GAAG;AAC7B;AAUM,SAAUG,aAAaC,MAA6B;AACxD,SAAOH,UAAUI,OAAOC,KAAKC,UAAUH,IAAI,CAAC;AAC9C;yDFtBaI,UCAAC,mBCCAR,WAWAS;;;;;;;;;;;;;;;;;AFZAF,IAAAA,WAAW,SAAXA,YAAQ;AAAA,iBAAiBG,mBAAAA,SAAY,EAAE,EAAEC,SAAS,KAAK;IAAC;ACArE,IAAaH,oBAAkB,SAAA,MAAA;AAAA,gBAAAA,oBAAA,IAAA;AAAA,UAAA,SAAA,aAAAA,kBAAA;AAAA,eAAAA,qBAAA;AAAA,YAAA;AAAA,wBAAA,MAAAA,kBAAA;AAAA,iBAAA,OAAA,UAAA,QAAA,OAAA,IAAA,MAAA,IAAA,GAAA,OAAA,GAAA,OAAA,MAAA,QAAA;AAAA,eAAA,IAAA,IAAA,UAAA,IAAA;QAAA;AAAA,gBAAA,OAAA,KAAA,MAAA,QAAA,CAAA,IAAA,EAAA,OAAA,IAAA,CAAA;AAAA,wBACJ,uBAAA,KAAA,GAAA,cAAA,IAAII,gBAAe,CAAE;AAAA,eAAA;MAAA;AAAA,mBAAAJ,oBAAA,CAAA;QAAA,KAAA;QAAA,OAE9C,SAAQG,YAAA;AACN,eAAKE,OAAO,KAAKC,WAAWH,SAAQ;AACpC,iBAAO,KAAeI,gBAAAA,mBAAAA,SAAAA,GAAAA,YAAAA,IAAAA,EAAAA,KAAK,IAAI;QACjC;MAAC,CAAA,CAAA;AAAA,aAAAP;IAAA,EAAA,iBANoCQ,GAAG,CAAA;ACCnC,IAAMhB,YAAYiB,iBAAAA;AAWlB,IAAMR,SAASS,cAAAA;;;;;ACdtB;AAAA;AAAA;AAAA;AAAA,WAAO,UAAUC;AACjB,IAAAA,WAAU,UAAUA;AACpB,IAAAA,WAAU,SAAS;AACnB,IAAAA,WAAU,kBAAkB;AAE5B,QAAI,qBAAqB;AACzB,QAAI,wBAAwB;AAE5B,QAAI,MAAM,CAAC;AACX,QAAI,gBAAgB,CAAC;AAErB,aAAS,iBAAkB;AACzB,aAAO;AAAA,QACL,YAAY,OAAO;AAAA,QACnB,YAAY,OAAO;AAAA,MACrB;AAAA,IACF;AAGA,aAASA,WAAW,KAAK,UAAU,QAAQ,SAAS;AAClD,UAAI,OAAO,YAAY,aAAa;AAClC,kBAAU,eAAe;AAAA,MAC3B;AAEA,aAAO,KAAK,IAAI,GAAG,CAAC,GAAG,QAAW,GAAG,OAAO;AAC5C,UAAI;AACJ,UAAI;AACF,YAAI,cAAc,WAAW,GAAG;AAC9B,gBAAM,KAAK,UAAU,KAAK,UAAU,MAAM;AAAA,QAC5C,OAAO;AACL,gBAAM,KAAK,UAAU,KAAK,oBAAoB,QAAQ,GAAG,MAAM;AAAA,QACjE;AAAA,MACF,SAAS,GAAP;AACA,eAAO,KAAK,UAAU,qEAAqE;AAAA,MAC7F,UAAE;AACA,eAAO,IAAI,WAAW,GAAG;AACvB,cAAI,OAAO,IAAI,IAAI;AACnB,cAAI,KAAK,WAAW,GAAG;AACrB,mBAAO,eAAe,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,UACjD,OAAO;AACL,iBAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC;AAAA,UAC3B;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,WAAY,SAAS,KAAK,GAAG,QAAQ;AAC5C,UAAI,qBAAqB,OAAO,yBAAyB,QAAQ,CAAC;AAClE,UAAI,mBAAmB,QAAQ,QAAW;AACxC,YAAI,mBAAmB,cAAc;AACnC,iBAAO,eAAe,QAAQ,GAAG,EAAE,OAAO,QAAQ,CAAC;AACnD,cAAI,KAAK,CAAC,QAAQ,GAAG,KAAK,kBAAkB,CAAC;AAAA,QAC/C,OAAO;AACL,wBAAc,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;AAAA,QACtC;AAAA,MACF,OAAO;AACL,eAAO,CAAC,IAAI;AACZ,YAAI,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;AAAA,MAC3B;AAAA,IACF;AAEA,aAAS,OAAQ,KAAK,GAAG,WAAW,OAAO,QAAQ,OAAO,SAAS;AACjE,eAAS;AACT,UAAIC;AACJ,UAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AAC3C,aAAKA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACjC,cAAI,MAAMA,EAAC,MAAM,KAAK;AACpB,uBAAW,uBAAuB,KAAK,GAAG,MAAM;AAChD;AAAA,UACF;AAAA,QACF;AAEA,YACE,OAAO,QAAQ,eAAe,eAC9B,QAAQ,QAAQ,YAChB;AACA,qBAAW,oBAAoB,KAAK,GAAG,MAAM;AAC7C;AAAA,QACF;AAEA,YACE,OAAO,QAAQ,eAAe,eAC9B,YAAY,IAAI,QAAQ,YACxB;AACA,qBAAW,oBAAoB,KAAK,GAAG,MAAM;AAC7C;AAAA,QACF;AAEA,cAAM,KAAK,GAAG;AAEd,YAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,eAAKA,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK;AAC/B,mBAAO,IAAIA,EAAC,GAAGA,IAAGA,IAAG,OAAO,KAAK,OAAO,OAAO;AAAA,UACjD;AAAA,QACF,OAAO;AACL,cAAI,OAAO,OAAO,KAAK,GAAG;AAC1B,eAAKA,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AAChC,gBAAI,MAAM,KAAKA,EAAC;AAChB,mBAAO,IAAI,GAAG,GAAG,KAAKA,IAAG,OAAO,KAAK,OAAO,OAAO;AAAA,UACrD;AAAA,QACF;AACA,cAAM,IAAI;AAAA,MACZ;AAAA,IACF;AAGA,aAAS,gBAAiB,GAAG,GAAG;AAC9B,UAAI,IAAI,GAAG;AACT,eAAO;AAAA,MACT;AACA,UAAI,IAAI,GAAG;AACT,eAAO;AAAA,MACT;AACA,aAAO;AAAA,IACT;AAEA,aAAS,uBAAwB,KAAK,UAAU,QAAQ,SAAS;AAC/D,UAAI,OAAO,YAAY,aAAa;AAClC,kBAAU,eAAe;AAAA,MAC3B;AAEA,UAAI,MAAM,oBAAoB,KAAK,IAAI,GAAG,CAAC,GAAG,QAAW,GAAG,OAAO,KAAK;AACxE,UAAI;AACJ,UAAI;AACF,YAAI,cAAc,WAAW,GAAG;AAC9B,gBAAM,KAAK,UAAU,KAAK,UAAU,MAAM;AAAA,QAC5C,OAAO;AACL,gBAAM,KAAK,UAAU,KAAK,oBAAoB,QAAQ,GAAG,MAAM;AAAA,QACjE;AAAA,MACF,SAAS,GAAP;AACA,eAAO,KAAK,UAAU,qEAAqE;AAAA,MAC7F,UAAE;AAEA,eAAO,IAAI,WAAW,GAAG;AACvB,cAAI,OAAO,IAAI,IAAI;AACnB,cAAI,KAAK,WAAW,GAAG;AACrB,mBAAO,eAAe,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,UACjD,OAAO;AACL,iBAAK,CAAC,EAAE,KAAK,CAAC,CAAC,IAAI,KAAK,CAAC;AAAA,UAC3B;AAAA,QACF;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAEA,aAAS,oBAAqB,KAAK,GAAG,WAAW,OAAO,QAAQ,OAAO,SAAS;AAC9E,eAAS;AACT,UAAIA;AACJ,UAAI,OAAO,QAAQ,YAAY,QAAQ,MAAM;AAC3C,aAAKA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACjC,cAAI,MAAMA,EAAC,MAAM,KAAK;AACpB,uBAAW,uBAAuB,KAAK,GAAG,MAAM;AAChD;AAAA,UACF;AAAA,QACF;AACA,YAAI;AACF,cAAI,OAAO,IAAI,WAAW,YAAY;AACpC;AAAA,UACF;AAAA,QACF,SAAS,GAAP;AACA;AAAA,QACF;AAEA,YACE,OAAO,QAAQ,eAAe,eAC9B,QAAQ,QAAQ,YAChB;AACA,qBAAW,oBAAoB,KAAK,GAAG,MAAM;AAC7C;AAAA,QACF;AAEA,YACE,OAAO,QAAQ,eAAe,eAC9B,YAAY,IAAI,QAAQ,YACxB;AACA,qBAAW,oBAAoB,KAAK,GAAG,MAAM;AAC7C;AAAA,QACF;AAEA,cAAM,KAAK,GAAG;AAEd,YAAI,MAAM,QAAQ,GAAG,GAAG;AACtB,eAAKA,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK;AAC/B,gCAAoB,IAAIA,EAAC,GAAGA,IAAGA,IAAG,OAAO,KAAK,OAAO,OAAO;AAAA,UAC9D;AAAA,QACF,OAAO;AAEL,cAAI,MAAM,CAAC;AACX,cAAI,OAAO,OAAO,KAAK,GAAG,EAAE,KAAK,eAAe;AAChD,eAAKA,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AAChC,gBAAI,MAAM,KAAKA,EAAC;AAChB,gCAAoB,IAAI,GAAG,GAAG,KAAKA,IAAG,OAAO,KAAK,OAAO,OAAO;AAChE,gBAAI,GAAG,IAAI,IAAI,GAAG;AAAA,UACpB;AACA,cAAI,OAAO,WAAW,aAAa;AACjC,gBAAI,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;AACzB,mBAAO,CAAC,IAAI;AAAA,UACd,OAAO;AACL,mBAAO;AAAA,UACT;AAAA,QACF;AACA,cAAM,IAAI;AAAA,MACZ;AAAA,IACF;AAIA,aAAS,oBAAqB,UAAU;AACtC,iBACE,OAAO,aAAa,cAChB,WACA,SAAU,GAAG,GAAG;AAChB,eAAO;AAAA,MACT;AACJ,aAAO,SAAU,KAAK,KAAK;AACzB,YAAI,cAAc,SAAS,GAAG;AAC5B,mBAASA,KAAI,GAAGA,KAAI,cAAc,QAAQA,MAAK;AAC7C,gBAAI,OAAO,cAAcA,EAAC;AAC1B,gBAAI,KAAK,CAAC,MAAM,OAAO,KAAK,CAAC,MAAM,KAAK;AACtC,oBAAM,KAAK,CAAC;AACZ,4BAAc,OAAOA,IAAG,CAAC;AACzB;AAAA,YACF;AAAA,UACF;AAAA,QACF;AACA,eAAO,SAAS,KAAK,MAAM,KAAK,GAAG;AAAA,MACrC;AAAA,IACF;AAAA;AAAA;;;ACpOe,SAAR,gBAAiC,KAAK;AAC3C,MAAI,MAAM,QAAQ,GAAG;AAAG,WAAO;AACjC;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAe,SAAR,sBAAuC,KAAKC,IAAG;AACpD,MAAI,KAAK,QAAQ,MAAM,OAAO,eAAe,OAAO,UAAU,IAAI,OAAO,QAAQ,KAAK,IAAI,YAAY;AACtG,MAAI,QAAQ,IAAI;AACd,QAAI,IACF,IACA,IACA,IACA,OAAO,CAAC,GACR,KAAK,MACL,KAAK;AACP,QAAI;AACF,UAAI,MAAM,KAAK,GAAG,KAAK,GAAG,GAAG,MAAM,MAAMA,IAAG;AAC1C,YAAI,OAAO,EAAE,MAAM;AAAI;AACvB,aAAK;AAAA,MACP;AAAO,eAAO,EAAE,MAAM,KAAK,GAAG,KAAK,EAAE,GAAG,UAAU,KAAK,KAAK,GAAG,KAAK,GAAG,KAAK,WAAWA,KAAI,KAAK;AAAG;AAAA,IACrG,SAAS,KAAP;AACA,WAAK,MAAI,KAAK;AAAA,IAChB,UAAE;AACA,UAAI;AACF,YAAI,CAAC,MAAM,QAAQ,GAAG,QAAQ,MAAM,KAAK,GAAG,QAAQ,EAAE,GAAG,OAAO,EAAE,MAAM;AAAK;AAAA,MAC/E,UAAE;AACA,YAAI;AAAI,gBAAM;AAAA,MAChB;AAAA,IACF;AACA,WAAO;AAAA,EACT;AACF;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAe,SAAR,kBAAmC,KAAK,KAAK;AAClD,MAAI,OAAO,QAAQ,MAAM,IAAI;AAAQ,UAAM,IAAI;AAC/C,WAASC,KAAI,GAAG,OAAO,IAAI,MAAM,GAAG,GAAGA,KAAI,KAAKA;AAAK,SAAKA,EAAC,IAAI,IAAIA,EAAC;AACpE,SAAO;AACT;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACCe,SAAR,4BAA6CC,IAAG,QAAQ;AAC7D,MAAI,CAACA;AAAG;AACR,MAAI,OAAOA,OAAM;AAAU,WAAO,kBAAiBA,IAAG,MAAM;AAC5D,MAAIC,KAAI,OAAO,UAAU,SAAS,KAAKD,EAAC,EAAE,MAAM,GAAG,EAAE;AACrD,MAAIC,OAAM,YAAYD,GAAE;AAAa,IAAAC,KAAID,GAAE,YAAY;AACvD,MAAIC,OAAM,SAASA,OAAM;AAAO,WAAO,MAAM,KAAKD,EAAC;AACnD,MAAIC,OAAM,eAAe,2CAA2C,KAAKA,EAAC;AAAG,WAAO,kBAAiBD,IAAG,MAAM;AAChH;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAe,SAAR,mBAAoC;AACzC,QAAM,IAAI,UAAU,2IAA2I;AACjK;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACIe,SAAR,eAAgC,KAAKE,IAAG;AAC7C,SAAO,gBAAe,GAAG,KAAK,sBAAqB,KAAKA,EAAC,KAAK,4BAA2B,KAAKA,EAAC,KAAK,iBAAgB;AACtH;AANA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;ACHA,QAAA,wBAAA;AAcA,QAAa,mBAAb,cAAyC,MAAK;MAM5C,YAAY,MAAc,SAAiB,MAAQ;AAEjD,YAAI,CAAC,OAAO,UAAU,IAAI,GAAG;AAC3B,gBAAM,IAAI,MACR,4BAA4B;;AAGhC,YAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,gBAAM,IAAI,MACR,sCAAsC;;AAI1C,cAAM,OAAO;AACb,aAAK,OAAO;AACZ,YAAI,SAAS,QAAW;AACtB,eAAK,OAAO;;MAEhB;;;;MAKA,YAAS;AACP,cAAM,aAAyC;UAC7C,MAAM,KAAK;UACX,SAAS,KAAK;;AAEhB,YAAI,KAAK,SAAS,QAAW;AAC3B,qBAAW,OAAO,KAAK;;AAEzB,YAAI,KAAK,OAAO;AACd,qBAAW,QAAQ,KAAK;;AAE1B,eAAO;MACT;;;;;MAMA,WAAQ;AACN,eAAO,sBAAA,QACL,KAAK,UAAS,GACd,mBACA,CAAC;MAEL;;AArDF,YAAA,mBAAA;AA4DA,QAAa,wBAAb,cAA8C,iBAAmB;;;;;MAM/D,YAAY,MAAc,SAAiB,MAAQ;AAEjD,YAAI,CAAC,uBAAuB,IAAI,GAAG;AACjC,gBAAM,IAAI,MACR,2DAA2D;;AAI/D,cAAM,MAAM,SAAS,IAAI;MAC3B;;AAfF,YAAA,wBAAA;AAoBA,aAAS,uBAAuB,MAAY;AAC1C,aAAO,OAAO,UAAU,IAAI,KAAK,QAAQ,OAAQ,QAAQ;IAC3D;AAEA,aAAS,kBAAkB,GAAYC,QAAc;AACnD,UAAIA,WAAU,cAAc;AAC1B,eAAO;;AAET,aAAOA;IACT;;;;;;;;;;;;AChFa,YAAA,aAAyB;MACpC,KAAK;QACH,cAAc;QACd,kBAAkB;QAClB,qBAAqB;QACrB,qBAAqB;QACrB,oBAAoB;QACpB,eAAe;QACf,OAAO;QACP,gBAAgB;QAChB,gBAAgB;QAChB,eAAe;QACf,UAAU;;MAEZ,UAAU;QACR,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,cAAc;QACd,mBAAmB;;;AAIV,YAAA,cAAc;MACzB,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;;;;;;;;;;;;;AC7Gb,QAAA,oBAAA;AACA,QAAA,YAAA;AAEA,QAAM,sBAAsB,kBAAA,WAAW,IAAI;AAC3C,QAAM,mBAAmB;AACzB,QAAM,iBAA6C;MACjD,MAAM;MACN,SAAS,mBAAmB,mBAAmB;;AAGpC,YAAA,gCAAgC;AAQ7C,aAAgB,mBACd,MACA,kBAA0B,kBAAgB;AAE1C,UAAI,OAAO,UAAU,IAAI,GAAG;AAC1B,cAAM,aAAa,KAAK,SAAQ;AAEhC,YAAI,OAAO,kBAAA,aAAa,UAAU,GAAG;AACnC,iBAAO,kBAAA,YAAY,UAA2B,EAAE;;AAElD,YAAI,qBAAqB,IAAI,GAAG;AAC9B,iBAAO,QAAA;;;AAGX,aAAO;IACT;AAfA,YAAA,qBAAA;AAqBA,aAAgB,YAAY,MAAY;AACtC,UAAI,CAAC,OAAO,UAAU,IAAI,GAAG;AAC3B,eAAO;;AAGT,YAAM,aAAa,KAAK,SAAQ;AAChC,UAAI,kBAAA,YAAY,UAA2B,GAAG;AAC5C,eAAO;;AAGT,UAAI,qBAAqB,IAAI,GAAG;AAC9B,eAAO;;AAET,aAAO;IACT;AAdA,YAAA,cAAA;AAsBA,aAAgBC,gBACd,OACA,EACE,gBAAgB,gBAChB,qBAAqB,MAAK,IACxB,CAAA,GAAE;;AAGN,UACE,CAAC,iBACD,CAAC,OAAO,UAAU,cAAc,IAAI,KACpC,OAAO,cAAc,YAAY,UACjC;AACA,cAAM,IAAI,MACR,0EAA0E;;AAI9E,UAAI,iBAAiB,UAAA,kBAAkB;AACrC,eAAO,MAAM,UAAS;;AAGxB,YAAM,aAAkD,CAAA;AAExD,UACE,SACA,OAAO,UAAU,YACjB,CAAC,MAAM,QAAQ,KAAK,KACpB,OAAO,OAAkC,MAAM,KAC/C,YAAa,MAAqC,IAAI,GACtD;AACA,cAAM,SAAS;AACf,mBAAW,OAAO,OAAO;AAEzB,YAAI,OAAO,WAAW,OAAO,OAAO,YAAY,UAAU;AACxD,qBAAW,UAAU,OAAO;AAE5B,cAAI,OAAO,QAAQ,MAAM,GAAG;AAC1B,uBAAW,OAAO,OAAO;;eAEtB;AACL,qBAAW,UAAU,mBAClB,WAA0C,IAAI;AAGjD,qBAAW,OAAO,EAAE,eAAe,oBAAoB,KAAK,EAAC;;aAE1D;AACL,mBAAW,OAAO,cAAc;AAEhC,cAAM,WAAO,KAAI,WAAa,QAAA,OAAA,SAAA,SAAA,GAAE;AAEhC,mBAAW,UACT,WAAW,OAAO,YAAY,WAC1B,UACA,cAAc;AAEpB,mBAAW,OAAO,EAAE,eAAe,oBAAoB,KAAK,EAAC;;AAG/D,YAAM,SAAK,KAAI,WAAa,QAAA,OAAA,SAAA,SAAA,GAAE;AAE9B,UAAI,sBAAsB,SAAS,SAAS,OAAO,UAAU,UAAU;AACrE,mBAAW,QAAQ;;AAErB,aAAO;IACT;AAlEA,YAAA,iBAAAA;AAsEA,aAAS,qBAAqB,MAAY;AACxC,aAAO,QAAQ,UAAU,QAAQ;IACnC;AAEA,aAAS,oBAAoB,OAAc;AACzC,UAAI,SAAS,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,KAAK,GAAG;AAC/D,eAAO,OAAO,OAAO,CAAA,GAAI,KAAK;;AAEhC,aAAO;IACT;AAEA,aAAS,OAAO,KAA8B,KAAW;AACvD,aAAO,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG;IACtD;;;;;;;;;;;;AChJA,QAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,oBAAA;AAea,YAAA,YAAY;MACvB,KAAK;;;;QAKH,OAAO,CAAI,QAA0B,mBACnC,kBAAA,WAAW,IAAI,OAAO,GAAG;;;;QAM3B,gBAAgB,CAAI,QAA0B,mBAC5C,kBAAA,WAAW,IAAI,gBAAgB,GAAG;;;;QAMpC,eAAe,CAAI,QAA0B,mBAC3C,kBAAA,WAAW,IAAI,eAAe,GAAG;;;;QAMnC,gBAAgB,CAAI,QAA0B,mBAC5C,kBAAA,WAAW,IAAI,gBAAgB,GAAG;;;;QAMpC,UAAU,CAAI,QAA0B,mBACtC,kBAAA,WAAW,IAAI,UAAU,GAAG;;;;;;QAQ9B,QAAQ,CAAI,SAA+B;AACzC,cAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,MAAM,QAAQ,IAAI,GAAG;AAC5D,kBAAM,IAAI,MAAM,iEAAiE;;AAEnF,gBAAM,EAAE,KAAI,IAAK;AACjB,cAAI,CAAC,OAAO,UAAU,IAAI,KAAK,OAAO,UAAU,OAAO,QAAQ;AAC7D,kBAAM,IAAI,MACR,+DAA+D;;AAGnE,iBAAO,mBAAmB,MAAM,IAAI;QACtC;;;;QAKA,cAAc,CAAI,QAA0B,mBAC1C,kBAAA,WAAW,IAAI,cAAc,GAAG;;;;QAMlC,kBAAkB,CAAI,QAA0B,mBAC9C,kBAAA,WAAW,IAAI,kBAAkB,GAAG;;;;QAMtC,qBAAqB,CAAI,QAA0B,mBACjD,kBAAA,WAAW,IAAI,qBAAqB,GAAG;;;;QAMzC,qBAAqB,CAAI,QAA0B,mBACjD,kBAAA,WAAW,IAAI,qBAAqB,GAAG;;;;QAMzC,oBAAoB,CAAI,QAA0B,mBAChD,kBAAA,WAAW,IAAI,oBAAoB,GAAG;;;;QAMxC,eAAe,CAAI,QAA0B,mBAC3C,kBAAA,WAAW,IAAI,eAAe,GAAG;;MAIrC,UAAU;;;;QAKR,qBAAqB,CAAI,QAAyB;AAChD,iBAAO,oBACL,kBAAA,WAAW,SAAS,qBAAqB,GAAG;QAEhD;;;;QAKA,cAAc,CAAI,QAAyB;AACzC,iBAAO,oBACL,kBAAA,WAAW,SAAS,cAAc,GAAG;QAEzC;;;;QAKA,mBAAmB,CAAI,QAAyB;AAC9C,iBAAO,oBACL,kBAAA,WAAW,SAAS,mBAAmB,GAAG;QAE9C;;;;QAKA,cAAc,CAAI,QAAyB;AACzC,iBAAO,oBACL,kBAAA,WAAW,SAAS,cAAc,GAAG;QAEzC;;;;QAKA,mBAAmB,CAAI,QAAyB;AAC9C,iBAAO,oBACL,kBAAA,WAAW,SAAS,mBAAmB,GAAG;QAE9C;;;;QAKA,QAAQ,CAAI,SAA2B;AACrC,cAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,MAAM,QAAQ,IAAI,GAAG;AAC5D,kBAAM,IAAI,MAAM,sEAAsE;;AAGxF,gBAAM,EAAE,MAAM,SAAS,KAAI,IAAK;AAEhC,cAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,kBAAM,IAAI,MACR,qCAAqC;;AAGzC,iBAAO,IAAI,UAAA,sBAAsB,MAAM,SAAS,IAAI;QACtD;;;AAMJ,aAAS,mBAAsB,MAAc,KAAqB;AAChE,YAAM,CAAC,SAAS,IAAI,IAAI,UAAU,GAAG;AACrC,aAAO,IAAI,UAAA,iBACT,MACA,WAAW,QAAA,mBAAmB,IAAI,GAClC,IAAI;IAER;AAEA,aAAS,oBAAuB,MAAc,KAAqB;AACjE,YAAM,CAAC,SAAS,IAAI,IAAI,UAAU,GAAG;AACrC,aAAO,IAAI,UAAA,sBACT,MACA,WAAW,QAAA,mBAAmB,IAAI,GAClC,IAAI;IAER;AAEA,aAAS,UAAa,KAAqB;AACzC,UAAI,KAAK;AACP,YAAI,OAAO,QAAQ,UAAU;AAC3B,iBAAO,CAAC,GAAG;mBACF,OAAO,QAAQ,YAAY,CAAC,MAAM,QAAQ,GAAG,GAAG;AACzD,gBAAM,EAAE,SAAS,KAAI,IAAK;AAE1B,cAAI,WAAW,OAAO,YAAY,UAAU;AAC1C,kBAAM,IAAI,MAAM,8BAA8B;;AAEhD,iBAAO,CAAC,WAAW,QAAW,IAAI;;;AAGtC,aAAO,CAAA;IACT;;;;;;;;;;;;ACzNA,QAAA,YAAA;AAUE,WAAA,eAAA,SAAA,oBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAVO,UAAA;IAAgB,EAAA,CAAA;AAWvB,WAAA,eAAA,SAAA,yBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAXyB,UAAA;IAAqB,EAAA,CAAA;AAChD,QAAA,UAAA;AAWE,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAVA,QAAA;IAAc,EAAA,CAAA;AAWd,WAAA,eAAA,SAAA,sBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAXgB,QAAA;IAAkB,EAAA,CAAA;AAEpC,QAAA,WAAA;AAKE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aALO,SAAA;IAAS,EAAA,CAAA;AAClB,QAAA,oBAAA;AAGE,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAHO,kBAAA;IAAU,EAAA,CAAA;;;;;ACLnB;AAAA;AAAA;AAAA;AAKA,WAAO,UAAU;AACjB,aAAS,OAAQ,IAAI,IAAI;AACvB,UAAI,MAAM;AAAI,eAAO,OAAO,EAAE,EAAE,EAAE;AAElC,UAAI,OAAO,OAAO;AAChB,cAAM,IAAI,UAAU,uBAAuB;AAE7C,aAAO,KAAK,EAAE,EAAE,QAAQ,SAAU,GAAG;AACnC,gBAAQ,CAAC,IAAI,GAAG,CAAC;AAAA,MACnB,CAAC;AAED,aAAO;AAEP,eAAS,UAAU;AACjB,YAAI,OAAO,IAAI,MAAM,UAAU,MAAM;AACrC,iBAASC,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACpC,eAAKA,EAAC,IAAI,UAAUA,EAAC;AAAA,QACvB;AACA,YAAI,MAAM,GAAG,MAAM,MAAM,IAAI;AAC7B,YAAIC,MAAK,KAAK,KAAK,SAAO,CAAC;AAC3B,YAAI,OAAO,QAAQ,cAAc,QAAQA,KAAI;AAC3C,iBAAO,KAAKA,GAAE,EAAE,QAAQ,SAAU,GAAG;AACnC,gBAAI,CAAC,IAAIA,IAAG,CAAC;AAAA,UACf,CAAC;AAAA,QACH;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAAA;AAAA;;;AChCA;AAAA;AAAA;AAAA;AAAA,QAAI,SAAS;AACb,WAAO,UAAU,OAAOC,KAAI;AAC5B,WAAO,QAAQ,SAAS,OAAO,UAAU;AAEzC,IAAAA,MAAK,QAAQA,MAAK,WAAY;AAC5B,aAAO,eAAe,SAAS,WAAW,QAAQ;AAAA,QAChD,OAAO,WAAY;AACjB,iBAAOA,MAAK,IAAI;AAAA,QAClB;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAED,aAAO,eAAe,SAAS,WAAW,cAAc;AAAA,QACtD,OAAO,WAAY;AACjB,iBAAO,WAAW,IAAI;AAAA,QACxB;AAAA,QACA,cAAc;AAAA,MAChB,CAAC;AAAA,IACH,CAAC;AAED,aAASA,MAAM,IAAI;AACjB,UAAI,IAAI,WAAY;AAClB,YAAI,EAAE;AAAQ,iBAAO,EAAE;AACvB,UAAE,SAAS;AACX,eAAO,EAAE,QAAQ,GAAG,MAAM,MAAM,SAAS;AAAA,MAC3C;AACA,QAAE,SAAS;AACX,aAAO;AAAA,IACT;AAEA,aAAS,WAAY,IAAI;AACvB,UAAI,IAAI,WAAY;AAClB,YAAI,EAAE;AACJ,gBAAM,IAAI,MAAM,EAAE,SAAS;AAC7B,UAAE,SAAS;AACX,eAAO,EAAE,QAAQ,GAAG,MAAM,MAAM,SAAS;AAAA,MAC3C;AACA,UAAI,OAAO,GAAG,QAAQ;AACtB,QAAE,YAAY,OAAO;AACrB,QAAE,SAAS;AACX,aAAO;AAAA,IACT;AAAA;AAAA;;;ACzCA;AAAA;AAAA;AAAA;AAAA,QAAIC,QAAO;AAEX,QAAIC,QAAO,WAAW;AAAA,IAAC;AAEvB,QAAI,YAAY,SAAS,QAAQ;AAChC,aAAO,OAAO,aAAa,OAAO,OAAO,UAAU;AAAA,IACpD;AAEA,QAAI,iBAAiB,SAAS,QAAQ;AACrC,aAAO,OAAO,SAAS,MAAM,QAAQ,OAAO,KAAK,KAAK,OAAO,MAAM,WAAW;AAAA,IAC/E;AAEA,QAAIC,OAAM,SAAS,QAAQ,MAAM,UAAU;AAC1C,UAAI,OAAO,SAAS;AAAY,eAAOA,KAAI,QAAQ,MAAM,IAAI;AAC7D,UAAI,CAAC;AAAM,eAAO,CAAC;AAEnB,iBAAWF,MAAK,YAAYC,KAAI;AAEhC,UAAI,KAAK,OAAO;AAChB,UAAI,KAAK,OAAO;AAChB,UAAI,WAAW,KAAK,YAAa,KAAK,aAAa,SAAS,OAAO;AACnE,UAAI,WAAW,KAAK,YAAa,KAAK,aAAa,SAAS,OAAO;AACnE,UAAI,YAAY;AAEhB,UAAI,iBAAiB,WAAW;AAC/B,YAAI,CAAC,OAAO;AAAU,mBAAS;AAAA,MAChC;AAEA,UAAI,WAAW,WAAW;AACzB,mBAAW;AACX,YAAI,CAAC;AAAU,mBAAS,KAAK,MAAM;AAAA,MACpC;AAEA,UAAI,QAAQ,WAAW;AACtB,mBAAW;AACX,YAAI,CAAC;AAAU,mBAAS,KAAK,MAAM;AAAA,MACpC;AAEA,UAAI,SAAS,SAAS,UAAU;AAC/B,iBAAS,KAAK,QAAQ,WAAW,IAAI,MAAM,6BAA6B,QAAQ,IAAI,IAAI;AAAA,MACzF;AAEA,UAAI,UAAU,SAAS,KAAK;AAC3B,iBAAS,KAAK,QAAQ,GAAG;AAAA,MAC1B;AAEA,UAAI,UAAU,WAAW;AACxB,gBAAQ,SAAS,eAAe;AAAA,MACjC;AAEA,UAAI,kBAAkB,WAAW;AAChC,YAAI;AAAW;AACf,YAAI,YAAY,EAAE,OAAO,GAAG,SAAS,CAAC,GAAG;AAAa,iBAAO,SAAS,KAAK,QAAQ,IAAI,MAAM,iBAAiB,CAAC;AAC/G,YAAI,YAAY,EAAE,OAAO,GAAG,SAAS,CAAC,GAAG;AAAa,iBAAO,SAAS,KAAK,QAAQ,IAAI,MAAM,iBAAiB,CAAC;AAAA,MAChH;AAEA,UAAI,YAAY,WAAW;AAC1B,eAAO,IAAI,GAAG,UAAU,QAAQ;AAAA,MACjC;AAEA,UAAI,UAAU,MAAM,GAAG;AACtB,eAAO,GAAG,YAAY,QAAQ;AAC9B,eAAO,GAAG,SAAS,OAAO;AAC1B,YAAI,OAAO;AAAK,oBAAU;AAAA;AACrB,iBAAO,GAAG,WAAW,SAAS;AAAA,MACpC,WAAW,YAAY,CAAC,IAAI;AAC3B,eAAO,GAAG,OAAO,cAAc;AAC/B,eAAO,GAAG,SAAS,cAAc;AAAA,MAClC;AAEA,UAAI,eAAe,MAAM;AAAG,eAAO,GAAG,QAAQ,MAAM;AAEpD,aAAO,GAAG,OAAO,KAAK;AACtB,aAAO,GAAG,UAAU,QAAQ;AAC5B,UAAI,KAAK,UAAU;AAAO,eAAO,GAAG,SAAS,OAAO;AACpD,aAAO,GAAG,SAAS,OAAO;AAE1B,aAAO,WAAW;AACjB,oBAAY;AACZ,eAAO,eAAe,YAAY,QAAQ;AAC1C,eAAO,eAAe,SAAS,OAAO;AACtC,eAAO,eAAe,WAAW,SAAS;AAC1C,YAAI,OAAO;AAAK,iBAAO,IAAI,eAAe,UAAU,QAAQ;AAC5D,eAAO,eAAe,OAAO,cAAc;AAC3C,eAAO,eAAe,SAAS,cAAc;AAC7C,eAAO,eAAe,UAAU,QAAQ;AACxC,eAAO,eAAe,QAAQ,MAAM;AACpC,eAAO,eAAe,OAAO,KAAK;AAClC,eAAO,eAAe,SAAS,OAAO;AACtC,eAAO,eAAe,SAAS,OAAO;AAAA,MACvC;AAAA,IACD;AAEA,WAAO,UAAUC;AAAA;AAAA;;;AC7FjB;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,kFAAkF,uIAAuI;AAAA,QACxO;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA;AAAA;AAAA,QAAIC,QAAO;AACX,QAAIC,OAAM;AACV,QAAI,KAAK;AAET,QAAIC,QAAO,WAAY;AAAA,IAAC;AACxB,QAAI,UAAU,SAAS,KAAK,QAAQ,OAAO;AAE3C,QAAI,OAAO,SAAU,IAAI;AACvB,aAAO,OAAO,OAAO;AAAA,IACvB;AAEA,QAAI,OAAO,SAAU,QAAQ;AAC3B,UAAI,CAAC;AAAS,eAAO;AACrB,UAAI,CAAC;AAAI,eAAO;AAChB,cAAQ,mBAAmB,GAAG,cAAcA,UAAS,mBAAmB,GAAG,eAAeA,WAAU,KAAK,OAAO,KAAK;AAAA,IACvH;AAEA,QAAI,YAAY,SAAU,QAAQ;AAChC,aAAO,OAAO,aAAa,KAAK,OAAO,KAAK;AAAA,IAC9C;AAEA,QAAI,YAAY,SAAU,QAAQ,SAAS,SAAS,UAAU;AAC5D,iBAAWF,MAAK,QAAQ;AAExB,UAAI,SAAS;AACb,aAAO,GAAG,SAAS,WAAY;AAC7B,iBAAS;AAAA,MACX,CAAC;AAED,MAAAC,KAAI,QAAQ,EAAC,UAAU,SAAS,UAAU,QAAO,GAAG,SAAU,KAAK;AACjE,YAAI;AAAK,iBAAO,SAAS,GAAG;AAC5B,iBAAS;AACT,iBAAS;AAAA,MACX,CAAC;AAED,UAAI,YAAY;AAChB,aAAO,SAAU,KAAK;AACpB,YAAI;AAAQ;AACZ,YAAI;AAAW;AACf,oBAAY;AAEZ,YAAI,KAAK,MAAM;AAAG,iBAAO,OAAO,MAAMC,KAAI;AAC1C,YAAI,UAAU,MAAM;AAAG,iBAAO,OAAO,MAAM;AAE3C,YAAI,KAAK,OAAO,OAAO;AAAG,iBAAO,OAAO,QAAQ;AAEhD,iBAAS,OAAO,IAAI,MAAM,sBAAsB,CAAC;AAAA,MACnD;AAAA,IACF;AAEA,QAAI,OAAO,SAAU,IAAI;AACvB,SAAG;AAAA,IACL;AAEA,QAAI,OAAO,SAAU,MAAM,IAAI;AAC7B,aAAO,KAAK,KAAK,EAAE;AAAA,IACrB;AAEA,QAAIC,QAAO,WAAY;AACrB,UAAI,UAAU,MAAM,UAAU,MAAM,KAAK,SAAS;AAClD,UAAI,WAAW,KAAK,QAAQ,QAAQ,SAAS,CAAC,KAAKD,KAAI,KAAK,QAAQ,IAAI,KAAKA;AAE7E,UAAI,MAAM,QAAQ,QAAQ,CAAC,CAAC;AAAG,kBAAU,QAAQ,CAAC;AAClD,UAAI,QAAQ,SAAS;AAAG,cAAM,IAAI,MAAM,uCAAuC;AAE/E,UAAI;AACJ,UAAI,WAAW,QAAQ,IAAI,SAAU,QAAQE,IAAG;AAC9C,YAAI,UAAUA,KAAI,QAAQ,SAAS;AACnC,YAAI,UAAUA,KAAI;AAClB,eAAO,UAAU,QAAQ,SAAS,SAAS,SAAU,KAAK;AACxD,cAAI,CAAC;AAAO,oBAAQ;AACpB,cAAI;AAAK,qBAAS,QAAQ,IAAI;AAC9B,cAAI;AAAS;AACb,mBAAS,QAAQ,IAAI;AACrB,mBAAS,KAAK;AAAA,QAChB,CAAC;AAAA,MACH,CAAC;AAED,aAAO,QAAQ,OAAO,IAAI;AAAA,IAC5B;AAEA,WAAO,UAAUD;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/EjB,SAASE,OAAI;AACX,SAAOC;AACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGA,SAASC,UAA8BC,SAA+CC,SAAYC,MAAO;AACvG,MAAI;AACFC,YAAQC,MAAMJ,SAASC,SAASC,IAAI;WAC7BG,KAAP;AAEAC,eAAW,WAAK;AACd,YAAMD;IACR,CAAC;EACF;AACH;AAEA,SAASE,WAAcC,KAAQ;AAC7B,MAAMC,KAAID,IAAIE;AACd,MAAMC,OAAO,IAAIC,MAAMH,EAAC;AACxB,WAASI,KAAI,GAAGA,KAAIJ,IAAGI,MAAK,GAAG;AAC7BF,SAAKE,EAAC,IAAIL,IAAIK,EAAC;EAChB;AACD,SAAOF;AACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SEwDgBG,yBAAsB;AACpC,MAAMC,QAAe,CAAA;AAErB,WAASC,WAAQ;AACf,WAAO;EACT;AAEA,MAAMC,SAAS,IAAIC,iBAAgB;AAEnC,WAASC,gBAAgBC,KAA0B;AACjD,QAAMnB,UAAUc,MAAMK,IAAIC,EAAuB;AACjD,QAAI,CAACpB,SAAS;AACZ,YAAM,IAAIqB,MAAK,2CAAA,OAA4CF,IAAIC,IAAM,GAAA,CAAA;IACtE;AAED,WAAON,MAAMK,IAAIC,EAAuB;AAExCE,WAAOC,OAAOvB,QAAQmB,KAAKA,GAAG;AAG9Bd,eAAWL,QAAQwB,GAAG;EACxB;AAEA,WAASC,oBAAoBN,KAAyB;AACpDH,WAAOU,KAAK,gBAAgBP,GAAG;EACjC;AAEA,WAASQ,eAAeR,KAA4BS,WAAoBC,IAAkC;AACxG,QAAIzB;AACJ,QAAI;AACF,UAAM0B,iBAAiB,CAACX,IAAIC;AAC5B,UAAIU,gBAAgB;AAClBL,4BAAoBN,GAAsC;MAC3D,OAAM;AACLD,wBAAgBC,GAAG;MACpB;aACMY,MAAP;AACA3B,YAAM2B;IACP;AAEDF,OAAGzB,GAAG;EACR;AAEA,MAAM4B,SAAS,IAAIC,8BAAO;IACxBC,YAAY;IACZC,MAAMpB;IACNqB,OAAOT;EACR,CAAA;AAED,MAAMU,aAA+C,SAA/CA,YAAgDC,KAAKnB,KAAKoB,MAAMf,KAAO;AAE3EQ,WAAOQ,KAAKF,GAAG;AAEfxB,UAAMwB,IAAIlB,EAAuB,IAAI;MAAEkB;MAAKnB;MAAKoB;MAAMf;;;AAGzD,SAAO;IAAER;IAAQqB;IAAYL;;AAC/B;AAIM,SAAUS,yBAAyBC,UAExC;AACC,SAAO,SAACJ,KAAKnB,KAAKoB,MAAMf,KAAO;AAC7B,QAAMzB,UAAU2C,SAASJ,IAAIK,MAAM;AAEnC,QAAI5C,YAAYF,QAAW;AACzB,aAAO0C,KAAI;IACZ;AAED,QAAI,OAAOxC,YAAY,YAAY;AACjC,aAAOA,QAAQuC,KAAKnB,KAAKoB,MAAMf,GAAG;IACnC;AAEDL,QAAIyB,SAAS7C;AACb,WAAOyB,IAAG;;AAEd;SAEgBqB,0BAAuB;AACrC,SAAO,SAACP,KAAKnB,KAAKoB,MAAMO,MAAQ;AAC9B,QAAMC,aAAaT,IAAIlB;AACvB,QAAM4B,QAAQC,SAAQ;AACtBX,QAAIlB,KAAK4B;AACT7B,QAAIC,KAAK4B;AACTT,SAAK,SAACW,MAAQ;AACZZ,UAAIlB,KAAK2B;AACT5B,UAAIC,KAAK2B;AACTG,WAAI;IACN,CAAC;;AAEL;AAqCM,SAAUC,sBAA4BC,iBAA0C;AACpF,SAAA,WAAA;AAAA,QAAA,OAAA,kBAAA,mBAAAC,QAAA,KAAO,SAAA,SAAOf,KAAKnB,KAAKoB,MAAMf,KAAG;AAAA,UAAA,oBAAA,aAAA,uBAAA,eAAA;AAAA,aAAA,mBAAA6B,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,eAAA,GAAA;AAAA,kBAAA,UAAA,OAAA,UAAA,MAAA;YAAA,KAAA;AAKzBC,4BAAc,IAAIC,QAAc,SAACC,SAAW;AAChDC,qCAAqBD;cACvB,CAAC;AAEGE,sCAAiC;AACjCC,8BAAgB;AAGdC,0BAAS,WAAA;AAAA,oBAAG,QAAA,kBAAA,mBAAAP,QAAA,KAAA,SAAA,UAAA;AAAA,yBAAA,mBAAAA,QAAA,KAAA,SAAA,SAAA,UAAA;AAAA,2BAAA,GAAA;AAAA,8BAAA,SAAA,OAAA,SAAA,MAAA;wBAAA,KAAA;AAChBM,0CAAgB;AAKhBpB,+BAAK,SAACsB,2BAA6B;AAEjCH,oDAAwBG;AACxBJ,+CAAkB;0BACpB,CAAC;AAAE,mCAAA,OAAA;AAAA,iCACGH;wBAAW,KAAA;wBAAA,KAAA;AAAA,iCAAA,SAAA,KAAA;sBAAA;oBAAA;kBAAA,GAAA,OAAA;iBAClB,CAAA;AAAA,uBAAA,SAZKM,aAAS;AAAA,yBAAA,MAAA,MAAA,MAAA,SAAA;gBAAA;cAAA,EAAA;AAAA,wBAAA,OAAA;AAAA,wBAAA,OAAA;AAAA,qBAePR,gBAAgBd,KAAKnB,KAAKyC,SAAS;YAAC,KAAA;AAAA,kBAAA,CAEtCD,eAAa;AAAA,0BAAA,OAAA;AAAA;cAAA;AAAA,wBAAA,OAAA;AAAA,qBACTL;YAAW,KAAA;AAChBI,oCAAgD,IAAI;AAAE,wBAAA,OAAA;AAAA;YAAA,KAAA;AAEvDlC,kBAAI,IAAI;YAAE,KAAA;AAAA,wBAAA,OAAA;AAAA;YAAA,KAAA;AAAA,wBAAA,OAAA;AAAA,wBAAA,KAAA,UAAA,OAAA,EAAA,CAAA;AAGZ,kBAAIkC,uBAAuB;AACxBA,sCAAsD,UAAA,EAAA;cACxD,OAAM;AACLlC,oBAAU,UAAA,EAAA;cACX;YAAA,KAAA;YAAA,KAAA;AAAA,qBAAA,UAAA,KAAA;UAAA;QAAA;MAAA,GAAA,UAAA,MAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA;KAEJ,CAAA;AAAA,WAAA,SAAA,IAAA,KAAA,KAAA,KAAA;AAAA,aAAA,KAAA,MAAA,MAAA,SAAA;IAAA;EAAA,EAAA;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4EM,SAAUsC,gBAAgBC,iBAAmD;AACjF,MAAMC,SAAS,IAAIC,WAAU;AAC7BF,kBAAgBG,QAAQ,SAAC7B,YAAU;AAAA,WAAK2B,OAAOxB,KAAKH,UAAU;GAAE;AAChE,SAAO2B,OAAOG,aAAY;AAC5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjPA,SAASC,aAAapC,QAAyBqC,KAAmC;AAChF,MAAMxC,SAAKyC,YAAAA,SAAKD,GAAG;AACnBE,2BAAAA,SAAIvC,QAA6B;IAAEwC,UAAU;KAAS3C,EAAE;AACxD0C,2BAAAA,SAAIvC,QAA6B;IAAEyC,UAAU;KAAS5C,EAAE;AAC1D;AAEM,SAAU6C,eAAe1C,QAAc;AAC3C,MAAM2C,MAAM,IAAIC,gBAAe;AAC/BD,MAAIE,YAAY,SAASC,aAAaC,MAAY;AAChD,QAAI,KAAKC,YAAYD,IAAI,GAAG;AAC1B,aAAO,KAAKC,YAAYD,IAAI;IAC7B;AACD,WAAO,KAAKE,aAAaF,IAAI;;AAG/BG,kBAAAA,SAAKlD,QAA6B2C,KAA0B3C,QAA6B,SAAC5B,KAAO;AAC/F,QAAIA;AAAK+E,aAAOC,QAAQC,MAAMjF,GAAG;EACnC,CAAC;AACD,SAAOuE;AACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kKN3GMW,KACAC,KACAC,KAEeC,uBCiBAxE,kBCzBAyE,mBCoBRC,uBCXA1B,YCRQ2B,WCMRC,kBASAjB,iBChBQkB;;;;;;;;;;;;;;;;;;;;;;;;;APIrB,IAAMR,MAAM;AACZ,IAAMC,MAAM;AACZ,IAAMC,MAAM;AAAM,IAEGC,wBAAsB,SAAA,SAAA;AAAA,gBAAAA,wBAAA,OAAA;AAAA,UAAA,SAAAM,eAAAN,sBAAA;AAiBzC,eAUCA,uBAAA,MAAA;AAAA,YAAA;AAAA,YATCV,OAAI,KAAJA,MACAiB,SAAM,KAANA,QAAM,oBAAA,KACNC,cAAAA,eAAY,sBAAA,SAAGd,SAAM,mBAAA,oBAAA,KACrBe,cAAAA,eAAY,sBAAA,SAAG,MAAG;AAAA,wBAAA,MAAAT,sBAAA;AAOlB,gBAAM,OAAA,KAAA,MAAA;UACJvD,YAAY;SACb;AAAE,wBAAA,uBAAA,KAAA,GAAA,SAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,YAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,SAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,WAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,iBAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,iBAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,cAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,kBAAA,MAAA;AACH,YAAI,CAAC6C,QAAQ,CAACiB,QAAQ;AACpB,gBAAM,IAAI3E,MAAM,gBAAgB;QACjC;AACD,cAAK8E,QAAQ;AACb,cAAKC,WAAW;AAChB,cAAKC,QAAQtB;AACb,cAAKuB,UAAUN;AACf,cAAKO,gBAAgBN;AACrB,cAAKO,gBAAgBN;AACrB,cAAKO,aAAa,MAAKC,UAAUC,KAAU,uBAAA,KAAA,CAAA;AAC3C,cAAKC,iBAAiB;AAEtBzB,eAAO0B,iBAAiB,WAAW,MAAKJ,YAAY,KAAK;AACzD,cAAKK,WAAU;AAAG,eAAA;MACpB;AAAC,mBAAArB,wBAAA,CAAA;QAAA,KAAA;QAAA,OAED,SAAM,SAAA;AACJ,eAAKsB,KAAI;AACT,eAAKC,OAAOxB,KAAK,MAAM5F,IAAI;AAC3B,eAAKwG,WAAW;AAChB,eAAKD,QAAQ;QACf;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAU,aAAA;AACR,eAAKa,OAAO1B,KAAK,MAAM1F,IAAI;AAC3B,eAAKmH,KAAI;QACX;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAA,QAAQE,MAAa;AACnB,cAAI,CAAC,KAAKd,OAAO;AAEf,gBAAIc,SAAS3B,KAAK;AAChB,mBAAKc,WAAW;AAChB,mBAAKY,OAAOzB,KAAK,MAAM3F,IAAI;YAC5B,WAAUqH,SAAS1B,KAAK;AACvB,mBAAKY,QAAQ;AACb,kBAAI,CAAC,KAAKC,UAAU;AAClB,qBAAKY,OAAOzB,KAAK,MAAM3F,IAAI;cAC5B;AACD,mBAAKsH,OAAM;YACZ;UACF,WAAUD,SAASzB,KAAK;AACvB,iBAAK2B,OAAM;UACZ,OAAM;AAEL,gBAAI;AACF,mBAAK3E,KAAKyE,IAAI;qBACP7G,KAAP;AACA,mBAAKsB,KAAK,SAAStB,GAAG;YACvB;UACF;QACH;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAA,aAAa6G,MAAa;AACxB,cAAMG,mBAAmB,KAAKZ;AAC9B,eAAKD,cAAcc,YACjB;YACErB,QAAQ,KAAKM;YACbW;aAEFG,gBAAgB;QAEpB;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAAV,WAAUY,OAAmB;AAC3B,cAAMC,UAAUD,MAAML;AAGtB,cACG,KAAKT,kBAAkB,OAAOc,MAAME,WAAW,KAAKhB,iBACrDc,MAAMG,WAAW,KAAKlB,iBACtB,QAAOgB,OAAO,MAAK,YACnBA,QAAQvB,WAAW,KAAKK,SACxB,CAACkB,QAAQN,MACT;AACA;UACD;AAED,eAAKS,QAAQH,QAAQN,IAAI;QAC3B;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAK,QAAA;AACH,iBAAOpH;QACT;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAA,OAAOoH,MAAeU,GAAG9F,IAAc;AACrC,eAAK+F,aAAaX,IAAI;AACtBpF,aAAE;QACJ;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAQ,WAAA;AACNsD,iBAAO0C,oBAAoB,WAAW,KAAKpB,YAAY,KAAK;QAC9D;MAAC,CAAA,CAAA;AAAA,aAAAhB;IAAA,EA3HgDxD,6BAAM;ACexD,IAEoBhB,mBAAiB,SAAA,eAAA;AAAA,gBAAAA,mBAAA,aAAA;AAAA,UAAA,SAAA8E,eAAA9E,iBAAA;AAAA,eAAAA,oBAAA;AAAA,wBAAA,MAAAA,iBAAA;AAAA,eAAA,OAAA,MAAA,MAAA,SAAA;MAAA;AAAA,mBAAAA,mBAAA,CAAA;QAAA,KAAA;QAAA,OACpC,SAAA,KAAK6G,OAA4B;AAC/B,cAAIC,UAAUD,UAAS;AAEvB,cAAM9G,SAAoB,KAAagH;AACvC,cAAIhH,WAAWnB,QAAW;AACxBkI,sBAAUA,WAAW/G,OAAOqE,UAAUxF;UACvC,WAAU,CAACkI,SAAS;AACnB,mBAAO;UACR;AAED,mBAAA,OAAA,UAAA,QAVoB9H,OAAW,IAAA,MAAA,OAAA,IAAA,OAAA,IAAA,CAAA,GAAA,OAAA,GAAA,OAAA,MAAA,QAAA;AAAXA,iBAAW,OAAA,CAAA,IAAA,UAAA,IAAA;UAAA;AAW/B,cAAI8H,SAAS;AACX,gBAAIE;AACJ,gBAAIhI,KAAKQ,SAAS,GAAG;AAClBwH,mBAAMhI,KAAI,CAAA;YACZ;AACD,gBAAIgI,cAAc5G,OAAO;AAGvB,oBAAM4G;YACP;AAED,gBAAM7H,MAAM,IAAIiB,MAAyB4G,mBAAAA,OAAAA,KAAUA,KAAAA,OAAAA,GAAGV,SAAa,GAAA,IAAA,EAAE,CAAG;AACvEnH,gBAAYJ,UAAUiI;AACvB,kBAAM7H;UACP;AAED,cAAML,UAAUiB,OAAO8G,KAAI;AAE3B,cAAI/H,YAAYF,QAAW;AACzB,mBAAO;UACR;AAED,cAAI,OAAOE,YAAY,YAAY;AACjCD,sBAAUC,SAAS,MAAME,IAAI;UAC9B,OAAM;AACL,gBAAMiI,MAAMnI,QAAQU;AACpB,gBAAM0H,YAAY7H,WAAWP,OAAO;AACpC,qBAASa,KAAI,GAAGA,KAAIsH,KAAKtH,MAAK,GAAG;AAC/Bd,wBAAUqI,UAAUvH,EAAC,GAAG,MAAMX,IAAI;YACnC;UACF;AAED,iBAAO;QACT;MAAC,CAAA,CAAA;AAAA,aAAAgB;IAAA,EA7C2CmH,0BAAY;AC3Bd,IAEvB1C,oBAAqB,SAAA,QAAA;AAAA,gBAAAA,oBAAA,MAAA;AAAA,UAAA,SAAAK,eAAAL,kBAAA;AAKxC,eAAgFA,mBAAA,MAAA;AAAA,YAAA;AAAA,YAAlE2C,OAAI,KAAJA,MAAMd,UAAO,KAAPA,SAASN,OAAI,KAAJA;AAAI,wBAAA,MAAAvB,kBAAA;AAC/B,YAAI,CAAC4C,OAAOC,UAAUF,IAAI,GAAG;AAC3B,gBAAM,IAAIhH,MAAM,yBAAyB;QAC1C;AACD,YAAI,CAACkG,WAAW,OAAOA,YAAY,UAAU;AAC3C,gBAAM,IAAIlG,MAAM,wBAAwB;QACzC;AAED,gBAAA,OAAA,KAAA,MAAMkG,OAAO;AAAE,wBAAA,uBAAA,KAAA,GAAA,QAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,QAAA,MAAA;AACf,cAAKc,OAAOA;AACZ,YAAIpB,SAASpH,QAAW;AACtB,gBAAKoH,OAAOA;QACb;AAAA,eAAA;MACH;AAAC,mBAAAvB,oBAAA,CAAA;QAAA,KAAA;QAAA,OAED,SAAQ8C,YAAA;AACN,qBAAOC,2BAAAA,SAAU;YACfJ,MAAM,KAAKA;YACXd,SAAS,KAAKA;YACdN,MAAM,KAAKA;YACXyB,OAAO,KAAKA;UACb,CAAA;QACH;MAAC,CAAA,CAAA;AAAA,aAAAhD;IAAA,EAAA,iBA3B+CrE,KAAK,CAAA;ACoBhD,IAAMsE,wBACX,SADWA,uBACVnC,SAAgCmF,QAA+B;AAAA,UAAEC,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AAAI,aACrF,SAACvD,OAAcwD,UAAyC;AACtD,YAAIxD,SAASwD,SAASxD,OAAO;AAC3BsD,iBAAOtD,SAASwD,SAASxD,KAAK;mBACrB,CAACuD,gBAAgBjI,MAAMmI,QAAQD,QAAQ,GAAG;AACnDrF,kBAAQqF,QAAQ;QACjB,OAAM;AACLrF,kBAAQqF,SAASjG,MAAM;QACxB;;IACF;ACrBH,IAAaqB,aAAW,SAAA,mBAAA;AAAA,gBAAAA,aAAA,iBAAA;AAAA,UAAA,SAAA8B,eAAA9B,WAAA;AAGtB,eAAAA,cAAA;AAAA,YAAA;AAAA,wBAAA,MAAAA,WAAA;AACE,gBAAA,OAAA,KAAA,IAAA;AAAQ,wBAAA,uBAAA,KAAA,GAAA,eAAA,MAAA;AACR,cAAK8E,cAAc,CAAA;AAAG,eAAA;MACxB;AAEA,mBAAA9E,aAAA,CAAA;QAAA,KAAA;QAAA;;;;;;UA4GA,SAAA,KAAW5B,YAAgC;AACzC,iBAAK0G,YAAYvG,KAAKH,UAA8C;UACtE;;MAAC,GAAA;QAAA,KAAA;QAAA,OAqCD,SAAOC,OAAAA,KAAcT,IAAQ;AAC3B,cAAIA,MAAM,OAAOA,OAAO,YAAY;AAClC,kBAAM,IAAIR,MAAM,4CAA4C;UAC7D;AAED,cAAIV,MAAMmI,QAAQxG,GAAG,GAAG;AACtB,gBAAIT,IAAI;AACN,qBAAO,KAAKmH,aAAa1G,KAAKT,EAAE;YACjC;AACD,mBAAO,KAAKmH,aAAa1G,GAAG;UAC7B;AAED,cAAIT,IAAI;AACN,mBAAO,KAAKoH,QAAQ3G,KAA6BT,EAAE;UACpD;AACD,iBAAO,KAAKqH,eAAe5G,GAA2B;QACxD;;;;;;;MAEA,GAAA;QAAA,KAAA;QAAA,OAMA,SAAY,eAAA;AAAA,cAAA,SAAA;AACV,iBAAA,WAAA;AAAA,gBAAA,OAAA,kBAAA,mBAAAe,QAAA,KAAO,SAAA,SAAOf,KAAKnB,KAAKoB,MAAMf,KAAG;AAAA,kBAAA,uBAAA,wBAAA,iBAAA,YAAA;AAAA,qBAAA,mBAAA6B,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,uBAAA,GAAA;AAAA,0BAAA,UAAA,OAAA,UAAA,MAAA;oBAAA,KAAA;AAAA,gCAAA,OAAA;AAAA,gCAAA,OAAA;AAAA,6BAE+BY,YAAWkF,kBAAkB7G,KAAKnB,KAAK,OAAK4H,WAAW;oBAAC,KAAA;AAAA,8CAAA,UAAA;AAAA,+CAAA,eAAA,uBAAA,CAAA;AAA7GK,wCAAe,uBAAA,CAAA;AAAEC,mCAAU,uBAAA,CAAA;AAAEC,uCAAc,uBAAA,CAAA;AAAA,0BAAA,CAE9CD,YAAU;AAAA,kCAAA,OAAA;AAAA;sBAAA;AAAA,gCAAA,OAAA;AAAA,6BACNpF,YAAWsF,mBAAmBD,cAAc;oBAAC,KAAA;AAAA,6BAC5C9H,UAAAA,OAAAA,UAAAA,IAAI4H,eAAwB,CAAC;oBAAA,KAAA;AAAA,6BAAA,UAAA,OAAA,UAG/B7G,KAAI,WAAA;AAAA,4BAAA,QAAA,kBAAA,mBAAAc,QAAA,KAAC,SAAA,QAAOmG,iBAAe;AAAA,iCAAA,mBAAAnG,QAAA,KAAA,SAAA,SAAA,UAAA;AAAA,mCAAA,GAAA;AAAA,sCAAA,SAAA,OAAA,SAAA,MAAA;gCAAA,KAAA;AAAA,2CAAA,OAAA;AAAA,2CAAA,OAAA;AAAA,yCAExBY,YAAWsF,mBAAmBD,cAAc;gCAAC,KAAA;AAAA,2CAAA,OAAA;AAAA;gCAAA,KAAA;AAAA,2CAAA,OAAA;AAAA,2CAAA,KAAA,SAAA,OAAA,EAAA,CAAA;AAAA,yCAAA,SAAA,OAAA,UAE5CE,gBAAsB,SAAA,EAAA,CAAA;gCAAA,KAAA;AAAA,yCAAA,SAAA,OAAA,UAExBA,gBAAe,CAAE;gCAAA,KAAA;gCAAA,KAAA;AAAA,yCAAA,SAAA,KAAA;8BAAA;4BAAA;0BAAA,GAAA,SAAA,MAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;yBACzB,CAAA;AAAA,+BAAA,SAAA,KAAA;AAAA,iCAAA,MAAA,MAAA,MAAA,SAAA;wBAAA;wBAAC,CAAA,CAAA;oBAAA,KAAA;AAAA,gCAAA,OAAA;AAAA,gCAAA,KAAA,UAAA,OAAA,EAAA,CAAA;AAAA,6BAAA,UAAA,OAAA,UAEKhI,IAAU,UAAA,EAAA,CAAA;oBAAA,KAAA;oBAAA,KAAA;AAAA,6BAAA,UAAA,KAAA;kBAAA;gBAAA;cAAA,GAAA,UAAA,MAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA;aAEpB,CAAA;AAAA,mBAAA,SAAA,IAAA,KAAA,KAAA,KAAA;AAAA,qBAAA,KAAA,MAAA,MAAA,SAAA;YAAA;UAAA,EAAA;QACH;MAAC,GAAA;QAAA,KAAA;QAAA,OAAA,WAAA;AAAA,cAYO,gBAAA,kBAAA,mBAAA6B,QAAA,KAAA,SAAA,SACNoG,MACA5H,IAAkE;AAAA,gBAAA;AAAA,mBAAA,mBAAAwB,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,qBAAA,GAAA;AAAA,wBAAA,UAAA,OAAA,UAAA,MAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA,8BAAA,OAAA;AAAA,2BAMxCE,QAAQmG;;sBAE9BD,KAAKE,IAAI,KAAKT,eAAevC,KAAK,IAAI,CAAC;oBAAC;kBACzC,KAAA;AAHKiD,gCAAS,UAAA;AAAA,wBAAA,CAMX/H,IAAE;AAAA,gCAAA,OAAA;AAAA;oBAAA;AAAA,2BAAA,UAAA,OAAA,UACGA,GAAG,MAAM+H,SAAS,CAAC;kBAAA,KAAA;AAAA,2BAAA,UAAA,OAAA,UAErBA,SAAS;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA,8BAAA,KAAA,UAAA,OAAA,EAAA,CAAA;AAAA,wBAAA,CAEZ/H,IAAE;AAAA,gCAAA,OAAA;AAAA;oBAAA;AAAA,2BAAA,UAAA,OAAA,UACGA,GAAS,UAAA,EAAA,CAAA;kBAAA,KAAA;AAAA,0BAAA,UAAA;kBAAA,KAAA;kBAAA,KAAA;AAAA,2BAAA,UAAA,KAAA;gBAAA;cAAA;YAAA,GAAA,UAAA,MAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA;WAKrB,CAAA;AAAA,mBAAA,aAAA,KAAA,KAAA;AAAA,mBAAA,cAAA,MAAA,MAAA,SAAA;UAAA;AAAA,iBAAA;QAAA,EAAA;;;;MAED,GAAA;QAAA,KAAA;QAAA,OAGQ,SAAA,eAAeS,KAAyB;AAAA,cAAA,SAAA;AAC9C,iBAAO,IAAIiB,QAAQ,SAACC,SAAW;AAC7B,mBAAKyF,QAAQ3G,KAAK,SAACP,MAAMZ,KAAO;AAG9BqC,sBAAQrC,GAAG;YACb,CAAC;UACH,CAAC;QACH;;;;;;;MAEA,GAAA;QAAA,KAAA;QAAA,OAAA,WAAA;AAAA,cAMQ,WAAA,kBAAA,mBAAAkC,QAAA,KAAA,SAAA,SAAcwG,WAAiChI,IAA6D;AAAA,gBAAA,SAAA,SAAA,KAAA,KAAA;AAAA,mBAAA,mBAAAwB,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,qBAAA,GAAA;AAAA,wBAAA,UAAA,OAAA,UAAA,MAAA;kBAAA,KAAA;AAAA,wBAAA,EAC9G,CAACwG,aAAalJ,MAAMmI,QAAQe,SAAS,KAAK,QAAOA,SAAS,MAAK,WAAQ;AAAA,gCAAA,OAAA;AAAA;oBAAA;AACnExE,8BAAQ,IAAIK,kBAAkB;sBAAE2C,MAAM;sBAAQd,SAAS;oBAA8B,CAAE;AAAC,2BACvF1F,UAAAA,OAAAA,UAAAA,GAAGwD,SAAO;sBAAEjE,IAAIvB;sBAAWiK,SAAS;sBAAOzE,OAAAA;oBAAK,CAAE,CAAC;kBAAA,KAAA;AAAA,wBAAA,EAGxD,OAAOwE,UAAUlH,WAAW,WAAQ;AAAA,gCAAA,OAAA;AAAA;oBAAA;AAChC0C,8BAAQ,IAAIK,kBAAkB;sBAAE2C,MAAM;sBAAQd,SAAS;oBAAuB,CAAE;AAAC,2BAChF1F,UAAAA,OAAAA,UAAAA,GAAGwD,SAAO;sBAAEjE,IAAIyI,UAAUzI;sBAAI0I,SAAS;sBAAOzE,OAAAA;oBAAK,CAAE,CAAC;kBAAA,KAAA;AAGzD/C,0BAAG,gBAAA,CAAA,GAA8BuH,SAAS;AAC1C1I,0BAA6B;sBACjCC,IAAIkB,IAAIlB;sBACR0I,SAASxH,IAAIwH;;AAEXzE,4BAAe;AAAI,8BAAA,OAAA;AAAA,8BAAA,OAAA;AAAA,2BAGf,KAAK0E,gBAAgBzH,KAAKnB,GAAG;kBAAC,KAAA;AAAA,8BAAA,OAAA;AAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA,8BAAA,KAAA,UAAA,OAAA,EAAA,CAAA;AAIpCkE,4BAAc,UAAA;kBAAC,KAAA;AAGjB,wBAAIA,OAAO;AAET,6BAAOlE,IAAIyB;AACX,0BAAI,CAACzB,IAAIkE,OAAO;AACdlE,4BAAIkE,YAAQ2E,sCAAe3E,KAAK;sBACjC;oBACF;AAAA,2BAAA,UAAA,OAAA,UAEMxD,GAAGwD,OAAOlE,GAA4B,CAAC;kBAAA,KAAA;kBAAA,KAAA;AAAA,2BAAA,UAAA,KAAA;gBAAA;cAAA;YAAA,GAAA,UAAA,MAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA;WAC/C,CAAA;AAAA,mBAAA,QAAA,KAAA,KAAA;AAAA,mBAAA,SAAA,MAAA,MAAA,SAAA;UAAA;AAAA,iBAAA;QAAA,EAAA;;;;;;MAED,GAAA;QAAA,KAAA;QAAA,OAAA,WAAA;AAAA,cAKQ,mBAAA,kBAAA,mBAAAkC,QAAA,KAAA,SAAA,SAAsBf,KAA2BnB,KAA0B;AAAA,gBAAA,wBAAA,wBAAA,OAAA,YAAA;AAAA,mBAAA,mBAAAkC,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,qBAAA,GAAA;AAAA,wBAAA,UAAA,OAAA,UAAA,MAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA,2BAC/BY,YAAWkF,kBAAkB7G,KAAKnB,KAAK,KAAK4H,WAAW;kBAAC,KAAA;AAAA,6CAAA,UAAA;AAAA,6CAAA,eAAA,wBAAA,CAAA;AAAnG1D,4BAAK,uBAAA,CAAA;AAAEgE,iCAAU,uBAAA,CAAA;AAAEC,qCAAc,uBAAA,CAAA;AAIxCrF,oBAAAA,YAAWgG,oBAAoB3H,KAAKnB,KAAKkI,UAAU;AAGnD,8BAAA,OAAA;AAAA,2BACMpF,YAAWsF,mBAAmBD,cAAc;kBAAC,KAAA;AAAA,wBAAA,CAI/CjE,OAAK;AAAA,gCAAA,OAAA;AAAA;oBAAA;AAAA,0BACDA;kBAAK,KAAA;kBAAA,KAAA;AAAA,2BAAA,UAAA,KAAA;gBAAA;cAAA;YAAA,GAAA,UAAA,IAAA;WAEd,CAAA;AAAA,mBAAA,gBAAA,MAAA,MAAA;AAAA,mBAAA,iBAAA,MAAA,MAAA,SAAA;UAAA;AAAA,iBAAA;QAAA,EAAA;MAAA,CAAA,GAAA,CAAA;QAAA,KAAA;QAAA,OAAA,WAAA;AAAA,cAAA,qBAAA,kBAAA,mBAAAhC,QAAA,KA9SO,SACNf,SAAAA,KACAnB,KACA4C,iBAAmD;AAAA,gBAAA,gBAAA,OAAA,YAAA,WAAA,OAAA,YAAA,wBAAA;AAAA,mBAAA,mBAAAV,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,qBAAA,GAAA;AAAA,wBAAA,UAAA,OAAA,UAAA,MAAA;kBAAA,KAAA;AAQ7CiG,qCAA4C,CAAA;AAC9CjE,4BAAQ;AACRgE,iCAAa;AAEjB,gCAAA,2BACyBtF,eAAe;AAAA,8BAAA,OAAA;AAAA,8BAAA,EAAA;kBAAA,KAAA;AAAA,yBAAA,QAAA,UAAA,EAAA,GAAA,MAAA;AAAA,gCAAA,OAAA;AAAA;oBAAA;AAA7B1B,iCAAU,MAAA;AAAA,8BAAA,OAAA;AAAA,2BACS4B,YAAWiG,eAAe5H,KAAKnB,KAAKkB,YAAYiH,cAAc;kBAAC,KAAA;AAAA,6CAAA,UAAA;AAAA,6CAAA,eAAA,wBAAA,CAAA;AAA1FjE,4BAAK,uBAAA,CAAA;AAAEgE,iCAAU,uBAAA,CAAA;AAAA,wBAAA,CACdA,YAAU;AAAA,gCAAA,OAAA;AAAA;oBAAA;AAAA,2BAAA,UAAA,OAAA,SAAA,EAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA,8BAAA,KAAA,UAAA,OAAA,EAAA,CAAA;AAAA,8BAAA,EAAA,UAAA,EAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA,8BAAA,EAAA;AAAA,2BAAA,UAAA,OAAA,EAAA;kBAAA,KAAA;AAAA,2BAIT,UAAA,OAAA,UAAA,CAAChE,OAAOgE,YAAYC,eAAea,QAAO,CAAE,CAAC;kBAAA,KAAA;kBAAA,KAAA;AAAA,2BAAA,UAAA,KAAA;gBAAA;cAAA;YAAA,GAAA,UAAA,MAAA,CAAA,CAAA,GAAA,IAAA,IAAA,EAAA,CAAA,CAAA;WACrD,CAAA;AAAA,mBAAA,kBAAA,MAAA,MAAA,MAAA;AAAA,mBAAA,mBAAA,MAAA,MAAA,SAAA;UAAA;AAAA,iBAAA;QAAA,EAAA;;;;;;;MAED,GAAA;QAAA,KAAA;QAAA,OAMQ,SAAA,eACN7H,KACAnB,KACAkB,YACAiH,gBAAyC;AAEzC,iBAAO,IAAI/F,QAAQ,SAACC,SAAW;AAC7B,gBAAMhC,MAA6B,SAA7BA,KAA8BpB,KAAiB;AACnD,kBAAMiF,QAAQjF,OAAOe,IAAIkE;AACzB,kBAAIA,OAAO;AACTlE,oBAAIkE,YAAQ2E,sCAAe3E,KAAK;cACjC;AAED7B,sBAAQ,CAAC6B,OAAO,IAAI,CAAC;;AAGvB,gBAAM9C,OAA+B,SAA/BA,MAAgC6H,eAA2C;AAC/E,kBAAIjJ,IAAIkE,OAAO;AACb7D,oBAAIL,IAAIkE,KAAK;cACd,OAAM;AACL,oBAAI+E,eAAe;AACjB,sBAAI,OAAOA,kBAAkB,YAAY;AACvC5I,wBAAI,IAAIkE,kBAAkB;sBAAE2C,MAAM;sBAAQd,SAAS;oBAAwD,CAAA,CAAC;kBAC7G;AACD+B,iCAAe9G,KAAK4H,aAAa;gBAClC;AAGD5G,wBAAQ,CAAC,MAAM,KAAK,CAAC;cACtB;;AAGH,gBAAI;AACFnB,yBAAWC,KAAKnB,KAAKoB,MAAMf,GAAG;qBACvB6D,OAAP;AACA7D,kBAAI6D,KAAK;YACV;UACH,CAAC;QACH;;;;;MAEA,GAAA;QAAA,KAAA;QAAA,OAAA,WAAA;AAAA,cAAA,sBAAA,kBAAA,mBAAAhC,QAAA,KAIQ,SAAA,SAAgCX,UAAmC;AAAA,gBAAA,YAAA,QAAA;AAAA,mBAAA,mBAAAW,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,qBAAA,GAAA;AAAA,wBAAA,UAAA,OAAA,UAAA,MAAA;kBAAA,KAAA;AAAA,iCAAA,2BACnDX,QAAQ;AAAA,8BAAA,OAAA;AAAA,4BAAA,mBAAAW,QAAA,KAAA,SAAAgH,SAAA;AAAA,0BAAA;AAAA,6BAAA,mBAAAhH,QAAA,KAAA,SAAA,OAAA,WAAA;AAAA,+BAAA,GAAA;AAAA,kCAAA,UAAA,OAAA,UAAA,MAAA;4BAAA,KAAA;AAAnBtD,wCAAO,OAAA;AAAA,wCAAA,OAAA;AAAA,qCACV,IAAIwD,QAAc,SAACC,SAASmF,QAAU;AAC1C5I,wCAAQ,SAACK,KAAG;AAAA,yCAAMA,MAAMuI,OAAOvI,GAAG,IAAIoD,QAAO;gCAAE,CAAC;8BAClD,CAAC;4BAAC,KAAA;4BAAA,KAAA;AAAA,qCAAA,UAAA,KAAA;0BAAA;wBAAA;sBAAA,GAAA6G,MAAA;oBAAA,CAAA;AAAA,+BAAA,EAAA;kBAAA,KAAA;AAAA,yBAAA,SAAA,WAAA,EAAA,GAAA,MAAA;AAAA,gCAAA,OAAA;AAAA;oBAAA;AAAA,2BAAA,UAAA,cAAA,MAAA,GAAA,MAAA,CAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA,8BAAA,KAAA,UAAA,OAAA,EAAA,CAAA;AAAA,+BAAA,EAAA,UAAA,EAAA;kBAAA,KAAA;AAAA,8BAAA,OAAA;AAAA,+BAAA,EAAA;AAAA,2BAAA,UAAA,OAAA,EAAA;kBAAA,KAAA;kBAAA,KAAA;AAAA,2BAAA,UAAA,KAAA;gBAAA;cAAA;YAAA,GAAA,UAAA,MAAA,CAAA,CAAA,GAAA,IAAA,IAAA,EAAA,CAAA,CAAA;WAEL,CAAA;AAAA,mBAAA,mBAAA,MAAA;AAAA,mBAAA,oBAAA,MAAA,MAAA,SAAA;UAAA;AAAA,iBAAA;QAAA,EAAA;;;;;MAED,GAAA;QAAA,KAAA;QAAA,OAIQ,SAAA,oBAA2B/H,KAA2BnB,KAA4BkI,YAAmB;AAC3G,cAAI,EAAE,YAAYlI,QAAQ,EAAE,WAAWA,MAAM;AAC3C,kBAAM,IAAIuE,kBAAkB;cAAE2C,MAAM;cAAQd,SAAS;YAA6C,CAAE;UACrG;AACD,cAAI,CAAC8B,YAAY;AACf,kBAAM,IAAI3D,kBAAkB;cAAE2C,MAAM;cAAQd,SAAS;YAAuB,CAAE;UAC/E;QACH;MAAC,CAAA,CAAA;AAAA,aAAAtD;IAAA,EA7G6BhD,gBAAgB;ACVP,IAEpB2E,YAAU,SAAA,SAAA;AAAA,gBAAAA,YAAA,OAAA;AAAA,UAAA,SAAAG,eAAAH,UAAA;AAK7B,eAA2DA,WAAA,MAAA;AAAA,YAAA;AAAA,YAA7C0E,SAAM,KAANA,QAAQvF,OAAI,KAAJA;AAAI,wBAAA,MAAAa,UAAA;AACxB,gBAAM,OAAA,KAAA,MAAA;UAAE1D,YAAY;SAAM;AAAE,wBAAA,uBAAA,KAAA,GAAA,WAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,SAAA,MAAA;AAC5B,cAAKqI,UAAUD;AACf,cAAKjE,QAAQtB;AAAK,eAAA;MACpB;AAEA,mBAAAa,YAAA,CAAA;QAAA,KAAA;QAAA,OAGA,SAAK,QAAA;AACH,iBAAO/F;QACT;;;;;;;;MAEA,GAAA;QAAA,KAAA;QAAA,OAOA,SAAA,OAAO2K,OAAgB5I,WAA2B6I,UAAwC;AACxF,eAAKF,QAAQ/H,KAAK;YAChBuC,MAAM,KAAKsB;YACXY,MAAMuD;UACP,CAAA;AACDC,mBAAQ;QACV;MAAC,CAAA,CAAA;AAAA,aAAA7E;IAAA,EA/BoC3D,6BAAM;ICMhC4D,mBAAmB6E,OAAO,kBAAkB;AASzD,IAAa9F,kBAAgB,SAAA,SAAA;AAAA,gBAAAA,kBAAA,OAAA;AAAA,UAAA,SAAAmB,eAAAnB,gBAAA;AAK3B,eAA8CA,mBAAA;AAAA,YAAA;AAAA,YAAlC+F,OAAgC,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAA,CAAA;AAAE,wBAAA,MAAA/F,gBAAA;AAC5C,gBAAA,OAAA,KAAA,MAAA,cAAA,cAAA,CAAA,GACK+F,IAAI,GAAA,CAAA,GAAA;UACPzI,YAAY;QAAI,CAAA,CAAA;AACf,wBAAA,uBAAA,KAAA,GAAA,eAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,aAAA,MAAA;AACH,cAAK8C,cAAc,CAAA;AAAG,eAAA;MACxB;AAAC,mBAAAJ,kBAAA,CAAA;QAAA,KAAA;QAAA,OAED,SAAA,aAAaG,MAAY;AAEvB,cAAI,CAACA,MAAM;AACT,kBAAM,IAAI1D,MAAM,0CAA0C;UAC3D;AAED,cAAI,KAAK2D,YAAYD,IAAI,GAAG;AAC1B,kBAAM,IAAI1D,MAA+C0D,yCAAAA,OAAAA,MAAuB,kBAAA,CAAA;UACjF;AAGD,cAAM6F,YAAY,IAAIhF,UAAU;YAAE0E,QAAQ;YAAMvF;UAAI,CAAE;AACtD,eAAKC,YAAYD,IAAI,IAAI6F;AAIzBxG,uBAAa,MAAM,SAACyG,QAAqB;AAAA,mBAAKD,UAAUE,QAAQD,UAAUhL,MAAS;WAAE;AAErF,iBAAO+K;QACT;;MAEA,GAAA;QAAA,KAAA;QAAA,OACA,SAAA,aAAa7F,MAAY;AAEvB,cAAI,CAACA,MAAM;AACT,kBAAM,IAAI1D,MAAM,0CAA0C;UAC3D;AACD,cAAI,KAAK2D,YAAYD,IAAI,GAAG;AAC1B,kBAAM,IAAI1D,MAA+C0D,yCAAAA,OAAAA,MAAuB,kBAAA,CAAA;UACjF;AAED,eAAKC,YAAYD,IAAI,IAAIc;QAC3B;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAK,QAAA;AACH,iBAAOhG;QACT;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAA,OAAO2K,OAAc5I,WAA2B6I,UAAwC;AACtF,cAAQ1F,OAAeyF,MAAfzF,MAAMkC,OAASuD,MAATvD;AAEd,cAAI,CAAClC,MAAM;AACTI,mBAAOC,QAAQ2F,KAAI,mDAAA,OAAoDP,OAAS,GAAA,CAAA;AAChF,mBAAOC,SAAQ;UAChB;AAGD,cAAMG,YAAY,KAAK5F,YAAYD,IAAI;AACvC,cAAI,CAAC6F,WAAW;AACdzF,mBAAOC,QAAQ2F,KAAI,+CAAA,OAAgDhG,MAAQ,GAAA,CAAA;AAC3E,mBAAO0F,SAAQ;UAChB;AAGD,cAAIG,cAAc/E,kBAAkB;AAClC+E,sBAAUpI,KAAKyE,IAAI;UACpB;AAED,iBAAOwD,SAAQ;QACjB;MAAC,CAAA,CAAA;AAAA,aAAA7F;IAAA,EAxEkC3C,6BAAM;AClBiB,IAEvC6D,oBAAkB,SAAA,uBAAA;AAAA,gBAAAA,oBAAA,qBAAA;AAAA,UAAA,SAAAC,cAAAD,kBAAA;AAAA,eAAAA,qBAAA;AAAA,wBAAA,MAAAA,kBAAA;AAAA,eAAA,OAAA,MAAA,MAAA,SAAA;MAAA;AAAA,mBAAAA,oBAAA,CAAA;QAAA,KAAA;QAAA,OACrC,SAAA,aAAamB,MAAa;AACxB,cAAIG,mBAAmB,KAAKZ;AAC5B,cAAI,QAAOS,IAAI,MAAK,UAAU;AAC5B,gBAAM+D,UAAU/D;AAChB,gBAAI,QAAO+D,QAAQ/D,IAAI,MAAK,UAAU;AACpC,kBAAMgE,cAAcD,QAAQ/D;AAC5B,kBAAItG,MAAMmI,QAAQmC,YAAYC,MAAM,KAAKD,YAAYC,OAAOzK,SAAS,GAAG;AACtE,oBAAM0K,mBAAmBF,YAAYC,OAAO,CAAC;AAC7C,oBAAIC,iBAAiBC,SAAS;AAC5BhE,qCAAmB+D,iBAAiBC;gBACrC;AAGDD,iCAAiBC,UAAUjG,OAAOkG,SAAS7D;cAC5C;YACF;UACF;AAED,eAAKjB,cAAcc,YACjB;YACErB,QAAQ,KAAKM;YACbW;aAEFG,gBAAgB;QAEpB;MAAC,CAAA,CAAA;AAAA,aAAAtB;IAAA,EA1B4CL,qBAAqB;;;;;ACO9D,SAAU6F,SAASC,QAAeC,WAAa;AACpD,MAAMC,iBAA4BC,OAAeD;AACjDA,mBACGA,eAAeF,QAAQC,SAAT,IACZD,OAAeI,YAAYH;AAChC;AAQK,SAAUI,SAASL,QAAeM,IAAiC;AAAjC,MAAA,OAAA,QAAA;AAAAA,SAAeN,OAAOO;EAAW;AACxE,MAAMC,oBAA+BC,MAAcD;AACnDA,uBAAqBA,kBAAkBR,QAAQM,EAAT;AACtC;AAhBK,eCiBN;ADjBM;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBN,IAAA,cAAA,SAAA,QAAA;AAAiCI,gBAAAA,cAAAA,MAAAA;AAGhC,eAAYC,aAAAA,SAAkBC,SAAsB;;AAApD,YAAA,QACCC,OAAMF,KAAAA,MAAAA,SAASC,OAAf,KAAuB;AAIvBT,eAAOW,eAAeC,OAAM,QAAQ;UACnCC,OAAOC,WAAWC;UAClBC,YAAY;UACZC,cAAc;SAHf;AAQArB,iBAASgB,OAAME,WAAWhB,SAAlB;AAERI,iBAASU,KAAD;;MACR;AACF,aAAAM;IAAC,EApBgCZ,KAAjC;;;;;AE1BA,IAAAa,kBAAA;AAAA;AAAA;AAAA;AAUA,QAAI,mBAAmB;AAGvB,QAAI,iBAAiB;AAGrB,QAAI,YAAY;AAAhB,QACI,WAAW;AAGf,QAAIC,oBAAmB;AAGvB,QAAI,UAAU;AAAd,QACI,WAAW;AADf,QAEI,WAAW;AAFf,QAGI,UAAU;AAHd,QAII,UAAU;AAJd,QAKI,WAAW;AALf,QAMI,UAAU;AANd,QAOI,SAAS;AAPb,QAQI,SAAS;AARb,QASI,YAAY;AAThB,QAUI,UAAU;AAVd,QAWI,YAAY;AAXhB,QAYI,WAAW;AAZf,QAaI,YAAY;AAbhB,QAcI,SAAS;AAdb,QAeI,YAAY;AAfhB,QAgBI,eAAe;AAhBnB,QAiBI,aAAa;AAEjB,QAAI,iBAAiB;AAArB,QACI,cAAc;AADlB,QAEI,aAAa;AAFjB,QAGI,aAAa;AAHjB,QAII,UAAU;AAJd,QAKI,WAAW;AALf,QAMI,WAAW;AANf,QAOI,WAAW;AAPf,QAQI,kBAAkB;AARtB,QASI,YAAY;AAThB,QAUI,YAAY;AAMhB,QAAI,eAAe;AAGnB,QAAI,eAAe;AAGnB,QAAI,WAAW;AAGf,QAAI,iBAAiB,CAAC;AACtB,mBAAe,UAAU,IAAI,eAAe,UAAU,IACtD,eAAe,OAAO,IAAI,eAAe,QAAQ,IACjD,eAAe,QAAQ,IAAI,eAAe,QAAQ,IAClD,eAAe,eAAe,IAAI,eAAe,SAAS,IAC1D,eAAe,SAAS,IAAI;AAC5B,mBAAe,OAAO,IAAI,eAAe,QAAQ,IACjD,eAAe,cAAc,IAAI,eAAe,OAAO,IACvD,eAAe,WAAW,IAAI,eAAe,OAAO,IACpD,eAAe,QAAQ,IAAI,eAAe,OAAO,IACjD,eAAe,MAAM,IAAI,eAAe,SAAS,IACjD,eAAe,SAAS,IAAI,eAAe,SAAS,IACpD,eAAe,MAAM,IAAI,eAAe,SAAS,IACjD,eAAe,UAAU,IAAI;AAG7B,QAAI,aAAa,OAAO,cAAU,YAAY,cAAU,WAAO,WAAW,UAAU;AAGpF,QAAI,WAAW,OAAO,QAAQ,YAAY,QAAQ,KAAK,WAAW,UAAU;AAG5E,QAAI,OAAO,cAAc,YAAY,SAAS,aAAa,EAAE;AAG7D,QAAI,cAAc,OAAO,WAAW,YAAY,WAAW,CAAC,QAAQ,YAAY;AAGhF,QAAI,aAAa,eAAe,OAAO,UAAU,YAAY,UAAU,CAAC,OAAO,YAAY;AAG3F,QAAI,gBAAgB,cAAc,WAAW,YAAY;AAGzD,QAAI,cAAc,iBAAiB,WAAW;AAG9C,QAAI,WAAY,WAAW;AACzB,UAAI;AAEF,YAAI,QAAQ,cAAc,WAAW,WAAW,WAAW,QAAQ,MAAM,EAAE;AAE3E,YAAI,OAAO;AACT,iBAAO;AAAA,QACT;AAGA,eAAO,eAAe,YAAY,WAAW,YAAY,QAAQ,MAAM;AAAA,MACzE,SAASC,IAAP;AAAA,MAAW;AAAA,IACf,EAAE;AAGF,QAAI,mBAAmB,YAAY,SAAS;AAY5C,aAAS,MAAM,MAAM,SAAS,MAAM;AAClC,cAAQ,KAAK,QAAQ;AAAA,QACnB,KAAK;AAAG,iBAAO,KAAK,KAAK,OAAO;AAAA,QAChC,KAAK;AAAG,iBAAO,KAAK,KAAK,SAAS,KAAK,CAAC,CAAC;AAAA,QACzC,KAAK;AAAG,iBAAO,KAAK,KAAK,SAAS,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,QAClD,KAAK;AAAG,iBAAO,KAAK,KAAK,SAAS,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;AAAA,MAC7D;AACA,aAAO,KAAK,MAAM,SAAS,IAAI;AAAA,IACjC;AAWA,aAAS,UAAUC,IAAG,UAAU;AAC9B,UAAI,QAAQ,IACR,SAAS,MAAMA,EAAC;AAEpB,aAAO,EAAE,QAAQA,IAAG;AAClB,eAAO,KAAK,IAAI,SAAS,KAAK;AAAA,MAChC;AACA,aAAO;AAAA,IACT;AASA,aAAS,UAAU,MAAM;AACvB,aAAO,SAASC,QAAO;AACrB,eAAO,KAAKA,MAAK;AAAA,MACnB;AAAA,IACF;AAUA,aAAS,SAAS,QAAQ,KAAK;AAC7B,aAAO,UAAU,OAAO,SAAY,OAAO,GAAG;AAAA,IAChD;AAUA,aAAS,QAAQ,MAAM,WAAW;AAChC,aAAO,SAAS,KAAK;AACnB,eAAO,KAAK,UAAU,GAAG,CAAC;AAAA,MAC5B;AAAA,IACF;AAGA,QAAI,aAAa,MAAM;AAAvB,QACI,YAAY,SAAS;AADzB,QAEI,cAAc,OAAO;AAGzB,QAAI,aAAa,KAAK,oBAAoB;AAG1C,QAAI,eAAe,UAAU;AAG7B,QAAI,iBAAiB,YAAY;AAGjC,QAAI,aAAc,WAAW;AAC3B,UAAI,MAAM,SAAS,KAAK,cAAc,WAAW,QAAQ,WAAW,KAAK,YAAY,EAAE;AACvF,aAAO,MAAO,mBAAmB,MAAO;AAAA,IAC1C,EAAE;AAOF,QAAI,uBAAuB,YAAY;AAGvC,QAAI,mBAAmB,aAAa,KAAK,MAAM;AAG/C,QAAI,aAAa;AAAA,MAAO,MACtB,aAAa,KAAK,cAAc,EAAE,QAAQ,cAAc,MAAM,EAC7D,QAAQ,0DAA0D,OAAO,IAAI;AAAA,IAChF;AAGA,QAAI,SAAS,gBAAgB,KAAK,SAAS;AAA3C,QACIC,UAAS,KAAK;AADlB,QAEIC,cAAa,KAAK;AAFtB,QAGI,cAAc,SAAS,OAAO,cAAc;AAHhD,QAII,eAAe,QAAQ,OAAO,gBAAgB,MAAM;AAJxD,QAKI,eAAe,OAAO;AAL1B,QAMI,uBAAuB,YAAY;AANvC,QAOI,SAAS,WAAW;AAPxB,QAQI,iBAAiBD,UAASA,QAAO,cAAc;AAEnD,QAAI,iBAAkB,WAAW;AAC/B,UAAI;AACF,YAAI,OAAO,UAAU,QAAQ,gBAAgB;AAC7C,aAAK,CAAC,GAAG,IAAI,CAAC,CAAC;AACf,eAAO;AAAA,MACT,SAASH,IAAP;AAAA,MAAW;AAAA,IACf,EAAE;AAGF,QAAI,iBAAiB,SAAS,OAAO,WAAW;AAAhD,QACI,YAAY,KAAK;AADrB,QAEI,YAAY,KAAK;AAGrB,QAAIK,OAAM,UAAU,MAAM,KAAK;AAA/B,QACI,eAAe,UAAU,QAAQ,QAAQ;AAU7C,QAAI,aAAc,WAAW;AAC3B,eAAS,SAAS;AAAA,MAAC;AACnB,aAAO,SAAS,OAAO;AACrB,YAAI,CAAC,SAAS,KAAK,GAAG;AACpB,iBAAO,CAAC;AAAA,QACV;AACA,YAAI,cAAc;AAChB,iBAAO,aAAa,KAAK;AAAA,QAC3B;AACA,eAAO,YAAY;AACnB,YAAI,SAAS,IAAI;AACjB,eAAO,YAAY;AACnB,eAAO;AAAA,MACT;AAAA,IACF,EAAE;AASF,aAAS,KAAK,SAAS;AACrB,UAAI,QAAQ,IACRC,UAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,WAAK,MAAM;AACX,aAAO,EAAE,QAAQA,SAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,YAAY;AACnB,WAAK,WAAW,eAAe,aAAa,IAAI,IAAI,CAAC;AACrD,WAAK,OAAO;AAAA,IACd;AAYA,aAAS,WAAW,KAAK;AACvB,UAAI,SAAS,KAAK,IAAI,GAAG,KAAK,OAAO,KAAK,SAAS,GAAG;AACtD,WAAK,QAAQ,SAAS,IAAI;AAC1B,aAAO;AAAA,IACT;AAWA,aAAS,QAAQ,KAAK;AACpB,UAAI,OAAO,KAAK;AAChB,UAAI,cAAc;AAChB,YAAI,SAAS,KAAK,GAAG;AACrB,eAAO,WAAW,iBAAiB,SAAY;AAAA,MACjD;AACA,aAAO,eAAe,KAAK,MAAM,GAAG,IAAI,KAAK,GAAG,IAAI;AAAA,IACtD;AAWA,aAAS,QAAQ,KAAK;AACpB,UAAI,OAAO,KAAK;AAChB,aAAO,eAAgB,KAAK,GAAG,MAAM,SAAa,eAAe,KAAK,MAAM,GAAG;AAAA,IACjF;AAYA,aAAS,QAAQ,KAAKJ,QAAO;AAC3B,UAAI,OAAO,KAAK;AAChB,WAAK,QAAQ,KAAK,IAAI,GAAG,IAAI,IAAI;AACjC,WAAK,GAAG,IAAK,gBAAgBA,WAAU,SAAa,iBAAiBA;AACrE,aAAO;AAAA,IACT;AAGA,SAAK,UAAU,QAAQ;AACvB,SAAK,UAAU,QAAQ,IAAI;AAC3B,SAAK,UAAU,MAAM;AACrB,SAAK,UAAU,MAAM;AACrB,SAAK,UAAU,MAAM;AASrB,aAAS,UAAU,SAAS;AAC1B,UAAI,QAAQ,IACRI,UAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,WAAK,MAAM;AACX,aAAO,EAAE,QAAQA,SAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,iBAAiB;AACxB,WAAK,WAAW,CAAC;AACjB,WAAK,OAAO;AAAA,IACd;AAWA,aAAS,gBAAgB,KAAK;AAC5B,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,UAAI,QAAQ,GAAG;AACb,eAAO;AAAA,MACT;AACA,UAAI,YAAY,KAAK,SAAS;AAC9B,UAAI,SAAS,WAAW;AACtB,aAAK,IAAI;AAAA,MACX,OAAO;AACL,eAAO,KAAK,MAAM,OAAO,CAAC;AAAA,MAC5B;AACA,QAAE,KAAK;AACP,aAAO;AAAA,IACT;AAWA,aAAS,aAAa,KAAK;AACzB,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,aAAO,QAAQ,IAAI,SAAY,KAAK,KAAK,EAAE,CAAC;AAAA,IAC9C;AAWA,aAAS,aAAa,KAAK;AACzB,aAAO,aAAa,KAAK,UAAU,GAAG,IAAI;AAAA,IAC5C;AAYA,aAAS,aAAa,KAAKJ,QAAO;AAChC,UAAI,OAAO,KAAK,UACZ,QAAQ,aAAa,MAAM,GAAG;AAElC,UAAI,QAAQ,GAAG;AACb,UAAE,KAAK;AACP,aAAK,KAAK,CAAC,KAAKA,MAAK,CAAC;AAAA,MACxB,OAAO;AACL,aAAK,KAAK,EAAE,CAAC,IAAIA;AAAA,MACnB;AACA,aAAO;AAAA,IACT;AAGA,cAAU,UAAU,QAAQ;AAC5B,cAAU,UAAU,QAAQ,IAAI;AAChC,cAAU,UAAU,MAAM;AAC1B,cAAU,UAAU,MAAM;AAC1B,cAAU,UAAU,MAAM;AAS1B,aAAS,SAAS,SAAS;AACzB,UAAI,QAAQ,IACRI,UAAS,WAAW,OAAO,IAAI,QAAQ;AAE3C,WAAK,MAAM;AACX,aAAO,EAAE,QAAQA,SAAQ;AACvB,YAAI,QAAQ,QAAQ,KAAK;AACzB,aAAK,IAAI,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA,MAC7B;AAAA,IACF;AASA,aAAS,gBAAgB;AACvB,WAAK,OAAO;AACZ,WAAK,WAAW;AAAA,QACd,QAAQ,IAAI;AAAA,QACZ,OAAO,KAAKD,QAAO;AAAA,QACnB,UAAU,IAAI;AAAA,MAChB;AAAA,IACF;AAWA,aAAS,eAAe,KAAK;AAC3B,UAAI,SAAS,WAAW,MAAM,GAAG,EAAE,QAAQ,EAAE,GAAG;AAChD,WAAK,QAAQ,SAAS,IAAI;AAC1B,aAAO;AAAA,IACT;AAWA,aAAS,YAAY,KAAK;AACxB,aAAO,WAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AAAA,IACtC;AAWA,aAAS,YAAY,KAAK;AACxB,aAAO,WAAW,MAAM,GAAG,EAAE,IAAI,GAAG;AAAA,IACtC;AAYA,aAAS,YAAY,KAAKH,QAAO;AAC/B,UAAI,OAAO,WAAW,MAAM,GAAG,GAC3B,OAAO,KAAK;AAEhB,WAAK,IAAI,KAAKA,MAAK;AACnB,WAAK,QAAQ,KAAK,QAAQ,OAAO,IAAI;AACrC,aAAO;AAAA,IACT;AAGA,aAAS,UAAU,QAAQ;AAC3B,aAAS,UAAU,QAAQ,IAAI;AAC/B,aAAS,UAAU,MAAM;AACzB,aAAS,UAAU,MAAM;AACzB,aAAS,UAAU,MAAM;AASzB,aAAS,MAAM,SAAS;AACtB,UAAI,OAAO,KAAK,WAAW,IAAI,UAAU,OAAO;AAChD,WAAK,OAAO,KAAK;AAAA,IACnB;AASA,aAAS,aAAa;AACpB,WAAK,WAAW,IAAI;AACpB,WAAK,OAAO;AAAA,IACd;AAWA,aAAS,YAAY,KAAK;AACxB,UAAI,OAAO,KAAK,UACZ,SAAS,KAAK,QAAQ,EAAE,GAAG;AAE/B,WAAK,OAAO,KAAK;AACjB,aAAO;AAAA,IACT;AAWA,aAAS,SAAS,KAAK;AACrB,aAAO,KAAK,SAAS,IAAI,GAAG;AAAA,IAC9B;AAWA,aAAS,SAAS,KAAK;AACrB,aAAO,KAAK,SAAS,IAAI,GAAG;AAAA,IAC9B;AAYA,aAAS,SAAS,KAAKA,QAAO;AAC5B,UAAI,OAAO,KAAK;AAChB,UAAI,gBAAgB,WAAW;AAC7B,YAAI,QAAQ,KAAK;AACjB,YAAI,CAACG,QAAQ,MAAM,SAAS,mBAAmB,GAAI;AACjD,gBAAM,KAAK,CAAC,KAAKH,MAAK,CAAC;AACvB,eAAK,OAAO,EAAE,KAAK;AACnB,iBAAO;AAAA,QACT;AACA,eAAO,KAAK,WAAW,IAAI,SAAS,KAAK;AAAA,MAC3C;AACA,WAAK,IAAI,KAAKA,MAAK;AACnB,WAAK,OAAO,KAAK;AACjB,aAAO;AAAA,IACT;AAGA,UAAM,UAAU,QAAQ;AACxB,UAAM,UAAU,QAAQ,IAAI;AAC5B,UAAM,UAAU,MAAM;AACtB,UAAM,UAAU,MAAM;AACtB,UAAM,UAAU,MAAM;AAUtB,aAAS,cAAcA,QAAO,WAAW;AACvC,UAAI,QAAQ,QAAQA,MAAK,GACrB,QAAQ,CAAC,SAAS,YAAYA,MAAK,GACnC,SAAS,CAAC,SAAS,CAAC,SAAS,SAASA,MAAK,GAC3C,SAAS,CAAC,SAAS,CAAC,SAAS,CAAC,UAAU,aAAaA,MAAK,GAC1D,cAAc,SAAS,SAAS,UAAU,QAC1C,SAAS,cAAc,UAAUA,OAAM,QAAQ,MAAM,IAAI,CAAC,GAC1DI,UAAS,OAAO;AAEpB,eAAS,OAAOJ,QAAO;AACrB,aAAK,aAAa,eAAe,KAAKA,QAAO,GAAG,MAC5C,EAAE;AAAA,SAEC,OAAO;AAAA,QAEN,WAAW,OAAO,YAAY,OAAO;AAAA,QAErC,WAAW,OAAO,YAAY,OAAO,gBAAgB,OAAO;AAAA,QAE7D,QAAQ,KAAKI,OAAM,KAClB;AACN,iBAAO,KAAK,GAAG;AAAA,QACjB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAWA,aAAS,iBAAiB,QAAQ,KAAKJ,QAAO;AAC5C,UAAKA,WAAU,UAAa,CAAC,GAAG,OAAO,GAAG,GAAGA,MAAK,KAC7CA,WAAU,UAAa,EAAE,OAAO,SAAU;AAC7C,wBAAgB,QAAQ,KAAKA,MAAK;AAAA,MACpC;AAAA,IACF;AAYA,aAAS,YAAY,QAAQ,KAAKA,QAAO;AACvC,UAAI,WAAW,OAAO,GAAG;AACzB,UAAI,EAAE,eAAe,KAAK,QAAQ,GAAG,KAAK,GAAG,UAAUA,MAAK,MACvDA,WAAU,UAAa,EAAE,OAAO,SAAU;AAC7C,wBAAgB,QAAQ,KAAKA,MAAK;AAAA,MACpC;AAAA,IACF;AAUA,aAAS,aAAa,OAAO,KAAK;AAChC,UAAII,UAAS,MAAM;AACnB,aAAOA,WAAU;AACf,YAAI,GAAG,MAAMA,OAAM,EAAE,CAAC,GAAG,GAAG,GAAG;AAC7B,iBAAOA;AAAA,QACT;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAWA,aAAS,gBAAgB,QAAQ,KAAKJ,QAAO;AAC3C,UAAI,OAAO,eAAe,gBAAgB;AACxC,uBAAe,QAAQ,KAAK;AAAA,UAC1B,gBAAgB;AAAA,UAChB,cAAc;AAAA,UACd,SAASA;AAAA,UACT,YAAY;AAAA,QACd,CAAC;AAAA,MACH,OAAO;AACL,eAAO,GAAG,IAAIA;AAAA,MAChB;AAAA,IACF;AAaA,QAAI,UAAU,cAAc;AAS5B,aAAS,WAAWA,QAAO;AACzB,UAAIA,UAAS,MAAM;AACjB,eAAOA,WAAU,SAAY,eAAe;AAAA,MAC9C;AACA,aAAQ,kBAAkB,kBAAkB,OAAOA,MAAK,IACpD,UAAUA,MAAK,IACf,eAAeA,MAAK;AAAA,IAC1B;AASA,aAAS,gBAAgBA,QAAO;AAC9B,aAAO,aAAaA,MAAK,KAAK,WAAWA,MAAK,KAAK;AAAA,IACrD;AAUA,aAAS,aAAaA,QAAO;AAC3B,UAAI,CAAC,SAASA,MAAK,KAAK,SAASA,MAAK,GAAG;AACvC,eAAO;AAAA,MACT;AACA,UAAI,UAAU,WAAWA,MAAK,IAAI,aAAa;AAC/C,aAAO,QAAQ,KAAK,SAASA,MAAK,CAAC;AAAA,IACrC;AASA,aAAS,iBAAiBA,QAAO;AAC/B,aAAO,aAAaA,MAAK,KACvB,SAASA,OAAM,MAAM,KAAK,CAAC,CAAC,eAAe,WAAWA,MAAK,CAAC;AAAA,IAChE;AASA,aAAS,WAAW,QAAQ;AAC1B,UAAI,CAAC,SAAS,MAAM,GAAG;AACrB,eAAO,aAAa,MAAM;AAAA,MAC5B;AACA,UAAI,UAAU,YAAY,MAAM,GAC5B,SAAS,CAAC;AAEd,eAAS,OAAO,QAAQ;AACtB,YAAI,EAAE,OAAO,kBAAkB,WAAW,CAAC,eAAe,KAAK,QAAQ,GAAG,KAAK;AAC7E,iBAAO,KAAK,GAAG;AAAA,QACjB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AAaA,aAAS,UAAU,QAAQ,QAAQ,UAAU,YAAY,OAAO;AAC9D,UAAI,WAAW,QAAQ;AACrB;AAAA,MACF;AACA,cAAQ,QAAQ,SAAS,UAAU,KAAK;AACtC,kBAAU,QAAQ,IAAI;AACtB,YAAI,SAAS,QAAQ,GAAG;AACtB,wBAAc,QAAQ,QAAQ,KAAK,UAAU,WAAW,YAAY,KAAK;AAAA,QAC3E,OACK;AACH,cAAI,WAAW,aACX,WAAW,QAAQ,QAAQ,GAAG,GAAG,UAAW,MAAM,IAAK,QAAQ,QAAQ,KAAK,IAC5E;AAEJ,cAAI,aAAa,QAAW;AAC1B,uBAAW;AAAA,UACb;AACA,2BAAiB,QAAQ,KAAK,QAAQ;AAAA,QACxC;AAAA,MACF,GAAG,MAAM;AAAA,IACX;AAiBA,aAAS,cAAc,QAAQ,QAAQ,KAAK,UAAU,WAAW,YAAY,OAAO;AAClF,UAAI,WAAW,QAAQ,QAAQ,GAAG,GAC9B,WAAW,QAAQ,QAAQ,GAAG,GAC9B,UAAU,MAAM,IAAI,QAAQ;AAEhC,UAAI,SAAS;AACX,yBAAiB,QAAQ,KAAK,OAAO;AACrC;AAAA,MACF;AACA,UAAI,WAAW,aACX,WAAW,UAAU,UAAW,MAAM,IAAK,QAAQ,QAAQ,KAAK,IAChE;AAEJ,UAAI,WAAW,aAAa;AAE5B,UAAI,UAAU;AACZ,YAAI,QAAQ,QAAQ,QAAQ,GACxB,SAAS,CAAC,SAAS,SAAS,QAAQ,GACpC,UAAU,CAAC,SAAS,CAAC,UAAU,aAAa,QAAQ;AAExD,mBAAW;AACX,YAAI,SAAS,UAAU,SAAS;AAC9B,cAAI,QAAQ,QAAQ,GAAG;AACrB,uBAAW;AAAA,UACb,WACS,kBAAkB,QAAQ,GAAG;AACpC,uBAAW,UAAU,QAAQ;AAAA,UAC/B,WACS,QAAQ;AACf,uBAAW;AACX,uBAAW,YAAY,UAAU,IAAI;AAAA,UACvC,WACS,SAAS;AAChB,uBAAW;AACX,uBAAW,gBAAgB,UAAU,IAAI;AAAA,UAC3C,OACK;AACH,uBAAW,CAAC;AAAA,UACd;AAAA,QACF,WACS,cAAc,QAAQ,KAAK,YAAY,QAAQ,GAAG;AACzD,qBAAW;AACX,cAAI,YAAY,QAAQ,GAAG;AACzB,uBAAW,cAAc,QAAQ;AAAA,UACnC,WACS,CAAC,SAAS,QAAQ,KAAK,WAAW,QAAQ,GAAG;AACpD,uBAAW,gBAAgB,QAAQ;AAAA,UACrC;AAAA,QACF,OACK;AACH,qBAAW;AAAA,QACb;AAAA,MACF;AACA,UAAI,UAAU;AAEZ,cAAM,IAAI,UAAU,QAAQ;AAC5B,kBAAU,UAAU,UAAU,UAAU,YAAY,KAAK;AACzD,cAAM,QAAQ,EAAE,QAAQ;AAAA,MAC1B;AACA,uBAAiB,QAAQ,KAAK,QAAQ;AAAA,IACxC;AAUA,aAAS,SAAS,MAAM,OAAO;AAC7B,aAAO,YAAY,SAAS,MAAM,OAAO,QAAQ,GAAG,OAAO,EAAE;AAAA,IAC/D;AAUA,QAAI,kBAAkB,CAAC,iBAAiB,WAAW,SAAS,MAAM,QAAQ;AACxE,aAAO,eAAe,MAAM,YAAY;AAAA,QACtC,gBAAgB;AAAA,QAChB,cAAc;AAAA,QACd,SAAS,SAAS,MAAM;AAAA,QACxB,YAAY;AAAA,MACd,CAAC;AAAA,IACH;AAUA,aAAS,YAAY,QAAQ,QAAQ;AACnC,UAAI,QAAQ;AACV,eAAO,OAAO,MAAM;AAAA,MACtB;AACA,UAAII,UAAS,OAAO,QAChB,SAAS,cAAc,YAAYA,OAAM,IAAI,IAAI,OAAO,YAAYA,OAAM;AAE9E,aAAO,KAAK,MAAM;AAClB,aAAO;AAAA,IACT;AASA,aAAS,iBAAiB,aAAa;AACrC,UAAI,SAAS,IAAI,YAAY,YAAY,YAAY,UAAU;AAC/D,UAAIF,YAAW,MAAM,EAAE,IAAI,IAAIA,YAAW,WAAW,CAAC;AACtD,aAAO;AAAA,IACT;AAUA,aAAS,gBAAgB,YAAY,QAAQ;AAC3C,UAAI,SAAS,SAAS,iBAAiB,WAAW,MAAM,IAAI,WAAW;AACvE,aAAO,IAAI,WAAW,YAAY,QAAQ,WAAW,YAAY,WAAW,MAAM;AAAA,IACpF;AAUA,aAAS,UAAU,QAAQ,OAAO;AAChC,UAAI,QAAQ,IACRE,UAAS,OAAO;AAEpB,gBAAU,QAAQ,MAAMA,OAAM;AAC9B,aAAO,EAAE,QAAQA,SAAQ;AACvB,cAAM,KAAK,IAAI,OAAO,KAAK;AAAA,MAC7B;AACA,aAAO;AAAA,IACT;AAYA,aAAS,WAAW,QAAQ,OAAO,QAAQ,YAAY;AACrD,UAAI,QAAQ,CAAC;AACb,iBAAW,SAAS,CAAC;AAErB,UAAI,QAAQ,IACRA,UAAS,MAAM;AAEnB,aAAO,EAAE,QAAQA,SAAQ;AACvB,YAAI,MAAM,MAAM,KAAK;AAErB,YAAI,WAAW,aACX,WAAW,OAAO,GAAG,GAAG,OAAO,GAAG,GAAG,KAAK,QAAQ,MAAM,IACxD;AAEJ,YAAI,aAAa,QAAW;AAC1B,qBAAW,OAAO,GAAG;AAAA,QACvB;AACA,YAAI,OAAO;AACT,0BAAgB,QAAQ,KAAK,QAAQ;AAAA,QACvC,OAAO;AACL,sBAAY,QAAQ,KAAK,QAAQ;AAAA,QACnC;AAAA,MACF;AACA,aAAO;AAAA,IACT;AASA,aAAS,eAAe,UAAU;AAChC,aAAO,SAAS,SAAS,QAAQ,SAAS;AACxC,YAAI,QAAQ,IACRA,UAAS,QAAQ,QACjB,aAAaA,UAAS,IAAI,QAAQA,UAAS,CAAC,IAAI,QAChD,QAAQA,UAAS,IAAI,QAAQ,CAAC,IAAI;AAEtC,qBAAc,SAAS,SAAS,KAAK,OAAO,cAAc,cACrDA,WAAU,cACX;AAEJ,YAAI,SAAS,eAAe,QAAQ,CAAC,GAAG,QAAQ,CAAC,GAAG,KAAK,GAAG;AAC1D,uBAAaA,UAAS,IAAI,SAAY;AACtC,UAAAA,UAAS;AAAA,QACX;AACA,iBAAS,OAAO,MAAM;AACtB,eAAO,EAAE,QAAQA,SAAQ;AACvB,cAAI,SAAS,QAAQ,KAAK;AAC1B,cAAI,QAAQ;AACV,qBAAS,QAAQ,QAAQ,OAAO,UAAU;AAAA,UAC5C;AAAA,QACF;AACA,eAAO;AAAA,MACT,CAAC;AAAA,IACH;AASA,aAAS,cAAc,WAAW;AAChC,aAAO,SAAS,QAAQ,UAAU,UAAU;AAC1C,YAAI,QAAQ,IACR,WAAW,OAAO,MAAM,GACxB,QAAQ,SAAS,MAAM,GACvBA,UAAS,MAAM;AAEnB,eAAOA,WAAU;AACf,cAAI,MAAM,MAAM,YAAYA,UAAS,EAAE,KAAK;AAC5C,cAAI,SAAS,SAAS,GAAG,GAAG,KAAK,QAAQ,MAAM,OAAO;AACpD;AAAA,UACF;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA,IACF;AAUA,aAAS,WAAWC,MAAK,KAAK;AAC5B,UAAI,OAAOA,KAAI;AACf,aAAO,UAAU,GAAG,IAChB,KAAK,OAAO,OAAO,WAAW,WAAW,MAAM,IAC/C,KAAK;AAAA,IACX;AAUA,aAAS,UAAU,QAAQ,KAAK;AAC9B,UAAIL,SAAQ,SAAS,QAAQ,GAAG;AAChC,aAAO,aAAaA,MAAK,IAAIA,SAAQ;AAAA,IACvC;AASA,aAAS,UAAUA,QAAO;AACxB,UAAI,QAAQ,eAAe,KAAKA,QAAO,cAAc,GACjD,MAAMA,OAAM,cAAc;AAE9B,UAAI;AACF,QAAAA,OAAM,cAAc,IAAI;AACxB,YAAI,WAAW;AAAA,MACjB,SAASF,IAAP;AAAA,MAAW;AAEb,UAAI,SAAS,qBAAqB,KAAKE,MAAK;AAC5C,UAAI,UAAU;AACZ,YAAI,OAAO;AACT,UAAAA,OAAM,cAAc,IAAI;AAAA,QAC1B,OAAO;AACL,iBAAOA,OAAM,cAAc;AAAA,QAC7B;AAAA,MACF;AACA,aAAO;AAAA,IACT;AASA,aAAS,gBAAgB,QAAQ;AAC/B,aAAQ,OAAO,OAAO,eAAe,cAAc,CAAC,YAAY,MAAM,IAClE,WAAW,aAAa,MAAM,CAAC,IAC/B,CAAC;AAAA,IACP;AAUA,aAAS,QAAQA,QAAOI,SAAQ;AAC9B,UAAIE,QAAO,OAAON;AAClB,MAAAI,UAASA,WAAU,OAAOP,oBAAmBO;AAE7C,aAAO,CAAC,CAACA,YACNE,SAAQ,YACNA,SAAQ,YAAY,SAAS,KAAKN,MAAK,OACrCA,SAAQ,MAAMA,SAAQ,KAAK,KAAKA,SAAQI;AAAA,IACjD;AAYA,aAAS,eAAeJ,QAAO,OAAO,QAAQ;AAC5C,UAAI,CAAC,SAAS,MAAM,GAAG;AACrB,eAAO;AAAA,MACT;AACA,UAAIM,QAAO,OAAO;AAClB,UAAIA,SAAQ,WACH,YAAY,MAAM,KAAK,QAAQ,OAAO,OAAO,MAAM,IACnDA,SAAQ,YAAY,SAAS,QAChC;AACJ,eAAO,GAAG,OAAO,KAAK,GAAGN,MAAK;AAAA,MAChC;AACA,aAAO;AAAA,IACT;AASA,aAAS,UAAUA,QAAO;AACxB,UAAIM,QAAO,OAAON;AAClB,aAAQM,SAAQ,YAAYA,SAAQ,YAAYA,SAAQ,YAAYA,SAAQ,YACvEN,WAAU,cACVA,WAAU;AAAA,IACjB;AASA,aAAS,SAAS,MAAM;AACtB,aAAO,CAAC,CAAC,cAAe,cAAc;AAAA,IACxC;AASA,aAAS,YAAYA,QAAO;AAC1B,UAAI,OAAOA,UAASA,OAAM,aACtB,QAAS,OAAO,QAAQ,cAAc,KAAK,aAAc;AAE7D,aAAOA,WAAU;AAAA,IACnB;AAWA,aAAS,aAAa,QAAQ;AAC5B,UAAI,SAAS,CAAC;AACd,UAAI,UAAU,MAAM;AAClB,iBAAS,OAAO,OAAO,MAAM,GAAG;AAC9B,iBAAO,KAAK,GAAG;AAAA,QACjB;AAAA,MACF;AACA,aAAO;AAAA,IACT;AASA,aAAS,eAAeA,QAAO;AAC7B,aAAO,qBAAqB,KAAKA,MAAK;AAAA,IACxC;AAWA,aAAS,SAAS,MAAM,OAAO,WAAW;AACxC,cAAQ,UAAU,UAAU,SAAa,KAAK,SAAS,IAAK,OAAO,CAAC;AACpE,aAAO,WAAW;AAChB,YAAI,OAAO,WACP,QAAQ,IACRI,UAAS,UAAU,KAAK,SAAS,OAAO,CAAC,GACzC,QAAQ,MAAMA,OAAM;AAExB,eAAO,EAAE,QAAQA,SAAQ;AACvB,gBAAM,KAAK,IAAI,KAAK,QAAQ,KAAK;AAAA,QACnC;AACA,gBAAQ;AACR,YAAI,YAAY,MAAM,QAAQ,CAAC;AAC/B,eAAO,EAAE,QAAQ,OAAO;AACtB,oBAAU,KAAK,IAAI,KAAK,KAAK;AAAA,QAC/B;AACA,kBAAU,KAAK,IAAI,UAAU,KAAK;AAClC,eAAO,MAAM,MAAM,MAAM,SAAS;AAAA,MACpC;AAAA,IACF;AAUA,aAAS,QAAQ,QAAQ,KAAK;AAC5B,UAAI,QAAQ,iBAAiB,OAAO,OAAO,GAAG,MAAM,YAAY;AAC9D;AAAA,MACF;AAEA,UAAI,OAAO,aAAa;AACtB;AAAA,MACF;AAEA,aAAO,OAAO,GAAG;AAAA,IACnB;AAUA,QAAI,cAAc,SAAS,eAAe;AAW1C,aAAS,SAAS,MAAM;AACtB,UAAI,QAAQ,GACR,aAAa;AAEjB,aAAO,WAAW;AAChB,YAAI,QAAQ,UAAU,GAClB,YAAY,YAAY,QAAQ;AAEpC,qBAAa;AACb,YAAI,YAAY,GAAG;AACjB,cAAI,EAAE,SAAS,WAAW;AACxB,mBAAO,UAAU,CAAC;AAAA,UACpB;AAAA,QACF,OAAO;AACL,kBAAQ;AAAA,QACV;AACA,eAAO,KAAK,MAAM,QAAW,SAAS;AAAA,MACxC;AAAA,IACF;AASA,aAAS,SAAS,MAAM;AACtB,UAAI,QAAQ,MAAM;AAChB,YAAI;AACF,iBAAO,aAAa,KAAK,IAAI;AAAA,QAC/B,SAASN,IAAP;AAAA,QAAW;AACb,YAAI;AACF,iBAAQ,OAAO;AAAA,QACjB,SAASA,IAAP;AAAA,QAAW;AAAA,MACf;AACA,aAAO;AAAA,IACT;AAkCA,aAAS,GAAGE,QAAO,OAAO;AACxB,aAAOA,WAAU,SAAUA,WAAUA,UAAS,UAAU;AAAA,IAC1D;AAoBA,QAAI,cAAc,gBAAgB,WAAW;AAAE,aAAO;AAAA,IAAW,EAAE,CAAC,IAAI,kBAAkB,SAASA,QAAO;AACxG,aAAO,aAAaA,MAAK,KAAK,eAAe,KAAKA,QAAO,QAAQ,KAC/D,CAAC,qBAAqB,KAAKA,QAAO,QAAQ;AAAA,IAC9C;AAyBA,QAAI,UAAU,MAAM;AA2BpB,aAAS,YAAYA,QAAO;AAC1B,aAAOA,UAAS,QAAQ,SAASA,OAAM,MAAM,KAAK,CAAC,WAAWA,MAAK;AAAA,IACrE;AA2BA,aAAS,kBAAkBA,QAAO;AAChC,aAAO,aAAaA,MAAK,KAAK,YAAYA,MAAK;AAAA,IACjD;AAmBA,QAAI,WAAW,kBAAkB;AAmBjC,aAAS,WAAWA,QAAO;AACzB,UAAI,CAAC,SAASA,MAAK,GAAG;AACpB,eAAO;AAAA,MACT;AAGA,UAAI,MAAM,WAAWA,MAAK;AAC1B,aAAO,OAAO,WAAW,OAAO,UAAU,OAAO,YAAY,OAAO;AAAA,IACtE;AA4BA,aAAS,SAASA,QAAO;AACvB,aAAO,OAAOA,UAAS,YACrBA,SAAQ,MAAMA,SAAQ,KAAK,KAAKA,UAASH;AAAA,IAC7C;AA2BA,aAAS,SAASG,QAAO;AACvB,UAAIM,QAAO,OAAON;AAClB,aAAOA,UAAS,SAASM,SAAQ,YAAYA,SAAQ;AAAA,IACvD;AA0BA,aAAS,aAAaN,QAAO;AAC3B,aAAOA,UAAS,QAAQ,OAAOA,UAAS;AAAA,IAC1C;AA8BA,aAAS,cAAcA,QAAO;AAC5B,UAAI,CAAC,aAAaA,MAAK,KAAK,WAAWA,MAAK,KAAK,WAAW;AAC1D,eAAO;AAAA,MACT;AACA,UAAI,QAAQ,aAAaA,MAAK;AAC9B,UAAI,UAAU,MAAM;AAClB,eAAO;AAAA,MACT;AACA,UAAI,OAAO,eAAe,KAAK,OAAO,aAAa,KAAK,MAAM;AAC9D,aAAO,OAAO,QAAQ,cAAc,gBAAgB,QAClD,aAAa,KAAK,IAAI,KAAK;AAAA,IAC/B;AAmBA,QAAI,eAAe,mBAAmB,UAAU,gBAAgB,IAAI;AA0BpE,aAAS,cAAcA,QAAO;AAC5B,aAAO,WAAWA,QAAO,OAAOA,MAAK,CAAC;AAAA,IACxC;AAyBA,aAAS,OAAO,QAAQ;AACtB,aAAO,YAAY,MAAM,IAAI,cAAc,QAAQ,IAAI,IAAI,WAAW,MAAM;AAAA,IAC9E;AAiCA,QAAIO,SAAQ,eAAe,SAAS,QAAQ,QAAQ,UAAU;AAC5D,gBAAU,QAAQ,QAAQ,QAAQ;AAAA,IACpC,CAAC;AAqBD,aAAS,SAASP,QAAO;AACvB,aAAO,WAAW;AAChB,eAAOA;AAAA,MACT;AAAA,IACF;AAkBA,aAAS,SAASA,QAAO;AACvB,aAAOA;AAAA,IACT;AAeA,aAAS,YAAY;AACnB,aAAO;AAAA,IACT;AAEA,WAAO,UAAUO;AAAA;AAAA;;;ACx7DjB;AAAA;AAAA;AAAA;AAMA,KAAC,SAAU,MAAM,YAAY;AACzB;AACA,UAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC5C,eAAO,UAAU;AAAA,MACrB,WAAW,OAAO,WAAW,YAAY,OAAO,SAAS;AACrD,eAAO,UAAU,WAAW;AAAA,MAChC,OAAO;AACH,aAAK,MAAM,WAAW;AAAA,MAC1B;AAAA,IACJ,GAAE,SAAM,WAAY;AAChB;AAGA,UAAIC,QAAO,WAAW;AAAA,MAAC;AACvB,UAAI,gBAAgB;AACpB,UAAI,OAAQ,OAAO,WAAW,iBAAmB,OAAO,OAAO,cAAc,iBACzE,kBAAkB,KAAK,OAAO,UAAU,SAAS;AAGrD,UAAI,aAAa;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAGA,eAAS,WAAW,KAAK,YAAY;AACjC,YAAI,SAAS,IAAI,UAAU;AAC3B,YAAI,OAAO,OAAO,SAAS,YAAY;AACnC,iBAAO,OAAO,KAAK,GAAG;AAAA,QAC1B,OAAO;AACH,cAAI;AACA,mBAAO,SAAS,UAAU,KAAK,KAAK,QAAQ,GAAG;AAAA,UACnD,SAASC,IAAP;AAEE,mBAAO,WAAW;AACd,qBAAO,SAAS,UAAU,MAAM,MAAM,QAAQ,CAAC,KAAK,SAAS,CAAC;AAAA,YAClE;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAGA,eAAS,aAAa;AAClB,YAAI,QAAQ,KAAK;AACb,cAAI,QAAQ,IAAI,OAAO;AACnB,oBAAQ,IAAI,MAAM,SAAS,SAAS;AAAA,UACxC,OAAO;AAEH,qBAAS,UAAU,MAAM,MAAM,QAAQ,KAAK,CAAC,SAAS,SAAS,CAAC;AAAA,UACpE;AAAA,QACJ;AACA,YAAI,QAAQ;AAAO,kBAAQ,MAAM;AAAA,MACrC;AAIA,eAAS,WAAW,YAAY;AAC5B,YAAI,eAAe,SAAS;AACxB,uBAAa;AAAA,QACjB;AAEA,YAAI,OAAO,YAAY,eAAe;AAClC,iBAAO;AAAA,QACX,WAAW,eAAe,WAAW,MAAM;AACvC,iBAAO;AAAA,QACX,WAAW,QAAQ,UAAU,MAAM,QAAW;AAC1C,iBAAO,WAAW,SAAS,UAAU;AAAA,QACzC,WAAW,QAAQ,QAAQ,QAAW;AAClC,iBAAO,WAAW,SAAS,KAAK;AAAA,QACpC,OAAO;AACH,iBAAOD;AAAA,QACX;AAAA,MACJ;AAIA,eAAS,sBAAsB,OAAO,YAAY;AAE9C,iBAASE,KAAI,GAAGA,KAAI,WAAW,QAAQA,MAAK;AACxC,cAAI,aAAa,WAAWA,EAAC;AAC7B,eAAK,UAAU,IAAKA,KAAI,QACpBF,QACA,KAAK,cAAc,YAAY,OAAO,UAAU;AAAA,QACxD;AAGA,aAAK,MAAM,KAAK;AAAA,MACpB;AAIA,eAAS,gCAAgC,YAAY,OAAO,YAAY;AACpE,eAAO,WAAY;AACf,cAAI,OAAO,YAAY,eAAe;AAClC,kCAAsB,KAAK,MAAM,OAAO,UAAU;AAClD,iBAAK,UAAU,EAAE,MAAM,MAAM,SAAS;AAAA,UAC1C;AAAA,QACJ;AAAA,MACJ;AAIA,eAAS,qBAAqB,YAAY,OAAO,YAAY;AAEzD,eAAO,WAAW,UAAU,KACrB,gCAAgC,MAAM,MAAM,SAAS;AAAA,MAChE;AAEA,eAAS,OAAO,MAAM,cAAc,SAAS;AAC3C,YAAIG,QAAO;AACX,YAAI;AACJ,uBAAe,gBAAgB,OAAO,SAAS;AAE/C,YAAIC,cAAa;AACjB,YAAI,OAAO,SAAS,UAAU;AAC5B,UAAAA,eAAc,MAAM;AAAA,QACtB,WAAW,OAAO,SAAS,UAAU;AACnC,UAAAA,cAAa;AAAA,QACf;AAEA,iBAAS,uBAAuB,UAAU;AACtC,cAAI,aAAa,WAAW,QAAQ,KAAK,UAAU,YAAY;AAE/D,cAAI,OAAO,WAAW,iBAAiB,CAACA;AAAY;AAGpD,cAAI;AACA,mBAAO,aAAaA,WAAU,IAAI;AAClC;AAAA,UACJ,SAAS,QAAP;AAAA,UAAgB;AAGlB,cAAI;AACA,mBAAO,SAAS,SACd,mBAAmBA,WAAU,IAAI,MAAM,YAAY;AAAA,UACzD,SAAS,QAAP;AAAA,UAAgB;AAAA,QACtB;AAEA,iBAAS,oBAAoB;AACzB,cAAI;AAEJ,cAAI,OAAO,WAAW,iBAAiB,CAACA;AAAY;AAEpD,cAAI;AACA,0BAAc,OAAO,aAAaA,WAAU;AAAA,UAChD,SAAS,QAAP;AAAA,UAAgB;AAGlB,cAAI,OAAO,gBAAgB,eAAe;AACtC,gBAAI;AACA,kBAAI,SAAS,OAAO,SAAS;AAC7B,kBAAIC,YAAW,OAAO;AAAA,gBAClB,mBAAmBD,WAAU,IAAI;AAAA,cAAG;AACxC,kBAAIC,cAAa,IAAI;AACjB,8BAAc,WAAW,KAAK,OAAO,MAAMA,SAAQ,CAAC,EAAE,CAAC;AAAA,cAC3D;AAAA,YACJ,SAAS,QAAP;AAAA,YAAgB;AAAA,UACtB;AAGA,cAAIF,MAAK,OAAO,WAAW,MAAM,QAAW;AACxC,0BAAc;AAAA,UAClB;AAEA,iBAAO;AAAA,QACX;AAEA,iBAAS,sBAAsB;AAC3B,cAAI,OAAO,WAAW,iBAAiB,CAACC;AAAY;AAGpD,cAAI;AACA,mBAAO,aAAa,WAAWA,WAAU;AACzC;AAAA,UACJ,SAAS,QAAP;AAAA,UAAgB;AAGlB,cAAI;AACA,mBAAO,SAAS,SACd,mBAAmBA,WAAU,IAAI;AAAA,UACvC,SAAS,QAAP;AAAA,UAAgB;AAAA,QACtB;AAQA,QAAAD,MAAK,OAAO;AAEZ,QAAAA,MAAK,SAAS;AAAA,UAAE,SAAS;AAAA,UAAG,SAAS;AAAA,UAAG,QAAQ;AAAA,UAAG,QAAQ;AAAA,UACvD,SAAS;AAAA,UAAG,UAAU;AAAA,QAAC;AAE3B,QAAAA,MAAK,gBAAgB,WAAW;AAEhC,QAAAA,MAAK,WAAW,WAAY;AACxB,iBAAO;AAAA,QACX;AAEA,QAAAA,MAAK,WAAW,SAAU,OAAO,SAAS;AACtC,cAAI,OAAO,UAAU,YAAYA,MAAK,OAAO,MAAM,YAAY,CAAC,MAAM,QAAW;AAC7E,oBAAQA,MAAK,OAAO,MAAM,YAAY,CAAC;AAAA,UAC3C;AACA,cAAI,OAAO,UAAU,YAAY,SAAS,KAAK,SAASA,MAAK,OAAO,QAAQ;AACxE,2BAAe;AACf,gBAAI,YAAY,OAAO;AACnB,qCAAuB,KAAK;AAAA,YAChC;AACA,kCAAsB,KAAKA,OAAM,OAAO,IAAI;AAC5C,gBAAI,OAAO,YAAY,iBAAiB,QAAQA,MAAK,OAAO,QAAQ;AAChE,qBAAO;AAAA,YACX;AAAA,UACJ,OAAO;AACH,kBAAM,+CAA+C;AAAA,UACzD;AAAA,QACJ;AAEA,QAAAA,MAAK,kBAAkB,SAAU,OAAO;AACpC,yBAAe;AACf,cAAI,CAAC,kBAAkB,GAAG;AACtB,YAAAA,MAAK,SAAS,OAAO,KAAK;AAAA,UAC9B;AAAA,QACJ;AAEA,QAAAA,MAAK,aAAa,WAAY;AAC1B,UAAAA,MAAK,SAAS,cAAc,KAAK;AACjC,8BAAoB;AAAA,QACxB;AAEA,QAAAA,MAAK,YAAY,SAAS,SAAS;AAC/B,UAAAA,MAAK,SAASA,MAAK,OAAO,OAAO,OAAO;AAAA,QAC5C;AAEA,QAAAA,MAAK,aAAa,SAAS,SAAS;AAChC,UAAAA,MAAK,SAASA,MAAK,OAAO,QAAQ,OAAO;AAAA,QAC7C;AAGA,YAAI,eAAe,kBAAkB;AACrC,YAAI,gBAAgB,MAAM;AACtB,yBAAe;AAAA,QACnB;AACA,QAAAA,MAAK,SAAS,cAAc,KAAK;AAAA,MACnC;AAQA,UAAI,gBAAgB,IAAI,OAAO;AAE/B,UAAI,iBAAiB,CAAC;AACtB,oBAAc,YAAY,SAAS,UAAU,MAAM;AAC/C,YAAK,OAAO,SAAS,YAAY,OAAO,SAAS,YAAa,SAAS,IAAI;AACzE,gBAAM,IAAI,UAAU,gDAAgD;AAAA,QACtE;AAEA,YAAI,SAAS,eAAe,IAAI;AAChC,YAAI,CAAC,QAAQ;AACX,mBAAS,eAAe,IAAI,IAAI,IAAI;AAAA,YAClC;AAAA,YAAM,cAAc,SAAS;AAAA,YAAG,cAAc;AAAA,UAAa;AAAA,QAC/D;AACA,eAAO;AAAA,MACX;AAGA,UAAI,OAAQ,OAAO,WAAW,gBAAiB,OAAO,MAAM;AAC5D,oBAAc,aAAa,WAAW;AAClC,YAAI,OAAO,WAAW,iBACf,OAAO,QAAQ,eAAe;AACjC,iBAAO,MAAM;AAAA,QACjB;AAEA,eAAO;AAAA,MACX;AAEA,oBAAc,aAAa,SAAS,aAAa;AAC7C,eAAO;AAAA,MACX;AAGA,oBAAc,SAAS,IAAI;AAE3B,aAAO;AAAA,IACX,CAAC;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AChOD,eAAeG,cAAcC,MAAaC,MAAiB;AACzD,MAAIC,OAAmB;AACvB,MAAI;AACFA,WAAO,IAAIC,IAAIH,IAAG;EACnB,SAAQI,OAAP;EAAc;AAChB,MAAIC,UAAUH,SAASI,eAAeC,SAASL,KAAKM,MAAM,KAAKC,aAAaF,SAASL,KAAKQ,QAAQ,IAAI;AACpG,UAAMC,cAAcN,OAAOO,iBAAiB;MAC1CC,MAAMb;IACP,CAAA;AACD,UAAMc,OAAOH,YAAYI,WAAW;MAClCC,IAAI;KACL;AAED,UAAMC,WAAW,MAAMC,MAAMlB,MAAKC,IAAI;AACtCa,SAAKK,OAAM;AAEXR,gBAAYQ,OAAM;AAElB,WAAOF;EACR;AAED,SAAOC,MAAMlB,MAAKC,IAAI;AACxB;AACA,SAASmB,mBAAgB;AACvB,QAAMC,UAAU,CAAA;AAChB,MAAIC;AAAQD,YAAQE,iBAAiB,IAAID;AACzC,MAAIE;AAAWH,YAAQI,sBAAsB,IAAID;AACjD,SAAOH;AACT;AAEA,SAASK,iBAAiBT,UAAkB;AAC1CU,MAAIC,KAAK,aAAaX,SAASY,UAAUZ,SAASa,YAAY;AAC9DH,MAAIC,KAAK,QAAQX,SAASjB,KAAK;AACjC;oCArGM2B,KAYFL,QACAE,WAGSD,mBACAE,wBAWTpB,QACEC,gBACAG,cAyEOsB,gBA2BAC;;;;;;;;AAlIb,IAAML,MAAMM,gBAAAA,QAASC,UAAU,cAAc;AAC7CP,QAAIQ,SAASC,uBAAOC,IAAI;AAWxB,IAAIf,SAAS;AACb,IAAIE,YAAY;AAGT,IAAMD,oBAAoB;AAC1B,IAAME,yBAAyB;AAWtC,IAAIpB,SAAwB;AAC5B,IAAMC,iBAA2B,CAAA;AACjC,IAAMG,eAAyB,CAAA;IAyElBsB,iBAAiBA,CAAIO,IAAYC,YAAmC;AAC/E,YAAMC,WAAU,IAAIC,QAAW,CAACC,SAASC,WAAU;AACjD,cAAMC,KAAKC,WAAW,MAAK;AACzBC,uBAAaF,EAAE;AACfD,iBAAO,IAAII,MAAK,gBAAiBT,MAAM,CAAC;WACvCA,EAAE;MACP,CAAC;AACD,aAAOG,QAAQO,KAAQ,CAACT,SAASC,QAAO,CAAC;IAC3C;IAmBaR,OAAO,SAAIhC,MAA+F;AAAA,UAAlFiD,OAAAC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAa,CAAA;AAAE,UAAEG,WAAAA,UAAAA,SAAAA,KAAAA,UAAAA,CAAAA,MAAAA,SAAAA,UAAAA,CAAAA,IAAwB,CAAA;AAAE,UAAEC,gBAA+BJ,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAA,CAAA;AAC/G,YAAMK,iBAAiB;QACrBC,MAAM;QACNnC,SAAS;UACP,gBAAgB;QACjB;;AAEH,UAAIiC,cAAcG,WAAW;AAC3BF,uBAAelC,UAAOqC,eAAAA,eAAQH,CAAAA,GAAAA,eAAelC,OAAO,GAAKD,iBAAgB,CAAE;MAC5E;AACD,YAAMuC,cAAUC,cAAAA,SAAML,gBAAgBF,UAAU;QAAEQ,QAAQ;MAAM,CAAE;AAIlE,UAAIP,cAAcQ,kBAAkB;AAIlCH,gBAAQI,OAAOd;AAEf,YAAIU,QAAQtC,QAAQ,cAAc,MAAM;AAAmC,iBAAOsC,QAAQtC,QAAQ,cAAc;MACjH,OAAM;AACLsC,gBAAQI,OAAOC,KAAKC,UAAUhB,IAAI;MACnC;AAED,aAAOlB,eACJuB,cAAcd,WAAsB,KACrCzC,cAAcC,MAAK2D,OAAO,EAAEO,KAAMjD,cAAY;AAC5C,YAAIA,SAASkD,IAAI;AACf,iBAAOlD,SAASmD,KAAI;QACrB;AACD1C,yBAAiBT,QAAQ;AACzB,cAAMA;MACR,CAAC,CAAC;IAEN;;;;;AClKA,SAASoD,EAAsBC,IAAAA;AAC3BC,OAAKD,UAAUA;AAAAA;ACMJ,SAAA,EAASE,IAAAA;AACpB,MAAIC,KAASD,GAAIE,QAAQ,MAAM,GAAA,EAAKA,QAAQ,MAAM,GAAA;AAClD,UAAQD,GAAOE,SAAS,GAAA;IACpB,KAAK;AACD;IACJ,KAAK;AACDF,MAAAA,MAAU;AACV;IACJ,KAAK;AACDA,MAAAA,MAAU;AACV;IACJ;AACI,YAAM;EAAA;AAGd,MAAA;AACI,WA5BR,SAA0BD,IAAAA;AACtB,aAAOI,mBACHC,EAAKL,EAAAA,EAAKE,QAAQ,QAAQ,SAASI,IAAGC,IAAAA;AAClC,YAAIC,KAAOD,GAAEE,WAAW,CAAA,EAAGC,SAAS,EAAA,EAAIC,YAAAA;AAIxC,eAHIH,GAAKL,SAAS,MACdK,KAAO,MAAMA,KAEV,MAAMA;MAAAA,CAAAA,CAAAA;IAAAA,EAqBOP,EAAAA;EAAAA,SACnBW,IAAP;AACE,WAAOP,EAAKJ,EAAAA;EAAAA;AAAAA;AC5Bb,SAASY,EAAkBf,IAAAA;AAC9BC,OAAKD,UAAUA;AAAAA;AAMJ,SAAA,EAASgB,IAAOC,IAAAA;AAC3B,MAAqB,YAAA,OAAVD;AACP,UAAM,IAAID,EAAkB,yBAAA;AAIhC,MAAIG,KAAAA,UADJD,KAAUA,MAAW,CAAA,GACHE,SAAkB,IAAI;AACxC,MAAA;AACI,WAAOC,KAAKC,MAAMC,EAAkBN,GAAMO,MAAM,GAAA,EAAKL,EAAAA,CAAAA,CAAAA;EAAAA,SAChDM,IAAP;AACE,UAAM,IAAIT,EAAkB,8BAA8BS,GAAExB,OAAAA;EAAAA;AAAAA;AFdpE,IAkCA,GEhCmC;AFFnC;;;;AAIAD,MAAsB0B,YAAY,IAAIC,SACtC3B,EAAsB0B,UAAUE,OAAO;AA6BvC,IAAA,IAAkC,eAAA,OAAXC,UACnBA,OAAOrB,QACPqB,OAAOrB,KAAKsB,KAAKD,MAAAA,KA7BrB,SAAkBE,IAAAA;AACd,UAAI5B,KAAM6B,OAAOD,EAAAA,EAAO1B,QAAQ,OAAO,EAAA;AACvC,UAAIF,GAAIG,SAAS,KAAK;AAClB,cAAM,IAAIN,EACN,mEAAA;AAGR,eAEgBiC,IAAIC,IAAZC,IAAK,GAAeC,KAAM,GAAGhC,IAAS,IAEzC8B,KAAS/B,GAAIkC,OAAOD,IAAAA,GAAAA,CAEpBF,OACCD,KAAKE,IAAK,IAAS,KAALF,KAAUC,KAASA,IAG/BC,MAAO,KACV/B,KAAU4B,OAAOM,aAAa,MAAOL,OAAAA,KAAaE,IAAM,EAAA,IACzD;AAGAD,QAAAA,KA/BI,oEA+BWK,QAAQL,EAAAA;AAE3B,aAAO9B;IAAAA;AE9BXY,MAAkBU,YAAY,IAAIC,SAClCX,EAAkBU,UAAUE,OAAO;AAAA,IAAA,yBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AQT7B,SAAUY,iBAAiBC,OAAuC;AACtE,MAAIC,gBAAgB;AACpB,MAAIC,gBAAgB;AACpB,MAAIC;AACJ,MAAI;AACFA,cAAWC,OAAeJ,KAAI;AAC9BC,oBAAgB;AAChBC,oBAAgBC,QAAQE;AACxB,QAAMC,IAAI;AACVH,YAAQI,QAAQD,GAAGA,CAAC;AACpBH,YAAQK,WAAWF,CAAC;AACpB,WAAO;WACAG,OAAP;AACA,QAAMC,SAASD;AACf,WAAO,CAAC,EACNC;KAECA,OAAOC,SAAS;IAEfD,OAAOC,SAAS;;IAGhBD,OAAOE,SAAS;IAEhBF,OAAOE,SAAS;IAElBX,iBACAC,kBAAkB;EAErB;AACH;2CP9BaW,kBAQAC,oBCPPC,qBASOC,mBA+HAC,sBAqCAC,gBCjKSC,eA4BTC,2BAmFAC,kBC5HAC,sBAMAC,iBAUAC,cAOAC,iBCZAC,kBAaAC,gBASAC,gBA+BSC,aAqJAC,mBCrNTC,YCEbC,MC8BaC,aCxBAC,uBAWAC,eAoBAC,uBAiCAC,eAOAC,WAOAC,YCtEAC;;;;;;;;;;;;;;;;;;;AThBN,IAAM3B,mBAAmB;MAC9B4B,QAAQ;MACRC,QAAQ;MACRC,OAAO;;AAKF,IAAM7B,qBAAqB;MAChC2B,QAAQ;MACRC,QAAQ;MACRE,YAAY;;ACVd,IAAM7B,sBAAsB,SAAtBA,qBAAuB8B,gBAA8C;AACzE,UAAIA,mBAAmBhC,iBAAiB4B,QAAQ;AAC9C,eAAO;MACR,WAAUI,mBAAmBhC,iBAAiB6B,QAAQ;AACrD,eAAO;MACR;AACD,YAAM,IAAII,MAAyBD,mBAAAA,OAAAA,gBAAkC,mBAAA,CAAA;IACvE;IAEa7B,oBAAoB,SAApBA,mBAAqB+B,SAA6C;AAC7E,UAAMF,iBAAiBhC,iBAAiB4B;AACxC,UAAIM,YAAY,GAAG;AACjB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAqC;UACrCC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AACD,UAAIL,YAAY,GAAG;AACjB,eAAO;UACLF;UACAE,SAAS;UACTC,WAA6C;UAC7CC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AACD,UAAIL,YAAY,GAAG;AACjB,eAAO;UACLF;UACAE,SAAS;UACTC,WAA6C;UAC7CC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AACD,UAAIL,YAAY,GAAG;AACjB,eAAO;UACLF;UACAE,SAAS;UACTC,WAA4C;UAC5CC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AACD,UAAIL,YAAY,KAAK;AACnB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAW;UACXC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AACD,UAAIL,YAAY,OAAO;AACrB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAW;UACXC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AACD,UAAIL,YAAY,IAAI;AAClB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAW;UACXC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AACD,UAAIL,YAAY,IAAI;AAClB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAW;UACXC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AACD,UAAIL,YAAY,IAAI;AAClB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAW;UACXC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AACD,UAAIL,YAAY,KAAK;AACnB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAW;UACXC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AACD,UAAIL,YAAY,MAAM;AACpB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAW;UACXC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AAED,aAAO;IACT;IAEanC,uBAAuB,SAAvBA,sBAAwB8B,SAA6C;AAChF,UAAMF,iBAAiBhC,iBAAiB6B;AACxC,UAAIK,YAAY,GAAG;AACjB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAW;UACXC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf,WAAUL,YAAY,GAAG;AACxB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAW;UACXC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf,WAAUL,YAAY,GAAG;AACxB,eAAO;UACLF;UACAE,SAAS;UACTC,WAAW;UACXC,aAAa;UACbC,eAAe;UACfC,QAAQ;UACRC,YAAY;;MAEf;AAED,aAAO;IACT;AAEO,IAAMlC,iBAAiB,SAAjBA,gBAAkB2B,gBAAoCE,SAAuD;AACxH,UAAIF,mBAAmBhC,iBAAiB8B;AAAO,eAAO;AACtD,UAAMU,eAAeN,UAAW,OAAOA,YAAY,WAAWA,UAAUO,SAASP,SAAS,EAAE,IAAKhC,oBAAoB8B,cAAc;AACnI,UAAIA,mBAAmBhC,iBAAiB4B,QAAQ;AAC9C,eAAOzB,kBAAkBqC,YAAY;MACtC,WAAUR,mBAAmBhC,iBAAiB6B,QAAQ;AACrD,eAAOzB,qBAAqBoC,YAAY;MACzC;AACD,aAAO;IACT;AC1KA,IAAsBlC,gBAAc,SAAA,cAAA;AAAA,gBAAAA,gBAAA,YAAA;AAAA,UAAA,SAAAoC,gBAAApC,cAAA;AAKlC,eAAmBR,eAAAA,MAAc6C,SAAgB;AAAA,YAAA;AAAA,wBAAA,MAAArC,cAAA;AAE/C,gBAAA,OAAA,KAAA,MAAMqC,OAAO;AAAE,wBAAA,uBAAA,KAAA,GAAA,QAAA,MAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,WAAA,MAAA;AAEf,cAAK7C,OAAOA;AACZ,cAAK6C,UAAUA,WAAW;AAE1BC,eAAOC,eAAqB,uBAAA,KAAA,GAAA,QAAQ;UAAEC,OAAO;QAAe,CAAE;AAAE,eAAA;MAClE;AAAC,mBAAAxC,gBAAA,CAAA;QAAA,KAAA;QAAA,OAED,SAAM,SAAA;AACJ,iBAAO;YACLP,MAAM,KAAKA;YACXD,MAAM,KAAKA;YACX6C,SAAS,KAAKA;;QAElB;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAQI,YAAA;AACN,iBAAOC,KAAKC,UAAU,KAAKC,OAAM,CAAE;QACrC;MAAC,CAAA,CAAA;AAAA,aAAA5C;IAAA,EAzByC6C,WAAW;AA4BvD,IAAa5C,4BAA0B,SAAA,gBAAA;AAAA,gBAAAA,4BAAA,cAAA;AAAA,UAAA,UAAAmC,gBAAAnC,0BAAA;AAiBrC,eAAmBT,2BAAAA,MAAc6C,SAAgB;AAAA,YAAA;AAAA,wBAAA,MAAApC,0BAAA;AAE/C,iBAAMT,QAAAA,KAAAA,MAAAA,MAAM6C,OAAO;AAGnBC,eAAOC,eAAqB,uBAAA,MAAA,GAAA,QAAQ;UAAEC,OAAO;QAA2B,CAAE;AAAE,eAAA;MAC9E;AAAC,mBAAAvC,4BAAA,MAAA,CAAA;QAAA,KAAA;QAAA,OAEM,SAAA,SAAgBT,MAA+B;AAAA,cAAjBsD,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AAClD,iBAAO,IAAI7C,2BAA0BT,MAASS,GAAAA,OAAAA,2BAA0B8C,SAASvD,IAAI,GAAC,IAAA,EAAA,OAAKsD,YAAY,CAAG;QAC5G;;MAEA,GAAA;QAAA,KAAA;QAAA,OACO,SAAiC,WAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACpC,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAqC,eAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACxC,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAiC,WAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACpC,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAsC,gBAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACzC,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAqC,eAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACxC,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAmD,6BAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACtD,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAA8C,wBAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACjD,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAmD,6BAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACtD,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAA8C,wBAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACjD,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAA2C,qBAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AAC9C,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAsC,gBAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACzC,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAuC,iBAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AAC1C,iBAAO7C,2BAA0B+C,SAAS,MAAMF,YAAY;QAC9D;MAAC,CAAA,CAAA;AAAA,aAAA7C;IAAA,EA5E4CD,aAAa;AA+E5D,oBA/EaC,2BAC6B,YAAA;MACtC,KAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;KACP;AAoEH,IAAaC,mBAAiB,SAAA,iBAAA;AAAA,gBAAAA,mBAAA,eAAA;AAAA,UAAA,UAAAkC,gBAAAlC,iBAAA;AAU5B,eAAmBV,kBAAAA,MAAc6C,SAAgB;AAAA,YAAA;AAAA,wBAAA,MAAAnC,iBAAA;AAE/C,iBAAMV,QAAAA,KAAAA,MAAAA,MAAM6C,OAAO;AAGnBC,eAAOC,eAAqB,uBAAA,MAAA,GAAA,QAAQ;UAAEC,OAAO;QAAkB,CAAE;AAAE,eAAA;MACrE;AAAC,mBAAAtC,mBAAA,MAAA,CAAA;QAAA,KAAA;QAAA,OAEM,SAAA,SAAgBV,MAA+B;AAAA,cAAjBsD,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AAClD,iBAAO,IAAI5C,kBAAiBV,MAASU,GAAAA,OAAAA,kBAAiB6C,SAASvD,IAAI,CAAC,EAAA,OAAGsD,YAAY,CAAG;QACxF;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAwC,kBAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AAC3C,iBAAO5C,kBAAiB8C,SAAS,MAAMF,YAAY;QACrD;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAA2C,qBAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AAC9C,iBAAO5C,kBAAiB8C,SAAS,MAAMF,YAAY;QACrD;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAA0C,oBAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AAC7C,iBAAO5C,kBAAiB8C,SAAS,MAAMF,YAAY;QACrD;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAoC,cAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACvC,iBAAO5C,kBAAiB8C,SAAS,MAAMF,YAAY;QACrD;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAmC,aAAA;AAAA,cAAjBA,eAAY,UAAA,SAAA,KAAA,UAAA,CAAA,MAAA,SAAA,UAAA,CAAA,IAAG;AACtC,iBAAO5C,kBAAiB8C,SAAS,MAAMF,YAAY;QACrD;MAAC,CAAA,CAAA;AAAA,aAAA5C;IAAA,EAxCmCF,aAAa;oBAAtCE,kBAC6B,YAAA;MACtC,KAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;MACN,MAAM;KACP;ACpII,IAAMC,uBAAuB;MAClC8C,WAAW;MACXC,mBAAmB;MACnBC,mBAAmB;;IAGR/C,kBAAegD,iBAAA;MAC1BC,cAAc;MACdC,SAAS;MACTC,QAAQ;MACRC,kBAAkB;MAClBC,UAAU;MACVC,OAAO;IAAO,GACXvD,oBAAoB;IAGZE,eAAY+C,iBAAA;MACvBO,WAAW;MACXC,UAAU;MACVC,UAAU;IAAU,GACjB1D,oBAAoB;IAGZG,kBAAe8C,iBAAAA,iBAAA,CAAA,GACvB/C,YAAY,GACZD,eAAe;ACdb,IAAMG,mBAAmB;MAC9BuD,UAAU;MACVC,QAAQ;;AAWH,IAAMvD,iBAAiB;MAC5BwD,WAAW;MACXC,OAAO;MACPC,YAAY;MACZC,WAAW;MACXC,cAAc;MACdC,SAAS;;AAGJ,IAAM5D,iBAAc2C,eAAAA,eAAA,CAAA,GACtB5C,cAAc,GAAA,CAAA,GAAA;MACjB8D,sBAAsB;IAAsB,CACpC;AA4BV,IAAsB5D,cAAe,SAAA,mBAAA;AAAA,gBAAAA,cAAA,iBAAA;AAAA,UAAA,SAAA0B,cAAA1B,YAAA;AAAA,eAAAA,eAAA;AAAA,YAAA;AAAA,wBAAA,MAAAA,YAAA;AAAA,iBAAA,OAAA,UAAA,QAAA,OAAA,IAAA,MAAA,IAAA,GAAA,OAAA,GAAA,OAAA,MAAA,QAAA;AAAA,eAAA,IAAA,IAAA,UAAA,IAAA;QAAA;AAAA,gBAAA,OAAA,KAAA,MAAA,QAAA,CAAA,IAAA,EAAA,OAAA,IAAA,CAAA;AAAA,wBAAA,uBAAA,KAAA,GAAA,eACJ,CAAA,CAAE;AAAA,wBAAA,uBAAA,KAAA,GAAA,eAEZ,KAAK;AAAA,wBAAA,uBAAA,KAAA,GAAA,eAIwB,IAAI;AAAA,eAAA;MAAA;AAAA,mBAAAA,cAAA,CAAA;QAAA,KAAA;QAAA,KActD,SAAoB6D,OAAA;AAClB,iBAAO,KAAKC,cAAWpB,eAAA,CAAA,GAAQ,KAAKoB,WAAW,IAAK;QACtD;MAAC,GAAA;QAAA,KAAA;QAAA,OAID,SAAA,eAAeC,mBAAoC;AACjD,cAAI,KAAKC,WAAWlE,eAAeyD;AAAO;AAC1C,cAAI,CAACQ,kBAAkB/C;AAAgB,kBAAMzB,0BAA0B0E,SAAS,sDAAsD;AACtI,cAAMC,qBAAqB7E,eAAe0E,kBAAkB/C,gBAAgB+C,kBAAkB7C,OAAO;AACrG,eAAK4C,cAAWpB,eAAAA,eAAA,CAAA,GAAQwB,kBAAkB,GAAKH,iBAAiB;QAClE;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAA,mBAAmBI,GAAU;QAAA;MAAU,GAAA;QAAA,KAAA;QAAA,OAEvC,SAA2B,8BAAA;AAEzB,cAAI,KAAKpF,SAASa,gBAAgB4C,qBAAqB,KAAKwB,WAAWlE,eAAe0D;AAAY;mBACzF,KAAKQ,WAAWlE,eAAe0D;AAAY,kBAAMjE,0BAA0B0E,SAAS,oBAAoB;AAEjH,cAAI,KAAKD,WAAWlE,eAAe2D;AAAW,kBAAMjE,iBAAiB4E,gBAAgB,mBAAmB;AACxG,cAAI,KAAKJ,WAAWlE,eAAeyD;AACjC,kBAAM/D,iBAAiB4E,gBACrB,qHAAqH;AAEzH,cAAI,CAAC,KAAKC;AAAU,kBAAM7E,iBAAiB4E,gBAAgB,iEAAiE;QAC9H;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAA+B,kCAAA;AAC7B,cAAI,KAAKJ,WAAWlE,eAAewD;AAAW;AAC9C,cAAI,KAAKU,WAAWlE,eAAe2D;AAAW,kBAAMlE,0BAA0B0E,SAAS,mBAAmB;AAC1G,cAAI,KAAKD,WAAWlE,eAAeyD;AAAO,kBAAMhE,0BAA0B0E,SAAS,gCAAgC;QACrH;MAAC,GAAA;QAAA,KAAA;QAAA,OAED,SAAA,kBAAkBK,MAAa;AAC7B,eAAKC,cAAcD;AACnB,eAAKE,KAAKzE,eAAe6D,sBAAsB;YAAEa,aAAa,KAAK1F;YAAMuF;UAAI,CAAE;QACjF;MAAC,CAAA,CAAA;AAAA,aAAAtE;IAAA,EA1D0C0E,gBAAgB;AAqJ7D,IAAsBzE,oBAAiB,aAAA,SAAAA,qBAAA;AAAA,sBAAA,MAAAA,kBAAA;IAAA,CAAA;ACrNhC,IAAMC,aAAa;ACE1B,IAAAC,OAAewE,iBAAAA,QAASC,UAAU,iBAAiB;IC8BtCxE,cAAc,SAAdA,aAAeyE,KAAwB;AAClD,cAAQ,OAAOA,QAAQ,YAAY,OAAOA,QAAQ,aAAa,qBAAqBC,KAAKD,GAAG;IAC9F;IC1BaxE,wBAAwB,SAAxBA,uBAAyB0E,OAAiB;AACrD,UAAMC,UAAUC,uBAA2BF,KAAK;AAChD,UAAI,CAACC,QAAQE,KAAK;AAChB,eAAO;MACR;AACD,UAAIF,QAAQE,MAAMC,KAAKC,MAAMC,KAAKC,IAAG,IAAK,GAAI,GAAG;AAC/C,eAAO;MACR;AACD,aAAO;IACT;IAEahF,gBAAa,WAAA;AAAA,UAAG,OAAA,kBAAA,oBAAAiF,QAAA,KAAA,SAAA,QAAOC,SAA0CxE,gBAAkC;AAAA,YAAAyE,IAAA,QAAA,SAAA,MAAA;AAAA,eAAA,oBAAAF,QAAA,KAAA,SAAA,SAAA,UAAA;AAAA,iBAAA,GAAA;AAAA,oBAAA,SAAA,OAAA,SAAA,MAAA;cAAA,KAAA;AACxGE,gBAAAA,KAAIzE,mBAAmB,WAAW,UAAU;AAC5C0E,yBAAS;kBACbD,GAAAA;;AAGIE,0BAAU3E,mBAAmB,WAAW,WAAW;AACnDsD,uBAAO;kBACXkB;kBACAE;kBACAC;;AACD,yBAAA,OAAA;AAAA,uBACiBC,KAAI,GAAA,OAA6C1F,YAAU,WAAA,GAAaoE,IAAI;cAAC,KAAA;AAAzFuB,sBAAG,SAAA;AAAA,oBACJA,IAAIC,SAAO;AAAA,2BAAA,OAAA;AAAA;gBAAA;AAAA,sBACR,IAAI7E,MAAM,wEAAwE;cAAC,KAAA;AAAA,uBAGpF4E,SAAAA,OAAAA,UAAAA,IAAIE,SAAS;cAAA,KAAA;cAAA,KAAA;AAAA,uBAAA,SAAA,KAAA;YAAA;UAAA;QAAA,GAAA,OAAA;OACrB,CAAA;AAAA,aAAA,SAlBYzF,eAAa,IAAA,KAAA;AAAA,eAAA,KAAA,MAAA,MAAA,SAAA;MAAA;IAAA,EAkBzB;IAEYC,wBAAqB,WAAA;AAAA,UAAG,QAAA,kBAAA,oBAAAgF,QAAA,KAAA,SAAA,SACnCvE,gBACAgF,eACAD,WACAE,QACAC,aACA7B,UAAiB;AAAA,YAAAoB,IAAA,SAAA;AAAA,eAAA,oBAAAF,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,iBAAA,GAAA;AAAA,oBAAA,UAAA,OAAA,UAAA,MAAA;cAAA,KAAA;AAEXE,gBAAAA,KAAIzE,mBAAmB,WAAW,UAAU;AAC5CmF,0BAAU;kBACdC,WAAW;oBACTC,GAAGL;oBACHP,GAAAA;;kBAEF9D,SAASoE;kBACTE;kBACAK,UAAU/H,OAAOgI,SAASC;kBAC1BC,SAASP;;AACV,0BAAA,OAAA;AAAA,uBAEwBN,KAAI,GAAA,OAAyD1F,YAAU,cAAA,GAAgBiG,SAAS;kBACvHO,SAAS;oBACPC,WAAWtC;oBACXuC,iBAAiBX;kBAClB;gBACF,CAAA;cAAC,KAAA;AALIY,6BAAU,UAAA;AAAA,oBAMXA,WAAWf,SAAO;AAAA,4BAAA,OAAA;AAAA;gBAAA;AACrB3F,gBAAAA,KAAIvB,MAAM,6DAA6DiI,WAAWjI,KAAK;AAAE,sBACnF,IAAIqC,MAAM,2DAA2D;cAAC,KAAA;AAAA,uBAEvE4F,UAAAA,OAAAA,UAAAA,WAAW9B,KAAK;cAAA,KAAA;cAAA,KAAA;AAAA,uBAAA,UAAA,KAAA;YAAA;UAAA;QAAA,GAAA,QAAA;OACxB,CAAA;AAAA,aAAA,SA/BYxE,uBAAqB,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA;AAAA,eAAA,MAAA,MAAA,MAAA,SAAA;MAAA;IAAA,EA+BjC;AAEM,IAAMC,gBAAgB,SAAhBA,eAAiBsG,aAAqBb,QAAkB;AACnE,UAAI/H,iBAAiB,cAAc,GAAG;AACpC,eAAO6I,aAAaC,QAAWF,GAAAA,OAAAA,YAAYG,YAAW,GAAMhB,GAAAA,EAAAA,OAAAA,MAAM,CAAG;MACtE;AACD,aAAO;IACT;AAEO,IAAMxF,YAAY,SAAZA,WAAaqG,aAAqBb,QAAgBlB,OAAiB;AAC9E,UAAI7G,iBAAiB,cAAc,GAAG;AACpC,eAAO6I,aAAarI,QAAO,GAAA,OAAIoI,YAAYG,YAAW,GAAMhB,GAAAA,EAAAA,OAAAA,MAAM,GAAIlB,KAAK;MAC5E;AACD,aAAO;IACT;AAEO,IAAMrE,aAAa,SAAbA,YAAcoG,aAAqBb,QAAkB;AAChE,UAAI/H,iBAAiB,cAAc,GAAG;AACpC,eAAO6I,aAAapI,WAAcmI,GAAAA,OAAAA,YAAYG,YAAW,GAAMhB,GAAAA,EAAAA,OAAAA,MAAM,CAAG;MACzE;AACD,aAAO;IACT;AC3EO,IAAMtF,kBAAkB;MAC7BuG,aAAa;MACbvD,SAAS;;;;;;;;;;;;;AClBX,aAAgB,OAAOwD,IAAS;AAC9B,UAAI,CAAC,OAAO,cAAcA,EAAC,KAAKA,KAAI;AAAG,cAAM,IAAI,MAAM,2BAA2BA,IAAG;IACvF;AAFA,YAAA,SAAA;AAIA,aAAgB,KAAK,GAAU;AAC7B,UAAI,OAAO,MAAM;AAAW,cAAM,IAAI,MAAM,yBAAyB,GAAG;IAC1E;AAFA,YAAA,OAAA;AAIA,aAAgB,MAAM,MAA8B,SAAiB;AACnE,UAAI,EAAE,aAAa;AAAa,cAAM,IAAI,UAAU,qBAAqB;AACzE,UAAI,QAAQ,SAAS,KAAK,CAAC,QAAQ,SAAS,EAAE,MAAM;AAClD,cAAM,IAAI,UAAU,iCAAiC,0BAA0B,EAAE,QAAQ;IAC7F;AAJA,YAAA,QAAA;AAYA,aAAgB,KAAKC,OAAU;AAC7B,UAAI,OAAOA,UAAS,cAAc,OAAOA,MAAK,WAAW;AACvD,cAAM,IAAI,MAAM,iDAAiD;AACnE,aAAOA,MAAK,SAAS;AACrB,aAAOA,MAAK,QAAQ;IACtB;AALA,YAAA,OAAA;AAOA,aAAgB,OAAO,UAAe,gBAAgB,MAAI;AACxD,UAAI,SAAS;AAAW,cAAM,IAAI,MAAM,kCAAkC;AAC1E,UAAI,iBAAiB,SAAS;AAAU,cAAM,IAAI,MAAM,uCAAuC;IACjG;AAHA,YAAA,SAAA;AAIA,aAAgB,OAAO,KAAU,UAAa;AAC5C,YAAM,GAAG;AACT,YAAM,MAAM,SAAS;AACrB,UAAI,IAAI,SAAS,KAAK;AACpB,cAAM,IAAI,MAAM,yDAAyD,KAAK;;IAElF;AANA,YAAA,SAAA;AAQA,QAAM,SAAS;MACb;MACA;MACA;MACA;MACA;MACA;;AAGF,YAAA,UAAe;;;;;;;;;;;;AC/CF,YAAA,SACX,OAAO,eAAe,YAAY,YAAY,aAAa,WAAW,SAAS;;;;;;;;;;;;ACKjF,QAAA,WAAA;AAOO,QAAM,KAAK,CAAC,QAAoB,IAAI,WAAW,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU;AAAnF,YAAA,KAAE;AACR,QAAM,MAAM,CAAC,QAClB,IAAI,YAAY,IAAI,QAAQ,IAAI,YAAY,KAAK,MAAM,IAAI,aAAa,CAAC,CAAC;AAD/D,YAAA,MAAG;AAIT,QAAM,aAAa,CAAC,QACzB,IAAI,SAAS,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU;AAD5C,YAAA,aAAU;AAIhB,QAAM,OAAO,CAAC,MAAc,UAAmB,QAAS,KAAK,QAAW,SAAS;AAA3E,YAAA,OAAI;AAIJ,YAAA,OAAO,IAAI,WAAW,IAAI,YAAY,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE,CAAC,MAAM;AAChF,QAAI,CAAC,QAAA;AAAM,YAAM,IAAI,MAAM,6CAA6C;AAExE,QAAM,QAAQ,MAAM,KAAK,EAAE,QAAQ,IAAG,GAAI,CAAC,GAAGC,OAAMA,GAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC;AAInF,aAAgB,WAAW,QAAkB;AAE3C,UAAI,EAAE,kBAAkB;AAAa,cAAM,IAAI,MAAM,qBAAqB;AAC1E,UAAI,MAAM;AACV,eAASA,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACtC,eAAO,MAAM,OAAOA,EAAC,CAAC;;AAExB,aAAO;IACT;AARA,YAAA,aAAA;AAaA,aAAgB,WAAW,KAAW;AACpC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,UAAU,sCAAsC,OAAO,GAAG;;AAEtE,UAAI,IAAI,SAAS;AAAG,cAAM,IAAI,MAAM,2CAA2C;AAC/E,YAAM,QAAQ,IAAI,WAAW,IAAI,SAAS,CAAC;AAC3C,eAASA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,cAAM,IAAIA,KAAI;AACd,cAAM,UAAU,IAAI,MAAM,GAAG,IAAI,CAAC;AAClC,cAAM,OAAO,OAAO,SAAS,SAAS,EAAE;AACxC,YAAI,OAAO,MAAM,IAAI,KAAK,OAAO;AAAG,gBAAM,IAAI,MAAM,uBAAuB;AAC3E,cAAMA,EAAC,IAAI;;AAEb,aAAO;IACT;AAdA,YAAA,aAAA;AAmBO,QAAMC,YAAW,YAAW;IAAE;AAAxB,YAAA,WAAQA;AAGd,mBAAe,UAAU,OAAe,MAAc,IAAuB;AAClF,UAAI,KAAK,KAAK,IAAG;AACjB,eAASD,KAAI,GAAGA,KAAI,OAAOA,MAAK;AAC9B,WAAGA,EAAC;AAEJ,cAAM,OAAO,KAAK,IAAG,IAAK;AAC1B,YAAI,QAAQ,KAAK,OAAO;AAAM;AAC9B,eAAM,GAAA,QAAA,UAAQ;AACd,cAAM;;IAEV;AAVA,YAAA,YAAA;AAiBA,aAAgB,YAAY,KAAW;AACrC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,UAAU,oCAAoC,OAAO,KAAK;;AAEtE,aAAO,IAAI,YAAW,EAAG,OAAO,GAAG;IACrC;AALA,YAAA,cAAA;AAQA,aAAgB,QAAQ,MAAW;AACjC,UAAI,OAAO,SAAS;AAAU,eAAO,YAAY,IAAI;AACrD,UAAI,EAAE,gBAAgB;AACpB,cAAM,IAAI,UAAU,0CAA0C,OAAO,OAAO;AAC9E,aAAO;IACT;AALA,YAAA,UAAA;AAWA,aAAgB,eAAe,QAAoB;AACjD,UAAI,CAAC,OAAO,MAAM,CAAC,MAAM,aAAa,UAAU;AAAG,cAAM,IAAI,MAAM,0BAA0B;AAC7F,UAAI,OAAO,WAAW;AAAG,eAAO,OAAO,CAAC;AACxC,YAAME,UAAS,OAAO,OAAO,CAAC,GAAG,QAAQ,IAAI,IAAI,QAAQ,CAAC;AAC1D,YAAM,SAAS,IAAI,WAAWA,OAAM;AACpC,eAASF,KAAI,GAAG,MAAM,GAAGA,KAAI,OAAO,QAAQA,MAAK;AAC/C,cAAM,MAAM,OAAOA,EAAC;AACpB,eAAO,IAAI,KAAK,GAAG;AACnB,eAAO,IAAI;;AAEb,aAAO;IACT;AAXA,YAAA,cAAA;AAcA,QAAsB,OAAtB,MAA0B;;MAsBxB,QAAK;AACH,eAAO,KAAK,WAAU;MACxB;;AAxBF,YAAA,OAAA;AAuCA,QAAM,gBAAgB,CAAC,QACrB,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,qBAAqB,IAAI,gBAAgB;AAGnF,aAAgB,UACd,UACA,MAAS;AAET,UAAI,SAAS,WAAc,OAAO,SAAS,YAAY,CAAC,cAAc,IAAI;AACxE,cAAM,IAAI,UAAU,uCAAuC;AAC7D,YAAM,SAAS,OAAO,OAAO,UAAU,IAAI;AAC3C,aAAO;IACT;AARA,YAAA,YAAA;AAYA,aAAgB,gBAAmC,iBAA8B;AAC/E,YAAM,QAAQ,CAAC,YAA+B,gBAAe,EAAG,OAAO,QAAQ,OAAO,CAAC,EAAE,OAAM;AAC/F,YAAM,MAAM,gBAAe;AAC3B,YAAM,YAAY,IAAI;AACtB,YAAM,WAAW,IAAI;AACrB,YAAM,SAAS,MAAM,gBAAe;AACpC,aAAO;IACT;AAPA,YAAA,kBAAA;AASA,aAAgB,wBACd,UAA+B;AAE/B,YAAM,QAAQ,CAAC,KAAY,SAAyB,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,CAAC,EAAE,OAAM;AAC9F,YAAM,MAAM,SAAS,CAAA,CAAO;AAC5B,YAAM,YAAY,IAAI;AACtB,YAAM,WAAW,IAAI;AACrB,YAAM,SAAS,CAAC,SAAY,SAAS,IAAI;AACzC,aAAO;IACT;AATA,YAAA,0BAAA;AAcA,aAAgB,YAAY,cAAc,IAAE;AAC1C,UAAI,SAAA,UAAU,OAAO,SAAA,OAAO,oBAAoB,YAAY;AAC1D,eAAO,SAAA,OAAO,gBAAgB,IAAI,WAAW,WAAW,CAAC;;AAE3D,YAAM,IAAI,MAAM,wCAAwC;IAC1D;AALA,YAAA,cAAA;;;;;;;;;;;;ACrMA,QAAA,eAAA;AACA,QAAA,aAAA;AAGA,aAAS,aAAa,MAAgB,YAAoBG,QAAe,MAAa;AACpF,UAAI,OAAO,KAAK,iBAAiB;AAAY,eAAO,KAAK,aAAa,YAAYA,QAAO,IAAI;AAC7F,YAAM,OAAO,OAAO,EAAE;AACtB,YAAM,WAAW,OAAO,UAAU;AAClC,YAAM,KAAK,OAAQA,UAAS,OAAQ,QAAQ;AAC5C,YAAM,KAAK,OAAOA,SAAQ,QAAQ;AAClC,YAAM,IAAI,OAAO,IAAI;AACrB,YAAM,IAAI,OAAO,IAAI;AACrB,WAAK,UAAU,aAAa,GAAG,IAAI,IAAI;AACvC,WAAK,UAAU,aAAa,GAAG,IAAI,IAAI;IACzC;AAGA,QAAsB,OAAtB,cAAsD,WAAA,KAAO;MAc3D,YACW,UACF,WACE,WACA,MAAa;AAEtB,cAAK;AALI,aAAA,WAAA;AACF,aAAA,YAAA;AACE,aAAA,YAAA;AACA,aAAA,OAAA;AATD,aAAA,WAAW;AACX,aAAA,SAAS;AACT,aAAA,MAAM;AACN,aAAA,YAAY;AASpB,aAAK,SAAS,IAAI,WAAW,QAAQ;AACrC,aAAK,QAAO,GAAA,WAAA,YAAW,KAAK,MAAM;MACpC;MACA,OAAO,MAAW;AAChB,qBAAA,QAAO,OAAO,IAAI;AAClB,cAAM,EAAE,MAAM,QAAQ,SAAQ,IAAK;AACnC,gBAAO,GAAA,WAAA,SAAQ,IAAI;AACnB,cAAM,MAAM,KAAK;AACjB,iBAAS,MAAM,GAAG,MAAM,OAAO;AAC7B,gBAAM,OAAO,KAAK,IAAI,WAAW,KAAK,KAAK,MAAM,GAAG;AAEpD,cAAI,SAAS,UAAU;AACrB,kBAAM,YAAW,GAAA,WAAA,YAAW,IAAI;AAChC,mBAAO,YAAY,MAAM,KAAK,OAAO;AAAU,mBAAK,QAAQ,UAAU,GAAG;AACzE;;AAEF,iBAAO,IAAI,KAAK,SAAS,KAAK,MAAM,IAAI,GAAG,KAAK,GAAG;AACnD,eAAK,OAAO;AACZ,iBAAO;AACP,cAAI,KAAK,QAAQ,UAAU;AACzB,iBAAK,QAAQ,MAAM,CAAC;AACpB,iBAAK,MAAM;;;AAGf,aAAK,UAAU,KAAK;AACpB,aAAK,WAAU;AACf,eAAO;MACT;MACA,WAAW,KAAe;AACxB,qBAAA,QAAO,OAAO,IAAI;AAClB,qBAAA,QAAO,OAAO,KAAK,IAAI;AACvB,aAAK,WAAW;AAIhB,cAAM,EAAE,QAAQ,MAAM,UAAU,KAAI,IAAK;AACzC,YAAI,EAAE,IAAG,IAAK;AAEd,eAAO,KAAK,IAAI;AAChB,aAAK,OAAO,SAAS,GAAG,EAAE,KAAK,CAAC;AAEhC,YAAI,KAAK,YAAY,WAAW,KAAK;AACnC,eAAK,QAAQ,MAAM,CAAC;AACpB,gBAAM;;AAGR,iBAASC,KAAI,KAAKA,KAAI,UAAUA;AAAK,iBAAOA,EAAC,IAAI;AAIjD,qBAAa,MAAM,WAAW,GAAG,OAAO,KAAK,SAAS,CAAC,GAAG,IAAI;AAC9D,aAAK,QAAQ,MAAM,CAAC;AACpB,cAAM,SAAQ,GAAA,WAAA,YAAW,GAAG;AAC5B,cAAM,MAAM,KAAK;AAEjB,YAAI,MAAM;AAAG,gBAAM,IAAI,MAAM,6CAA6C;AAC1E,cAAM,SAAS,MAAM;AACrB,cAAM,QAAQ,KAAK,IAAG;AACtB,YAAI,SAAS,MAAM;AAAQ,gBAAM,IAAI,MAAM,oCAAoC;AAC/E,iBAASA,KAAI,GAAGA,KAAI,QAAQA;AAAK,gBAAM,UAAU,IAAIA,IAAG,MAAMA,EAAC,GAAG,IAAI;MACxE;MACA,SAAM;AACJ,cAAM,EAAE,QAAQ,UAAS,IAAK;AAC9B,aAAK,WAAW,MAAM;AACtB,cAAM,MAAM,OAAO,MAAM,GAAG,SAAS;AACrC,aAAK,QAAO;AACZ,eAAO;MACT;MACA,WAAW,IAAM;AACf,eAAA,KAAO,IAAK,KAAK,YAAmB;AACpC,WAAG,IAAI,GAAG,KAAK,IAAG,CAAE;AACpB,cAAM,EAAE,UAAU,QAAQ,QAAAC,SAAQ,UAAU,WAAW,IAAG,IAAK;AAC/D,WAAG,SAASA;AACZ,WAAG,MAAM;AACT,WAAG,WAAW;AACd,WAAG,YAAY;AACf,YAAIA,UAAS;AAAU,aAAG,OAAO,IAAI,MAAM;AAC3C,eAAO;MACT;;AAnGF,YAAA,OAAA;;;;;;;;;;;;ACjBA,QAAA,aAAA;AACA,QAAA,aAAA;AAGA,QAAM,MAAM,CAAC,GAAW,GAAW,MAAe,IAAI,IAAM,CAAC,IAAI;AAEjE,QAAM,MAAM,CAAC,GAAW,GAAW,MAAe,IAAI,IAAM,IAAI,IAAM,IAAI;AAK1E,QAAM,WAAW,IAAI,YAAY;MAC/B;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;KACrF;AAID,QAAM,KAAK,IAAI,YAAY;MACzB;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;KACrF;AAID,QAAM,WAAW,IAAI,YAAY,EAAE;AACnC,QAAM,SAAN,cAAqB,WAAA,KAAY;MAY/B,cAAA;AACE,cAAM,IAAI,IAAI,GAAG,KAAK;AAVxB,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;MAIZ;MACU,MAAG;AACX,cAAM,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC,IAAK;AACnC,eAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;MAChC;;MAEU,IACR,GAAW,GAAW,GAAW,GAAW,GAAW,GAAW,GAAW,GAAS;AAEtF,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;MACf;MACU,QAAQ,MAAgB,QAAc;AAE9C,iBAASC,KAAI,GAAGA,KAAI,IAAIA,MAAK,UAAU;AAAG,mBAASA,EAAC,IAAI,KAAK,UAAU,QAAQ,KAAK;AACpF,iBAASA,KAAI,IAAIA,KAAI,IAAIA,MAAK;AAC5B,gBAAM,MAAM,SAASA,KAAI,EAAE;AAC3B,gBAAM,KAAK,SAASA,KAAI,CAAC;AACzB,gBAAM,MAAK,GAAA,WAAA,MAAK,KAAK,CAAC,KAAI,GAAA,WAAA,MAAK,KAAK,EAAE,IAAK,QAAQ;AACnD,gBAAM,MAAK,GAAA,WAAA,MAAK,IAAI,EAAE,KAAI,GAAA,WAAA,MAAK,IAAI,EAAE,IAAK,OAAO;AACjD,mBAASA,EAAC,IAAK,KAAK,SAASA,KAAI,CAAC,IAAI,KAAK,SAASA,KAAI,EAAE,IAAK;;AAGjE,YAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC,IAAK;AACjC,iBAASA,KAAI,GAAGA,KAAI,IAAIA,MAAK;AAC3B,gBAAM,UAAS,GAAA,WAAA,MAAK,GAAG,CAAC,KAAI,GAAA,WAAA,MAAK,GAAG,EAAE,KAAI,GAAA,WAAA,MAAK,GAAG,EAAE;AACpD,gBAAM,KAAM,IAAI,SAAS,IAAI,GAAG,GAAG,CAAC,IAAI,SAASA,EAAC,IAAI,SAASA,EAAC,IAAK;AACrE,gBAAM,UAAS,GAAA,WAAA,MAAK,GAAG,CAAC,KAAI,GAAA,WAAA,MAAK,GAAG,EAAE,KAAI,GAAA,WAAA,MAAK,GAAG,EAAE;AACpD,gBAAM,KAAM,SAAS,IAAI,GAAG,GAAG,CAAC,IAAK;AACrC,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAK,IAAI,KAAM;AACf,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAK,KAAK,KAAM;;AAGlB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,aAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;MACjC;MACU,aAAU;AAClB,iBAAS,KAAK,CAAC;MACjB;MACA,UAAO;AACL,aAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC/B,aAAK,OAAO,KAAK,CAAC;MACpB;;AAGF,QAAM,SAAN,cAAqB,OAAM;MASzB,cAAA;AACE,cAAK;AATP,aAAA,IAAI,aAAa;AACjB,aAAA,IAAI,YAAa;AACjB,aAAA,IAAI,YAAa;AACjB,aAAA,IAAI,aAAa;AACjB,aAAA,IAAI,aAAa;AACjB,aAAA,IAAI,aAAa;AACjB,aAAA,IAAI,aAAa;AACjB,aAAA,IAAI,aAAa;AAGf,aAAK,YAAY;MACnB;;AAOW,YAAA,UAAS,GAAA,WAAA,iBAAgB,MAAM,IAAI,OAAM,CAAE;AAC3C,YAAA,UAAS,GAAA,WAAA,iBAAgB,MAAM,IAAI,OAAM,CAAE;;;;;;;;;;;;AChIxD,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,MAAM,CAAC,MAA4B,aAAa;AActD,QAAM,QAAQ,MAAM,KAAK,EAAE,QAAQ,IAAG,GAAI,CAAC,GAAGC,OAAMA,GAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC;AACnF,aAAgB,WAAW,OAAiB;AAC1C,UAAI,CAAC,IAAI,KAAK;AAAG,cAAM,IAAI,MAAM,qBAAqB;AAEtD,UAAI,MAAM;AACV,eAASA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,eAAO,MAAM,MAAMA,EAAC,CAAC;;AAEvB,aAAO;IACT;AARA,YAAA,aAAA;AAUA,aAAgB,oBAAoB,KAAoB;AACtD,YAAM,MAAM,IAAI,SAAS,EAAE;AAC3B,aAAO,IAAI,SAAS,IAAI,IAAI,QAAQ;IACtC;AAHA,YAAA,sBAAA;AAKA,aAAgB,YAAY,KAAW;AACrC,UAAI,OAAO,QAAQ;AAAU,cAAM,IAAI,MAAM,8BAA8B,OAAO,GAAG;AAErF,aAAO,OAAO,QAAQ,KAAK,MAAM,KAAK,KAAK;IAC7C;AAJA,YAAA,cAAA;AAOA,aAAgB,WAAW,KAAW;AACpC,UAAI,OAAO,QAAQ;AAAU,cAAM,IAAI,MAAM,8BAA8B,OAAO,GAAG;AACrF,UAAI,IAAI,SAAS;AAAG,cAAM,IAAI,MAAM,qCAAqC,IAAI,MAAM;AACnF,YAAM,QAAQ,IAAI,WAAW,IAAI,SAAS,CAAC;AAC3C,eAASA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,cAAM,IAAIA,KAAI;AACd,cAAM,UAAU,IAAI,MAAM,GAAG,IAAI,CAAC;AAClC,cAAM,OAAO,OAAO,SAAS,SAAS,EAAE;AACxC,YAAI,OAAO,MAAM,IAAI,KAAK,OAAO;AAAG,gBAAM,IAAI,MAAM,uBAAuB;AAC3E,cAAMA,EAAC,IAAI;;AAEb,aAAO;IACT;AAZA,YAAA,aAAA;AAeA,aAAgB,gBAAgB,OAAiB;AAC/C,aAAO,YAAY,WAAW,KAAK,CAAC;IACtC;AAFA,YAAA,kBAAA;AAGA,aAAgB,gBAAgB,OAAiB;AAC/C,UAAI,CAAC,IAAI,KAAK;AAAG,cAAM,IAAI,MAAM,qBAAqB;AACtD,aAAO,YAAY,WAAW,WAAW,KAAK,KAAK,EAAE,QAAO,CAAE,CAAC;IACjE;AAHA,YAAA,kBAAA;AAKO,QAAM,kBAAkB,CAACC,IAAW,QACzC,WAAWA,GAAE,SAAS,EAAE,EAAE,SAAS,MAAM,GAAG,GAAG,CAAC;AADrC,YAAA,kBAAe;AAErB,QAAM,kBAAkB,CAACA,IAAW,SAAgB,GAAA,QAAA,iBAAgBA,IAAG,GAAG,EAAE,QAAO;AAA7E,YAAA,kBAAe;AAErB,QAAM,qBAAqB,CAACA,OAAc,WAAW,oBAAoBA,EAAC,CAAC;AAArE,YAAA,qBAAkB;AAE/B,aAAgB,YAAY,OAAe,KAAU,gBAAuB;AAC1E,UAAI;AACJ,UAAI,OAAO,QAAQ,UAAU;AAC3B,YAAI;AACF,gBAAM,WAAW,GAAG;iBACbC,IAAP;AACA,gBAAM,IAAI,MAAM,GAAG,wCAAwC,gBAAgBA,IAAG;;iBAEvE,IAAI,GAAG,GAAG;AAGnB,cAAM,WAAW,KAAK,GAAG;aACpB;AACL,cAAM,IAAI,MAAM,GAAG,wCAAwC;;AAE7D,YAAM,MAAM,IAAI;AAChB,UAAI,OAAO,mBAAmB,YAAY,QAAQ;AAChD,cAAM,IAAI,MAAM,GAAG,kBAAkB,6BAA6B,KAAK;AACzE,aAAO;IACT;AAnBA,YAAA,cAAA;AAsBA,aAAgB,eAAe,MAAkB;AAC/C,YAAMC,KAAI,IAAI,WAAW,KAAK,OAAO,CAAC,KAAK,MAAM,MAAM,EAAE,QAAQ,CAAC,CAAC;AACnE,UAAI,MAAM;AACV,WAAK,QAAQ,CAAC,MAAK;AACjB,YAAI,CAAC,IAAI,CAAC;AAAG,gBAAM,IAAI,MAAM,qBAAqB;AAClD,QAAAA,GAAE,IAAI,GAAG,GAAG;AACZ,eAAO,EAAE;MACX,CAAC;AACD,aAAOA;IACT;AATA,YAAA,cAAA;AAWA,aAAgB,WAAW,IAAgB,IAAc;AAEvD,UAAI,GAAG,WAAW,GAAG;AAAQ,eAAO;AACpC,eAASH,KAAI,GAAGA,KAAI,GAAG,QAAQA;AAAK,YAAI,GAAGA,EAAC,MAAM,GAAGA,EAAC;AAAG,iBAAO;AAChE,aAAO;IACT;AALA,YAAA,aAAA;AAUA,aAAgB,YAAY,KAAW;AACrC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,oCAAoC,OAAO,KAAK;;AAElE,aAAO,IAAI,YAAW,EAAG,OAAO,GAAG;IACrC;AALA,YAAA,cAAA;AAUA,aAAgB,OAAOC,IAAS;AAC9B,UAAI;AACJ,WAAK,MAAM,GAAGA,KAAI,KAAKA,OAAM,KAAK,OAAO;AAAE;AAC3C,aAAO;IACT;AAJA,YAAA,SAAA;AAOO,QAAM,SAAS,CAACA,IAAW,QAAiBA,MAAK,OAAO,GAAG,IAAK;AAA1D,YAAA,SAAM;AAEZ,QAAM,SAAS,CAACA,IAAW,KAAaG,WAC7CH,MAAMG,SAAQ,MAAM,QAAQ,OAAO,GAAG;AAD3B,YAAA,SAAM;AAIZ,QAAM,UAAU,CAACH,QAAe,OAAO,OAAOA,KAAI,CAAC,KAAK;AAAlD,YAAA,UAAO;AAIpB,QAAM,MAAM,CAAC,SAAe,IAAI,WAAW,IAAI;AAC/C,QAAM,OAAO,CAAC,QAAa,WAAW,KAAK,GAAG;AAS9C,aAAgB,eACd,SACA,UACA,QAAkE;AAElE,UAAI,OAAO,YAAY,YAAY,UAAU;AAAG,cAAM,IAAI,MAAM,0BAA0B;AAC1F,UAAI,OAAO,aAAa,YAAY,WAAW;AAAG,cAAM,IAAI,MAAM,2BAA2B;AAC7F,UAAI,OAAO,WAAW;AAAY,cAAM,IAAI,MAAM,2BAA2B;AAE7E,UAAI,IAAI,IAAI,OAAO;AACnB,UAAI,IAAI,IAAI,OAAO;AACnB,UAAID,KAAI;AACR,YAAM,QAAQ,MAAK;AACjB,UAAE,KAAK,CAAC;AACR,UAAE,KAAK,CAAC;AACR,QAAAA,KAAI;MACN;AACA,YAAM,IAAI,IAAI,MAAoB,OAAO,GAAG,GAAG,GAAG,CAAC;AACnD,YAAM,SAAS,CAACK,QAAO,IAAG,MAAM;AAE9B,YAAI,EAAE,KAAK,CAAC,CAAI,CAAC,GAAGA,KAAI;AACxB,YAAI,EAAC;AACL,YAAIA,MAAK,WAAW;AAAG;AACvB,YAAI,EAAE,KAAK,CAAC,CAAI,CAAC,GAAGA,KAAI;AACxB,YAAI,EAAC;MACP;AACA,YAAM,MAAM,MAAK;AAEf,YAAIL,QAAO;AAAM,gBAAM,IAAI,MAAM,yBAAyB;AAC1D,YAAI,MAAM;AACV,cAAM,MAAoB,CAAA;AAC1B,eAAO,MAAM,UAAU;AACrB,cAAI,EAAC;AACL,gBAAM,KAAK,EAAE,MAAK;AAClB,cAAI,KAAK,EAAE;AACX,iBAAO,EAAE;;AAEX,eAAO,YAAY,GAAG,GAAG;MAC3B;AACA,YAAM,WAAW,CAACK,OAAkB,SAAoB;AACtD,cAAK;AACL,eAAOA,KAAI;AACX,YAAI,MAAqB;AACzB,eAAO,EAAE,MAAM,KAAK,IAAG,CAAE;AAAI,iBAAM;AACnC,cAAK;AACL,eAAO;MACT;AACA,aAAO;IACT;AAhDA,YAAA,iBAAA;AAoDA,QAAM,eAAe;MACnB,QAAQ,CAAC,QAAa,OAAO,QAAQ;MACrC,UAAU,CAAC,QAAa,OAAO,QAAQ;MACvC,SAAS,CAAC,QAAa,OAAO,QAAQ;MACtC,QAAQ,CAAC,QAAa,OAAO,QAAQ;MACrC,eAAe,CAAC,QAAa,OAAO,cAAc,GAAG;MACrD,OAAO,CAAC,QAAa,MAAM,QAAQ,GAAG;MACtC,OAAO,CAAC,KAAU,WAAiB,OAAe,GAAG,QAAQ,GAAG;MAChE,MAAM,CAAC,QAAa,OAAO,QAAQ,cAAc,OAAO,cAAc,IAAI,SAAS;;AAMrF,aAAgB,eACd,QACA,YACA,gBAA2B,CAAA,GAAE;AAE7B,YAAM,aAAa,CAAC,WAAoBC,OAAiB,eAAuB;AAC9E,cAAM,WAAW,aAAaA,KAAI;AAClC,YAAI,OAAO,aAAa;AACtB,gBAAM,IAAI,MAAM,sBAAsBA,2BAA0B;AAElE,cAAM,MAAM,OAAO,SAAgC;AACnD,YAAI,cAAc,QAAQ;AAAW;AACrC,YAAI,CAAC,SAAS,KAAK,MAAM,GAAG;AAC1B,gBAAM,IAAI,MACR,iBAAiB,OAAO,SAAS,KAAK,QAAQ,OAAO,kBAAkBA,OAAM;;MAGnF;AACA,iBAAW,CAAC,WAAWA,KAAI,KAAK,OAAO,QAAQ,UAAU;AAAG,mBAAW,WAAWA,OAAO,KAAK;AAC9F,iBAAW,CAAC,WAAWA,KAAI,KAAK,OAAO,QAAQ,aAAa;AAAG,mBAAW,WAAWA,OAAO,IAAI;AAChG,aAAO;IACT;AArBA,YAAA,iBAAA;;;;;;;;;;;;ACtNA,QAAA,aAAA;AAUA,QAAM,MAAM,OAAO,CAAC;AAApB,QAAuB,MAAM,OAAO,CAAC;AAArC,QAAwC,MAAM,OAAO,CAAC;AAAtD,QAAyD,MAAM,OAAO,CAAC;AAEvE,QAAM,MAAM,OAAO,CAAC;AAApB,QAAuB,MAAM,OAAO,CAAC;AAArC,QAAwC,MAAM,OAAO,CAAC;AAEtD,QAAM,MAAM,OAAO,CAAC;AAApB,QAAuB,OAAO,OAAO,EAAE;AAGvC,aAAgB,IAAI,GAAW,GAAS;AACtC,YAAM,SAAS,IAAI;AACnB,aAAO,UAAU,MAAM,SAAS,IAAI;IACtC;AAHA,YAAA,MAAA;AAWA,aAAgB,IAAI,KAAa,OAAe,QAAc;AAC5D,UAAI,UAAU,OAAO,QAAQ;AAAK,cAAM,IAAI,MAAM,2BAA2B;AAC7E,UAAI,WAAW;AAAK,eAAO;AAC3B,UAAI,MAAM;AACV,aAAO,QAAQ,KAAK;AAClB,YAAI,QAAQ;AAAK,gBAAO,MAAM,MAAO;AACrC,cAAO,MAAM,MAAO;AACpB,kBAAU;;AAEZ,aAAO;IACT;AAVA,YAAA,MAAA;AAaA,aAAgB,KAAK,GAAW,OAAe,QAAc;AAC3D,UAAI,MAAM;AACV,aAAO,UAAU,KAAK;AACpB,eAAO;AACP,eAAO;;AAET,aAAO;IACT;AAPA,YAAA,OAAA;AAUA,aAAgB,OAAO,QAAgB,QAAc;AACnD,UAAI,WAAW,OAAO,UAAU,KAAK;AACnC,cAAM,IAAI,MAAM,6CAA6C,cAAc,QAAQ;;AAIrF,UAAI,IAAI,IAAI,QAAQ,MAAM;AAC1B,UAAI,IAAI;AAER,UAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;AACnC,aAAO,MAAM,KAAK;AAEhB,cAAM,IAAI,IAAI;AACd,cAAMC,KAAI,IAAI;AACd,cAAM,IAAI,IAAI,IAAI;AAClB,cAAMC,KAAI,IAAI,IAAI;AAElB,YAAI,GAAG,IAAID,IAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAIC;;AAEzC,YAAM,MAAM;AACZ,UAAI,QAAQ;AAAK,cAAM,IAAI,MAAM,wBAAwB;AACzD,aAAO,IAAI,GAAG,MAAM;IACtB;AAtBA,YAAA,SAAA;AA2BA,aAAgB,cAAc,GAAS;AAMrC,YAAM,aAAa,IAAI,OAAO;AAE9B,UAAI,GAAW,GAAW;AAG1B,WAAK,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,QAAQ,KAAK,KAAK,KAAK;AAAI;AAGxD,WAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,WAAW,CAAC,MAAM,IAAI,KAAK;AAAI;AAG7D,UAAI,MAAM,GAAG;AACX,cAAM,UAAU,IAAI,OAAO;AAC3B,eAAO,SAAS,YAAe,IAAeA,IAAI;AAChD,gBAAM,OAAO,GAAG,IAAIA,IAAG,MAAM;AAC7B,cAAI,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,GAAGA,EAAC;AAAG,kBAAM,IAAI,MAAM,yBAAyB;AACvE,iBAAO;QACT;;AAIF,YAAM,UAAU,IAAI,OAAO;AAC3B,aAAO,SAAS,YAAe,IAAeA,IAAI;AAEhD,YAAI,GAAG,IAAIA,IAAG,SAAS,MAAM,GAAG,IAAI,GAAG,GAAG;AAAG,gBAAM,IAAI,MAAM,yBAAyB;AACtF,YAAID,KAAI;AAER,YAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC;AACnC,YAAI,IAAI,GAAG,IAAIC,IAAG,MAAM;AACxB,YAAI,IAAI,GAAG,IAAIA,IAAG,CAAC;AAEnB,eAAO,CAAC,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG;AACzB,cAAI,GAAG,IAAI,GAAG,GAAG,IAAI;AAAG,mBAAO,GAAG;AAElC,cAAI,IAAI;AACR,mBAAS,KAAK,GAAG,IAAI,CAAC,GAAG,IAAID,IAAG,KAAK;AACnC,gBAAI,GAAG,IAAI,IAAI,GAAG,GAAG;AAAG;AACxB,iBAAK,GAAG,IAAI,EAAE;;AAGhB,gBAAM,KAAK,GAAG,IAAI,GAAG,OAAO,OAAOA,KAAI,IAAI,CAAC,CAAC;AAC7C,cAAI,GAAG,IAAI,EAAE;AACb,cAAI,GAAG,IAAI,GAAG,EAAE;AAChB,cAAI,GAAG,IAAI,GAAG,CAAC;AACf,UAAAA,KAAI;;AAEN,eAAO;MACT;IACF;AAtDA,YAAA,gBAAA;AAwDA,aAAgB,OAAO,GAAS;AAM9B,UAAI,IAAI,QAAQ,KAAK;AAKnB,cAAM,UAAU,IAAI,OAAO;AAC3B,eAAO,SAAS,UAAa,IAAeC,IAAI;AAC9C,gBAAM,OAAO,GAAG,IAAIA,IAAG,MAAM;AAE7B,cAAI,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,GAAGA,EAAC;AAAG,kBAAM,IAAI,MAAM,yBAAyB;AACvE,iBAAO;QACT;;AAIF,UAAI,IAAI,QAAQ,KAAK;AACnB,cAAM,MAAM,IAAI,OAAO;AACvB,eAAO,SAAS,UAAa,IAAeA,IAAI;AAC9C,gBAAMC,MAAK,GAAG,IAAID,IAAG,GAAG;AACxB,gBAAM,IAAI,GAAG,IAAIC,KAAI,EAAE;AACvB,gBAAM,KAAK,GAAG,IAAID,IAAG,CAAC;AACtB,gBAAME,KAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,CAAC;AACnC,gBAAM,OAAO,GAAG,IAAI,IAAI,GAAG,IAAIA,IAAG,GAAG,GAAG,CAAC;AACzC,cAAI,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,GAAGF,EAAC;AAAG,kBAAM,IAAI,MAAM,yBAAyB;AACvE,iBAAO;QACT;;AAIF,UAAI,IAAI,SAAS,KAAK;;AAuBtB,aAAO,cAAc,CAAC;IACxB;AA3DA,YAAA,SAAA;AA8DO,QAAM,eAAe,CAAC,KAAa,YAAoB,IAAI,KAAK,MAAM,IAAI,SAAS;AAA7E,YAAA,eAAY;AAgDzB,QAAM,eAAe;MACnB;MAAU;MAAW;MAAO;MAAO;MAAO;MAAQ;MAClD;MAAO;MAAO;MAAO;MAAO;MAAO;MACnC;MAAQ;MAAQ;MAAQ;;AAE1B,aAAgB,cAAiB,OAAgB;AAC/C,YAAM,UAAU;QACd,OAAO;QACP,MAAM;QACN,OAAO;QACP,MAAM;;AAER,YAAM,OAAO,aAAa,OAAO,CAACG,MAAK,QAAe;AACpD,QAAAA,KAAI,GAAG,IAAI;AACX,eAAOA;MACT,GAAG,OAAO;AACV,cAAO,GAAA,WAAA,gBAAe,OAAO,IAAI;IACnC;AAZA,YAAA,gBAAA;AAeA,aAAgB,MAAS,GAAc,KAAQ,OAAa;AAG1D,UAAI,QAAQ;AAAK,cAAM,IAAI,MAAM,oBAAoB;AACrD,UAAI,UAAU;AAAK,eAAO,EAAE;AAC5B,UAAI,UAAU;AAAK,eAAO;AAC1B,UAAI,IAAI,EAAE;AACV,UAAI,IAAI;AACR,aAAO,QAAQ,KAAK;AAClB,YAAI,QAAQ;AAAK,cAAI,EAAE,IAAI,GAAG,CAAC;AAC/B,YAAI,EAAE,IAAI,CAAC;AACX,kBAAU;;AAEZ,aAAO;IACT;AAdA,YAAA,QAAA;AAiBA,aAAgB,cAAiB,GAAc,MAAS;AACtD,YAAM,MAAM,IAAI,MAAM,KAAK,MAAM;AAEjC,YAAM,iBAAiB,KAAK,OAAO,CAAC,KAAK,KAAKD,OAAK;AACjD,YAAI,EAAE,IAAI,GAAG;AAAG,iBAAO;AACvB,YAAIA,EAAC,IAAI;AACT,eAAO,EAAE,IAAI,KAAK,GAAG;MACvB,GAAG,EAAE,GAAG;AAER,YAAM,WAAW,EAAE,IAAI,cAAc;AAErC,WAAK,YAAY,CAAC,KAAK,KAAKA,OAAK;AAC/B,YAAI,EAAE,IAAI,GAAG;AAAG,iBAAO;AACvB,YAAIA,EAAC,IAAI,EAAE,IAAI,KAAK,IAAIA,EAAC,CAAC;AAC1B,eAAO,EAAE,IAAI,KAAK,GAAG;MACvB,GAAG,QAAQ;AACX,aAAO;IACT;AAjBA,YAAA,gBAAA;AAmBA,aAAgB,MAAS,GAAc,KAAQ,KAAe;AAC5D,aAAO,EAAE,IAAI,KAAK,OAAO,QAAQ,WAAW,OAAO,KAAK,EAAE,KAAK,IAAI,EAAE,IAAI,GAAG,CAAC;IAC/E;AAFA,YAAA,QAAA;AAKA,aAAgB,WAAc,GAAY;AACxC,YAAM,iBAAiB,EAAE,QAAQ,OAAO;AACxC,aAAO,CAAC,MAAiB;AACvB,cAAM,IAAI,EAAE,IAAI,GAAG,aAAa;AAChC,eAAO,EAAE,IAAI,GAAG,EAAE,IAAI,KAAK,EAAE,IAAI,GAAG,EAAE,GAAG;MAC3C;IACF;AANA,YAAA,aAAA;AASA,aAAgB,QAAQF,IAAW,YAAmB;AAEpD,YAAM,cAAc,eAAe,SAAY,aAAaA,GAAE,SAAS,CAAC,EAAE;AAC1E,YAAM,cAAc,KAAK,KAAK,cAAc,CAAC;AAC7C,aAAO,EAAE,YAAY,aAAa,YAAW;IAC/C;AALA,YAAA,UAAA;AAoBA,aAAgB,MACd,OACA,QACA,OAAO,OACP,QAAiC,CAAA,GAAE;AAEnC,UAAI,SAAS;AAAK,cAAM,IAAI,MAAM,8BAA8B,OAAO;AACvE,YAAM,EAAE,YAAY,MAAM,aAAa,MAAK,IAAK,QAAQ,OAAO,MAAM;AACtE,UAAI,QAAQ;AAAM,cAAM,IAAI,MAAM,iDAAiD;AACnF,YAAM,QAAQ,OAAO,KAAK;AAC1B,YAAM,IAAuB,OAAO,OAAO;QACzC;QACA;QACA;QACA,OAAM,GAAA,WAAA,SAAQ,IAAI;QAClB,MAAM;QACN,KAAK;QACL,QAAQ,CAAC,QAAQ,IAAI,KAAK,KAAK;QAC/B,SAAS,CAAC,QAAO;AACf,cAAI,OAAO,QAAQ;AACjB,kBAAM,IAAI,MAAM,+CAA+C,OAAO,KAAK;AAC7E,iBAAO,OAAO,OAAO,MAAM;QAC7B;QACA,KAAK,CAAC,QAAQ,QAAQ;QACtB,OAAO,CAAC,SAAS,MAAM,SAAS;QAChC,KAAK,CAAC,QAAQ,IAAI,CAAC,KAAK,KAAK;QAC7B,KAAK,CAAC,KAAK,QAAQ,QAAQ;QAE3B,KAAK,CAAC,QAAQ,IAAI,MAAM,KAAK,KAAK;QAClC,KAAK,CAAC,KAAK,QAAQ,IAAI,MAAM,KAAK,KAAK;QACvC,KAAK,CAAC,KAAK,QAAQ,IAAI,MAAM,KAAK,KAAK;QACvC,KAAK,CAAC,KAAK,QAAQ,IAAI,MAAM,KAAK,KAAK;QACvC,KAAK,CAAC,KAAK,UAAU,MAAM,GAAG,KAAK,KAAK;QACxC,KAAK,CAAC,KAAK,QAAQ,IAAI,MAAM,OAAO,KAAK,KAAK,GAAG,KAAK;;QAGtD,MAAM,CAAC,QAAQ,MAAM;QACrB,MAAM,CAAC,KAAK,QAAQ,MAAM;QAC1B,MAAM,CAAC,KAAK,QAAQ,MAAM;QAC1B,MAAM,CAAC,KAAK,QAAQ,MAAM;QAE1B,KAAK,CAAC,QAAQ,OAAO,KAAK,KAAK;QAC/B,MAAM,MAAM,SAAS,CAACA,OAAM,MAAM,GAAGA,EAAC;QACtC,aAAa,CAAC,QAAQ,cAAc,GAAG,GAAG;;;QAG1C,MAAM,CAAC,GAAG,GAAG,MAAO,IAAI,IAAI;QAC5B,SAAS,CAAC,QAAS,QAAO,GAAA,WAAA,iBAAgB,KAAK,KAAK,KAAI,GAAA,WAAA,iBAAgB,KAAK,KAAK;QAClF,WAAW,CAAC,UAAS;AACnB,cAAI,MAAM,WAAW;AACnB,kBAAM,IAAI,MAAM,0BAA0B,cAAc,MAAM,QAAQ;AACxE,iBAAO,QAAO,GAAA,WAAA,iBAAgB,KAAK,KAAI,GAAA,WAAA,iBAAgB,KAAK;QAC9D;OACU;AACZ,aAAO,OAAO,OAAO,CAAC;IACxB;AAvDA,YAAA,QAAA;AAyDA,aAAgB,UAAa,IAAe,KAAM;AAChD,UAAI,CAAC,GAAG;AAAO,cAAM,IAAI,MAAM,0BAA0B;AACzD,YAAM,OAAO,GAAG,KAAK,GAAG;AACxB,aAAO,GAAG,MAAM,IAAI,IAAI,OAAO,GAAG,IAAI,IAAI;IAC5C;AAJA,YAAA,YAAA;AAMA,aAAgB,WAAc,IAAe,KAAM;AACjD,UAAI,CAAC,GAAG;AAAO,cAAM,IAAI,MAAM,0BAA0B;AACzD,YAAM,OAAO,GAAG,KAAK,GAAG;AACxB,aAAO,GAAG,MAAM,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI;IACzC;AAJA,YAAA,aAAA;AAeA,aAAgB,oBACd,MACA,YACA,OAAO,OAAK;AAEZ,cAAO,GAAA,WAAA,aAAY,eAAe,IAAI;AACtC,YAAM,UAAU,KAAK;AACrB,YAAM,SAAS,QAAQ,UAAU,EAAE,cAAc;AACjD,UAAI,SAAS,MAAM,UAAU,UAAU,UAAU;AAC/C,cAAM,IAAI,MAAM,iCAAiC,mCAAmC,SAAS;AAC/F,YAAM,MAAM,QAAO,GAAA,WAAA,iBAAgB,IAAI,KAAI,GAAA,WAAA,iBAAgB,IAAI;AAC/D,aAAO,IAAI,KAAK,aAAa,GAAG,IAAI;IACtC;AAZA,YAAA,sBAAA;;;;;;;;;;;;AC5ZA,QAAA,eAAA;AACA,QAAA,aAAA;AACA,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,MAAM,OAAO,CAAC;AAiCpB,aAAgB,KAAyB,GAAwB,MAAY;AAC3E,YAAM,kBAAkB,CAAC,WAAoB,SAAc;AACzD,cAAM,MAAM,KAAK,OAAM;AACvB,eAAO,YAAY,MAAM;MAC3B;AACA,YAAM,OAAO,CAAC,MAAa;AACzB,cAAM,UAAU,KAAK,KAAK,OAAO,CAAC,IAAI;AACtC,cAAM,aAAa,MAAM,IAAI;AAC7B,eAAO,EAAE,SAAS,WAAU;MAC9B;AACA,aAAO;QACL;;QAEA,aAAa,KAAQI,IAAS;AAC5B,cAAI,IAAI,EAAE;AACV,cAAI,IAAO;AACX,iBAAOA,KAAI,KAAK;AACd,gBAAIA,KAAI;AAAK,kBAAI,EAAE,IAAI,CAAC;AACxB,gBAAI,EAAE,OAAM;AACZ,YAAAA,OAAM;;AAER,iBAAO;QACT;;;;;;;;;;;QAYA,iBAAiB,KAAQ,GAAS;AAChC,gBAAM,EAAE,SAAS,WAAU,IAAK,KAAK,CAAC;AACtC,gBAAM,SAAc,CAAA;AACpB,cAAI,IAAO;AACX,cAAI,OAAO;AACX,mBAASC,UAAS,GAAGA,UAAS,SAASA,WAAU;AAC/C,mBAAO;AACP,mBAAO,KAAK,IAAI;AAEhB,qBAASC,KAAI,GAAGA,KAAI,YAAYA,MAAK;AACnC,qBAAO,KAAK,IAAI,CAAC;AACjB,qBAAO,KAAK,IAAI;;AAElB,gBAAI,KAAK,OAAM;;AAEjB,iBAAO;QACT;;;;;;;;QASA,KAAK,GAAW,aAAkBF,IAAS;AAGzC,gBAAM,EAAE,SAAS,WAAU,IAAK,KAAK,CAAC;AAEtC,cAAI,IAAI,EAAE;AACV,cAAI,IAAI,EAAE;AAEV,gBAAM,OAAO,OAAO,KAAK,IAAI,CAAC;AAC9B,gBAAM,YAAY,KAAK;AACvB,gBAAM,UAAU,OAAO,CAAC;AAExB,mBAASC,UAAS,GAAGA,UAAS,SAASA,WAAU;AAC/C,kBAAM,SAASA,UAAS;AAExB,gBAAI,QAAQ,OAAOD,KAAI,IAAI;AAG3B,YAAAA,OAAM;AAIN,gBAAI,QAAQ,YAAY;AACtB,uBAAS;AACT,cAAAA,MAAK;;AAWP,kBAAM,UAAU;AAChB,kBAAM,UAAU,SAAS,KAAK,IAAI,KAAK,IAAI;AAC3C,kBAAM,QAAQC,UAAS,MAAM;AAC7B,kBAAM,QAAQ,QAAQ;AACtB,gBAAI,UAAU,GAAG;AAEf,kBAAI,EAAE,IAAI,gBAAgB,OAAO,YAAY,OAAO,CAAC,CAAC;mBACjD;AACL,kBAAI,EAAE,IAAI,gBAAgB,OAAO,YAAY,OAAO,CAAC,CAAC;;;AAQ1D,iBAAO,EAAE,GAAG,EAAC;QACf;QAEA,WAAW,GAAM,gBAA6BD,IAAW,WAAoB;AAE3E,gBAAM,IAAY,EAAE,gBAAgB;AAEpC,cAAI,OAAO,eAAe,IAAI,CAAC;AAC/B,cAAI,CAAC,MAAM;AACT,mBAAO,KAAK,iBAAiB,GAAG,CAAC;AACjC,gBAAI,MAAM,GAAG;AACX,6BAAe,IAAI,GAAG,UAAU,IAAI,CAAC;;;AAGzC,iBAAO,KAAK,KAAK,GAAG,MAAMA,EAAC;QAC7B;;IAEJ;AA/HA,YAAA,OAAA;AA+IA,aAAgB,cAAqB,OAAyB;AAC5D,OAAA,GAAA,aAAA,eAAc,MAAM,EAAE;AACtB,OAAA,GAAA,WAAA,gBACE,OACA;QACE,GAAG;QACH,GAAG;QACH,IAAI;QACJ,IAAI;SAEN;QACE,YAAY;QACZ,aAAa;OACd;AAGH,aAAO,OAAO,OAAO;QACnB,IAAG,GAAA,aAAA,SAAQ,MAAM,GAAG,MAAM,UAAU;QACpC,GAAG;QACH,GAAG,EAAE,GAAG,MAAM,GAAG,MAAK;OACd;IACZ;AArBA,YAAA,gBAAA;;;;;;;;;;;;ACnLA,QAAA,MAAA;AACA,QAAA,KAAA;AACA,QAAA,aAAA;AACA,QAAA,aAAA;AAqFA,aAAS,kBAAqB,OAAyB;AACrD,YAAM,QAAO,GAAA,WAAA,eAAc,KAAK;AAChC,SAAG,eACD,MACA;QACE,GAAG;QACH,GAAG;SAEL;QACE,0BAA0B;QAC1B,gBAAgB;QAChB,eAAe;QACf,eAAe;QACf,oBAAoB;QACpB,WAAW;QACX,SAAS;OACV;AAEH,YAAM,EAAE,MAAM,IAAI,EAAC,IAAK;AACxB,UAAI,MAAM;AACR,YAAI,CAAC,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG;AACvB,gBAAM,IAAI,MAAM,mEAAmE;;AAErF,YACE,OAAO,SAAS,YAChB,OAAO,KAAK,SAAS,YACrB,OAAO,KAAK,gBAAgB,YAC5B;AACA,gBAAM,IAAI,MAAM,mEAAmE;;;AAGvF,aAAO,OAAO,OAAO,EAAE,GAAG,KAAI,CAAW;IAC3C;AAUA,QAAM,EAAE,iBAAiB,KAAK,YAAY,IAAG,IAAK;AACrC,YAAA,MAAM;;MAEjB,KAAK,MAAM,eAAe,MAAK;QAC7B,YAAY,IAAI,IAAE;AAChB,gBAAM,CAAC;QACT;;MAEF,UAAU,MAAgB;AACxB,cAAM,EAAE,KAAK,EAAC,IAAK,QAAA;AACnB,YAAI,KAAK,SAAS,KAAK,KAAK,CAAC,MAAM;AAAM,gBAAM,IAAI,EAAE,+BAA+B;AACpF,cAAM,MAAM,KAAK,CAAC;AAClB,cAAM,MAAM,KAAK,SAAS,GAAG,MAAM,CAAC;AACpC,YAAI,CAAC,OAAO,IAAI,WAAW;AAAK,gBAAM,IAAI,EAAE,yCAAyC;AAKrF,YAAI,IAAI,CAAC,IAAI;AAAY,gBAAM,IAAI,EAAE,qCAAqC;AAC1E,YAAI,IAAI,CAAC,MAAM,KAAQ,EAAE,IAAI,CAAC,IAAI;AAChC,gBAAM,IAAI,EAAE,qDAAqD;AACnE,eAAO,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,SAAS,MAAM,CAAC,EAAC;MACjD;MACA,MAAM,KAAwB;AAE5B,cAAM,EAAE,KAAK,EAAC,IAAK,QAAA;AACnB,cAAM,OAAO,OAAO,QAAQ,WAAW,IAAI,GAAG,IAAI;AAClD,YAAI,EAAE,gBAAgB;AAAa,gBAAM,IAAI,MAAM,eAAe;AAClE,YAAI,IAAI,KAAK;AACb,YAAI,IAAI,KAAK,KAAK,CAAC,KAAK;AAAM,gBAAM,IAAI,EAAE,uBAAuB;AACjE,YAAI,KAAK,CAAC,MAAM,IAAI;AAAG,gBAAM,IAAI,EAAE,qCAAqC;AACxE,cAAM,EAAE,GAAGG,IAAG,GAAG,OAAM,IAAK,QAAA,IAAI,UAAU,KAAK,SAAS,CAAC,CAAC;AAC1D,cAAM,EAAE,GAAG,GAAG,GAAG,WAAU,IAAK,QAAA,IAAI,UAAU,MAAM;AACpD,YAAI,WAAW;AAAQ,gBAAM,IAAI,EAAE,6CAA6C;AAChF,eAAO,EAAE,GAAAA,IAAG,EAAC;MACf;MACA,WAAW,KAA6B;AAEtC,cAAM,QAAQ,CAACC,OAAuB,OAAO,SAASA,GAAE,CAAC,GAAG,EAAE,IAAI,IAAS,OAAOA,KAAIA;AACtF,cAAM,IAAI,CAAC,QAAwB;AACjC,gBAAM,MAAM,IAAI,SAAS,EAAE;AAC3B,iBAAO,IAAI,SAAS,IAAI,IAAI,QAAQ;QACtC;AACA,cAAM,IAAI,MAAM,EAAE,IAAI,CAAC,CAAC;AACxB,cAAMD,KAAI,MAAM,EAAE,IAAI,CAAC,CAAC;AACxB,cAAM,MAAM,EAAE,SAAS;AACvB,cAAM,MAAMA,GAAE,SAAS;AACvB,cAAM,KAAK,EAAE,GAAG;AAChB,cAAM,KAAK,EAAE,GAAG;AAChB,eAAO,KAAK,EAAE,MAAM,MAAM,CAAC,MAAM,KAAKA,OAAM,KAAK;MACnD;;AAKF,QAAM,MAAM,OAAO,CAAC;AAApB,QAAuB,MAAM,OAAO,CAAC;AAArC,QAAwC,MAAM,OAAO,CAAC;AAAtD,QAAyD,MAAM,OAAO,CAAC;AAAvE,QAA0E,MAAM,OAAO,CAAC;AAExF,aAAgB,kBAAqB,MAAwB;AAC3D,YAAM,QAAQ,kBAAkB,IAAI;AACpC,YAAM,EAAE,GAAE,IAAK;AAEf,YAAM,UACJ,MAAM,YACL,CAAC,GAAuB,OAAyB,iBAAyB;AACzE,cAAM,IAAI,MAAM,SAAQ;AACxB,eAAO,GAAG,YAAY,WAAW,KAAK,CAAC,CAAI,CAAC,GAAG,GAAG,QAAQ,EAAE,CAAC,GAAG,GAAG,QAAQ,EAAE,CAAC,CAAC;MACjF;AACF,YAAM,YACJ,MAAM,cACL,CAAC,UAAqB;AAErB,cAAM,OAAO,MAAM,SAAS,CAAC;AAE7B,cAAM,IAAI,GAAG,UAAU,KAAK,SAAS,GAAG,GAAG,KAAK,CAAC;AACjD,cAAM,IAAI,GAAG,UAAU,KAAK,SAAS,GAAG,OAAO,IAAI,GAAG,KAAK,CAAC;AAC5D,eAAO,EAAE,GAAG,EAAC;MACf;AAMF,eAAS,oBAAoB,GAAI;AAC/B,cAAM,EAAE,GAAG,EAAC,IAAK;AACjB,cAAM,KAAK,GAAG,IAAI,CAAC;AACnB,cAAM,KAAK,GAAG,IAAI,IAAI,CAAC;AACvB,eAAO,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC;MAC3C;AAKA,UAAI,CAAC,GAAG,IAAI,GAAG,IAAI,MAAM,EAAE,GAAG,oBAAoB,MAAM,EAAE,CAAC;AACzD,cAAM,IAAI,MAAM,6CAA6C;AAG/D,eAAS,mBAAmB,KAAW;AACrC,eAAO,OAAO,QAAQ,YAAY,MAAM,OAAO,MAAM,MAAM;MAC7D;AACA,eAAS,SAAS,KAAW;AAC3B,YAAI,CAAC,mBAAmB,GAAG;AAAG,gBAAM,IAAI,MAAM,6CAA6C;MAC7F;AAGA,eAAS,uBAAuB,KAAY;AAC1C,cAAM,EAAE,0BAA0B,SAAS,aAAa,gBAAgB,GAAAE,GAAC,IAAK;AAC9E,YAAI,WAAW,OAAO,QAAQ,UAAU;AACtC,cAAI,eAAe;AAAY,kBAAM,GAAG,WAAW,GAAG;AAEtD,cAAI,OAAO,QAAQ,YAAY,CAAC,QAAQ,SAAS,IAAI,MAAM;AAAG,kBAAM,IAAI,MAAM,aAAa;AAC3F,gBAAM,IAAI,SAAS,cAAc,GAAG,GAAG;;AAEzC,YAAI;AACJ,YAAI;AACF,gBACE,OAAO,QAAQ,WACX,MACA,GAAG,iBAAgB,GAAA,WAAA,aAAY,eAAe,KAAK,WAAW,CAAC;iBAC9D,OAAP;AACA,gBAAM,IAAI,MAAM,uBAAuB,yCAAyC,OAAO,KAAK;;AAE9F,YAAI;AAAgB,gBAAM,IAAI,IAAI,KAAKA,EAAC;AACxC,iBAAS,GAAG;AACZ,eAAO;MACT;AAEA,YAAM,mBAAmB,oBAAI,IAAG;AAChC,eAAS,eAAe,OAAc;AACpC,YAAI,EAAE,iBAAiB;AAAQ,gBAAM,IAAI,MAAM,0BAA0B;MAC3E;AAMA,YAAM,MAAK;QAIT,YAAqB,IAAgB,IAAgB,IAAK;AAArC,eAAA,KAAA;AAAgB,eAAA,KAAA;AAAgB,eAAA,KAAA;AACnD,cAAI,MAAM,QAAQ,CAAC,GAAG,QAAQ,EAAE;AAAG,kBAAM,IAAI,MAAM,YAAY;AAC/D,cAAI,MAAM,QAAQ,CAAC,GAAG,QAAQ,EAAE;AAAG,kBAAM,IAAI,MAAM,YAAY;AAC/D,cAAI,MAAM,QAAQ,CAAC,GAAG,QAAQ,EAAE;AAAG,kBAAM,IAAI,MAAM,YAAY;QACjE;;;QAIA,OAAO,WAAW,GAAiB;AACjC,gBAAM,EAAE,GAAG,EAAC,IAAK,KAAK,CAAA;AACtB,cAAI,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;AAAG,kBAAM,IAAI,MAAM,sBAAsB;AAClF,cAAI,aAAa;AAAO,kBAAM,IAAI,MAAM,8BAA8B;AACtE,gBAAM,MAAM,CAACC,OAAS,GAAG,IAAIA,IAAG,GAAG,IAAI;AAEvC,cAAI,IAAI,CAAC,KAAK,IAAI,CAAC;AAAG,mBAAO,MAAM;AACnC,iBAAO,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG;QAC/B;QAEA,IAAI,IAAC;AACH,iBAAO,KAAK,SAAQ,EAAG;QACzB;QACA,IAAI,IAAC;AACH,iBAAO,KAAK,SAAQ,EAAG;QACzB;;;;;;;QAQA,OAAO,WAAW,QAAe;AAC/B,gBAAM,QAAQ,GAAG,YAAY,OAAO,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AACpD,iBAAO,OAAO,IAAI,CAAC,GAAGA,OAAM,EAAE,SAAS,MAAMA,EAAC,CAAC,CAAC,EAAE,IAAI,MAAM,UAAU;QACxE;;;;;QAMA,OAAO,QAAQ,KAAQ;AACrB,gBAAM,IAAI,MAAM,WAAW,WAAU,GAAA,WAAA,aAAY,YAAY,GAAG,CAAC,CAAC;AAClE,YAAE,eAAc;AAChB,iBAAO;QACT;;QAGA,OAAO,eAAe,YAAmB;AACvC,iBAAO,MAAM,KAAK,SAAS,uBAAuB,UAAU,CAAC;QAC/D;;QAQA,eAAe,YAAkB;AAC/B,eAAK,eAAe;AACpB,2BAAiB,OAAO,IAAI;QAC9B;;QAGA,iBAAc;AAEZ,cAAI,KAAK,IAAG,GAAI;AACd,gBAAI,MAAM;AAAoB;AAC9B,kBAAM,IAAI,MAAM,iBAAiB;;AAGnC,gBAAM,EAAE,GAAG,EAAC,IAAK,KAAK,SAAQ;AAE9B,cAAI,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;AAAG,kBAAM,IAAI,MAAM,0BAA0B;AAChF,gBAAM,OAAO,GAAG,IAAI,CAAC;AACrB,gBAAM,QAAQ,oBAAoB,CAAC;AACnC,cAAI,CAAC,GAAG,IAAI,MAAM,KAAK;AAAG,kBAAM,IAAI,MAAM,mCAAmC;AAC7E,cAAI,CAAC,KAAK,cAAa;AAAI,kBAAM,IAAI,MAAM,wCAAwC;QACrF;QACA,WAAQ;AACN,gBAAM,EAAE,EAAC,IAAK,KAAK,SAAQ;AAC3B,cAAI,GAAG;AAAO,mBAAO,CAAC,GAAG,MAAM,CAAC;AAChC,gBAAM,IAAI,MAAM,6BAA6B;QAC/C;;;;QAKA,OAAO,OAAY;AACjB,yBAAe,KAAK;AACpB,gBAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,IAAK;AACnC,gBAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,IAAK;AACnC,gBAAM,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;AAChD,gBAAM,KAAK,GAAG,IAAI,GAAG,IAAI,IAAI,EAAE,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC;AAChD,iBAAO,MAAM;QACf;;;;QAKA,SAAM;AACJ,iBAAO,IAAI,MAAM,KAAK,IAAI,GAAG,IAAI,KAAK,EAAE,GAAG,KAAK,EAAE;QACpD;;;;;QAMA,SAAM;AACJ,gBAAM,EAAE,GAAG,EAAC,IAAK;AACjB,gBAAM,KAAK,GAAG,IAAI,GAAG,GAAG;AACxB,gBAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,IAAK;AACnC,cAAI,KAAK,GAAG,MAAM,KAAK,GAAG,MAAM,KAAK,GAAG;AACxC,cAAI,KAAK,GAAG,IAAI,IAAI,EAAE;AACtB,cAAI,KAAK,GAAG,IAAI,IAAI,EAAE;AACtB,cAAI,KAAK,GAAG,IAAI,IAAI,EAAE;AACtB,cAAI,KAAK,GAAG,IAAI,IAAI,EAAE;AACtB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,GAAG,EAAE;AACjB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,GAAG,EAAE;AACjB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,GAAG,EAAE;AACjB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,iBAAO,IAAI,MAAM,IAAI,IAAI,EAAE;QAC7B;;;;;QAMA,IAAI,OAAY;AACd,yBAAe,KAAK;AACpB,gBAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,IAAK;AACnC,gBAAM,EAAE,IAAI,IAAI,IAAI,IAAI,IAAI,GAAE,IAAK;AACnC,cAAI,KAAK,GAAG,MAAM,KAAK,GAAG,MAAM,KAAK,GAAG;AACxC,gBAAM,IAAI,MAAM;AAChB,gBAAM,KAAK,GAAG,IAAI,MAAM,GAAG,GAAG;AAC9B,cAAI,KAAK,GAAG,IAAI,IAAI,EAAE;AACtB,cAAI,KAAK,GAAG,IAAI,IAAI,EAAE;AACtB,cAAI,KAAK,GAAG,IAAI,IAAI,EAAE;AACtB,cAAI,KAAK,GAAG,IAAI,IAAI,EAAE;AACtB,cAAI,KAAK,GAAG,IAAI,IAAI,EAAE;AACtB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,cAAI,KAAK,GAAG,IAAI,IAAI,EAAE;AACtB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,GAAG,EAAE;AACjB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,GAAG,EAAE;AACjB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,GAAG,EAAE;AACjB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,eAAK,GAAG,IAAI,IAAI,EAAE;AAClB,iBAAO,IAAI,MAAM,IAAI,IAAI,EAAE;QAC7B;QAEA,SAAS,OAAY;AACnB,iBAAO,KAAK,IAAI,MAAM,OAAM,CAAE;QAChC;QAEQ,MAAG;AACT,iBAAO,KAAK,OAAO,MAAM,IAAI;QAC/B;QACQ,KAAKD,IAAS;AACpB,iBAAO,KAAK,WAAW,MAAM,kBAAkBA,IAAG,CAAC,SAAiB;AAClE,kBAAM,QAAQ,GAAG,YAAY,KAAK,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC;AAClD,mBAAO,KAAK,IAAI,CAAC,GAAGC,OAAM,EAAE,SAAS,MAAMA,EAAC,CAAC,CAAC,EAAE,IAAI,MAAM,UAAU;UACtE,CAAC;QACH;;;;;;QAOA,eAAeD,IAAS;AACtB,gBAAM,IAAI,MAAM;AAChB,cAAIA,OAAM;AAAK,mBAAO;AACtB,mBAASA,EAAC;AACV,cAAIA,OAAM;AAAK,mBAAO;AACtB,gBAAM,EAAE,KAAI,IAAK;AACjB,cAAI,CAAC;AAAM,mBAAO,KAAK,aAAa,MAAMA,EAAC;AAG3C,cAAI,EAAE,OAAO,IAAI,OAAO,GAAE,IAAK,KAAK,YAAYA,EAAC;AACjD,cAAI,MAAM;AACV,cAAI,MAAM;AACV,cAAI,IAAW;AACf,iBAAO,KAAK,OAAO,KAAK,KAAK;AAC3B,gBAAI,KAAK;AAAK,oBAAM,IAAI,IAAI,CAAC;AAC7B,gBAAI,KAAK;AAAK,oBAAM,IAAI,IAAI,CAAC;AAC7B,gBAAI,EAAE,OAAM;AACZ,mBAAO;AACP,mBAAO;;AAET,cAAI;AAAO,kBAAM,IAAI,OAAM;AAC3B,cAAI;AAAO,kBAAM,IAAI,OAAM;AAC3B,gBAAM,IAAI,MAAM,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE;AACzD,iBAAO,IAAI,IAAI,GAAG;QACpB;;;;;;;;;;QAWA,SAAS,QAAc;AACrB,mBAAS,MAAM;AACf,cAAIA,KAAI;AACR,cAAI,OAAc;AAClB,gBAAM,EAAE,KAAI,IAAK;AACjB,cAAI,MAAM;AACR,kBAAM,EAAE,OAAO,IAAI,OAAO,GAAE,IAAK,KAAK,YAAYA,EAAC;AACnD,gBAAI,EAAE,GAAG,KAAK,GAAG,IAAG,IAAK,KAAK,KAAK,EAAE;AACrC,gBAAI,EAAE,GAAG,KAAK,GAAG,IAAG,IAAK,KAAK,KAAK,EAAE;AACrC,kBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,kBAAM,KAAK,gBAAgB,OAAO,GAAG;AACrC,kBAAM,IAAI,MAAM,GAAG,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE;AACzD,oBAAQ,IAAI,IAAI,GAAG;AACnB,mBAAO,IAAI,IAAI,GAAG;iBACb;AACL,kBAAM,EAAE,GAAG,EAAC,IAAK,KAAK,KAAKA,EAAC;AAC5B,oBAAQ;AACR,mBAAO;;AAGT,iBAAO,MAAM,WAAW,CAAC,OAAO,IAAI,CAAC,EAAE,CAAC;QAC1C;;;;;;;QAQA,qBAAqB,GAAU,GAAW,GAAS;AACjD,gBAAM,IAAI,MAAM;AAChB,gBAAM,MAAM,CACV,GACAE,OACIA,OAAM,OAAOA,OAAM,OAAO,CAAC,EAAE,OAAO,CAAC,IAAI,EAAE,eAAeA,EAAC,IAAI,EAAE,SAASA,EAAC;AACjF,gBAAM,MAAM,IAAI,MAAM,CAAC,EAAE,IAAI,IAAI,GAAG,CAAC,CAAC;AACtC,iBAAO,IAAI,IAAG,IAAK,SAAY;QACjC;;;;QAKA,SAAS,IAAM;AACb,gBAAM,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,EAAC,IAAK;AAChC,gBAAM,MAAM,KAAK,IAAG;AAGpB,cAAI,MAAM;AAAM,iBAAK,MAAM,GAAG,MAAM,GAAG,IAAI,CAAC;AAC5C,gBAAM,KAAK,GAAG,IAAI,GAAG,EAAE;AACvB,gBAAM,KAAK,GAAG,IAAI,GAAG,EAAE;AACvB,gBAAM,KAAK,GAAG,IAAI,GAAG,EAAE;AACvB,cAAI;AAAK,mBAAO,EAAE,GAAG,GAAG,MAAM,GAAG,GAAG,KAAI;AACxC,cAAI,CAAC,GAAG,IAAI,IAAI,GAAG,GAAG;AAAG,kBAAM,IAAI,MAAM,kBAAkB;AAC3D,iBAAO,EAAE,GAAG,IAAI,GAAG,GAAE;QACvB;QACA,gBAAa;AACX,gBAAM,EAAE,GAAG,UAAU,cAAa,IAAK;AACvC,cAAI,aAAa;AAAK,mBAAO;AAC7B,cAAI;AAAe,mBAAO,cAAc,OAAO,IAAI;AACnD,gBAAM,IAAI,MAAM,8DAA8D;QAChF;QACA,gBAAa;AACX,gBAAM,EAAE,GAAG,UAAU,cAAa,IAAK;AACvC,cAAI,aAAa;AAAK,mBAAO;AAC7B,cAAI;AAAe,mBAAO,cAAc,OAAO,IAAI;AACnD,iBAAO,KAAK,eAAe,MAAM,CAAC;QACpC;QAEA,WAAW,eAAe,MAAI;AAC5B,eAAK,eAAc;AACnB,iBAAO,QAAQ,OAAO,MAAM,YAAY;QAC1C;QAEA,MAAM,eAAe,MAAI;AACvB,iBAAO,GAAG,WAAW,KAAK,WAAW,YAAY,CAAC;QACpD;;AA5UgB,YAAA,OAAO,IAAI,MAAM,MAAM,IAAI,MAAM,IAAI,GAAG,GAAG;AAC3C,YAAA,OAAO,IAAI,MAAM,GAAG,MAAM,GAAG,KAAK,GAAG,IAAI;AA6U3D,YAAM,QAAQ,MAAM;AACpB,YAAM,QAAO,GAAA,WAAA,MAAK,OAAO,MAAM,OAAO,KAAK,KAAK,QAAQ,CAAC,IAAI,KAAK;AAElE,aAAO;QACL;QACA,iBAAiB;QACjB;QACA;QACA;;IAEJ;AAvaA,YAAA,oBAAA;AA4cA,aAAS,aAAa,OAAgB;AACpC,YAAM,QAAO,GAAA,WAAA,eAAc,KAAK;AAChC,SAAG,eACD,MACA;QACE,MAAM;QACN,MAAM;QACN,aAAa;SAEf;QACE,UAAU;QACV,eAAe;QACf,MAAM;OACP;AAEH,aAAO,OAAO,OAAO,EAAE,MAAM,MAAM,GAAG,KAAI,CAAW;IACvD;AAkBA,aAAgB,YAAY,UAAmB;AAC7C,YAAM,QAAQ,aAAa,QAAQ;AACnC,YAAM,EAAE,IAAI,GAAG,YAAW,IAAK;AAC/B,YAAM,gBAAgB,GAAG,QAAQ;AACjC,YAAM,kBAAkB,IAAI,GAAG,QAAQ;AAEvC,eAAS,oBAAoB,KAAW;AACtC,eAAO,MAAM,OAAO,MAAM,GAAG;MAC/B;AACA,eAAS,KAAK,GAAS;AACrB,eAAO,IAAI,IAAI,GAAG,WAAW;MAC/B;AACA,eAAS,KAAK,GAAS;AACrB,eAAO,IAAI,OAAO,GAAG,WAAW;MAClC;AAEA,YAAM,EACJ,iBAAiB,OACjB,wBACA,qBACA,mBAAkB,IAChB,kBAAkB;QACpB,GAAG;QACH,QAAQ,GAAG,OAAO,cAAqB;AACrC,gBAAM,IAAI,MAAM,SAAQ;AACxB,gBAAM,IAAI,GAAG,QAAQ,EAAE,CAAC;AACxB,gBAAM,MAAM,GAAG;AACf,cAAI,cAAc;AAChB,mBAAO,IAAI,WAAW,KAAK,CAAC,MAAM,SAAQ,IAAK,IAAO,CAAI,CAAC,GAAG,CAAC;iBAC1D;AACL,mBAAO,IAAI,WAAW,KAAK,CAAC,CAAI,CAAC,GAAG,GAAG,GAAG,QAAQ,EAAE,CAAC,CAAC;;QAE1D;QACA,UAAU,OAAiB;AACzB,gBAAM,MAAM,MAAM;AAClB,gBAAM,OAAO,MAAM,CAAC;AACpB,gBAAM,OAAO,MAAM,SAAS,CAAC;AAE7B,cAAI,QAAQ,kBAAkB,SAAS,KAAQ,SAAS,IAAO;AAC7D,kBAAM,IAAI,GAAG,gBAAgB,IAAI;AACjC,gBAAI,CAAC,oBAAoB,CAAC;AAAG,oBAAM,IAAI,MAAM,uBAAuB;AACpE,kBAAM,KAAK,oBAAoB,CAAC;AAChC,gBAAI,IAAI,GAAG,KAAK,EAAE;AAClB,kBAAM,UAAU,IAAI,SAAS;AAE7B,kBAAM,aAAa,OAAO,OAAO;AACjC,gBAAI,cAAc;AAAQ,kBAAI,GAAG,IAAI,CAAC;AACtC,mBAAO,EAAE,GAAG,EAAC;qBACJ,QAAQ,mBAAmB,SAAS,GAAM;AACnD,kBAAM,IAAI,GAAG,UAAU,KAAK,SAAS,GAAG,GAAG,KAAK,CAAC;AACjD,kBAAM,IAAI,GAAG,UAAU,KAAK,SAAS,GAAG,OAAO,IAAI,GAAG,KAAK,CAAC;AAC5D,mBAAO,EAAE,GAAG,EAAC;iBACR;AACL,kBAAM,IAAI,MACR,mBAAmB,6BAA6B,qCAAqC,oCAAoC;;QAG/H;OACD;AACD,YAAM,gBAAgB,CAAC,QACrB,GAAG,WAAW,GAAG,gBAAgB,KAAK,MAAM,WAAW,CAAC;AAE1D,eAAS,sBAAsB,QAAc;AAC3C,cAAM,OAAO,eAAe;AAC5B,eAAO,SAAS;MAClB;AAEA,eAAS,WAAW,GAAS;AAC3B,eAAO,sBAAsB,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI;MAC/C;AAEA,YAAM,SAAS,CAAC,GAAe,MAAc,OAAe,GAAG,gBAAgB,EAAE,MAAM,MAAM,EAAE,CAAC;AAKhG,YAAM,UAAS;QACb,YAAqBJ,IAAoB,GAAoB,UAAiB;AAAzD,eAAA,IAAAA;AAAoB,eAAA,IAAA;AAAoB,eAAA,WAAA;AAC3D,eAAK,eAAc;QACrB;;QAGA,OAAO,YAAY,KAAQ;AACzB,gBAAM,IAAI,MAAM;AAChB,iBAAM,GAAA,WAAA,aAAY,oBAAoB,KAAK,IAAI,CAAC;AAChD,iBAAO,IAAI,UAAU,OAAO,KAAK,GAAG,CAAC,GAAG,OAAO,KAAK,GAAG,IAAI,CAAC,CAAC;QAC/D;;;QAIA,OAAO,QAAQ,KAAQ;AACrB,gBAAM,EAAE,GAAAA,IAAG,EAAC,IAAK,QAAA,IAAI,OAAM,GAAA,WAAA,aAAY,OAAO,GAAG,CAAC;AAClD,iBAAO,IAAI,UAAUA,IAAG,CAAC;QAC3B;QAEA,iBAAc;AAEZ,cAAI,CAAC,mBAAmB,KAAK,CAAC;AAAG,kBAAM,IAAI,MAAM,2BAA2B;AAC5E,cAAI,CAAC,mBAAmB,KAAK,CAAC;AAAG,kBAAM,IAAI,MAAM,2BAA2B;QAC9E;QAEA,eAAe,UAAgB;AAC7B,iBAAO,IAAI,UAAU,KAAK,GAAG,KAAK,GAAG,QAAQ;QAC/C;QAEA,iBAAiB,SAAY;AAC3B,gBAAM,EAAE,GAAAA,IAAG,GAAG,UAAU,IAAG,IAAK;AAChC,gBAAM,IAAI,eAAc,GAAA,WAAA,aAAY,WAAW,OAAO,CAAC;AACvD,cAAI,OAAO,QAAQ,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,SAAS,GAAG;AAAG,kBAAM,IAAI,MAAM,qBAAqB;AACrF,gBAAM,OAAO,QAAQ,KAAK,QAAQ,IAAIA,KAAI,MAAM,IAAIA;AACpD,cAAI,QAAQ,GAAG;AAAO,kBAAM,IAAI,MAAM,4BAA4B;AAClE,gBAAM,UAAU,MAAM,OAAO,IAAI,OAAO;AACxC,gBAAM,IAAI,MAAM,QAAQ,SAAS,cAAc,IAAI,CAAC;AACpD,gBAAM,KAAK,KAAK,IAAI;AACpB,gBAAM,KAAK,KAAK,CAAC,IAAI,EAAE;AACvB,gBAAM,KAAK,KAAK,IAAI,EAAE;AACtB,gBAAM,IAAI,MAAM,KAAK,qBAAqB,GAAG,IAAI,EAAE;AACnD,cAAI,CAAC;AAAG,kBAAM,IAAI,MAAM,mBAAmB;AAC3C,YAAE,eAAc;AAChB,iBAAO;QACT;;QAGA,WAAQ;AACN,iBAAO,sBAAsB,KAAK,CAAC;QACrC;QAEA,aAAU;AACR,iBAAO,KAAK,SAAQ,IAAK,IAAI,UAAU,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,KAAK,QAAQ,IAAI;QACjF;;QAGA,gBAAa;AACX,iBAAO,GAAG,WAAW,KAAK,SAAQ,CAAE;QACtC;QACA,WAAQ;AACN,iBAAO,QAAA,IAAI,WAAW,EAAE,GAAG,KAAK,GAAG,GAAG,KAAK,EAAC,CAAE;QAChD;;QAGA,oBAAiB;AACf,iBAAO,GAAG,WAAW,KAAK,aAAY,CAAE;QAC1C;QACA,eAAY;AACV,iBAAO,cAAc,KAAK,CAAC,IAAI,cAAc,KAAK,CAAC;QACrD;;AAGF,YAAM,QAAQ;QACZ,kBAAkB,YAAmB;AACnC,cAAI;AACF,mCAAuB,UAAU;AACjC,mBAAO;mBACA,OAAP;AACA,mBAAO;;QAEX;QACA;;;;;QAMA,kBAAkB,MAAiB;AACjC,gBAAM,OAAO,MAAM,YAAY,GAAG,QAAQ,CAAC;AAC3C,gBAAM,MAAM,IAAI,oBAAoB,MAAM,WAAW;AACrD,iBAAO,GAAG,gBAAgB,KAAK,MAAM,WAAW;QAClD;;;;;;;;;QAUA,WAAW,aAAa,GAAG,QAAQ,MAAM,MAAI;AAC3C,gBAAM,eAAe,UAAU;AAC/B,gBAAM,SAAS,OAAO,CAAC,CAAC;AACxB,iBAAO;QACT;;AASF,eAAS,aAAa,YAAqB,eAAe,MAAI;AAC5D,eAAO,MAAM,eAAe,UAAU,EAAE,WAAW,YAAY;MACjE;AAKA,eAAS,UAAU,MAAsB;AACvC,cAAM,MAAM,gBAAgB;AAC5B,cAAM,MAAM,OAAO,SAAS;AAC5B,cAAM,OAAO,OAAO,QAAS,KAAa;AAC1C,YAAI;AAAK,iBAAO,QAAQ,iBAAiB,QAAQ;AACjD,YAAI;AAAK,iBAAO,QAAQ,IAAI,iBAAiB,QAAQ,IAAI;AACzD,YAAI,gBAAgB;AAAO,iBAAO;AAClC,eAAO;MACT;AAYA,eAAS,gBAAgB,UAAmB,SAAc,eAAe,MAAI;AAC3E,YAAI,UAAU,QAAQ;AAAG,gBAAM,IAAI,MAAM,+BAA+B;AACxE,YAAI,CAAC,UAAU,OAAO;AAAG,gBAAM,IAAI,MAAM,+BAA+B;AACxE,cAAM,IAAI,MAAM,QAAQ,OAAO;AAC/B,eAAO,EAAE,SAAS,uBAAuB,QAAQ,CAAC,EAAE,WAAW,YAAY;MAC7E;AAMA,YAAM,WACJ,MAAM,YACN,SAAU,OAAiB;AAGzB,cAAM,MAAM,GAAG,gBAAgB,KAAK;AACpC,cAAM,QAAQ,MAAM,SAAS,IAAI,MAAM;AACvC,eAAO,QAAQ,IAAI,OAAO,OAAO,KAAK,IAAI;MAC5C;AACF,YAAM,gBACJ,MAAM,iBACN,SAAU,OAAiB;AACzB,eAAO,KAAK,SAAS,KAAK,CAAC;MAC7B;AAEF,YAAM,aAAa,GAAG,QAAQ,MAAM,UAAU;AAI9C,eAAS,WAAW,KAAW;AAC7B,YAAI,OAAO,QAAQ;AAAU,gBAAM,IAAI,MAAM,iBAAiB;AAC9D,YAAI,EAAE,OAAO,OAAO,MAAM;AACxB,gBAAM,IAAI,MAAM,uBAAuB,MAAM,YAAY;AAE3D,eAAO,GAAG,gBAAgB,KAAK,MAAM,WAAW;MAClD;AAOA,eAAS,QAAQ,SAAc,YAAqB,OAAO,gBAAc;AACvE,YAAI,CAAC,aAAa,WAAW,EAAE,KAAK,CAAC,MAAM,KAAK,IAAI;AAClD,gBAAM,IAAI,MAAM,qCAAqC;AACvD,cAAM,EAAE,MAAM,YAAW,IAAK;AAC9B,YAAI,EAAE,MAAM,SAAS,cAAc,IAAG,IAAK;AAC3C,YAAI,QAAQ;AAAM,iBAAO;AACzB,mBAAU,GAAA,WAAA,aAAY,WAAW,OAAO;AACxC,YAAI;AAAS,qBAAU,GAAA,WAAA,aAAY,qBAAqB,KAAK,OAAO,CAAC;AAKrE,cAAM,QAAQ,cAAc,OAAO;AACnC,cAAM,IAAI,uBAAuB,UAAU;AAC3C,cAAM,WAAW,CAAC,WAAW,CAAC,GAAG,WAAW,KAAK,CAAC;AAElD,YAAI,OAAO,MAAM;AAEf,gBAAMK,KAAI,QAAQ,OAAO,YAAY,GAAG,KAAK,IAAI;AACjD,mBAAS,MAAK,GAAA,WAAA,aAAY,gBAAgBA,IAAG,GAAG,KAAK,CAAC;;AAExD,cAAMC,QAAO,GAAG,YAAY,GAAG,QAAQ;AACvC,cAAM,IAAI;AAEV,iBAAS,MAAM,QAAkB;AAE/B,gBAAM,IAAI,SAAS,MAAM;AACzB,cAAI,CAAC,mBAAmB,CAAC;AAAG;AAC5B,gBAAM,KAAK,KAAK,CAAC;AACjB,gBAAM,IAAI,MAAM,KAAK,SAAS,CAAC,EAAE,SAAQ;AACzC,gBAAMN,KAAI,KAAK,EAAE,CAAC;AAClB,cAAIA,OAAM;AAAK;AAIf,gBAAM,IAAI,KAAK,KAAK,KAAK,IAAIA,KAAI,CAAC,CAAC;AACnC,cAAI,MAAM;AAAK;AACf,cAAI,YAAY,EAAE,MAAMA,KAAI,IAAI,KAAK,OAAO,EAAE,IAAI,GAAG;AACrD,cAAI,QAAQ;AACZ,cAAI,QAAQ,sBAAsB,CAAC,GAAG;AACpC,oBAAQ,WAAW,CAAC;AACpB,wBAAY;;AAEd,iBAAO,IAAI,UAAUA,IAAG,OAAO,QAAQ;QACzC;AACA,eAAO,EAAE,MAAAM,OAAM,MAAK;MACtB;AACA,YAAM,iBAA2B,EAAE,MAAM,MAAM,MAAM,SAAS,MAAK;AACnE,YAAM,iBAA0B,EAAE,MAAM,MAAM,MAAM,SAAS,MAAK;AAYlE,eAASC,MAAK,SAAc,SAAkB,OAAO,gBAAc;AACjE,cAAM,EAAE,MAAAD,OAAM,MAAK,IAAK,QAAQ,SAAS,SAAS,IAAI;AACtD,cAAM,OAAO,GAAG,eAA0B,MAAM,KAAK,WAAW,MAAM,aAAa,MAAM,IAAI;AAC7F,eAAO,KAAKA,OAAM,KAAK;MACzB;AAGA,YAAM,KAAK,eAAe,CAAC;AAgB3B,eAAS,OACP,WACA,SACA,WACA,OAAO,gBAAc;;AAErB,cAAM,KAAK;AACX,mBAAU,GAAA,WAAA,aAAY,WAAW,OAAO;AACxC,qBAAY,GAAA,WAAA,aAAY,aAAa,SAAS;AAC9C,YAAI,YAAY;AAAM,gBAAM,IAAI,MAAM,oCAAoC;AAC1E,cAAM,EAAE,MAAM,QAAO,IAAK;AAE1B,YAAI,OAA8B;AAClC,YAAI;AACJ,YAAI;AACF,cAAI,OAAO,OAAO,YAAY,cAAc,YAAY;AAGtD,gBAAI;AACF,qBAAO,UAAU,QAAQ,EAAE;qBACpB,UAAP;AACA,kBAAI,EAAE,oBAAoB,QAAA,IAAI;AAAM,sBAAM;AAC1C,qBAAO,UAAU,YAAY,EAAE;;qBAExB,OAAO,OAAO,YAAY,OAAO,GAAG,MAAM,YAAY,OAAO,GAAG,MAAM,UAAU;AACzF,kBAAM,EAAE,GAAAN,IAAG,GAAAC,GAAC,IAAK;AACjB,mBAAO,IAAI,UAAUD,IAAGC,EAAC;iBACpB;AACL,kBAAM,IAAI,MAAM,OAAO;;AAEzB,cAAI,MAAM,QAAQ,SAAS;iBACpB,OAAP;AACA,cAAK,MAAgB,YAAY;AAC/B,kBAAM,IAAI,MAAM,gEAAgE;AAClF,iBAAO;;AAET,YAAI,QAAQ,KAAK,SAAQ;AAAI,iBAAO;AACpC,YAAI;AAAS,oBAAU,MAAM,KAAK,OAAO;AACzC,cAAM,EAAE,GAAAD,IAAG,EAAC,IAAK;AACjB,cAAM,IAAI,cAAc,OAAO;AAC/B,cAAM,KAAK,KAAK,CAAC;AACjB,cAAM,KAAK,KAAK,IAAI,EAAE;AACtB,cAAM,KAAK,KAAKA,KAAI,EAAE;AACtB,cAAM,KAAI,WAAM,KAAK,qBAAqB,GAAG,IAAI,EAAE,MAAzC,mBAA4C;AACtD,YAAI,CAAC;AAAG,iBAAO;AACf,cAAM,IAAI,KAAK,EAAE,CAAC;AAClB,eAAO,MAAMA;MACf;AACA,aAAO;QACL;QACA;QACA;QACA,MAAAO;QACA;QACA,iBAAiB;QACjB;QACA;;IAEJ;AAjZA,YAAA,cAAA;AAuZA,aAAgB,eAAkB,IAAmB,GAAI;AAEvD,YAAM,IAAI,GAAG;AACb,UAAI,IAAI;AACR,eAASC,KAAI,IAAI,KAAKA,KAAI,QAAQ,KAAKA,MAAK;AAAK,aAAK;AACtD,YAAM,KAAK;AACX,YAAM,MAAM,IAAI,OAAO,OAAO;AAC9B,YAAM,MAAM,KAAK,OAAO;AACxB,YAAM,KAAK,OAAO,KAAK;AACvB,YAAM,KAAK,QAAQ,KAAK;AACxB,YAAM,KAAK,GAAG,IAAI,GAAG,EAAE;AACvB,YAAM,KAAK,GAAG,IAAI,IAAI,KAAK,OAAO,GAAG;AACrC,UAAI,YAAY,CAAC,GAAM,MAAwC;AAC7D,YAAI,MAAM;AACV,YAAI,MAAM,GAAG,IAAI,GAAG,EAAE;AACtB,YAAI,MAAM,GAAG,IAAI,GAAG;AACpB,cAAM,GAAG,IAAI,KAAK,CAAC;AACnB,YAAI,MAAM,GAAG,IAAI,GAAG,GAAG;AACvB,cAAM,GAAG,IAAI,KAAK,EAAE;AACpB,cAAM,GAAG,IAAI,KAAK,GAAG;AACrB,cAAM,GAAG,IAAI,KAAK,CAAC;AACnB,cAAM,GAAG,IAAI,KAAK,CAAC;AACnB,YAAI,MAAM,GAAG,IAAI,KAAK,GAAG;AACzB,cAAM,GAAG,IAAI,KAAK,EAAE;AACpB,YAAI,OAAO,GAAG,IAAI,KAAK,GAAG,GAAG;AAC7B,cAAM,GAAG,IAAI,KAAK,EAAE;AACpB,cAAM,GAAG,IAAI,KAAK,GAAG;AACrB,cAAM,GAAG,KAAK,KAAK,KAAK,IAAI;AAC5B,cAAM,GAAG,KAAK,KAAK,KAAK,IAAI;AAE5B,iBAASL,KAAI,IAAIA,KAAI,KAAKA,MAAK;AAC7B,cAAIM,OAAM,QAAQN,KAAI;AACtB,cAAI,OAAO,GAAG,IAAI,KAAKM,IAAG;AAC1B,gBAAM,KAAK,GAAG,IAAI,MAAM,GAAG,GAAG;AAC9B,gBAAM,GAAG,IAAI,KAAK,GAAG;AACrB,gBAAM,GAAG,IAAI,KAAK,GAAG;AACrB,iBAAO,GAAG,IAAI,KAAK,GAAG;AACtB,gBAAM,GAAG,KAAK,KAAK,KAAK,EAAE;AAC1B,gBAAM,GAAG,KAAK,MAAM,KAAK,EAAE;;AAE7B,eAAO,EAAE,SAAS,MAAM,OAAO,IAAG;MACpC;AACA,UAAI,GAAG,QAAQ,QAAQ,KAAK;AAE1B,cAAMC,OAAM,GAAG,QAAQ,OAAO;AAC9B,cAAMC,MAAK,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC;AAC5B,oBAAY,CAAC,GAAM,MAAQ;AACzB,cAAI,MAAM,GAAG,IAAI,CAAC;AAClB,gBAAM,MAAM,GAAG,IAAI,GAAG,CAAC;AACvB,gBAAM,GAAG,IAAI,KAAK,GAAG;AACrB,cAAI,KAAK,GAAG,IAAI,KAAKD,GAAE;AACvB,eAAK,GAAG,IAAI,IAAI,GAAG;AACnB,gBAAM,KAAK,GAAG,IAAI,IAAIC,GAAE;AACxB,gBAAM,MAAM,GAAG,IAAI,GAAG,IAAI,EAAE,GAAG,CAAC;AAChC,gBAAM,OAAO,GAAG,IAAI,KAAK,CAAC;AAC1B,cAAI,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI;AAC5B,iBAAO,EAAE,SAAS,MAAM,OAAO,EAAC;QAClC;;AAIF,aAAO;IACT;AA9DA,YAAA,iBAAA;AAgEA,aAAgB,oBACd,IACA,MAIC;AAED,UAAI,cAAc,EAAE;AACpB,UAAI,CAAC,GAAG,QAAQ,KAAK,CAAC,KAAK,CAAC,GAAG,QAAQ,KAAK,CAAC,KAAK,CAAC,GAAG,QAAQ,KAAK,CAAC;AAClE,cAAM,IAAI,MAAM,mCAAmC;AACrD,YAAM,YAAY,eAAe,IAAI,KAAK,CAAC;AAC3C,UAAI,CAAC,GAAG;AAAO,cAAM,IAAI,MAAM,8BAA8B;AAG7D,aAAO,CAAC,MAAwB;AAE9B,YAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAG;AACrC,cAAM,GAAG,IAAI,CAAC;AACd,cAAM,GAAG,IAAI,KAAK,KAAK,CAAC;AACxB,cAAM,GAAG,IAAI,GAAG;AAChB,cAAM,GAAG,IAAI,KAAK,GAAG;AACrB,cAAM,GAAG,IAAI,KAAK,GAAG,GAAG;AACxB,cAAM,GAAG,IAAI,KAAK,KAAK,CAAC;AACxB,cAAM,GAAG,KAAK,KAAK,GAAG,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI,KAAK,GAAG,IAAI,CAAC;AACxD,cAAM,GAAG,IAAI,KAAK,KAAK,CAAC;AACxB,cAAM,GAAG,IAAI,GAAG;AAChB,cAAM,GAAG,IAAI,GAAG;AAChB,cAAM,GAAG,IAAI,KAAK,KAAK,CAAC;AACxB,cAAM,GAAG,IAAI,KAAK,GAAG;AACrB,cAAM,GAAG,IAAI,KAAK,GAAG;AACrB,cAAM,GAAG,IAAI,KAAK,GAAG;AACrB,cAAM,GAAG,IAAI,KAAK,KAAK,CAAC;AACxB,cAAM,GAAG,IAAI,KAAK,GAAG;AACrB,YAAI,GAAG,IAAI,KAAK,GAAG;AACnB,cAAM,EAAE,SAAS,OAAAC,OAAK,IAAK,UAAU,KAAK,GAAG;AAC7C,YAAI,GAAG,IAAI,KAAK,CAAC;AACjB,YAAI,GAAG,IAAI,GAAGA,MAAK;AACnB,YAAI,GAAG,KAAK,GAAG,KAAK,OAAO;AAC3B,YAAI,GAAG,KAAK,GAAGA,QAAO,OAAO;AAC7B,cAAM,KAAK,GAAG,MAAO,CAAC,MAAM,GAAG,MAAO,CAAC;AACvC,YAAI,GAAG,KAAK,GAAG,IAAI,CAAC,GAAG,GAAG,EAAE;AAC5B,YAAI,GAAG,IAAI,GAAG,GAAG;AACjB,eAAO,EAAE,GAAG,EAAC;MACf;IACF;AA7CA,YAAA,sBAAA;;;;;;;;;;;;AChoCA,QAAA,eAAA;AACA,QAAA,aAAA;AAoBA,aAAS,YAAY,KAAmB;AACtC,UAAI,eAAe;AAAY,eAAO;AACtC,UAAI,OAAO,QAAQ;AAAU,gBAAO,GAAA,WAAA,aAAY,GAAG;AACnD,YAAM,IAAI,MAAM,kCAAkC;IACpD;AAGA,QAAM,QAAQ,WAAA;AAGd,aAAS,MAAMC,QAAeC,SAAc;AAC1C,UAAID,SAAQ,KAAKA,UAAS,KAAM,IAAIC,SAAS;AAC3C,cAAM,IAAI,MAAM,yBAAyBD,iBAAgBC,SAAQ;;AAEnE,YAAM,MAAM,MAAM,KAAK,EAAE,QAAAA,QAAM,CAAE,EAAE,KAAK,CAAC;AACzC,eAASC,KAAID,UAAS,GAAGC,MAAK,GAAGA,MAAK;AACpC,YAAIA,EAAC,IAAIF,SAAQ;AACjB,QAAAA,YAAW;;AAEb,aAAO,IAAI,WAAW,GAAG;IAC3B;AAEA,aAAS,OAAO,GAAe,GAAa;AAC1C,YAAM,MAAM,IAAI,WAAW,EAAE,MAAM;AACnC,eAASE,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAAK;AACjC,YAAIA,EAAC,IAAI,EAAEA,EAAC,IAAI,EAAEA,EAAC;;AAErB,aAAO;IACT;AAEA,aAAS,QAAQ,MAAa;AAC5B,UAAI,EAAE,gBAAgB;AAAa,cAAM,IAAI,MAAM,qBAAqB;IAC1E;AACA,aAAS,MAAM,MAAa;AAC1B,UAAI,CAAC,OAAO,cAAc,IAAI;AAAG,cAAM,IAAI,MAAM,iBAAiB;IACpE;AAIA,aAAgB,mBACd,KACA,KACA,YACA,GAAQ;AAER,cAAQ,GAAG;AACX,cAAQ,GAAG;AACX,YAAM,UAAU;AAEhB,UAAI,IAAI,SAAS;AAAK,cAAM,GAAE,GAAA,WAAA,cAAY,GAAA,WAAA,aAAY,mBAAmB,GAAG,GAAG,CAAC;AAChF,YAAM,EAAE,WAAW,YAAY,UAAU,WAAU,IAAK;AACxD,YAAM,MAAM,KAAK,KAAK,aAAa,UAAU;AAC7C,UAAI,MAAM;AAAK,cAAM,IAAI,MAAM,oBAAoB;AACnD,YAAM,aAAY,GAAA,WAAA,aAAY,KAAK,MAAM,IAAI,QAAQ,CAAC,CAAC;AACvD,YAAM,QAAQ,MAAM,GAAG,UAAU;AACjC,YAAM,YAAY,MAAM,YAAY,CAAC;AACrC,YAAM,IAAI,IAAI,MAAkB,GAAG;AACnC,YAAM,MAAM,GAAE,GAAA,WAAA,aAAY,OAAO,KAAK,WAAW,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC;AACxE,QAAE,CAAC,IAAI,GAAE,GAAA,WAAA,aAAY,KAAK,MAAM,GAAG,CAAC,GAAG,SAAS,CAAC;AACjD,eAASA,KAAI,GAAGA,MAAK,KAAKA,MAAK;AAC7B,cAAM,OAAO,CAAC,OAAO,KAAK,EAAEA,KAAI,CAAC,CAAC,GAAG,MAAMA,KAAI,GAAG,CAAC,GAAG,SAAS;AAC/D,UAAEA,EAAC,IAAI,GAAE,GAAA,WAAA,aAAY,GAAG,IAAI,CAAC;;AAE/B,YAAM,uBAAsB,GAAA,WAAA,aAAY,GAAG,CAAC;AAC5C,aAAO,oBAAoB,MAAM,GAAG,UAAU;IAChD;AA1BA,YAAA,qBAAA;AA4BA,aAAgB,mBACd,KACA,KACA,YACA,GACA,GAAQ;AAER,cAAQ,GAAG;AACX,cAAQ,GAAG;AACX,YAAM,UAAU;AAGhB,UAAI,IAAI,SAAS,KAAK;AACpB,cAAM,QAAQ,KAAK,KAAM,IAAI,IAAK,CAAC;AACnC,cAAM,EAAE,OAAO,EAAE,MAAK,CAAE,EAAE,QAAO,GAAA,WAAA,aAAY,mBAAmB,CAAC,EAAE,OAAO,GAAG,EAAE,OAAM;;AAEvF,UAAI,aAAa,SAAS,IAAI,SAAS;AACrC,cAAM,IAAI,MAAM,wCAAwC;AAC1D,aACE,EAAE,OAAO,EAAE,OAAO,WAAU,CAAE,EAC3B,OAAO,GAAG,EACV,OAAO,MAAM,YAAY,CAAC,CAAC,EAE3B,OAAO,GAAG,EACV,OAAO,MAAM,IAAI,QAAQ,CAAC,CAAC,EAC3B,OAAM;IAEb;AA3BA,YAAA,qBAAA;AAqCA,aAAgB,cAAc,KAAiB,OAAe,SAAa;AACzE,OAAA,GAAA,WAAA,gBAAe,SAAS;QACtB,KAAK;QACL,GAAG;QACH,GAAG;QACH,GAAG;QACH,MAAM;OACP;AACD,YAAM,EAAE,GAAG,GAAG,GAAG,MAAM,QAAQ,KAAK,KAAI,IAAK;AAC7C,cAAQ,GAAG;AACX,YAAM,KAAK;AACX,YAAM,MAAM,YAAY,IAAI;AAC5B,YAAM,QAAQ,EAAE,SAAS,CAAC,EAAE;AAC5B,YAAM,IAAI,KAAK,MAAM,QAAQ,KAAK,CAAC;AACnC,YAAM,eAAe,QAAQ,IAAI;AACjC,UAAI;AACJ,UAAI,WAAW,OAAO;AACpB,cAAM,mBAAmB,KAAK,KAAK,cAAc,IAAI;iBAC5C,WAAW,OAAO;AAC3B,cAAM,mBAAmB,KAAK,KAAK,cAAc,GAAG,IAAI;iBAC/C,WAAW,kBAAkB;AAEtC,cAAM;aACD;AACL,cAAM,IAAI,MAAM,+BAA+B;;AAEjD,YAAM,IAAI,IAAI,MAAM,KAAK;AACzB,eAASA,KAAI,GAAGA,KAAI,OAAOA,MAAK;AAC9B,cAAMC,KAAI,IAAI,MAAM,CAAC;AACrB,iBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,gBAAM,aAAa,KAAK,IAAID,KAAI;AAChC,gBAAM,KAAK,IAAI,SAAS,YAAY,aAAa,CAAC;AAClD,UAAAC,GAAE,CAAC,KAAI,GAAA,aAAA,KAAI,MAAM,EAAE,GAAG,CAAC;;AAEzB,UAAED,EAAC,IAAIC;;AAET,aAAO;IACT;AArCA,YAAA,gBAAA;AAuCA,aAAgB,WAAmC,OAAUC,MAAyB;AAEpF,YAAM,QAAQA,KAAI,IAAI,CAACF,OAAM,MAAM,KAAKA,EAAC,EAAE,QAAO,CAAE;AACpD,aAAO,CAAC,GAAM,MAAQ;AACpB,cAAM,CAAC,MAAM,MAAM,MAAM,IAAI,IAAI,MAAM,IAAI,CAAC,QAC1C,IAAI,OAAO,CAAC,KAAKA,OAAM,MAAM,IAAI,MAAM,IAAI,KAAK,CAAC,GAAGA,EAAC,CAAC,CAAC;AAEzD,YAAI,MAAM,IAAI,MAAM,IAAI;AACxB,YAAI,MAAM,IAAI,GAAG,MAAM,IAAI,MAAM,IAAI,CAAC;AACtC,eAAO,EAAE,GAAG,EAAC;MACf;IACF;AAXA,YAAA,aAAA;AA8BA,aAAgB,aACd,OACA,YACA,KAA0C;AAE1C,UAAI,OAAO,eAAe;AAAY,cAAM,IAAI,MAAM,8BAA8B;AACpF,aAAO;;;QAGL,YAAY,KAAiB,SAAsB;AACjD,gBAAM,IAAI,cAAc,KAAK,GAAG,EAAE,GAAG,KAAK,KAAK,IAAI,KAAK,GAAG,QAAO,CAAU;AAC5E,gBAAM,KAAK,MAAM,WAAW,WAAW,EAAE,CAAC,CAAC,CAAC;AAC5C,gBAAM,KAAK,MAAM,WAAW,WAAW,EAAE,CAAC,CAAC,CAAC;AAC5C,gBAAM,IAAI,GAAG,IAAI,EAAE,EAAE,cAAa;AAClC,YAAE,eAAc;AAChB,iBAAO;QACT;;QAGA,cAAc,KAAiB,SAAsB;AACnD,gBAAM,IAAI,cAAc,KAAK,GAAG,EAAE,GAAG,KAAK,KAAK,IAAI,WAAW,GAAG,QAAO,CAAU;AAClF,gBAAM,IAAI,MAAM,WAAW,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,cAAa;AAC1D,YAAE,eAAc;AAChB,iBAAO;QACT;;IAEJ;AA1BA,YAAA,eAAA;;;;;;;;;;;;ACpMA,QAAA,eAAA;AACA,QAAA,aAAA;AAEA,QAAM,OAAN,cAAsC,WAAA,KAAa;MAQjD,YAAY,MAAa,MAAW;AAClC,cAAK;AAJC,aAAA,WAAW;AACX,aAAA,YAAY;AAIlB,qBAAA,QAAO,KAAK,IAAI;AAChB,cAAM,OAAM,GAAA,WAAA,SAAQ,IAAI;AACxB,aAAK,QAAQ,KAAK,OAAM;AACxB,YAAI,OAAO,KAAK,MAAM,WAAW;AAC/B,gBAAM,IAAI,UAAU,qDAAqD;AAC3E,aAAK,WAAW,KAAK,MAAM;AAC3B,aAAK,YAAY,KAAK,MAAM;AAC5B,cAAM,WAAW,KAAK;AACtB,cAAM,MAAM,IAAI,WAAW,QAAQ;AAEnC,YAAI,IAAI,IAAI,SAAS,WAAW,KAAK,OAAM,EAAG,OAAO,GAAG,EAAE,OAAM,IAAK,GAAG;AACxE,iBAASG,KAAI,GAAGA,KAAI,IAAI,QAAQA;AAAK,cAAIA,EAAC,KAAK;AAC/C,aAAK,MAAM,OAAO,GAAG;AAErB,aAAK,QAAQ,KAAK,OAAM;AAExB,iBAASA,KAAI,GAAGA,KAAI,IAAI,QAAQA;AAAK,cAAIA,EAAC,KAAK,KAAO;AACtD,aAAK,MAAM,OAAO,GAAG;AACrB,YAAI,KAAK,CAAC;MACZ;MACA,OAAO,KAAU;AACf,qBAAA,QAAO,OAAO,IAAI;AAClB,aAAK,MAAM,OAAO,GAAG;AACrB,eAAO;MACT;MACA,WAAW,KAAe;AACxB,qBAAA,QAAO,OAAO,IAAI;AAClB,qBAAA,QAAO,MAAM,KAAK,KAAK,SAAS;AAChC,aAAK,WAAW;AAChB,aAAK,MAAM,WAAW,GAAG;AACzB,aAAK,MAAM,OAAO,GAAG;AACrB,aAAK,MAAM,WAAW,GAAG;AACzB,aAAK,QAAO;MACd;MACA,SAAM;AACJ,cAAM,MAAM,IAAI,WAAW,KAAK,MAAM,SAAS;AAC/C,aAAK,WAAW,GAAG;AACnB,eAAO;MACT;MACA,WAAW,IAAY;AAErB,eAAA,KAAO,OAAO,OAAO,OAAO,eAAe,IAAI,GAAG,CAAA,CAAE;AACpD,cAAM,EAAE,OAAO,OAAO,UAAU,WAAW,UAAU,UAAS,IAAK;AACnE,aAAK;AACL,WAAG,WAAW;AACd,WAAG,YAAY;AACf,WAAG,WAAW;AACd,WAAG,YAAY;AACf,WAAG,QAAQ,MAAM,WAAW,GAAG,KAAK;AACpC,WAAG,QAAQ,MAAM,WAAW,GAAG,KAAK;AACpC,eAAO;MACT;MACA,UAAO;AACL,aAAK,YAAY;AACjB,aAAK,MAAM,QAAO;AAClB,aAAK,MAAM,QAAO;MACpB;;AASK,QAAM,OAAO,CAAC,MAAa,KAAY,YAC5C,IAAI,KAAU,MAAM,GAAG,EAAE,OAAO,OAAO,EAAE,OAAM;AADpC,YAAA,OAAI;AAEjB,YAAA,KAAK,SAAS,CAAC,MAAa,QAAe,IAAI,KAAU,MAAM,GAAG;;;;;;;;;;;;AC/ElE,QAAA,SAAA;AACA,QAAA,UAAA;AACA,QAAA,mBAAA;AAIA,aAAgB,QAAQ,MAAW;AACjC,aAAO;QACL;QACA,MAAM,CAAC,QAAoB,UAAuB,GAAA,OAAA,MAAK,MAAM,MAAK,GAAA,QAAA,aAAY,GAAG,IAAI,CAAC;QACtF,aAAA,QAAA;;IAEJ;AANA,YAAA,UAAA;AASA,aAAgB,YAAY,UAAoB,SAAc;AAC5D,YAAMC,UAAS,CAAC,UAAgB,GAAA,iBAAA,aAAY,EAAE,GAAG,UAAU,GAAG,QAAQ,IAAI,EAAC,CAAE;AAC7E,aAAO,OAAO,OAAO,EAAE,GAAGA,QAAO,OAAO,GAAG,QAAAA,QAAM,CAAE;IACrD;AAHA,YAAA,cAAA;;;;;;;;;;;;;ACfA,QAAA,WAAA;AACA,QAAA,UAAA;AACA,QAAA,eAAA;AACA,QAAA,mBAAA;AAEA,QAAA,aAAA;AACA,QAAA,MAAA;AACA,QAAA,qBAAA;AAEA,QAAM,aAAa,OAAO,oEAAoE;AAC9F,QAAM,aAAa,OAAO,oEAAoE;AAC9F,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,aAAa,CAAC,GAAW,OAAe,IAAI,IAAI,OAAO;AAM7D,aAAS,QAAQ,GAAS;AACxB,YAAM,IAAI;AAEV,YAAM,MAAM,OAAO,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,OAAO,OAAO,EAAE,GAAG,OAAO,OAAO,EAAE;AAE3E,YAAM,OAAO,OAAO,EAAE,GAAG,OAAO,OAAO,EAAE,GAAG,OAAO,OAAO,EAAE;AAC5D,YAAM,KAAM,IAAI,IAAI,IAAK;AACzB,YAAM,KAAM,KAAK,KAAK,IAAK;AAC3B,YAAM,MAAM,GAAA,aAAA,MAAK,IAAI,KAAK,CAAC,IAAI,KAAM;AACrC,YAAM,MAAM,GAAA,aAAA,MAAK,IAAI,KAAK,CAAC,IAAI,KAAM;AACrC,YAAM,OAAO,GAAA,aAAA,MAAK,IAAI,KAAK,CAAC,IAAI,KAAM;AACtC,YAAM,OAAO,GAAA,aAAA,MAAK,KAAK,MAAM,CAAC,IAAI,MAAO;AACzC,YAAM,OAAO,GAAA,aAAA,MAAK,KAAK,MAAM,CAAC,IAAI,MAAO;AACzC,YAAM,OAAO,GAAA,aAAA,MAAK,KAAK,MAAM,CAAC,IAAI,MAAO;AACzC,YAAM,QAAQ,GAAA,aAAA,MAAK,KAAK,MAAM,CAAC,IAAI,MAAO;AAC1C,YAAM,QAAQ,GAAA,aAAA,MAAK,MAAM,MAAM,CAAC,IAAI,MAAO;AAC3C,YAAM,QAAQ,GAAA,aAAA,MAAK,MAAM,KAAK,CAAC,IAAI,KAAM;AACzC,YAAM,MAAM,GAAA,aAAA,MAAK,MAAM,MAAM,CAAC,IAAI,MAAO;AACzC,YAAM,MAAM,GAAA,aAAA,MAAK,IAAI,KAAK,CAAC,IAAI,KAAM;AACrC,YAAM,QAAO,GAAA,aAAA,MAAK,IAAI,KAAK,CAAC;AAC5B,UAAI,CAAC,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,CAAC;AAAG,cAAM,IAAI,MAAM,yBAAyB;AACvE,aAAO;IACT;AAEA,QAAM,MAAK,GAAA,aAAA,OAAM,YAAY,QAAW,QAAW,EAAE,MAAM,QAAO,CAAE;AAEvD,YAAA,aAAY,GAAA,mBAAA,aACvB;MACE,GAAG,OAAO,CAAC;MACX,GAAG,OAAO,CAAC;MACX;MACA,GAAG;;MAEH,IAAI,OAAO,+EAA+E;MAC1F,IAAI,OAAO,+EAA+E;MAC1F,GAAG,OAAO,CAAC;MACX,MAAM;;;;;;;MAON,MAAM;QACJ,MAAM,OAAO,oEAAoE;QACjF,aAAa,CAAC,MAAa;AACzB,gBAAMC,KAAI;AACV,gBAAM,KAAK,OAAO,oCAAoC;AACtD,gBAAM,KAAK,CAAC,MAAM,OAAO,oCAAoC;AAC7D,gBAAM,KAAK,OAAO,qCAAqC;AACvD,gBAAM,KAAK;AACX,gBAAM,YAAY,OAAO,qCAAqC;AAE9D,gBAAM,KAAK,WAAW,KAAK,GAAGA,EAAC;AAC/B,gBAAM,KAAK,WAAW,CAAC,KAAK,GAAGA,EAAC;AAChC,cAAI,MAAK,GAAA,aAAA,KAAI,IAAI,KAAK,KAAK,KAAK,IAAIA,EAAC;AACrC,cAAI,MAAK,GAAA,aAAA,KAAI,CAAC,KAAK,KAAK,KAAK,IAAIA,EAAC;AAClC,gBAAM,QAAQ,KAAK;AACnB,gBAAM,QAAQ,KAAK;AACnB,cAAI;AAAO,iBAAKA,KAAI;AACpB,cAAI;AAAO,iBAAKA,KAAI;AACpB,cAAI,KAAK,aAAa,KAAK,WAAW;AACpC,kBAAM,IAAI,MAAM,yCAAyC,CAAC;;AAE5D,iBAAO,EAAE,OAAO,IAAI,OAAO,GAAE;QAC/B;;OAGJ,SAAA,MAAM;AAKR,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,KAAK,CAAC,MAAc,OAAO,MAAM,YAAY,MAAM,KAAK,IAAI;AAClE,QAAM,KAAK,CAAC,MAAc,OAAO,MAAM,YAAY,MAAM,KAAK,IAAI;AAElE,QAAM,uBAAsD,CAAA;AAC5D,aAAS,WAAW,QAAgB,UAAsB;AACxD,UAAI,OAAO,qBAAqB,GAAG;AACnC,UAAI,SAAS,QAAW;AACtB,cAAM,QAAO,GAAA,SAAA,QAAO,WAAW,KAAK,KAAK,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;AAChE,gBAAO,GAAA,WAAA,aAAY,MAAM,IAAI;AAC7B,6BAAqB,GAAG,IAAI;;AAE9B,cAAO,GAAA,SAAA,SAAO,GAAA,WAAA,aAAY,MAAM,GAAG,QAAQ,CAAC;IAC9C;AAGA,QAAM,eAAe,CAAC,UAA6B,MAAM,WAAW,IAAI,EAAE,MAAM,CAAC;AACjF,QAAM,WAAW,CAACA,QAAc,GAAA,WAAA,iBAAgBA,IAAG,EAAE;AACrD,QAAM,OAAO,CAAC,OAAc,GAAA,aAAA,KAAI,GAAG,UAAU;AAC7C,QAAM,OAAO,CAAC,OAAc,GAAA,aAAA,KAAI,GAAG,UAAU;AAC7C,QAAM,QAAQ,QAAA,UAAU;AACxB,QAAM,UAAU,CAAC,GAAsB,GAAW,MAChD,MAAM,KAAK,qBAAqB,GAAG,GAAG,CAAC;AAGzC,aAAS,oBAAoB,MAAa;AACxC,UAAI,KAAK,QAAA,UAAU,MAAM,uBAAuB,IAAI;AACpD,UAAI,IAAI,MAAM,eAAe,EAAE;AAC/B,YAAM,SAAS,EAAE,SAAQ,IAAK,KAAK,KAAK,CAAC,EAAE;AAC3C,aAAO,EAAE,QAAgB,OAAO,aAAa,CAAC,EAAC;IACjD;AAKA,aAAS,OAAO,GAAS;AACvB,UAAI,CAAC,GAAG,CAAC;AAAG,cAAM,IAAI,MAAM,uBAAuB;AACnD,YAAM,KAAK,KAAK,IAAI,CAAC;AACrB,YAAM,IAAI,KAAK,KAAK,IAAI,OAAO,CAAC,CAAC;AACjC,UAAI,IAAI,QAAQ,CAAC;AACjB,UAAI,IAAI,QAAQ;AAAK,YAAI,KAAK,CAAC,CAAC;AAChC,YAAM,IAAI,IAAI,MAAM,GAAG,GAAG,GAAG;AAC7B,QAAE,eAAc;AAChB,aAAO;IACT;AAIA,aAAS,aAAa,MAAkB;AACtC,aAAO,MAAK,GAAA,WAAA,iBAAgB,WAAW,qBAAqB,GAAG,IAAI,CAAC,CAAC;IACvE;AAKA,aAAS,oBAAoB,YAAe;AAC1C,aAAO,oBAAoB,UAAU,EAAE;IACzC;AAMA,aAAS,YACP,SACA,YACA,WAAe,GAAA,QAAA,aAAY,EAAE,GAAC;AAE9B,YAAM,KAAI,GAAA,WAAA,aAAY,WAAW,OAAO;AACxC,YAAM,EAAE,OAAO,IAAI,QAAQ,EAAC,IAAK,oBAAoB,UAAU;AAC/D,YAAM,KAAI,GAAA,WAAA,aAAY,WAAW,SAAS,EAAE;AAC5C,YAAMC,KAAI,SAAS,KAAI,GAAA,WAAA,iBAAgB,WAAW,eAAe,CAAC,CAAC,CAAC;AACpE,YAAM,OAAO,WAAW,iBAAiBA,IAAG,IAAI,CAAC;AACjD,YAAM,KAAK,MAAK,GAAA,WAAA,iBAAgB,IAAI,CAAC;AACrC,UAAI,OAAO;AAAK,cAAM,IAAI,MAAM,wBAAwB;AACxD,YAAM,EAAE,OAAO,IAAI,QAAQ,EAAC,IAAK,oBAAoB,EAAE;AACvD,YAAMC,KAAI,UAAU,IAAI,IAAI,CAAC;AAC7B,YAAM,MAAM,IAAI,WAAW,EAAE;AAC7B,UAAI,IAAI,IAAI,CAAC;AACb,UAAI,IAAI,SAAS,KAAK,IAAIA,KAAI,CAAC,CAAC,GAAG,EAAE;AAErC,UAAI,CAAC,cAAc,KAAK,GAAG,EAAE;AAAG,cAAM,IAAI,MAAM,kCAAkC;AAClF,aAAO;IACT;AAMA,aAAS,cAAc,WAAgB,SAAc,WAAc;AACjE,YAAM,OAAM,GAAA,WAAA,aAAY,aAAa,WAAW,EAAE;AAClD,YAAM,KAAI,GAAA,WAAA,aAAY,WAAW,OAAO;AACxC,YAAM,OAAM,GAAA,WAAA,aAAY,aAAa,WAAW,EAAE;AAClD,UAAI;AACF,cAAM,IAAI,QAAO,GAAA,WAAA,iBAAgB,GAAG,CAAC;AACrC,cAAMC,MAAI,GAAA,WAAA,iBAAgB,IAAI,SAAS,GAAG,EAAE,CAAC;AAC7C,YAAI,CAAC,GAAGA,EAAC;AAAG,iBAAO;AACnB,cAAM,KAAI,GAAA,WAAA,iBAAgB,IAAI,SAAS,IAAI,EAAE,CAAC;AAC9C,YAAI,CAAC,GAAG,CAAC;AAAG,iBAAO;AACnB,cAAMD,KAAI,UAAU,SAASC,EAAC,GAAG,aAAa,CAAC,GAAG,CAAC;AACnD,cAAM,IAAI,QAAQ,GAAG,GAAG,KAAK,CAACD,EAAC,CAAC;AAChC,YAAI,CAAC,KAAK,CAAC,EAAE,SAAQ,KAAM,EAAE,SAAQ,EAAG,MAAMC;AAAG,iBAAO;AACxD,eAAO;eACA,OAAP;AACA,eAAO;;IAEX;AAEa,YAAA,UAAU;MACrB,cAAc;MACd,MAAM;MACN,QAAQ;MACR,OAAO;QACL,kBAAkB,QAAA,UAAU,MAAM;QAClC;QACA;QACA,iBAAA,WAAA;QACA,iBAAA,WAAA;QACA;QACA,KAAA,aAAA;;;AAIJ,QAAM,SAAS,IAAI,WACjB,IACA;;MAEE;QACE;QACA;QACA;QACA;;;MAGF;QACE;QACA;QACA;;;;MAGF;QACE;QACA;QACA;QACA;;;MAGF;QACE;QACA;QACA;QACA;;;MAEF,IAAI,CAACC,OAAMA,GAAE,IAAI,CAAC,MAAM,OAAO,CAAC,CAAC,CAAC,CAA6C;AAEnF,QAAM,UAAS,GAAA,iBAAA,qBAAoB,IAAI;MACrC,GAAG,OAAO,oEAAoE;MAC9E,GAAG,OAAO,MAAM;MAChB,GAAG,GAAG,OAAO,OAAO,KAAK,CAAC;KAC3B;AACY,SAAiC,IAAI,aAChD,QAAA,UAAU,iBACV,CAAC,YAAqB;AACpB,YAAM,EAAE,GAAG,EAAC,IAAK,OAAO,GAAG,OAAO,QAAQ,CAAC,CAAC,CAAC;AAC7C,aAAO,OAAO,GAAG,CAAC;IACpB,GACA;MACE,KAAK;MACL,WAAW;MACX,GAAG,GAAG;MACN,GAAG;MACH,GAAG;MACH,QAAQ;MACR,MAAM,SAAA;KACP,GAdY,QAAA,cAAW,GAAA,aAAE,QAAA,gBAAa,GAAA;;;;;AC7PzC,IAAAC,qBAAA;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,YAAY;AACpB,QAAI,cAAc;AAClB,WAAO,eAAe,SAAS,aAAa,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,YAAY;AAAA,IAAW,EAAE,CAAC;AAAA;AAAA;;;;;;;;;;ACJpH,QAAA,WAAA;AACA,QAAA,cAAA;AAKa,YAAA,aAAa,OAAO,oBAAoB;AAKxC,YAAA,cAAc,OACzB,oEAAoE;AAQzD,YAAA,qBAAqB,OAChC,gFAAgF;AAGrE,YAAA,kBAAkB,YAAA,UAAU,MAAM;AAClC,YAAA,wBAAwB,YAAA,UAAU,MAAM,IAAI,OAAO,CAAC;AAKpD,YAAA,aAAa,OACxB,qEAAqE;AAM1D,YAAA,mBAAmB;AAKnB,YAAA,iBAAiB,SAAA,OAAO,KAAK,QAAA,kBAAkB,KAAK;AAKpD,YAAA,wBACX;AAKW,YAAA,sBAAsB,SAAA,OAAO,KAAK,QAAA,uBAAuB,KAAK;AAK9D,YAAA,kBAAkB;AAKlB,YAAA,gBAAgB,SAAA,OAAO,KAAK,QAAA,iBAAiB,KAAK;AAKlD,YAAA,mBAAmB,SAAA,OAAO,KAAK,CAAC,GAAI,CAAC;AAErC,YAAA,8BAA8B;;;;;;;;;;;;ACrE9B,YAAA,cAAc,OAAO,GAAU;;;;;;;;;;;;ACe5C,aAAgBC,QAAO,OAAY;AACjC,UAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,cAAM,SAAuB,CAAA;AAC7B,YAAI,eAAe;AACnB,iBAASC,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,gBAAM,UAAUD,QAAO,MAAMC,EAAC,CAAC;AAC/B,iBAAO,KAAK,OAAO;AACnB,0BAAgB,QAAQ;;AAE1B,eAAO,YAAY,aAAa,cAAc,GAAG,GAAG,GAAG,MAAM;;AAE/D,YAAM,WAAW,QAAQ,KAAK;AAC9B,UAAI,SAAS,WAAW,KAAK,SAAS,CAAC,IAAI,KAAK;AAC9C,eAAO;;AAET,aAAO,YAAY,aAAa,SAAS,QAAQ,GAAG,GAAG,QAAQ;IACjE;AAhBA,YAAA,SAAAD;AAyBA,aAAS,UAAU,OAAmB,OAAe,KAAW;AAC9D,UAAI,MAAM,MAAM,QAAQ;AACtB,cAAM,IAAI,MAAM,gEAAgE;;AAElF,aAAO,MAAM,MAAM,OAAO,GAAG;IAC/B;AAMA,aAAS,aAAa,GAAa;AACjC,UAAI,EAAE,CAAC,MAAM,GAAG;AACd,cAAM,IAAI,MAAM,0BAA0B;;AAE5C,aAAO,aAAa,WAAW,CAAC,CAAC;IACnC;AAEA,aAAS,aAAa,KAAa,QAAc;AAC/C,UAAI,MAAM,IAAI;AACZ,eAAO,WAAW,KAAK,CAAC,MAAM,MAAM,CAAC;;AAEvC,YAAM,YAAY,YAAY,GAAG;AACjC,YAAM,UAAU,UAAU,SAAS;AACnC,YAAM,YAAY,YAAY,SAAS,KAAK,OAAO;AACnD,aAAO,WAAW,KAAK,WAAW,YAAY,SAAS,CAAC;IAC1D;AAUA,aAAgBE,QAAO,OAAc,SAAS,OAAK;AACjD,UAAI,OAAO,UAAU,eAAe,UAAU,QAAS,MAAc,WAAW,GAAG;AACjF,eAAO,WAAW,KAAK,CAAA,CAAE;;AAG3B,YAAM,aAAa,QAAQ,KAAK;AAChC,YAAM,UAAU,QAAQ,UAAU;AAElC,UAAI,QAAQ;AACV,eAAO;;AAET,UAAI,QAAQ,UAAU,WAAW,GAAG;AAClC,cAAM,IAAI,MAAM,qCAAqC;;AAGvD,aAAO,QAAQ;IACjB;AAhBA,YAAA,SAAAA;AAmBA,aAAS,QAAQ,OAAiB;AAChC,UAAIC,SAAgB,SAAiB,MAAkB,gBAA4B;AACnF,YAAM,UAAU,CAAA;AAChB,YAAM,YAAY,MAAM,CAAC;AAEzB,UAAI,aAAa,KAAM;AAErB,eAAO;UACL,MAAM,MAAM,MAAM,GAAG,CAAC;UACtB,WAAW,MAAM,MAAM,CAAC;;iBAEjB,aAAa,KAAM;AAG5B,QAAAA,UAAS,YAAY;AAGrB,YAAI,cAAc,KAAM;AACtB,iBAAO,WAAW,KAAK,CAAA,CAAE;eACpB;AACL,iBAAO,UAAU,OAAO,GAAGA,OAAM;;AAGnC,YAAIA,YAAW,KAAK,KAAK,CAAC,IAAI,KAAM;AAClC,gBAAM,IAAI,MAAM,2EAA2E;;AAG7F,eAAO;UACL;UACA,WAAW,MAAM,MAAMA,OAAM;;iBAEtB,aAAa,KAAM;AAG5B,kBAAU,YAAY;AACtB,YAAI,MAAM,SAAS,IAAI,SAAS;AAC9B,gBAAM,IAAI,MAAM,iDAAiD;;AAEnE,QAAAA,UAAS,aAAa,UAAU,OAAO,GAAG,OAAO,CAAC;AAClD,YAAIA,WAAU,IAAI;AAChB,gBAAM,IAAI,MAAM,2DAA2D;;AAE7E,eAAO,UAAU,OAAO,SAASA,UAAS,OAAO;AAEjD,eAAO;UACL;UACA,WAAW,MAAM,MAAMA,UAAS,OAAO;;iBAEhC,aAAa,KAAM;AAE5B,QAAAA,UAAS,YAAY;AACrB,yBAAiB,UAAU,OAAO,GAAGA,OAAM;AAC3C,eAAO,eAAe,QAAQ;AAC5B,cAAI,QAAQ,cAAc;AAC1B,kBAAQ,KAAK,EAAE,IAAI;AACnB,2BAAiB,EAAE;;AAGrB,eAAO;UACL,MAAM;UACN,WAAW,MAAM,MAAMA,OAAM;;aAE1B;AAEL,kBAAU,YAAY;AACtB,QAAAA,UAAS,aAAa,UAAU,OAAO,GAAG,OAAO,CAAC;AAClD,YAAIA,UAAS,IAAI;AACf,gBAAM,IAAI,MAAM,qCAAqC;;AAEvD,cAAM,cAAc,UAAUA;AAC9B,YAAI,cAAc,MAAM,QAAQ;AAC9B,gBAAM,IAAI,MAAM,mDAAmD;;AAGrE,yBAAiB,UAAU,OAAO,SAAS,WAAW;AAEtD,eAAO,eAAe,QAAQ;AAC5B,cAAI,QAAQ,cAAc;AAC1B,kBAAQ,KAAK,EAAE,IAAI;AACnB,2BAAiB,EAAE;;AAGrB,eAAO;UACL,MAAM;UACN,WAAW,MAAM,MAAM,WAAW;;;IAGxC;AAEA,QAAM,cAAc,MAAM,KAAK,EAAE,QAAQ,IAAG,GAAI,CAAC,IAAIF,OAAMA,GAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC;AAC1F,aAAS,WAAW,QAAkB;AAEpC,UAAI,MAAM;AACV,eAASA,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACtC,eAAO,YAAY,OAAOA,EAAC,CAAC;;AAE9B,aAAO;IACT;AAEA,aAAS,aAAa,SAAe;AACnC,YAAM,OAAO,OAAO,SAAS,SAAS,EAAE;AACxC,UAAI,OAAO,MAAM,IAAI;AAAG,cAAM,IAAI,MAAM,uBAAuB;AAC/D,aAAO;IACT;AAGA,aAAS,WAAW,KAAW;AAC7B,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,UAAU,sCAAsC,OAAO,GAAG;;AAEtE,UAAI,IAAI,SAAS;AAAG,cAAM,IAAI,MAAM,2CAA2C;AAC/E,YAAM,QAAQ,IAAI,WAAW,IAAI,SAAS,CAAC;AAC3C,eAASA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,cAAM,IAAIA,KAAI;AACd,cAAMA,EAAC,IAAI,aAAa,IAAI,MAAM,GAAG,IAAI,CAAC,CAAC;;AAE7C,aAAO;IACT;AAGA,aAAS,eAAe,QAAoB;AAC1C,UAAI,OAAO,WAAW;AAAG,eAAO,OAAO,CAAC;AACxC,YAAME,UAAS,OAAO,OAAO,CAAC,GAAG,QAAQ,IAAI,IAAI,QAAQ,CAAC;AAC1D,YAAM,SAAS,IAAI,WAAWA,OAAM;AACpC,eAASF,KAAI,GAAG,MAAM,GAAGA,KAAI,OAAO,QAAQA,MAAK;AAC/C,cAAM,MAAM,OAAOA,EAAC;AACpB,eAAO,IAAI,KAAK,GAAG;AACnB,eAAO,IAAI;;AAEb,aAAO;IACT;AAOA,aAAS,YAAY,KAAW;AAC9B,aAAO,IAAI,YAAW,EAAG,OAAO,GAAG;IACrC;AAGA,aAAS,YAAY,SAAwB;AAC3C,UAAI,UAAU,GAAG;AACf,cAAM,IAAI,MAAM,gDAAgD;;AAElE,YAAM,MAAM,QAAQ,SAAS,EAAE;AAC/B,aAAO,IAAI,SAAS,IAAI,IAAI,QAAQ;IACtC;AAGA,aAAS,UAAU,GAAS;AAC1B,aAAO,EAAE,SAAS,IAAI,IAAI,MAAM;IAClC;AAGA,aAAS,cAAc,KAAW;AAChC,aAAO,IAAI,UAAU,KAAK,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,MAAM;IACzD;AAGA,aAASG,gBAAe,KAAW;AACjC,UAAI,OAAO,QAAQ,UAAU;AAC3B,eAAO;;AAET,aAAO,cAAc,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI;IAC7C;AAGA,aAAS,QAAQ,GAAQ;AACvB,UAAI,aAAa,YAAY;AAC3B,eAAO;;AAET,UAAI,OAAO,MAAM,UAAU;AACzB,YAAI,cAAc,CAAC,GAAG;AACpB,iBAAO,WAAW,UAAUA,gBAAe,CAAC,CAAC,CAAC;;AAEhD,eAAO,YAAY,CAAC;;AAEtB,UAAI,OAAO,MAAM,YAAY,OAAO,MAAM,UAAU;AAClD,YAAI,CAAC,GAAG;AACN,iBAAO,WAAW,KAAK,CAAA,CAAE;;AAE3B,eAAO,WAAW,YAAY,CAAC,CAAC;;AAElC,UAAI,MAAM,QAAQ,MAAM,QAAW;AACjC,eAAO,WAAW,KAAK,CAAA,CAAE;;AAE3B,YAAM,IAAI,MAAM,wCAAwC,OAAO,CAAC;IAClE;AAEa,YAAA,QAAQ;MACnB;MACA;MACA;MACA;;AAGW,YAAA,MAAM,EAAE,QAAAJ,SAAQ,QAAAE,QAAM;;;;;;;;;;;;ACtSnC,aAAgB,OAAOG,IAAS;AAC9B,UAAI,CAAC,OAAO,cAAcA,EAAC,KAAKA,KAAI;AAAG,cAAM,IAAI,MAAM,2BAA2BA,IAAG;IACvF;AAFA,YAAA,SAAA;AAIA,aAAgB,KAAK,GAAU;AAC7B,UAAI,OAAO,MAAM;AAAW,cAAM,IAAI,MAAM,yBAAyB,GAAG;IAC1E;AAFA,YAAA,OAAA;AAIA,aAAgB,MAAM,MAA8B,SAAiB;AACnE,UAAI,EAAE,aAAa;AAAa,cAAM,IAAI,UAAU,qBAAqB;AACzE,UAAI,QAAQ,SAAS,KAAK,CAAC,QAAQ,SAAS,EAAE,MAAM;AAClD,cAAM,IAAI,UAAU,iCAAiC,0BAA0B,EAAE,QAAQ;IAC7F;AAJA,YAAA,QAAA;AAYA,aAAgB,KAAKC,OAAU;AAC7B,UAAI,OAAOA,UAAS,cAAc,OAAOA,MAAK,WAAW;AACvD,cAAM,IAAI,MAAM,iDAAiD;AACnE,aAAOA,MAAK,SAAS;AACrB,aAAOA,MAAK,QAAQ;IACtB;AALA,YAAA,OAAA;AAOA,aAAgB,OAAO,UAAe,gBAAgB,MAAI;AACxD,UAAI,SAAS;AAAW,cAAM,IAAI,MAAM,kCAAkC;AAC1E,UAAI,iBAAiB,SAAS;AAAU,cAAM,IAAI,MAAM,uCAAuC;IACjG;AAHA,YAAA,SAAA;AAIA,aAAgB,OAAO,KAAU,UAAa;AAC5C,YAAM,GAAG;AACT,YAAM,MAAM,SAAS;AACrB,UAAI,IAAI,SAAS,KAAK;AACpB,cAAM,IAAI,MAAM,yDAAyD,KAAK;;IAElF;AANA,YAAA,SAAA;AAQA,QAAM,SAAS;MACb;MACA;MACA;MACA;MACA;MACA;;AAGF,YAAA,UAAe;;;;;;;;;;;;AChDf,QAAM,aAAa,OAAO,KAAK,KAAK,CAAC;AACrC,QAAM,OAAO,OAAO,EAAE;AAGtB,aAAgB,QAAQC,IAAW,KAAK,OAAK;AAC3C,UAAI;AAAI,eAAO,EAAE,GAAG,OAAOA,KAAI,UAAU,GAAG,GAAG,OAAQA,MAAK,OAAQ,UAAU,EAAC;AAC/E,aAAO,EAAE,GAAG,OAAQA,MAAK,OAAQ,UAAU,IAAI,GAAG,GAAG,OAAOA,KAAI,UAAU,IAAI,EAAC;IACjF;AAHA,YAAA,UAAA;AAKA,aAAgB,MAAM,KAAe,KAAK,OAAK;AAC7C,UAAI,KAAK,IAAI,YAAY,IAAI,MAAM;AACnC,UAAI,KAAK,IAAI,YAAY,IAAI,MAAM;AACnC,eAASC,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK;AACnC,cAAM,EAAE,GAAG,EAAC,IAAK,QAAQ,IAAIA,EAAC,GAAG,EAAE;AACnC,SAAC,GAAGA,EAAC,GAAG,GAAGA,EAAC,CAAC,IAAI,CAAC,GAAG,CAAC;;AAExB,aAAO,CAAC,IAAI,EAAE;IAChB;AARA,YAAA,QAAA;AAUO,QAAM,QAAQ,CAAC,GAAW,MAAe,OAAO,MAAM,CAAC,KAAK,OAAQ,OAAO,MAAM,CAAC;AAA5E,YAAA,QAAK;AAElB,QAAM,QAAQ,CAAC,GAAW,GAAW,MAAc,MAAM;AACzD,QAAM,QAAQ,CAAC,GAAW,GAAW,MAAe,KAAM,KAAK,IAAO,MAAM;AAE5E,QAAM,SAAS,CAAC,GAAW,GAAW,MAAe,MAAM,IAAM,KAAM,KAAK;AAC5E,QAAM,SAAS,CAAC,GAAW,GAAW,MAAe,KAAM,KAAK,IAAO,MAAM;AAE7E,QAAM,SAAS,CAAC,GAAW,GAAW,MAAe,KAAM,KAAK,IAAO,MAAO,IAAI;AAClF,QAAM,SAAS,CAAC,GAAW,GAAW,MAAe,MAAO,IAAI,KAAQ,KAAM,KAAK;AAEnF,QAAM,UAAU,CAAC,GAAW,MAAc;AAC1C,QAAM,UAAU,CAAC,GAAW,MAAc;AAE1C,QAAM,SAAS,CAAC,GAAW,GAAW,MAAe,KAAK,IAAM,MAAO,KAAK;AAC5E,QAAM,SAAS,CAAC,GAAW,GAAW,MAAe,KAAK,IAAM,MAAO,KAAK;AAE5E,QAAM,SAAS,CAAC,GAAW,GAAW,MAAe,KAAM,IAAI,KAAQ,MAAO,KAAK;AACnF,QAAM,SAAS,CAAC,GAAW,GAAW,MAAe,KAAM,IAAI,KAAQ,MAAO,KAAK;AAKnF,aAAgB,IAAI,IAAY,IAAY,IAAY,IAAU;AAChE,YAAM,KAAK,OAAO,MAAM,OAAO;AAC/B,aAAO,EAAE,GAAI,KAAK,MAAO,IAAI,KAAK,KAAM,KAAM,GAAG,GAAG,IAAI,EAAC;IAC3D;AAHA,YAAA,MAAA;AAKA,QAAM,QAAQ,CAAC,IAAY,IAAY,QAAgB,OAAO,MAAM,OAAO,MAAM,OAAO;AACxF,QAAM,QAAQ,CAAC,KAAa,IAAY,IAAY,OACjD,KAAK,KAAK,MAAO,MAAM,KAAK,KAAM,KAAM;AAC3C,QAAM,QAAQ,CAAC,IAAY,IAAY,IAAY,QAChD,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO;AACjD,QAAM,QAAQ,CAAC,KAAa,IAAY,IAAY,IAAY,OAC7D,KAAK,KAAK,KAAK,MAAO,MAAM,KAAK,KAAM,KAAM;AAChD,QAAM,QAAQ,CAAC,IAAY,IAAY,IAAY,IAAY,QAC5D,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO,MAAM,OAAO;AAC9D,QAAM,QAAQ,CAAC,KAAa,IAAY,IAAY,IAAY,IAAY,OACzE,KAAK,KAAK,KAAK,KAAK,MAAO,MAAM,KAAK,KAAM,KAAM;AAGrD,QAAM,MAAM;MACV;MAAS;MAAO,OAAA,QAAA;MAChB;MAAO;MACP;MAAQ;MAAQ;MAAQ;MACxB;MAAS;MACT;MAAQ;MAAQ;MAAQ;MACxB;MAAK;MAAO;MAAO;MAAO;MAAO;MAAO;;AAE1C,YAAA,UAAe;;;;;;;;;;;;ACnEF,YAAA,SACX,OAAO,eAAe,YAAY,YAAY,aAAa,WAAW,SAAS;;;;;;;;;;;;ACKjF,QAAA,WAAA;AAOO,QAAM,KAAK,CAAC,QAAoB,IAAI,WAAW,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU;AAAnF,YAAA,KAAE;AACR,QAAM,MAAM,CAAC,QAClB,IAAI,YAAY,IAAI,QAAQ,IAAI,YAAY,KAAK,MAAM,IAAI,aAAa,CAAC,CAAC;AAD/D,YAAA,MAAG;AAIT,QAAM,aAAa,CAAC,QACzB,IAAI,SAAS,IAAI,QAAQ,IAAI,YAAY,IAAI,UAAU;AAD5C,YAAA,aAAU;AAIhB,QAAM,OAAO,CAAC,MAAc,UAAmB,QAAS,KAAK,QAAW,SAAS;AAA3E,YAAA,OAAI;AAIJ,YAAA,OAAO,IAAI,WAAW,IAAI,YAAY,CAAC,SAAU,CAAC,EAAE,MAAM,EAAE,CAAC,MAAM;AAChF,QAAI,CAAC,QAAA;AAAM,YAAM,IAAI,MAAM,6CAA6C;AAExE,QAAM,QAAQ,MAAM,KAAK,EAAE,QAAQ,IAAG,GAAI,CAAC,GAAGC,OAAMA,GAAE,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC;AAInF,aAAgB,WAAW,QAAkB;AAE3C,UAAI,EAAE,kBAAkB;AAAa,cAAM,IAAI,MAAM,qBAAqB;AAC1E,UAAI,MAAM;AACV,eAASA,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACtC,eAAO,MAAM,OAAOA,EAAC,CAAC;;AAExB,aAAO;IACT;AARA,YAAA,aAAA;AAaA,aAAgB,WAAW,KAAW;AACpC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,UAAU,sCAAsC,OAAO,GAAG;;AAEtE,UAAI,IAAI,SAAS;AAAG,cAAM,IAAI,MAAM,2CAA2C;AAC/E,YAAM,QAAQ,IAAI,WAAW,IAAI,SAAS,CAAC;AAC3C,eAASA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,cAAM,IAAIA,KAAI;AACd,cAAM,UAAU,IAAI,MAAM,GAAG,IAAI,CAAC;AAClC,cAAM,OAAO,OAAO,SAAS,SAAS,EAAE;AACxC,YAAI,OAAO,MAAM,IAAI,KAAK,OAAO;AAAG,gBAAM,IAAI,MAAM,uBAAuB;AAC3E,cAAMA,EAAC,IAAI;;AAEb,aAAO;IACT;AAdA,YAAA,aAAA;AAmBO,QAAMC,YAAW,YAAW;IAAE;AAAxB,YAAA,WAAQA;AAGd,mBAAe,UAAU,OAAe,MAAc,IAAuB;AAClF,UAAI,KAAK,KAAK,IAAG;AACjB,eAASD,KAAI,GAAGA,KAAI,OAAOA,MAAK;AAC9B,WAAGA,EAAC;AAEJ,cAAM,OAAO,KAAK,IAAG,IAAK;AAC1B,YAAI,QAAQ,KAAK,OAAO;AAAM;AAC9B,eAAM,GAAA,QAAA,UAAQ;AACd,cAAM;;IAEV;AAVA,YAAA,YAAA;AAiBA,aAAgB,YAAY,KAAW;AACrC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,UAAU,oCAAoC,OAAO,KAAK;;AAEtE,aAAO,IAAI,YAAW,EAAG,OAAO,GAAG;IACrC;AALA,YAAA,cAAA;AAQA,aAAgB,QAAQ,MAAW;AACjC,UAAI,OAAO,SAAS;AAAU,eAAO,YAAY,IAAI;AACrD,UAAI,EAAE,gBAAgB;AACpB,cAAM,IAAI,UAAU,0CAA0C,OAAO,OAAO;AAC9E,aAAO;IACT;AALA,YAAA,UAAA;AAWA,aAAgB,eAAe,QAAoB;AACjD,UAAI,CAAC,OAAO,MAAM,CAAC,MAAM,aAAa,UAAU;AAAG,cAAM,IAAI,MAAM,0BAA0B;AAC7F,UAAI,OAAO,WAAW;AAAG,eAAO,OAAO,CAAC;AACxC,YAAME,UAAS,OAAO,OAAO,CAAC,GAAG,QAAQ,IAAI,IAAI,QAAQ,CAAC;AAC1D,YAAM,SAAS,IAAI,WAAWA,OAAM;AACpC,eAASF,KAAI,GAAG,MAAM,GAAGA,KAAI,OAAO,QAAQA,MAAK;AAC/C,cAAM,MAAM,OAAOA,EAAC;AACpB,eAAO,IAAI,KAAK,GAAG;AACnB,eAAO,IAAI;;AAEb,aAAO;IACT;AAXA,YAAA,cAAA;AAcA,QAAsB,OAAtB,MAA0B;;MAsBxB,QAAK;AACH,eAAO,KAAK,WAAU;MACxB;;AAxBF,YAAA,OAAA;AAuCA,QAAM,gBAAgB,CAAC,QACrB,OAAO,UAAU,SAAS,KAAK,GAAG,MAAM,qBAAqB,IAAI,gBAAgB;AAGnF,aAAgB,UACd,UACA,MAAS;AAET,UAAI,SAAS,WAAc,OAAO,SAAS,YAAY,CAAC,cAAc,IAAI;AACxE,cAAM,IAAI,UAAU,uCAAuC;AAC7D,YAAM,SAAS,OAAO,OAAO,UAAU,IAAI;AAC3C,aAAO;IACT;AARA,YAAA,YAAA;AAYA,aAAgB,gBAAmC,iBAA8B;AAC/E,YAAM,QAAQ,CAAC,YAA+B,gBAAe,EAAG,OAAO,QAAQ,OAAO,CAAC,EAAE,OAAM;AAC/F,YAAM,MAAM,gBAAe;AAC3B,YAAM,YAAY,IAAI;AACtB,YAAM,WAAW,IAAI;AACrB,YAAM,SAAS,MAAM,gBAAe;AACpC,aAAO;IACT;AAPA,YAAA,kBAAA;AASA,aAAgB,wBACd,UAA+B;AAE/B,YAAM,QAAQ,CAAC,KAAY,SAAyB,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,CAAC,EAAE,OAAM;AAC9F,YAAM,MAAM,SAAS,CAAA,CAAO;AAC5B,YAAM,YAAY,IAAI;AACtB,YAAM,WAAW,IAAI;AACrB,YAAM,SAAS,CAAC,SAAY,SAAS,IAAI;AACzC,aAAO;IACT;AATA,YAAA,0BAAA;AAcA,aAAgB,YAAY,cAAc,IAAE;AAC1C,UAAI,SAAA,UAAU,OAAO,SAAA,OAAO,oBAAoB,YAAY;AAC1D,eAAO,SAAA,OAAO,gBAAgB,IAAI,WAAW,WAAW,CAAC;;AAE3D,YAAM,IAAI,MAAM,wCAAwC;IAC1D;AALA,YAAA,cAAA;;;;;;;;;;;;ACrMA,QAAA,eAAA;AACA,QAAA,YAAA;AACA,QAAA,aAAA;AAWA,QAAM,CAAC,SAAS,WAAW,UAAU,IAAoC,CAAC,CAAA,GAAI,CAAA,GAAI,CAAA,CAAE;AACpF,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,MAAM,OAAO,CAAC;AACpB,QAAM,QAAQ,OAAO,GAAG;AACxB,QAAM,SAAS,OAAO,GAAI;AAC1B,aAAS,QAAQ,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,QAAQ,IAAI,SAAS;AAE9D,OAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC;AAChC,cAAQ,KAAK,KAAK,IAAI,IAAI,EAAE;AAE5B,gBAAU,MAAQ,QAAQ,MAAM,QAAQ,KAAM,IAAK,EAAE;AAErD,UAAIG,KAAI;AACR,eAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAC1B,aAAM,KAAK,OAAS,KAAK,OAAO,UAAW;AAC3C,YAAI,IAAI;AAAK,UAAAA,MAAK,QAAS,OAAO,OAAO,CAAC,KAAK;;AAEjD,iBAAW,KAAKA,EAAC;;AAEnB,QAAM,CAAC,aAAa,WAAW,IAAI,UAAA,QAAI,MAAM,YAAY,IAAI;AAG7D,QAAM,QAAQ,CAAC,GAAW,GAAW,MACnC,IAAI,KAAK,UAAA,QAAI,OAAO,GAAG,GAAG,CAAC,IAAI,UAAA,QAAI,OAAO,GAAG,GAAG,CAAC;AACnD,QAAM,QAAQ,CAAC,GAAW,GAAW,MACnC,IAAI,KAAK,UAAA,QAAI,OAAO,GAAG,GAAG,CAAC,IAAI,UAAA,QAAI,OAAO,GAAG,GAAG,CAAC;AAGnD,aAAgB,QAAQ,GAAgB,SAAiB,IAAE;AACzD,YAAM,IAAI,IAAI,YAAY,IAAI,CAAC;AAE/B,eAAS,QAAQ,KAAK,QAAQ,QAAQ,IAAI,SAAS;AAEjD,iBAAS,IAAI,GAAG,IAAI,IAAI;AAAK,YAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AACvF,iBAAS,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AAC9B,gBAAM,QAAQ,IAAI,KAAK;AACvB,gBAAM,QAAQ,IAAI,KAAK;AACvB,gBAAM,KAAK,EAAE,IAAI;AACjB,gBAAM,KAAK,EAAE,OAAO,CAAC;AACrB,gBAAM,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI;AACpC,gBAAM,KAAK,MAAM,IAAI,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;AACxC,mBAAS,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI;AAC/B,cAAE,IAAI,CAAC,KAAK;AACZ,cAAE,IAAI,IAAI,CAAC,KAAK;;;AAIpB,YAAI,OAAO,EAAE,CAAC;AACd,YAAI,OAAO,EAAE,CAAC;AACd,iBAASA,KAAI,GAAGA,KAAI,IAAIA,MAAK;AAC3B,gBAAM,QAAQ,UAAUA,EAAC;AACzB,gBAAM,KAAK,MAAM,MAAM,MAAM,KAAK;AAClC,gBAAM,KAAK,MAAM,MAAM,MAAM,KAAK;AAClC,gBAAM,KAAK,QAAQA,EAAC;AACpB,iBAAO,EAAE,EAAE;AACX,iBAAO,EAAE,KAAK,CAAC;AACf,YAAE,EAAE,IAAI;AACR,YAAE,KAAK,CAAC,IAAI;;AAGd,iBAAS,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI;AAC/B,mBAAS,IAAI,GAAG,IAAI,IAAI;AAAK,cAAE,CAAC,IAAI,EAAE,IAAI,CAAC;AAC3C,mBAAS,IAAI,GAAG,IAAI,IAAI;AAAK,cAAE,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,EAAE,IAAI,GAAG,IAAI,KAAK,EAAE;;AAG5E,UAAE,CAAC,KAAK,YAAY,KAAK;AACzB,UAAE,CAAC,KAAK,YAAY,KAAK;;AAE3B,QAAE,KAAK,CAAC;IACV;AAzCA,YAAA,UAAA;AA2CA,QAAa,SAAb,cAA4B,WAAA,KAAY;;MAQtC,YACS,UACA,QACA,WACG,YAAY,OACZ,SAAiB,IAAE;AAE7B,cAAK;AANE,aAAA,WAAA;AACA,aAAA,SAAA;AACA,aAAA,YAAA;AACG,aAAA,YAAA;AACA,aAAA,SAAA;AAXF,aAAA,MAAM;AACN,aAAA,SAAS;AACT,aAAA,WAAW;AAEX,aAAA,YAAY;AAWpB,qBAAA,QAAO,OAAO,SAAS;AAEvB,YAAI,KAAK,KAAK,YAAY,KAAK,YAAY;AACzC,gBAAM,IAAI,MAAM,0CAA0C;AAC5D,aAAK,QAAQ,IAAI,WAAW,GAAG;AAC/B,aAAK,WAAU,GAAA,WAAA,KAAI,KAAK,KAAK;MAC/B;MACU,SAAM;AACd,gBAAQ,KAAK,SAAS,KAAK,MAAM;AACjC,aAAK,SAAS;AACd,aAAK,MAAM;MACb;MACA,OAAO,MAAW;AAChB,qBAAA,QAAO,OAAO,IAAI;AAClB,cAAM,EAAE,UAAU,MAAK,IAAK;AAC5B,gBAAO,GAAA,WAAA,SAAQ,IAAI;AACnB,cAAM,MAAM,KAAK;AACjB,iBAAS,MAAM,GAAG,MAAM,OAAO;AAC7B,gBAAM,OAAO,KAAK,IAAI,WAAW,KAAK,KAAK,MAAM,GAAG;AACpD,mBAASC,KAAI,GAAGA,KAAI,MAAMA;AAAK,kBAAM,KAAK,KAAK,KAAK,KAAK,KAAK;AAC9D,cAAI,KAAK,QAAQ;AAAU,iBAAK,OAAM;;AAExC,eAAO;MACT;MACU,SAAM;AACd,YAAI,KAAK;AAAU;AACnB,aAAK,WAAW;AAChB,cAAM,EAAE,OAAO,QAAQ,KAAK,SAAQ,IAAK;AAEzC,cAAM,GAAG,KAAK;AACd,aAAK,SAAS,SAAU,KAAK,QAAQ,WAAW;AAAG,eAAK,OAAM;AAC9D,cAAM,WAAW,CAAC,KAAK;AACvB,aAAK,OAAM;MACb;MACU,UAAU,KAAe;AACjC,qBAAA,QAAO,OAAO,MAAM,KAAK;AACzB,qBAAA,QAAO,MAAM,GAAG;AAChB,aAAK,OAAM;AACX,cAAM,YAAY,KAAK;AACvB,cAAM,EAAE,SAAQ,IAAK;AACrB,iBAAS,MAAM,GAAG,MAAM,IAAI,QAAQ,MAAM,OAAO;AAC/C,cAAI,KAAK,UAAU;AAAU,iBAAK,OAAM;AACxC,gBAAM,OAAO,KAAK,IAAI,WAAW,KAAK,QAAQ,MAAM,GAAG;AACvD,cAAI,IAAI,UAAU,SAAS,KAAK,QAAQ,KAAK,SAAS,IAAI,GAAG,GAAG;AAChE,eAAK,UAAU;AACf,iBAAO;;AAET,eAAO;MACT;MACA,QAAQ,KAAe;AAErB,YAAI,CAAC,KAAK;AAAW,gBAAM,IAAI,MAAM,uCAAuC;AAC5E,eAAO,KAAK,UAAU,GAAG;MAC3B;MACA,IAAI,OAAa;AACf,qBAAA,QAAO,OAAO,KAAK;AACnB,eAAO,KAAK,QAAQ,IAAI,WAAW,KAAK,CAAC;MAC3C;MACA,WAAW,KAAe;AACxB,qBAAA,QAAO,OAAO,KAAK,IAAI;AACvB,YAAI,KAAK;AAAU,gBAAM,IAAI,MAAM,6BAA6B;AAChE,aAAK,UAAU,GAAG;AAClB,aAAK,QAAO;AACZ,eAAO;MACT;MACA,SAAM;AACJ,eAAO,KAAK,WAAW,IAAI,WAAW,KAAK,SAAS,CAAC;MACvD;MACA,UAAO;AACL,aAAK,YAAY;AACjB,aAAK,MAAM,KAAK,CAAC;MACnB;MACA,WAAW,IAAW;AACpB,cAAM,EAAE,UAAU,QAAQ,WAAW,QAAQ,UAAS,IAAK;AAC3D,eAAA,KAAO,IAAI,OAAO,UAAU,QAAQ,WAAW,WAAW,MAAM;AAChE,WAAG,QAAQ,IAAI,KAAK,OAAO;AAC3B,WAAG,MAAM,KAAK;AACd,WAAG,SAAS,KAAK;AACjB,WAAG,WAAW,KAAK;AACnB,WAAG,SAAS;AAEZ,WAAG,SAAS;AACZ,WAAG,YAAY;AACf,WAAG,YAAY;AACf,WAAG,YAAY,KAAK;AACpB,eAAO;MACT;;AAvGF,YAAA,SAAA;AA0GA,QAAM,MAAM,CAAC,QAAgB,UAAkB,eAC7C,GAAA,WAAA,iBAAgB,MAAM,IAAI,OAAO,UAAU,QAAQ,SAAS,CAAC;AAElD,YAAA,WAAW,IAAI,GAAM,KAAK,MAAM,CAAC;AAKjC,YAAA,WAAW,IAAI,GAAM,KAAK,MAAM,CAAC;AACjC,YAAA,WAAW,IAAI,GAAM,KAAK,MAAM,CAAC;AACjC,YAAA,WAAW,IAAI,GAAM,IAAI,MAAM,CAAC;AAChC,YAAA,aAAa,IAAI,GAAM,KAAK,MAAM,CAAC;AAKnC,YAAA,aAAa,IAAI,GAAM,KAAK,MAAM,CAAC;AACnC,YAAA,aAAa,IAAI,GAAM,KAAK,MAAM,CAAC;AACnC,YAAA,aAAa,IAAI,GAAM,IAAI,MAAM,CAAC;AAI/C,QAAM,WAAW,CAAC,QAAgB,UAAkB,eAClD,GAAA,WAAA,yBACE,CAAC,OAAkB,CAAA,MACjB,IAAI,OAAO,UAAU,QAAQ,KAAK,UAAU,SAAY,YAAY,KAAK,OAAO,IAAI,CAAC;AAG9E,YAAA,WAAW,SAAS,IAAM,KAAK,MAAM,CAAC;AACtC,YAAA,WAAW,SAAS,IAAM,KAAK,MAAM,CAAC;;;;;AC7NnD,IAAAC,iBAAA;AAAA;AAAA;AAAA;AAAA;AACA,QAAI,kBAAmB,WAAQ,QAAK,mBAAoB,SAAU,KAAK;AACnE,aAAQ,OAAO,IAAI,aAAc,MAAM,EAAE,WAAW,IAAI;AAAA,IAC5D;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,SAAS,QAAQ,WAAW,QAAQ,cAAc,QAAQ,aAAa,QAAQ,cAAc,QAAQ,cAAc,QAAQ,aAAa,QAAQ,cAAc,QAAQ,QAAQ,QAAQ,aAAa,QAAQ,cAAc,QAAQ,aAAa;AAEtP,QAAM,YAAY,gBAAgB,iBAAgC;AAClE,QAAM,UAAU;AAChB,QAAM,aAAa,UAAU,QAAQ;AACrC,YAAQ,aAAa;AACrB,QAAM,cAAc,UAAU,QAAQ;AACtC,YAAQ,cAAc;AACtB,QAAI,UAAU;AACd,WAAO,eAAe,SAAS,cAAc,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,QAAQ;AAAA,IAAY,EAAE,CAAC;AAClH,WAAO,eAAe,SAAS,SAAS,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,QAAQ;AAAA,IAAY,EAAE,CAAC;AAC7G,WAAO,eAAe,SAAS,eAAe,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,QAAQ;AAAA,IAAa,EAAE,CAAC;AACpH,WAAO,eAAe,SAAS,cAAc,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,QAAQ;AAAA,IAAY,EAAE,CAAC;AAClH,WAAO,eAAe,SAAS,eAAe,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,QAAQ;AAAA,IAAa,EAAE,CAAC;AAEpH,aAAS,YAAY,MAAM;AACvB,UAAI,EAAE,gBAAgB,aAAa;AAC/B,cAAM,IAAI,UAAU,wCAAwC,OAAO,MAAM;AAAA,MAC7E;AACA,aAAO,IAAI,YAAY,EAAE,OAAO,IAAI;AAAA,IACxC;AACA,YAAQ,cAAc;AACtB,aAAS,WAAW,MAAM;AACtB,YAAM,SAAS,KAAK,WAAW,IAAI,IAAI,KAAK,UAAU,CAAC,IAAI;AAC3D,cAAQ,GAAG,QAAQ,YAAY,MAAM;AAAA,IACzC;AACA,YAAQ,aAAa;AAErB,aAAS,YAAY,GAAG,GAAG;AACvB,UAAI,EAAE,WAAW,EAAE,QAAQ;AACvB,eAAO;AAAA,MACX;AACA,eAASC,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAAK;AAC/B,YAAI,EAAEA,EAAC,MAAM,EAAEA,EAAC,GAAG;AACf,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACA,YAAQ,cAAc;AAEtB,aAAS,SAAS,MAAM;AACpB,aAAO,CAAC,QAAQ;AACZ,kBAAU,QAAQ,MAAM,GAAG;AAC3B,eAAO,KAAK,GAAG;AAAA,MACnB;AAAA,IACJ;AACA,YAAQ,WAAW;AACnB,YAAQ,UAAU,MAAM;AACpB,YAAM,YAAY,OAAO,SAAS,YAAY,YAAY,OAAO,KAAK,SAAS;AAC/E,YAAM,cAAc,OAAO,WAAW,eAClC,OAAO,OAAO,YAAY,cAC1B,OAAO,QAAQ,KAAK,MAAM;AAC9B,aAAO;AAAA,QACH,MAAM,eAAe,CAAC,YAAY,YAAY,QAAQ,IAAI;AAAA,QAC1D,KAAK;AAAA,MACT;AAAA,IACJ,GAAG;AAAA;AAAA;;;AC9DH;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,YAAY,QAAQ,YAAY,QAAQ,YAAY,QAAQ,YAAY;AAChF,QAAM,SAAS;AACf,QAAM,UAAU;AAChB,YAAQ,aAAa,GAAG,QAAQ,UAAU,OAAO,UAAU;AAC3D,YAAQ,aAAa,MAAM;AACvB,YAAM,KAAK,GAAG,QAAQ,UAAU,OAAO,UAAU;AACjD,QAAE,SAAS,OAAO,WAAW;AAC7B,aAAO;AAAA,IACX,GAAG;AACH,YAAQ,aAAa,GAAG,QAAQ,UAAU,OAAO,UAAU;AAC3D,YAAQ,aAAa,GAAG,QAAQ,UAAU,OAAO,UAAU;AAAA;AAAA;;;;;;;;;;ACkB3D,aAAgB,cAAc,KAAW;AACvC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,8DAA8D,OAAO,KAAK;;AAG5F,aAAO,IAAI,CAAC,MAAM,OAAO,IAAI,CAAC,MAAM;IACtC;AANA,YAAA,gBAAA;AAaO,QAAMC,kBAAiB,CAAC,QAAuB;AACpD,UAAI,OAAO,QAAQ;AACjB,cAAM,IAAI,MAAM,0DAA0D,OAAO,KAAK;AAExF,aAAO,cAAc,GAAG,IAAI,IAAI,MAAM,CAAC,IAAI;IAC7C;AALa,YAAA,iBAAcA;AAY3B,aAAgB,UAAUC,QAAa;AACrC,UAAI,IAAIA;AAER,UAAI,OAAO,MAAM,UAAU;AACzB,cAAM,IAAI,MAAM,qDAAqD,OAAO,GAAG;;AAGjF,UAAI,EAAE,SAAS;AAAG,YAAI,IAAI;AAE1B,aAAO;IACT;AAVA,YAAA,YAAA;AAiBA,aAAgB,cAAc,KAAW;AACvC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,iEAAiE,OAAO,KAAK;;AAG/F,aAAO,OAAO,WAAW,KAAK,MAAM;IACtC;AANA,YAAA,gBAAA;AAgBA,aAAgB,mBACd,UACA,QACA,MAAc;AAEd,UAAI,MAAM,QAAQ,QAAQ,MAAM,MAAM;AACpC,cAAM,IAAI,MACR,mFAAmF,OAAO,WAAW;;AAGzG,UAAI,MAAM,QAAQ,MAAM,MAAM,MAAM;AAClC,cAAM,IAAI,MACR,iFAAiF,OAAO,SAAS;;AAIrG,aAAO,OAAO,SAAS,OAAO,SAAS,OAAO,EAAE,CAACA,WAAU,SAAS,QAAQA,MAAK,KAAK,CAAC;IACzF;AAjBA,YAAA,qBAAA;AAyBA,aAAgB,QAAQ,KAAW;AACjC,UAAI,MAAM;AACV,UAAIC,KAAI;AACR,YAAM,IAAI,IAAI;AAEd,UAAI,IAAI,UAAU,GAAG,CAAC,MAAM;AAAM,QAAAA,KAAI;AAEtC,aAAOA,KAAI,GAAGA,MAAK,GAAG;AACpB,cAAM,OAAO,SAAS,IAAI,OAAOA,IAAG,CAAC,GAAG,EAAE;AAC1C,eAAO,OAAO,aAAa,IAAI;;AAGjC,aAAO;IACT;AAbA,YAAA,UAAA;AAsBA,aAAgB,SAAS,aAAmB;AAC1C,YAAM,MAAM,OAAO,KAAK,aAAa,MAAM;AAE3C,aAAO,KAAK,UAAU,IAAI,SAAS,KAAK,CAAC,EAAE,QAAQ,YAAY,EAAE;IACnE;AAJA,YAAA,WAAA;AAaA,aAAgB,UAAU,aAAmB;AAC3C,UAAI,MAAM;AACV,eAASA,KAAI,GAAGA,KAAI,YAAY,QAAQA,MAAK;AAC3C,cAAM,OAAO,YAAY,WAAWA,EAAC;AACrC,cAAMC,KAAI,KAAK,SAAS,EAAE;AAC1B,eAAOA,GAAE,SAAS,IAAI,IAAIA,OAAMA;;AAGlC,aAAO,KAAK;IACd;AATA,YAAA,YAAA;AAsBA,aAAgB,QAAQ,QAAkC,KAAa,YAAoB;AACzF,UAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,cAAM,IAAI,MAAM,+DAA+D,OAAO,QAAQ;;AAEhG,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MACR,iEAAiE,OAAO,QAAQ;;AAIpF,YAAM,SAAS,CAAA;AAEf,eAASD,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACtC,YAAID,SAAQ,OAAOC,EAAC,EAAE,GAAG;AACzB,YAAI,eAAe,QAAQ,CAACD,QAAO;AACjC,UAAAA,SAAQ;mBACC,OAAOA,WAAU,UAAU;AACpC,gBAAM,IAAI,MAAM,kDAAkD,OAAOA,QAAO;;AAElF,eAAO,KAAKA,MAAK;;AAGnB,aAAO;IACT;AAvBA,YAAA,UAAA;AAgCA,aAAgB,YAAYA,QAAeG,SAAe;AACxD,UAAI,OAAOH,WAAU,YAAY,CAACA,OAAM,MAAM,kBAAkB;AAAG,eAAO;AAE1E,UAAI,OAAOG,YAAW,eAAeA,UAAS,KAAKH,OAAM,WAAW,IAAI,IAAIG;AAAQ,eAAO;AAE3F,aAAO;IACT;AANA,YAAA,cAAA;;;;;;;;;;;;AC1MA,QAAA,aAAA;AAMO,QAAM,oBAAoB,SAAU,OAAa;AACtD,UAAI,EAAC,GAAA,WAAA,aAAY,KAAK,GAAG;AACvB,cAAM,MAAM,oEAAoE;AAChF,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,oBAAiB;AAWvB,QAAM,iBAAiB,SAAU,OAAa;AACnD,UAAI,CAAC,OAAO,SAAS,KAAK,GAAG;AAC3B,cAAM,MAAM,mDAAmD;AAC/D,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,iBAAc;AAWpB,QAAM,gBAAgB,SAAU,OAAe;AACpD,UAAI,CAAC,MAAM,QAAQ,KAAK,GAAG;AACzB,cAAM,MAAM,0DAA0D;AACtE,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,gBAAa;AAWnB,QAAM,iBAAiB,SAAU,OAAa;AACnD,UAAI,OAAO,UAAU,UAAU;AAC7B,cAAM,MAAM,oDAAoD;AAChE,cAAM,IAAI,MAAM,GAAG;;IAEvB;AALa,YAAA,iBAAc;;;;;;;;;;;;ACvC3B,QAAA,YAAA;AACA,QAAA,aAAA;AAeO,QAAM,WAAW,SAAUC,IAAS;AACzC,UAAI,CAAC,OAAO,cAAcA,EAAC,KAAKA,KAAI,GAAG;AACrC,cAAM,IAAI,MAAM,qCAAqCA,IAAG;;AAE1D,aAAO,KAAKA,GAAE,SAAS,EAAE;IAC3B;AALa,YAAA,WAAQ;AAYd,QAAM,cAAc,SAAUA,IAAS;AAC5C,YAAM,OAAM,GAAA,QAAA,UAASA,EAAC;AACtB,aAAO,OAAO,MAAK,GAAA,WAAA,WAAU,IAAI,MAAM,CAAC,CAAC,GAAG,KAAK;IACnD;AAHa,YAAA,cAAW;AASjB,QAAM,QAAQ,SAAU,OAAa;AAC1C,aAAO,OAAO,YAAY,KAAK,EAAE,KAAK,CAAC;IACzC;AAFa,YAAA,QAAK;AAYlB,QAAM,YAAY,SAAU,KAAaC,SAAgB,OAAc;AACrE,YAAM,OAAM,GAAA,QAAA,OAAMA,OAAM;AACxB,UAAI,OAAO;AACT,YAAI,IAAI,SAASA,SAAQ;AACvB,cAAI,KAAK,GAAG;AACZ,iBAAO;;AAET,eAAO,IAAI,MAAM,GAAGA,OAAM;aACrB;AACL,YAAI,IAAI,SAASA,SAAQ;AACvB,cAAI,KAAK,KAAKA,UAAS,IAAI,MAAM;AACjC,iBAAO;;AAET,eAAO,IAAI,MAAM,CAACA,OAAM;;IAE5B;AASO,QAAM,gBAAgB,SAAU,KAAaA,SAAc;AAChE,OAAA,GAAA,UAAA,gBAAe,GAAG;AAClB,aAAO,UAAU,KAAKA,SAAQ,KAAK;IACrC;AAHa,YAAA,gBAAa;AAYnB,QAAM,iBAAiB,SAAU,KAAaA,SAAc;AACjE,OAAA,GAAA,UAAA,gBAAe,GAAG;AAClB,aAAO,UAAU,KAAKA,SAAQ,IAAI;IACpC;AAHa,YAAA,iBAAc;AAU3B,QAAM,aAAa,SAAU,GAAM;AACjC,UAAI,QAAQ,EAAE,CAAC;AACf,aAAO,EAAE,SAAS,KAAK,MAAM,SAAQ,MAAO,KAAK;AAC/C,YAAI,EAAE,MAAM,CAAC;AACb,gBAAQ,EAAE,CAAC;;AAEb,aAAO;IACT;AAOO,QAAM,cAAc,SAAU,GAAS;AAC5C,OAAA,GAAA,UAAA,gBAAe,CAAC;AAChB,aAAO,WAAW,CAAC;IACrB;AAHa,YAAA,cAAW;AAUjB,QAAM,aAAa,SAAU,GAAW;AAC7C,OAAA,GAAA,UAAA,eAAc,CAAC;AACf,aAAO,WAAW,CAAC;IACrB;AAHa,YAAA,aAAU;AAUhB,QAAM,iBAAiB,SAAU,GAAS;AAC/C,OAAA,GAAA,UAAA,mBAAkB,CAAC;AACnB,WAAI,GAAA,WAAA,gBAAe,CAAC;AACpB,aAAQ,OAAO,WAAW,CAAC;IAC7B;AAJa,YAAA,iBAAc;AAwBpB,QAAM,WAAW,SAAU,GAAqB;AACrD,UAAI,MAAM,QAAQ,MAAM,QAAW;AACjC,eAAO,OAAO,YAAY,CAAC;;AAG7B,UAAI,OAAO,SAAS,CAAC,GAAG;AACtB,eAAO,OAAO,KAAK,CAAC;;AAGtB,UAAI,MAAM,QAAQ,CAAC,KAAK,aAAa,YAAY;AAC/C,eAAO,OAAO,KAAK,CAAe;;AAGpC,UAAI,OAAO,MAAM,UAAU;AACzB,YAAI,EAAC,GAAA,WAAA,aAAY,CAAC,GAAG;AACnB,gBAAM,IAAI,MACR,8GAA8G,GAAG;;AAGrH,eAAO,OAAO,MAAK,GAAA,WAAA,YAAU,GAAA,WAAA,gBAAe,CAAC,CAAC,GAAG,KAAK;;AAGxD,UAAI,OAAO,MAAM,UAAU;AACzB,gBAAO,GAAA,QAAA,aAAY,CAAC;;AAGtB,UAAI,OAAO,MAAM,UAAU;AACzB,YAAI,IAAI,OAAO,CAAC,GAAG;AACjB,gBAAM,IAAI,MAAM,oDAAoD,GAAG;;AAEzE,YAAIC,KAAI,EAAE,SAAS,EAAE;AACrB,YAAIA,GAAE,SAAS;AAAG,UAAAA,KAAI,MAAMA;AAC5B,eAAO,OAAO,KAAKA,IAAG,KAAK;;AAG7B,UAAI,EAAE,SAAS;AAEb,eAAO,OAAO,KAAK,EAAE,QAAO,CAAE;;AAGhC,UAAI,EAAE,UAAU;AACd,eAAO,OAAO,KAAK,EAAE,SAAQ,CAAE;;AAGjC,YAAM,IAAI,MAAM,cAAc;IAChC;AA7Ca,YAAA,WAAQ;AAmDd,QAAM,cAAc,SAAU,KAAW;AAC9C,aAAM,GAAA,QAAA,UAAS,GAAG;AAClB,aAAO,OAAO,IAAI,SAAS,KAAK;IAClC;AAHa,YAAA,cAAW;AAQxB,aAAgBC,gBAAe,KAAW;AACxC,YAAM,OAAM,GAAA,QAAA,aAAY,GAAG;AAC3B,UAAI,QAAQ,MAAM;AAChB,eAAO,OAAO,CAAC;;AAEjB,aAAO,OAAO,GAAG;IACnB;AANA,YAAA,iBAAAA;AAWA,aAAgBC,gBAAe,KAAW;AACxC,cAAO,GAAA,QAAA,UAAS,OAAO,IAAI,SAAS,EAAE,CAAC;IACzC;AAFA,YAAA,iBAAAA;AASO,QAAM,cAAc,SAAU,KAAW;AAC9C,YAAM,MAAM,OAAOD,gBAAe,GAAG,CAAC;AACtC,UAAI,CAAC,OAAO,cAAc,GAAG;AAAG,cAAM,IAAI,MAAM,wBAAwB;AACxE,aAAO;IACT;AAJa,YAAA,cAAW;AAUjB,QAAME,cAAa,SAAU,KAAW;AAC7C,aAAO,OAAO,OAAO,KAAKF,gBAAe,GAAG,CAAC;IAC/C;AAFa,YAAA,aAAUE;AAQhB,QAAMC,cAAa,SAAU,KAAW;AAC7C,aAAOF,gBAAe,OAAO,QAAQ,KAAK,GAAG,CAAC;IAChD;AAFa,YAAA,aAAUE;AAOhB,QAAMC,gBAAe,SAAU,KAAW;AAC/C,UAAI,OAAO,QAAQ,UAAU;AAC3B,eAAO;;AAGT,cAAO,GAAA,WAAA,eAAc,GAAG,IAAI,MAAM,OAAO;IAC3C;AANa,YAAA,eAAYA;AAgBzB,aAAgB,MAAM,QAAyB,YAAoB,IAAE;AACnE,YAAM,YAAY,OAAO,SAAS,MAAM,IAAI,OAAO,SAAS,KAAK,IAAI;AACrE,UAAI,UAAU,UAAU,WAAW;AACjC,eAAO;;AAET,aAAO,UAAU,MAAM,GAAG,SAAS,IAAI;IACzC;AANA,YAAA,QAAA;AAyBO,QAAM,SAAS,SAAU,KAAW;AACzC,YAAM,cAAc;AACpB,aAAM,GAAA,WAAA,gBAAe,GAAG;AACxB,UAAI,IAAI,SAAS,MAAM,GAAG;AACxB,cAAM,IAAI,MAAM,yDAAyD;;AAE3E,YAAM,YAAY,OAAO,KAAK,IAAI,QAAQ,aAAa,EAAE,GAAG,KAAK;AAEjE,aAAO,UAAU,SAAS,MAAM;IAClC;AATa,YAAA,SAAM;AAgBZ,QAAM,WAAW,SAAU,IAAO;AACvC,UAAI,OAAO,SAAS,EAAE,GAAG;AACvB,eAAO,KAAK,GAAG,SAAS,KAAK;iBACpB,cAAc,OAAO;AAC9B,cAAM,QAAQ,CAAA;AACd,iBAASP,KAAI,GAAGA,KAAI,GAAG,QAAQA,MAAK;AAClC,gBAAM,MAAK,GAAA,QAAA,UAAS,GAAGA,EAAC,CAAC,CAAC;;AAE5B,eAAO;;IAEX;AAVa,YAAA,WAAQ;AAyBd,QAAM,0BAA0B,SAAU,QAA6C;AAC5F,iBAAW,CAAC,GAAG,CAAC,KAAK,OAAO,QAAQ,MAAM,GAAG;AAC3C,YAAI,MAAM,UAAa,EAAE,SAAS,KAAK,EAAE,CAAC,MAAM,GAAG;AACjD,gBAAM,IAAI,MAAM,GAAG,2CAA2C,EAAE,SAAS,KAAK,GAAG;;;IAGvF;AANa,YAAA,0BAAuB;AAcpC,aAAgB,YAAY,KAAkC;AAC5D,UAAI,CAAC,MAAM,QAAQ,GAAG,GAAG;AACvB,eAAO,OAAO,KAAK,GAAG;;AAExB,aAAO,IAAI,IAAI,CAAC,MAAM,YAAY,CAAC,CAAC;IACtC;AALA,YAAA,cAAA;AAaA,aAAgB,YAAY,KAA+B;AACzD,UAAI,CAAC,MAAM,QAAQ,GAAG,GAAG;AACvB,eAAO,WAAW,KAAK,OAAO,CAAA,CAAE;;AAElC,aAAO,IAAI,IAAI,CAAC,MAAM,YAAY,CAAC,CAAC;IACtC;AALA,YAAA,cAAA;AAUO,QAAMQ,eAAc,CAAC,QAAe;AACzC,aAAO,OAAO,IAAI,SAAS,EAAE;IAC/B;AAFa,YAAA,cAAWA;AASxB,aAAgB,uBAAuBC,QAAa;AAClD,cAAO,GAAA,QAAA,aAAYL,gBAAeK,MAAK,CAAC;IAC1C;AAFA,YAAA,yBAAA;AAIA,aAAgB,oBAAoBA,QAAa;AAC/C,cAAO,GAAA,QAAA,cAAY,GAAA,QAAA,aAAYA,MAAK,CAAC;IACvC;AAFA,YAAA,sBAAA;;;;;;;;;;;;ACrYA,QAAA,QAAA;AACA,QAAA,WAAA;AACA,QAAA,cAAA;AACA,QAAA,UAAA;AAEA,QAAA,UAAA;AASA,QAAA,cAAA;AACA,QAAA,YAAA;AACA,QAAA,aAAA;AAIA,QAAM,MAAM,OAAO,CAAC;AAWpB,QAAa,UAAb,MAAoB;;;;;MAqClB,YAAY,QAAQ,KAAK,UAAU,KAAK,cAAc,YAAA,eAAe,WAAW,YAAA,gBAAc;AAC5F,aAAK,QAAQ;AACb,aAAK,UAAU;AACf,aAAK,cAAc;AACnB,aAAK,WAAW;AAEhB,aAAK,UAAS;MAChB;MAtCA,OAAO,gBAAgB,aAAwB;AAC7C,cAAM,EAAE,OAAO,SAAS,aAAa,SAAQ,IAAK;AAElD,eAAO,IAAI,QACT,UAAU,UAAY,GAAA,QAAA,iBAAe,GAAA,QAAA,UAAS,KAAK,CAAC,IAAI,QACxD,YAAY,UAAY,GAAA,QAAA,iBAAe,GAAA,QAAA,UAAS,OAAO,CAAC,IAAI,QAC5D,gBAAgB,UAAY,GAAA,QAAA,UAAS,WAAW,IAAI,QACpD,aAAa,UAAY,GAAA,QAAA,UAAS,QAAQ,IAAI,MAAS;MAE3D;MAEO,OAAO,yBAAyB,YAAkB;AACvD,cAAM,UAAS,GAAA,QAAA,aAAY,MAAA,IAAI,OAAO,WAAW,KAAK,UAAU,CAAC,CAAiB;AAElF,YAAI,CAAC,MAAM,QAAQ,MAAM,GAAG;AAC1B,gBAAM,IAAI,MAAM,iDAAiD;;AAGnE,eAAO,KAAK,gBAAgB,MAAM;MACpC;MAEO,OAAO,gBAAgB,QAAgB;AAC5C,cAAM,CAAC,OAAO,SAAS,aAAa,QAAQ,IAAI;AAEhD,eAAO,IAAI,SAAQ,GAAA,QAAA,gBAAe,KAAK,IAAG,GAAA,QAAA,gBAAe,OAAO,GAAG,aAAa,QAAQ;MAC1F;MAeQ,YAAS;AACf,YAAI,KAAK,QAAQ,KAAK;AACpB,gBAAM,IAAI,MAAM,iCAAiC;;AAEnD,YAAI,KAAK,UAAU,KAAK;AACtB,gBAAM,IAAI,MAAM,mCAAmC;;AAErD,YAAI,KAAK,YAAY,WAAW,IAAI;AAClC,gBAAM,IAAI,MAAM,sCAAsC;;AAExD,YAAI,KAAK,SAAS,WAAW,IAAI;AAC/B,gBAAM,IAAI,MAAM,mCAAmC;;MAEvD;;;;MAKA,MAAG;AACD,eAAO;WACL,GAAA,QAAA,wBAAuB,KAAK,KAAK;WACjC,GAAA,QAAA,wBAAuB,KAAK,OAAO;UACnC,KAAK;UACL,KAAK;;MAET;;;;MAKA,YAAS;AACP,eAAO,OAAO,KAAK,MAAA,IAAI,QAAO,GAAA,QAAA,aAAY,KAAK,IAAG,CAAE,CAAC,CAAC;MACxD;;;;MAKA,aAAU;AACR,eAAO,CAAC,KAAK,SAAS,OAAO,YAAA,cAAc;MAC7C;;;;;;MAOA,UAAO;AACL,eAAO,KAAK,YAAY,OAAO,KAAK,UAAU,OAAO,KAAK,SAAS,OAAO,YAAA,cAAc;MAC1F;;AA9FF,YAAA,UAAA;AAoGO,QAAM,iBAAiB,SAAU,YAAkB;AACxD,UAAI;AACF,SAAA,GAAA,UAAA,gBAAe,UAAU;eAClBC,IAAP;AACA,eAAO;;AAGT,aAAO,sBAAsB,KAAK,UAAU;IAC9C;AARa,YAAA,iBAAc;AAsBpB,QAAM,oBAAoB,SAC/B,YACA,gBAA2B;AAE3B,OAAA,GAAA,UAAA,mBAAkB,UAAU;AAC5B,YAAM,WAAU,GAAA,WAAA,gBAAe,UAAU,EAAE,YAAW;AAEtD,UAAI,SAAS;AACb,UAAI,mBAAmB,QAAW;AAChC,cAAM,WAAU,GAAA,QAAA,iBAAe,GAAA,QAAA,UAAS,cAAc,CAAC;AACvD,iBAAS,QAAQ,SAAQ,IAAK;;AAGhC,YAAM,MAAM,OAAO,KAAK,SAAS,SAAS,MAAM;AAChD,YAAM,QAAO,GAAA,QAAA,aAAW,GAAA,SAAA,WAAU,GAAG,CAAC;AACtC,UAAI,MAAM;AAEV,eAASC,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AACvC,YAAI,SAAS,KAAKA,EAAC,GAAG,EAAE,KAAK,GAAG;AAC9B,iBAAO,QAAQA,EAAC,EAAE,YAAW;eACxB;AACL,iBAAO,QAAQA,EAAC;;;AAIpB,aAAO;IACT;AA1Ba,YAAA,oBAAiB;AAiCvB,QAAM,yBAAyB,SACpC,YACA,gBAA2B;AAE3B,cAAO,GAAA,QAAA,gBAAe,UAAU,MAAK,GAAA,QAAA,mBAAkB,YAAY,cAAc,MAAM;IACzF;AALa,YAAA,yBAAsB;AAY5B,QAAM,kBAAkB,SAAU,MAAc,OAAa;AAClE,OAAA,GAAA,UAAA,gBAAe,IAAI;AACnB,OAAA,GAAA,UAAA,gBAAe,KAAK;AAEpB,WAAI,GAAA,QAAA,gBAAe,KAAK,MAAM,OAAO,CAAC,GAAG;AAGvC,eAAO,OAAO,MAAK,GAAA,SAAA,WAAU,MAAA,IAAI,QAAO,GAAA,QAAA,aAAY,CAAC,MAAM,IAAI,CAAQ,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG;;AAIvF,aAAO,OAAO,MAAK,GAAA,SAAA,WAAU,MAAA,IAAI,QAAO,GAAA,QAAA,aAAY,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,MAAM,GAAG;IACjF;AAZa,YAAA,kBAAe;AAoBrB,QAAM,mBAAmB,SAAU,MAAc,MAAc,UAAgB;AACpF,OAAA,GAAA,UAAA,gBAAe,IAAI;AACnB,OAAA,GAAA,UAAA,gBAAe,IAAI;AACnB,OAAA,GAAA,UAAA,gBAAe,QAAQ;AAEvB,UAAI,KAAK,WAAW,IAAI;AACtB,cAAM,IAAI,MAAM,kCAAkC;;AAEpD,UAAI,KAAK,WAAW,IAAI;AACtB,cAAM,IAAI,MAAM,kCAAkC;;AAGpD,YAAM,WAAU,GAAA,SAAA,WACd,OAAO,OAAO,CAAC,OAAO,KAAK,MAAM,KAAK,GAAG,MAAM,OAAM,GAAA,SAAA,WAAU,QAAQ,CAAC,CAAC,CAAC;AAG5E,cAAO,GAAA,QAAA,UAAS,OAAO,EAAE,MAAM,GAAG;IACpC;AAjBa,YAAA,mBAAgB;AAsBtB,QAAM,iBAAiB,SAAU,YAAkB;AACxD,aAAO,YAAA,UAAU,MAAM,kBAAkB,UAAU;IACrD;AAFa,YAAA,iBAAc;AAUpB,QAAM,gBAAgB,SAAU,WAAmB,WAAoB,OAAK;AACjF,OAAA,GAAA,UAAA,gBAAe,SAAS;AACxB,UAAI,UAAU,WAAW,IAAI;AAG3B,YAAI;AACF,sBAAA,UAAU,gBAAgB,QAAQ,OAAO,OAAO,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;AAC9E,iBAAO;iBACAD,IAAP;AACA,iBAAO;;;AAIX,UAAI,CAAC,UAAU;AACb,eAAO;;AAGT,UAAI;AACF,oBAAA,UAAU,gBAAgB,QAAQ,SAAS;AAC3C,eAAO;eACAA,IAAP;AACA,eAAO;;IAEX;AAvBa,YAAA,gBAAa;AA+BnB,QAAM,eAAe,SAAU,QAAgB,WAAoB,OAAK;AAC7E,OAAA,GAAA,UAAA,gBAAe,MAAM;AACrB,UAAI,YAAY,OAAO,WAAW,IAAI;AACpC,iBAAS,OAAO,KAAK,YAAA,UAAU,gBAAgB,QAAQ,MAAM,EAAE,WAAW,KAAK,EAAE,MAAM,CAAC,CAAC;;AAE3F,UAAI,OAAO,WAAW,IAAI;AACxB,cAAM,IAAI,MAAM,oCAAoC;;AAGtD,aAAO,OAAO,MAAK,GAAA,SAAA,WAAU,MAAM,CAAC,EAAE,MAAM,GAAG;IACjD;AAVa,YAAA,eAAY;AAWZ,YAAA,kBAAkB,QAAA;AAMxB,QAAM,kBAAkB,SAAU,YAAkB;AACzD,OAAA,GAAA,UAAA,gBAAe,UAAU;AAEzB,aAAO,OAAO,KACZ,YAAA,UAAU,gBAAgB,eAAe,UAAU,EAAE,WAAW,KAAK,EAAE,MAAM,CAAC,CAAC;IAEnF;AANa,YAAA,kBAAe;AAYrB,QAAM,mBAAmB,SAAU,YAAkB;AAC1D,cAAO,GAAA,QAAA,kBAAgB,GAAA,QAAA,iBAAgB,UAAU,CAAC;IACpD;AAFa,YAAA,mBAAgB;AAOtB,QAAM,eAAe,SAAU,WAAiB;AACrD,OAAA,GAAA,UAAA,gBAAe,SAAS;AACxB,UAAI,UAAU,WAAW,IAAI;AAC3B,oBAAY,OAAO,KAAK,YAAA,UAAU,gBAAgB,QAAQ,SAAS,EAAE,WAAW,KAAK,EAAE,MAAM,CAAC,CAAC;;AAEjG,aAAO;IACT;AANa,YAAA,eAAY;AAWlB,QAAM,cAAc,WAAA;AACzB,YAAM,gBAAgB;AACtB,YAAM,QAAO,GAAA,QAAA,OAAM,aAAa;AAChC,cAAO,GAAA,QAAA,aAAY,IAAI;IACzB;AAJa,YAAA,cAAW;AASjB,QAAM,gBAAgB,SAAU,YAAkB;AACvD,UAAI;AACF,SAAA,GAAA,UAAA,gBAAe,UAAU;eAClBA,IAAP;AACA,eAAO;;AAGT,YAAM,YAAW,GAAA,QAAA,aAAW;AAC5B,aAAO,aAAa;IACtB;AATa,YAAA,gBAAa;AAW1B,aAAgB,oBAAoB,MAAuB;AACzD,YAAM,CAAC,OAAO,SAAS,aAAa,QAAQ,IAAI;AAChD,aAAO;QACL;QACA;SACA,GAAA,QAAA,aAAY,WAAW,EAAE,WAAW,IAAI,YAAA,gBAAgB;SACxD,GAAA,QAAA,aAAY,QAAQ,EAAE,WAAW,IAAI,YAAA,iBAAiB;;IAE1D;AARA,YAAA,sBAAA;AAUA,QAAM,gBAAgB,IAAI,WAAW,CAAC;AACtC,aAAgB,kBAAkB,MAAuB;AACvD,YAAM,CAAC,OAAO,SAAS,aAAa,QAAQ,IAAI;AAChD,aAAO;QACL;QACA;SACA,GAAA,QAAA,aAAY,WAAW,EAAE,OAAO,YAAA,aAAa,IAAI,gBAAgB;SACjE,GAAA,QAAA,aAAY,QAAQ,EAAE,OAAO,YAAA,cAAc,IAAI,gBAAgB;;IAEnE;AARA,YAAA,oBAAA;AAeA,aAAgB,iBAAiB,MAAyB,cAAc,MAAI;AAC1E,YAAM,cAAc,cAAc,oBAAoB,IAAI,IAAI;AAC9D,cAAO,GAAA,QAAA,aAAY,MAAA,IAAI,OAAO,WAAW,CAAC;IAC5C;AAHA,YAAA,mBAAA;;;;;;;;;;;;ACtXA,QAAA,YAAA;AAOA,QAAA,UAAA;AAKA,QAAa,UAAb,MAAoB;MAGlB,YAAY,KAAW;AACrB,YAAI,IAAI,WAAW,IAAI;AACrB,gBAAM,IAAI,MAAM,wBAAwB;;AAE1C,aAAK,MAAM;MACb;;;;MAKA,OAAO,OAAI;AACT,eAAO,IAAI,SAAQ,GAAA,QAAA,OAAM,EAAE,CAAC;MAC9B;;;;;MAMA,OAAO,WAAW,KAAW;AAC3B,YAAI,EAAC,GAAA,UAAA,gBAAe,GAAG,GAAG;AACxB,gBAAM,IAAI,MAAM,iBAAiB;;AAEnC,eAAO,IAAI,SAAQ,GAAA,QAAA,UAAS,GAAG,CAAC;MAClC;;;;;MAMA,OAAO,cAAc,QAAc;AACjC,YAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,gBAAM,IAAI,MAAM,6BAA6B;;AAE/C,cAAM,OAAM,GAAA,UAAA,cAAa,MAAM;AAC/B,eAAO,IAAI,QAAQ,GAAG;MACxB;;;;;MAMA,OAAO,eAAe,YAAkB;AACtC,YAAI,CAAC,OAAO,SAAS,UAAU,GAAG;AAChC,gBAAM,IAAI,MAAM,8BAA8B;;AAEhD,cAAM,OAAM,GAAA,UAAA,kBAAiB,UAAU;AACvC,eAAO,IAAI,QAAQ,GAAG;MACxB;;;;;;MAOA,OAAO,SAAS,MAAe,OAAa;AAC1C,YAAI,OAAO,UAAU,UAAU;AAC7B,gBAAM,IAAI,MAAM,+BAA+B;;AAEjD,eAAO,IAAI,SAAQ,GAAA,UAAA,iBAAgB,KAAK,MAAK,GAAA,QAAA,gBAAe,KAAK,CAAC,CAAC;MACrE;;;;;;;MAQA,OAAO,UAAU,MAAe,MAAc,UAAgB;AAC5D,YAAI,CAAC,OAAO,SAAS,IAAI,GAAG;AAC1B,gBAAM,IAAI,MAAM,8BAA8B;;AAEhD,YAAI,CAAC,OAAO,SAAS,QAAQ,GAAG;AAC9B,gBAAM,IAAI,MAAM,kCAAkC;;AAEpD,eAAO,IAAI,SAAQ,GAAA,UAAA,kBAAiB,KAAK,KAAK,MAAM,QAAQ,CAAC;MAC/D;;;;MAKA,OAAO,SAAgB;AACrB,eAAO,KAAK,IAAI,OAAO,QAAQ,GAAG;MACpC;;;;MAKA,SAAM;AACJ,eAAO,KAAK,OAAO,QAAQ,KAAI,CAAE;MACnC;;;;;MAMA,8BAA2B;AACzB,cAAM,WAAU,GAAA,QAAA,gBAAe,KAAK,GAAG;AACvC,cAAM,WAAW,OAAO,CAAC;AACzB,cAAM,WAAW,OAAO,QAAQ;AAChC,eAAO,WAAW,YAAY,WAAW;MAC3C;;;;MAKA,WAAQ;AACN,eAAO,OAAO,KAAK,IAAI,SAAS,KAAK;MACvC;;;;MAKA,WAAQ;AACN,eAAO,OAAO,KAAK,KAAK,GAAG;MAC7B;;AArHF,YAAA,UAAA;;;;;;;;;;;;ACZA,QAAA,UAAA;AACA,QAAA,aAAA;AAsDA,QAAY;AAAZ,KAAA,SAAYE,aAAU;AACpB,MAAAA,YAAAA,YAAA,QAAA,IAAA,CAAA,IAAA;AACA,MAAAA,YAAAA,YAAA,QAAA,IAAA,CAAA,IAAA;AACA,MAAAA,YAAAA,YAAA,QAAA,IAAA,CAAA,IAAA;AACA,MAAAA,YAAAA,YAAA,mBAAA,IAAA,CAAA,IAAA;IACF,GALY,aAAA,QAAA,eAAA,QAAA,aAAU,CAAA,EAAA;AA0BtB,aAAgB,OACd,OACA,YAAa;AAEb,UAAI,UAAU,MAAM;AAClB,eAAO;;AAET,UAAI,UAAU,QAAW;AACvB,eAAO;;AAGT,UAAI,OAAO,UAAU,YAAY,EAAC,GAAA,WAAA,aAAY,KAAK,GAAG;AACpD,cAAM,IAAI,MAAM,sDAAsD,OAAO;iBACpE,OAAO,UAAU,YAAY,CAAC,OAAO,cAAc,KAAK,GAAG;AACpE,cAAM,IAAI,MACR,6FAA6F;;AAIjG,YAAM,UAAS,GAAA,QAAA,UAAS,KAAK;AAE7B,cAAQ,YAAY;QAClB,KAAK,WAAW;AACd,iBAAO;QACT,KAAK,WAAW;AACd,kBAAO,GAAA,QAAA,gBAAe,MAAM;QAC9B,KAAK,WAAW,QAAQ;AACtB,gBAAM,UAAS,GAAA,QAAA,gBAAe,MAAM;AACpC,cAAI,SAAS,OAAO,OAAO,gBAAgB,GAAG;AAC5C,kBAAM,IAAI,MACR,8FAA8F;;AAGlG,iBAAO,OAAO,MAAM;;QAEtB,KAAK,WAAW;AACd,kBAAO,GAAA,QAAA,aAAY,MAAM;QAC3B;AACE,gBAAM,IAAI,MAAM,oBAAoB;;IAE1C;AAxCA,YAAA,SAAA;;;;;;;;;;;;ACjFA,QAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,UAAA;AA+BA,QAAa,aAAb,MAAuB;;;;;;MAMrB,YACkB,OACA,gBACA,SAIA,QAAc;AANd,aAAA,QAAA;AACA,aAAA,iBAAA;AACA,aAAA,UAAA;AAIA,aAAA,SAAA;MACf;MAEI,OAAO,mBAAmB,gBAA8B;AAC7D,cAAM,EACJ,OAAO,WACP,gBAAgB,oBAChB,SAAS,aACT,QAAQ,WAAU,IAChB;AACJ,cAAM,SAAQ,GAAA,QAAA,QAAO,WAAW,QAAA,WAAW,MAAM;AACjD,cAAM,kBAAiB,GAAA,QAAA,QAAO,oBAAoB,QAAA,WAAW,MAAM;AACnE,cAAM,UAAU,IAAI,UAAA,SAAQ,GAAA,QAAA,QAAO,aAAa,QAAA,WAAW,MAAM,CAAC;AAClE,cAAM,UAAS,GAAA,QAAA,QAAO,YAAY,QAAA,WAAW,MAAM;AAEnD,eAAO,IAAI,WAAW,OAAO,gBAAgB,SAAS,MAAM;MAC9D;MAEO,OAAO,gBAAgB,iBAAiC;AAC7D,YAAI,gBAAgB,WAAW,GAAG;AAChC,gBAAM,MAAM,oDAAoD,gBAAgB,QAAQ;;AAE1F,cAAM,CAAC,OAAO,gBAAgB,SAAS,MAAM,IAAI;AACjD,eAAO,WAAW,mBAAmB,EAAE,OAAO,gBAAgB,SAAS,OAAM,CAAE;MACjF;;;;;;MAOO,OAAO,cAAc,YAAuC;AACjE,cAAM,EAAE,OAAO,gBAAgB,SAAS,OAAM,IAAK;AACnD,cAAM,eACJ,GAAA,QAAA,QAAO,OAAO,QAAA,WAAW,MAAM,MAAM,OAAO,CAAC,IACzC,OAAO,MAAM,CAAC,KACd,GAAA,QAAA,QAAO,OAAO,QAAA,WAAW,MAAM;AACrC,cAAM,wBACJ,GAAA,QAAA,QAAO,gBAAgB,QAAA,WAAW,MAAM,MAAM,OAAO,CAAC,IAClD,OAAO,MAAM,CAAC,KACd,GAAA,QAAA,QAAO,gBAAgB,QAAA,WAAW,MAAM;AAC9C,YAAI;AACJ,YAAI,mBAAmB,UAAA,SAAS;AAC9B,0BAA0B,QAAS;eAC9B;AACL,2BAAgB,GAAA,QAAA,QAAO,SAAS,QAAA,WAAW,MAAM;;AAEnD,cAAM,gBACJ,GAAA,QAAA,QAAO,QAAQ,QAAA,WAAW,MAAM,MAAM,OAAO,CAAC,IAC1C,OAAO,MAAM,CAAC,KACd,GAAA,QAAA,QAAO,QAAQ,QAAA,WAAW,MAAM;AAEtC,eAAO,CAAC,aAAa,sBAAsB,eAAe,YAAY;MACxE;MAEA,MAAG;AACD,eAAO,WAAW,cAAc,IAAI;MACtC;MAEA,UAAO;AACL,eAAO;UACL,OAAO,KAAK;UACZ,gBAAgB,KAAK;UACrB,SAAS,KAAK,QAAQ;UACtB,QAAQ,KAAK;;MAEjB;MAEA,SAAM;AACJ,eAAO;UACL,QAAO,GAAA,QAAA,aAAY,KAAK,KAAK;UAC7B,iBAAgB,GAAA,QAAA,aAAY,KAAK,cAAc;UAC/C,SAAS,OAAO,KAAK,QAAQ,IAAI,SAAS,KAAK;UAC/C,SAAQ,GAAA,QAAA,aAAY,KAAK,MAAM;;MAEnC;;AAxFF,YAAA,aAAA;;;;;;;;;;;;ACjCA,QAAA,WAAA;AACA,QAAA,cAAA;AAEA,QAAA,UAAA;AACA,QAAA,cAAA;AACA,QAAA,YAAA;AAcA,aAAgBC,QAAO,SAAiB,YAAoB,SAAgB;AAC1E,YAAM,MAAM,YAAA,UAAU,KAAK,SAAS,UAAU;AAC9C,YAAM,MAAM,IAAI,kBAAiB;AACjC,YAAMC,KAAI,OAAO,KAAK,IAAI,MAAM,GAAG,EAAE,CAAC;AACtC,YAAM,IAAI,OAAO,KAAK,IAAI,MAAM,IAAI,EAAE,CAAC;AAEvC,YAAM,IACJ,YAAY,SACR,OAAO,IAAI,WAAY,EAAE,IACzB,OAAO,IAAI,WAAY,EAAE,IAAI,OAAO,OAAO,IAAI,OAAO,CAAC;AAE7D,aAAO,EAAE,GAAAA,IAAG,GAAG,EAAC;IAClB;AAZA,YAAA,SAAAD;AAcA,aAAS,qBAAqB,GAAW,SAAgB;AACvD,UAAI,MAAM,OAAO,CAAC,KAAK,MAAM,OAAO,CAAC;AAAG,eAAO;AAE/C,UAAI,YAAY,QAAW;AACzB,eAAO,IAAI,OAAO,EAAE;;AAEtB,aAAO,KAAK,UAAU,OAAO,CAAC,IAAI,OAAO,EAAE;IAC7C;AAEA,aAAS,mBAAmB,UAAgB;AAC1C,aAAO,aAAa,OAAO,CAAC,KAAK,aAAa,OAAO,CAAC;IACxD;AAOO,QAAM,YAAY,SACvB,SACA,GACAC,IACA,GACA,SAAgB;AAEhB,YAAM,YAAY,OAAO,OAAO,EAAC,GAAA,QAAA,eAAcA,IAAG,EAAE,IAAG,GAAA,QAAA,eAAc,GAAG,EAAE,CAAC,GAAG,EAAE;AAChF,YAAM,WAAW,qBAAqB,GAAG,OAAO;AAChD,UAAI,CAAC,mBAAmB,QAAQ,GAAG;AACjC,cAAM,IAAI,MAAM,2BAA2B;;AAG7C,YAAM,MAAM,YAAA,UAAU,UAAU,YAAY,SAAS,EAAE,eAAe,OAAO,QAAQ,CAAC;AACtF,YAAM,eAAe,IAAI,iBAAiB,OAAO;AACjD,aAAO,OAAO,KAAK,aAAa,WAAW,KAAK,EAAE,MAAM,CAAC,CAAC;IAC5D;AAhBa,YAAA,YAAS;AAuBf,QAAM,WAAW,SAAU,GAAWA,IAAW,GAAW,SAAgB;AACjF,YAAM,WAAW,qBAAqB,GAAG,OAAO;AAChD,UAAI,CAAC,mBAAmB,QAAQ,GAAG;AACjC,cAAM,IAAI,MAAM,2BAA2B;;AAI7C,cAAO,GAAA,QAAA,aAAY,OAAO,OAAO,EAAC,GAAA,QAAA,eAAcA,IAAG,EAAE,IAAG,GAAA,QAAA,eAAc,GAAG,EAAE,IAAG,GAAA,QAAA,UAAS,CAAC,CAAC,CAAC,CAAC;IAC7F;AARa,YAAA,WAAQ;AAed,QAAM,eAAe,SAAU,GAAWA,IAAW,GAAW,SAAgB;AACrF,YAAM,WAAW,qBAAqB,GAAG,OAAO;AAChD,UAAI,CAAC,mBAAmB,QAAQ,GAAG;AACjC,cAAM,IAAI,MAAM,2BAA2B;;AAG7C,UAAI,KAAK;AACT,UAAK,IAAI,OAAO,EAAE,KAAK,IAAI,OAAO,CAAC,MAAM,OAAO,CAAC,KAAM,MAAM,OAAO,CAAC,KAAK,MAAM,OAAO,EAAE,GAAG;AAC1F,aAAK,OAAO,KAAK,CAAC;AAClB,WAAG,CAAC,KAAK;;AAGX,cAAO,GAAA,QAAA,aAAY,OAAO,OAAO,EAAC,GAAA,QAAA,eAAcA,IAAG,EAAE,IAAG,GAAA,QAAA,eAAc,IAAI,EAAE,CAAC,CAAC,CAAC;IACjF;AAba,YAAA,eAAY;AAuBlB,QAAM,aAAa,SAAU,KAAW;AAC7C,YAAM,OAAc,GAAA,QAAA,UAAS,GAAG;AAEhC,UAAIA;AACJ,UAAI;AACJ,UAAI;AACJ,UAAI,IAAI,UAAU,IAAI;AACpB,QAAAA,KAAI,IAAI,MAAM,GAAG,EAAE;AACnB,YAAI,IAAI,MAAM,IAAI,EAAE;AACpB,aAAI,GAAA,QAAA,gBAAe,IAAI,MAAM,EAAE,CAAC;iBACvB,IAAI,WAAW,IAAI;AAE5B,QAAAA,KAAI,IAAI,MAAM,GAAG,EAAE;AACnB,YAAI,IAAI,MAAM,IAAI,EAAE;AACpB,YAAI,QAAO,GAAA,QAAA,aAAY,IAAI,MAAM,IAAI,EAAE,CAAC,KAAK,CAAC;AAC9C,UAAE,CAAC,KAAK;aACH;AACL,cAAM,IAAI,MAAM,0BAA0B;;AAI5C,UAAI,IAAI,IAAI;AACV,YAAI,IAAI,OAAO,EAAE;;AAGnB,aAAO;QACL;QACA,GAAAA;QACA;;IAEJ;AA9Ba,YAAA,aAAU;AAqChB,QAAM,mBAAmB,SAC9B,GACAA,IACA,GACA,mBAA4B,MAC5B,SAAgB;AAEhB,UAAIA,GAAE,WAAW,MAAM,EAAE,WAAW,IAAI;AACtC,eAAO;;AAGT,UAAI,CAAC,mBAAmB,qBAAqB,GAAG,OAAO,CAAC,GAAG;AACzD,eAAO;;AAGT,YAAM,WAAU,GAAA,QAAA,gBAAeA,EAAC;AAChC,YAAM,WAAU,GAAA,QAAA,gBAAe,CAAC;AAEhC,UACE,YAAY,OAAO,CAAC,KACpB,WAAW,YAAA,mBACX,YAAY,OAAO,CAAC,KACpB,WAAW,YAAA,iBACX;AACA,eAAO;;AAGT,UAAI,oBAAoB,WAAW,YAAA,uBAAuB;AACxD,eAAO;;AAGT,aAAO;IACT;AAhCa,YAAA,mBAAgB;AAwCtB,QAAMC,uBAAsB,SAAU,SAAe;AAC1D,OAAA,GAAA,UAAA,gBAAe,OAAO;AACtB,YAAM,SAAS,OAAO,KAAK;EAAmC,QAAQ,UAAU,OAAO;AACvF,aAAO,OAAO,MAAK,GAAA,SAAA,WAAU,OAAO,OAAO,CAAC,QAAQ,OAAO,CAAC,CAAC,CAAC;IAChE;AAJa,YAAA,sBAAmBA;;;;;AC7LhC;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,cAAc,QAAQ,eAAe,QAAQ,gBAAgB,QAAQ,iBAAiB,QAAQ,gBAAgB,QAAQ,iBAAiB,QAAQ,qBAAqB,QAAQ,iBAAiB,QAAQ,eAAe,QAAQ,2BAA2B,QAAQ,oBAAoB,QAAQ,WAAW,QAAQ,iBAAiB;AACvU,aAAS,eAAe,GAAG;AACvB,aAAO,EAAE,SAAS,CAAC,EAAE,SAAS;AAAA,IAClC;AACA,YAAQ,iBAAiB;AACzB,aAAS,SAAS,OAAO,OAAO;AAC5B,YAAM,SAAS,OAAO,CAAC,KAAK,OAAO,KAAK;AACxC,UAAI,SAAS,QAAQ;AACjB,cAAM,IAAI,MAAM,SAAS,6BAA6B,OAAO;AAAA,MACjE;AACA,aAAO,SAAS;AAAA,IACpB;AACA,YAAQ,WAAW;AACnB,aAAS,kBAAkB,OAAO,OAAO;AACrC,YAAM,MAAM,QAAQ,OAAO,KAAK,EAAE,SAAS,CAAC,IAAI;AAChD,UAAI,IAAI,SAAS,OAAO;AACpB,cAAM,IAAI,MAAM,2BAA2B;AAAA,MAC/C,OACK;AACD,eAAO,MAAM,IAAI,SAAS,OAAO,GAAG;AAAA,MACxC;AAAA,IACJ;AACA,YAAQ,oBAAoB;AAC5B,aAAS,yBAAyB,QAAQ;AACtC,UAAI,OAAO,WAAW,UAAU;AAC5B,YAAI,OAAO,WAAW,GAAG;AACrB,gBAAM,IAAI,MAAM,kBAAkB;AAAA,QACtC;AACA,eAAO;AAAA,MACX,OACK;AACD,YAAI,SAAS,GAAG;AACZ,gBAAM,IAAI,MAAM,kBAAkB;AAAA,QACtC;AACA,eAAO,OAAO,SAAS,CAAC;AAAA,MAC5B;AAAA,IACJ;AACA,YAAQ,2BAA2B;AAGnC,aAAS,aAAa,OAAO;AACzB,UAAI,SAAS,GAAG;AACZ,eAAO;AAAA,MACX;AACA,cAAQ,QAAQ,OAAO,CAAC,GAAG,SAAS,CAAC,EAAE;AAAA,IAC3C;AACA,YAAQ,eAAe;AAIvB,aAAS,eAAe,OAAO,YAAY,OAAO;AAC9C,YAAM,SAAS,OAAO,CAAC,KAAK,OAAO,KAAK;AACxC,UAAI,aAAa,QAAQ,QAAQ;AAC7B,cAAM,IAAI,MAAM,qBAAqB;AAAA,MACzC;AACA,UAAIC,KAAI,SAAS,OAAO,UAAU;AAClC,YAAM,OAAOA,KAAI;AACjB,aAAO;AAAA,QACH,CAAC,OAAO,QAAQ,IAAI;AAChB,iBAAO;AAAA,YACH,OAAO;AACH,kBAAIA,KAAI,MAAM;AACV,sBAAMC,SAAQD;AACd,gBAAAA;AACA,uBAAO,EAAE,MAAM,OAAO,OAAAC,OAAM;AAAA,cAChC,OACK;AACD,uBAAO,EAAE,MAAM,MAAM,OAAO,OAAU;AAAA,cAC1C;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,iBAAiB;AAIzB,aAAS,mBAAmB,OAAO,YAAY,OAAO;AAClD,YAAM,SAAS,OAAO,CAAC,KAAK,OAAO,KAAK;AACxC,UAAI,aAAa,QAAQ,QAAQ;AAC7B,cAAM,IAAI,MAAM,qBAAqB;AAAA,MACzC;AACA,UAAI,SAAS,SAAS,OAAO,OAAO,UAAU,CAAC;AAC/C,YAAM,WAAW,CAAC;AAClB,eAASD,KAAI,GAAGA,KAAI,OAAOA,MAAK;AAC5B,iBAAS,KAAK,QAAQ;AAAA,MAC1B;AACA,aAAO;AAAA,IACX;AACA,YAAQ,qBAAqB;AAC7B,QAAM,qBAAqB;AAC3B,aAAS,eAAe,QAAQ;AAC5B,UAAI;AACJ,UAAI,OAAO,WAAW,UAAU;AAC5B,YAAI,CAAC,OAAO,QAAQ;AAChB,gBAAM,IAAI,MAAM,kBAAkB;AAAA,QACtC;AACA,oBAAY;AAAA,MAChB,OACK;AACD,YAAI,SAAS,GAAG;AACZ,gBAAM,IAAI,MAAM,kBAAkB;AAAA,QACtC;AACA,oBAAY,OAAO,SAAS,CAAC;AAAA,MACjC;AACA,UAAIA,KAAI;AACR,YAAM,OAAO,MAAM;AACf,YAAIA,OAAM,UAAU,QAAQ;AACxB,iBAAO,EAAE,MAAM,MAAM,OAAO,OAAU;AAAA,QAC1C;AACA,cAAM,MAAM,OAAO,UAAUA,EAAC,CAAC;AAC/B,QAAAA;AACA,eAAO,EAAE,MAAM,OAAO,OAAO,IAAI;AAAA,MACrC;AACA,aAAO;AAAA,QACH,CAAC,OAAO,QAAQ,IAAI;AAChB,iBAAO,EAAE,KAAK;AAAA,QAClB;AAAA,QACA,qBAAqB;AACjB,iBAAO,UAAU,SAASA;AAAA,QAC9B;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,iBAAiB;AACzB,aAAS,cAAc,QAAQ;AAC3B,UAAI;AACJ,UAAI,OAAO,WAAW,UAAU;AAC5B,YAAI,CAAC,OAAO,QAAQ;AAChB,gBAAM,IAAI,MAAM,kBAAkB;AAAA,QACtC;AACA,oBAAY;AAAA,MAChB,OACK;AACD,YAAI,SAAS,GAAG;AACZ,gBAAM,IAAI,MAAM,kBAAkB;AAAA,QACtC;AACA,oBAAY,OAAO,SAAS,CAAC;AAAA,MACjC;AACA,YAAM,OAAO,CAAC;AACd,eAASA,KAAI,GAAGA,KAAI,UAAU,QAAQA,MAAK;AACvC,aAAK,KAAK,OAAO,UAAUA,EAAC,CAAC,CAAC;AAAA,MAClC;AACA,aAAO;AAAA,IACX;AACA,YAAQ,gBAAgB;AAMxB,aAAS,eAAe,UAAU;AAC9B,aAAO,OAAO,SAAS,OAAO,CAAC,KAAK,WAAW,MAAM,OAAO,SAAS,CAAC,EAAE,MAAM,CAAC,GAAG,KAAK,CAAC;AAAA,IAC5F;AACA,YAAQ,iBAAiB;AACzB,aAAS,cAAc,QAAQ;AAC3B,aAAO,SAAS,OAAO,CAAC;AAAA,IAC5B;AACA,YAAQ,gBAAgB;AACxB,aAAS,aAAa,QAAQ;AAC1B,aAAO,SAAS,OAAO,CAAC;AAAA,IAC5B;AACA,YAAQ,eAAe;AACvB,aAAS,YAAY,QAAQ,YAAY;AACrC,aAAO,SAAS,OAAO,CAAC,IAAI,OAAO,UAAU;AAAA,IACjD;AACA,YAAQ,cAAc;AAAA;AAAA;;;;;;;;;;ACxKtB,QAAA,eAAA;AACA,QAAA,aAAA;AAGA,aAAS,aAAa,MAAgB,YAAoBE,QAAe,MAAa;AACpF,UAAI,OAAO,KAAK,iBAAiB;AAAY,eAAO,KAAK,aAAa,YAAYA,QAAO,IAAI;AAC7F,YAAM,OAAO,OAAO,EAAE;AACtB,YAAM,WAAW,OAAO,UAAU;AAClC,YAAM,KAAK,OAAQA,UAAS,OAAQ,QAAQ;AAC5C,YAAM,KAAK,OAAOA,SAAQ,QAAQ;AAClC,YAAM,IAAI,OAAO,IAAI;AACrB,YAAM,IAAI,OAAO,IAAI;AACrB,WAAK,UAAU,aAAa,GAAG,IAAI,IAAI;AACvC,WAAK,UAAU,aAAa,GAAG,IAAI,IAAI;IACzC;AAGA,QAAsB,OAAtB,cAAsD,WAAA,KAAO;MAc3D,YACW,UACF,WACE,WACA,MAAa;AAEtB,cAAK;AALI,aAAA,WAAA;AACF,aAAA,YAAA;AACE,aAAA,YAAA;AACA,aAAA,OAAA;AATD,aAAA,WAAW;AACX,aAAA,SAAS;AACT,aAAA,MAAM;AACN,aAAA,YAAY;AASpB,aAAK,SAAS,IAAI,WAAW,QAAQ;AACrC,aAAK,QAAO,GAAA,WAAA,YAAW,KAAK,MAAM;MACpC;MACA,OAAO,MAAW;AAChB,qBAAA,QAAO,OAAO,IAAI;AAClB,cAAM,EAAE,MAAM,QAAQ,SAAQ,IAAK;AACnC,gBAAO,GAAA,WAAA,SAAQ,IAAI;AACnB,cAAM,MAAM,KAAK;AACjB,iBAAS,MAAM,GAAG,MAAM,OAAO;AAC7B,gBAAM,OAAO,KAAK,IAAI,WAAW,KAAK,KAAK,MAAM,GAAG;AAEpD,cAAI,SAAS,UAAU;AACrB,kBAAM,YAAW,GAAA,WAAA,YAAW,IAAI;AAChC,mBAAO,YAAY,MAAM,KAAK,OAAO;AAAU,mBAAK,QAAQ,UAAU,GAAG;AACzE;;AAEF,iBAAO,IAAI,KAAK,SAAS,KAAK,MAAM,IAAI,GAAG,KAAK,GAAG;AACnD,eAAK,OAAO;AACZ,iBAAO;AACP,cAAI,KAAK,QAAQ,UAAU;AACzB,iBAAK,QAAQ,MAAM,CAAC;AACpB,iBAAK,MAAM;;;AAGf,aAAK,UAAU,KAAK;AACpB,aAAK,WAAU;AACf,eAAO;MACT;MACA,WAAW,KAAe;AACxB,qBAAA,QAAO,OAAO,IAAI;AAClB,qBAAA,QAAO,OAAO,KAAK,IAAI;AACvB,aAAK,WAAW;AAIhB,cAAM,EAAE,QAAQ,MAAM,UAAU,KAAI,IAAK;AACzC,YAAI,EAAE,IAAG,IAAK;AAEd,eAAO,KAAK,IAAI;AAChB,aAAK,OAAO,SAAS,GAAG,EAAE,KAAK,CAAC;AAEhC,YAAI,KAAK,YAAY,WAAW,KAAK;AACnC,eAAK,QAAQ,MAAM,CAAC;AACpB,gBAAM;;AAGR,iBAASC,KAAI,KAAKA,KAAI,UAAUA;AAAK,iBAAOA,EAAC,IAAI;AAIjD,qBAAa,MAAM,WAAW,GAAG,OAAO,KAAK,SAAS,CAAC,GAAG,IAAI;AAC9D,aAAK,QAAQ,MAAM,CAAC;AACpB,cAAM,SAAQ,GAAA,WAAA,YAAW,GAAG;AAC5B,cAAM,MAAM,KAAK;AAEjB,YAAI,MAAM;AAAG,gBAAM,IAAI,MAAM,6CAA6C;AAC1E,cAAM,SAAS,MAAM;AACrB,cAAM,QAAQ,KAAK,IAAG;AACtB,YAAI,SAAS,MAAM;AAAQ,gBAAM,IAAI,MAAM,oCAAoC;AAC/E,iBAASA,KAAI,GAAGA,KAAI,QAAQA;AAAK,gBAAM,UAAU,IAAIA,IAAG,MAAMA,EAAC,GAAG,IAAI;MACxE;MACA,SAAM;AACJ,cAAM,EAAE,QAAQ,UAAS,IAAK;AAC9B,aAAK,WAAW,MAAM;AACtB,cAAM,MAAM,OAAO,MAAM,GAAG,SAAS;AACrC,aAAK,QAAO;AACZ,eAAO;MACT;MACA,WAAW,IAAM;AACf,eAAA,KAAO,IAAK,KAAK,YAAmB;AACpC,WAAG,IAAI,GAAG,KAAK,IAAG,CAAE;AACpB,cAAM,EAAE,UAAU,QAAQ,QAAAC,SAAQ,UAAU,WAAW,IAAG,IAAK;AAC/D,WAAG,SAASA;AACZ,WAAG,MAAM;AACT,WAAG,WAAW;AACd,WAAG,YAAY;AACf,YAAIA,UAAS;AAAU,aAAG,OAAO,IAAI,MAAM;AAC3C,eAAO;MACT;;AAnGF,YAAA,OAAA;;;;;;;;;;;;ACjBA,QAAA,aAAA;AACA,QAAA,aAAA;AAGA,QAAM,MAAM,CAAC,GAAW,GAAW,MAAe,IAAI,IAAM,CAAC,IAAI;AAEjE,QAAM,MAAM,CAAC,GAAW,GAAW,MAAe,IAAI,IAAM,IAAI,IAAM,IAAI;AAK1E,QAAM,WAAW,IAAI,YAAY;MAC/B;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MACpF;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;KACrF;AAID,QAAM,KAAK,IAAI,YAAY;MACzB;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;MAAY;KACrF;AAID,QAAM,WAAW,IAAI,YAAY,EAAE;AACnC,QAAM,SAAN,cAAqB,WAAA,KAAY;MAY/B,cAAA;AACE,cAAM,IAAI,IAAI,GAAG,KAAK;AAVxB,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;AACZ,aAAA,IAAI,GAAG,CAAC,IAAI;MAIZ;MACU,MAAG;AACX,cAAM,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC,IAAK;AACnC,eAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;MAChC;;MAEU,IACR,GAAW,GAAW,GAAW,GAAW,GAAW,GAAW,GAAW,GAAS;AAEtF,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;AACb,aAAK,IAAI,IAAI;MACf;MACU,QAAQ,MAAgB,QAAc;AAE9C,iBAASC,KAAI,GAAGA,KAAI,IAAIA,MAAK,UAAU;AAAG,mBAASA,EAAC,IAAI,KAAK,UAAU,QAAQ,KAAK;AACpF,iBAASA,KAAI,IAAIA,KAAI,IAAIA,MAAK;AAC5B,gBAAM,MAAM,SAASA,KAAI,EAAE;AAC3B,gBAAM,KAAK,SAASA,KAAI,CAAC;AACzB,gBAAM,MAAK,GAAA,WAAA,MAAK,KAAK,CAAC,KAAI,GAAA,WAAA,MAAK,KAAK,EAAE,IAAK,QAAQ;AACnD,gBAAM,MAAK,GAAA,WAAA,MAAK,IAAI,EAAE,KAAI,GAAA,WAAA,MAAK,IAAI,EAAE,IAAK,OAAO;AACjD,mBAASA,EAAC,IAAK,KAAK,SAASA,KAAI,CAAC,IAAI,KAAK,SAASA,KAAI,EAAE,IAAK;;AAGjE,YAAI,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAC,IAAK;AACjC,iBAASA,KAAI,GAAGA,KAAI,IAAIA,MAAK;AAC3B,gBAAM,UAAS,GAAA,WAAA,MAAK,GAAG,CAAC,KAAI,GAAA,WAAA,MAAK,GAAG,EAAE,KAAI,GAAA,WAAA,MAAK,GAAG,EAAE;AACpD,gBAAM,KAAM,IAAI,SAAS,IAAI,GAAG,GAAG,CAAC,IAAI,SAASA,EAAC,IAAI,SAASA,EAAC,IAAK;AACrE,gBAAM,UAAS,GAAA,WAAA,MAAK,GAAG,CAAC,KAAI,GAAA,WAAA,MAAK,GAAG,EAAE,KAAI,GAAA,WAAA,MAAK,GAAG,EAAE;AACpD,gBAAM,KAAM,SAAS,IAAI,GAAG,GAAG,CAAC,IAAK;AACrC,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAK,IAAI,KAAM;AACf,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAK,KAAK,KAAM;;AAGlB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,YAAK,IAAI,KAAK,IAAK;AACnB,aAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;MACjC;MACU,aAAU;AAClB,iBAAS,KAAK,CAAC;MACjB;MACA,UAAO;AACL,aAAK,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC/B,aAAK,OAAO,KAAK,CAAC;MACpB;;AAGF,QAAM,SAAN,cAAqB,OAAM;MASzB,cAAA;AACE,cAAK;AATP,aAAA,IAAI,aAAa;AACjB,aAAA,IAAI,YAAa;AACjB,aAAA,IAAI,YAAa;AACjB,aAAA,IAAI,aAAa;AACjB,aAAA,IAAI,aAAa;AACjB,aAAA,IAAI,aAAa;AACjB,aAAA,IAAI,aAAa;AACjB,aAAA,IAAI,aAAa;AAGf,aAAK,YAAY;MACnB;;AAOW,YAAA,UAAS,GAAA,WAAA,iBAAgB,MAAM,IAAI,OAAM,CAAE;AAC3C,YAAA,UAAS,GAAA,WAAA,iBAAgB,MAAM,IAAI,OAAM,CAAE;;;;;;;;;;;;AC7GxD,aAAgB,sBAAsB,KAAiB,SAAqB,QAAc;AACxF,UAAI,MAAM,IAAI;AACd,cAAQ,IAAI,MAAM,IAAI,MAAM;AAC5B,YAAM,OAAO;AACb,cAAQ,IAAI,MAAM,IAAI,MAAM;AAC5B,YAAM,OAAO;AACb,cAAQ,IAAI,MAAM,IAAI,MAAM;AAC5B,YAAM,OAAO;AACb,cAAQ,IAAI,MAAM,IAAI,MAAM;AAE5B,YAAM,IAAI;AACV,cAAQ,IAAI,MAAM,IAAI,MAAM;AAC5B,YAAM,OAAO;AACb,cAAQ,IAAI,MAAM,IAAI,MAAM;AAC5B,YAAM,OAAO;AACb,cAAQ,IAAI,MAAM,IAAI,MAAM;AAC5B,YAAM,OAAO;AACb,cAAQ,IAAI,MAAM,IAAI,MAAM;AAE5B,YAAM,IAAI;AACV,cAAQ,IAAI,MAAM,IAAI,MAAM;AAC5B,YAAM,OAAO;AACb,cAAQ,IAAI,MAAM,IAAI,MAAM;AAC5B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAE7B,YAAM,IAAI;AACV,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAE7B,YAAM,IAAI;AACV,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAE7B,YAAM,IAAI;AACV,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAE7B,YAAM,IAAI;AACV,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAE7B,YAAM,IAAI;AACV,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;AAC7B,YAAM,OAAO;AACb,cAAQ,KAAK,MAAM,IAAI,MAAM;IAC/B;AAxEA,YAAA,wBAAA;AAgFA,aAAgB,sBAAsB,SAAmB;AACvD,UAAI,MAAM;AACV,aAAO,QAAQ,CAAC,IAAI;AACpB,YAAM,OAAO;AACb,aAAO,QAAQ,CAAC,IAAI;AACpB,YAAM,OAAO;AACb,aAAO,QAAQ,CAAC,IAAI;AACpB,YAAM,OAAO;AACb,aAAO,QAAQ,CAAC,IAAI;AACpB,YAAM,KAAK;AAEX,YAAM;AACN,aAAO,QAAQ,CAAC,IAAI;AACpB,YAAM,OAAO;AACb,aAAO,QAAQ,CAAC,IAAI;AACpB,YAAM,OAAO;AACb,aAAO,QAAQ,CAAC,IAAI;AACpB,YAAM,OAAO;AACb,aAAO,QAAQ,CAAC,IAAI;AACpB,YAAM,KAAK;AAEX,YAAM;AACN,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,CAAC,IAAI;AACpB,YAAM,OAAO;AACb,aAAO,QAAQ,CAAC,IAAI;AACpB,YAAM,KAAK;AAEX,YAAM;AACN,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,KAAK;AAEX,YAAM;AACN,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,KAAK;AAEX,YAAM;AACN,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,KAAK;AAEX,YAAM;AACN,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,KAAK;AAEX,YAAM;AACN,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,OAAO;AACb,aAAO,QAAQ,EAAE,IAAI;AACrB,YAAM,KAAK;AAEX,aAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAEJ;AA3FA,YAAA,wBAAA;;;;;ACpGA,IAAAC,gBAAA;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,yBAAyB,QAAQ,yBAAyB;AAClE,QAAM,eAAe;AACrB,aAAS,uBAAuB,KAAK;AACjC,YAAM,UAAU,IAAI,WAAW,EAAE;AACjC,mBAAa,sBAAsB,KAAK,SAAS,CAAC;AAClD,aAAO;AAAA,IACX;AACA,YAAQ,yBAAyB;AACjC,aAAS,uBAAuB,SAAS;AACrC,aAAO,aAAa,sBAAsB,OAAO;AAAA,IACrD;AACA,YAAQ,yBAAyB;AAAA;AAAA;;;ACbjC;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,SAAS;AACjB,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,QAAM,WAAW,CAAC,GAAG,MAAM,SAAS,OAAO,OAAO,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,EAAE,OAAO;AAC/E,YAAQ,SAAS;AAAA,MACb;AAAA,MACA,qBAAqB,CAAC,GAAG,MAAM,OAAO,uBAAuB,SAAS,OAAO,uBAAuB,CAAC,GAAG,OAAO,uBAAuB,CAAC,CAAC,CAAC;AAAA,IAC7I;AAAA;AAAA;;;ACTA,IAAAC,iBAAA;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAAA;AAAA;;;ACD5D;AAAA;AAAA;AAAA;AAAA;AACA,QAAI,kBAAmB,WAAQ,QAAK,oBAAqB,OAAO,SAAU,SAASC,IAAG,GAAG,GAAG,IAAI;AAC5F,UAAI,OAAO;AAAW,aAAK;AAC3B,aAAO,eAAeA,IAAG,IAAI,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,MAAG,EAAE,CAAC;AAAA,IACvF,IAAM,SAASA,IAAG,GAAG,GAAG,IAAI;AACxB,UAAI,OAAO;AAAW,aAAK;AAC3B,MAAAA,GAAE,EAAE,IAAI,EAAE,CAAC;AAAA,IACf;AACA,QAAI,eAAgB,WAAQ,QAAK,gBAAiB,SAAS,GAAGC,UAAS;AACnE,eAAS,KAAK;AAAG,YAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAKA,UAAS,CAAC;AAAG,0BAAgBA,UAAS,GAAG,CAAC;AAAA,IAC5H;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,YAAY,QAAQ,SAAS;AACrC,QAAM,UAAU;AAChB,iBAAa,kBAAoB,OAAO;AACxC,iBAAa,iBAAmB,OAAO;AAIvC,YAAQ,SAAS,QAAQ;AAMzB,aAAS,UAAU,WAAW;AAC1B,cAAQ,SAAS;AAAA,IACrB;AACA,YAAQ,YAAY;AAAA;AAAA;;;AC5BpB;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,iBAAiB,QAAQ,WAAW,QAAQ,WAAW,QAAQ,UAAU,QAAQ,WAAW,QAAQ,WAAW,QAAQ,aAAa,QAAQ,OAAO;AAC3J,QAAM,WAAW;AACjB,QAAM,eAAe,KAAK;AAI1B,QAAM,OAAN,MAAW;AAAA,MACP,YAAY,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACxC,aAAK,KAAK;AACV,aAAK,KAAK;AACV,aAAK,KAAK;AACV,aAAK,KAAK;AACV,aAAK,KAAK;AACV,aAAK,KAAK;AACV,aAAK,KAAK;AACV,aAAK,KAAK;AAAA,MACd;AAAA,MACA,UAAU,MAAM;AACZ,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AACf,aAAK,KAAK,KAAK;AAAA,MACnB;AAAA,IACJ;AACA,YAAQ,OAAO;AAIf,QAAM,aAAN,cAAyB,KAAK;AAAA,MAC1B,YAAY,OAAO,QAAQ;AAEvB,cAAM,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAC/B,aAAK,QAAQ;AACb,aAAK,SAAS;AACd,YAAI,CAAC,OAAO;AACR,gBAAM,IAAI,MAAM,wBAAwB;AAAA,QAC5C;AACA,YAAI,CAAC,QAAQ;AACT,gBAAM,IAAI,MAAM,yBAAyB;AAAA,QAC7C;AAAA,MACJ;AAAA,MACA,IAAI,iBAAiB;AACjB,YAAI,KAAK,OAAO,MAAM;AAClB,gBAAM,UAAU,SAAS,OAAO,oBAAoB,KAAK,KAAK,gBAAgB,KAAK,MAAM,cAAc,CAAC;AAAA,QAC5G;AACA,eAAO;AAAA,MACX;AAAA,MACA,IAAI,OAAO;AACP,eAAO,SAAS,uBAAuB,KAAK,cAAc;AAAA,MAC9D;AAAA,MACA,SAAS;AACL,eAAO;AAAA,MACX;AAAA,MACA,IAAI,OAAO;AACP,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,IAAI,QAAQ;AACR,eAAO,KAAK;AAAA,MAChB;AAAA,IACJ;AACA,YAAQ,aAAa;AAIrB,QAAM,WAAN,cAAuB,KAAK;AAAA,MACxB,OAAO,SAAS,MAAM;AAClB,eAAO,KAAK,eAAe,SAAS,uBAAuB,IAAI,CAAC;AAAA,MACpE;AAAA;AAAA;AAAA;AAAA,MAIA,OAAO,eAAe,IAAI;AACtB,eAAO,IAAI,SAAS,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAE;AAAA,MAC9E;AAAA;AAAA;AAAA;AAAA,MAIA,OAAO,WAAW;AACd,eAAO,IAAI,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MAC9C;AAAA;AAAA;AAAA;AAAA,MAIA,OAAO,WAAW,QAAQ;AACtB,eAAO,IAAI,SAAS,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAAA,MACnD;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ;AACJ,eAAO,SAAS,eAAe,IAAI;AAAA,MACvC;AAAA,MACA,IAAI,iBAAiB;AACjB,eAAO;AAAA,MACX;AAAA,MACA,IAAI,OAAO;AACP,eAAO,SAAS,uBAAuB,IAAI;AAAA,MAC/C;AAAA,MACA,SAAS;AACL,eAAO;AAAA,MACX;AAAA,MACA,IAAI,OAAO;AACP,cAAM,MAAM,2BAA2B;AAAA,MAC3C;AAAA,MACA,IAAI,QAAQ;AACR,cAAM,MAAM,4BAA4B;AAAA,MAC5C;AAAA,MACA,aAAa,MAAM,OAAO,MAAM;AAE5B,aAAK,IAAI,KAAK,KAAK,MAAM,GAAG,IAAI,GAAG,KAAK;AAAA,MAC5C;AAAA,MACA,QAAQ,WAAW,aAAa,cAAc;AAC1C,cAAM,SAAS,KAAK,MAAM,cAAc,CAAC;AAEzC,YAAI,YAAY,GAAG;AACf,gBAAM,WAAY,cAAc,IAAK;AACrC,gBAAM,IAAI,SAAS,MAAM,MAAM;AAC/B,cAAI,cAAc,GAAG;AACjB,mBAAO,MAAQ,KAAK;AAAA,UACxB,OACK;AACD,mBAAO,QAAU,KAAK;AAAA,UAC1B;AAAA,QACJ,WAES,cAAc,GAAG;AACtB,iBAAO,SAAS,MAAM,MAAM,MAAM;AAAA,QACtC,WAES,cAAc,GAAG;AACtB,gBAAM,MAAM,SAAS,MAAM,MAAM;AACjC,gBAAM,OAAO,SAAS,MAAM,SAAS,CAAC;AACtC,cAAI,SAAS,GAAG;AACZ,mBAAO,QAAQ;AAAA,UACnB,WACS,SAAS,MAAM,QAAQ,MAAM,cAAc;AAEhD,mBAAO;AAAA,UACX,OACK;AACD,oBAAQ,QAAQ,MAAM,SAAS,KAAK;AAAA,UACxC;AAAA,QACJ,OAEK;AACD,gBAAM,MAAM,eAAe;AAAA,QAC/B;AAAA,MACJ;AAAA,MACA,cAAc,WAAW,aAAa;AAClC,cAAM,SAAS,KAAK,MAAM,cAAc,CAAC;AAEzC,YAAI,YAAY,GAAG;AACf,gBAAM,WAAY,cAAc,IAAK;AACrC,gBAAM,IAAI,SAAS,MAAM,MAAM;AAC/B,cAAI,cAAc,GAAG;AACjB,mBAAO,OAAO,MAAQ,KAAK,QAAS;AAAA,UACxC,OACK;AACD,mBAAO,OAAO,QAAU,KAAK,QAAS;AAAA,UAC1C;AAAA,QACJ,WAES,cAAc,GAAG;AACtB,iBAAO,OAAO,SAAS,MAAM,MAAM,MAAM,CAAC;AAAA,QAC9C,OAEK;AACD,gBAAM,SAAS,KAAK,KAAK,YAAY,CAAC;AACtC,cAAI,IAAI,OAAO,CAAC;AAChB,mBAASC,KAAI,GAAGA,KAAI,QAAQA,MAAK;AAC7B,iBAAK,OAAO,SAAS,MAAM,SAASA,EAAC,MAAM,CAAC,KAAK,OAAO,KAAKA,EAAC;AAAA,UAClE;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,QAAQ,WAAW,aAAaC,QAAO,cAAc;AACjD,cAAM,SAAS,KAAK,MAAM,cAAc,CAAC;AAEzC,YAAI,YAAY,GAAG;AACf,gBAAM,WAAY,cAAc,IAAK;AACrC,cAAI,IAAI,SAAS,MAAM,MAAM;AAC7B,cAAI,cAAc,GAAG;AACjB,iBAAK,EAAE,OAAQ;AACf,iBAAcA,UAAU;AAAA,UAC5B,OACK;AACD,iBAAK,EAAE,SAAU;AACjB,iBAAgBA,UAAU;AAAA,UAC9B;AACA,mBAAS,MAAM,QAAQ,CAAC;AAAA,QAC5B,WAES,cAAc,GAAG;AACtB,mBAAS,MAAM,QAAQA,MAAK;AAAA,QAChC,WAES,cAAc,GAAG;AACtB,cAAIA,WAAU,YAAY,cAAc;AACpC,qBAAS,MAAM,QAAQ,EAAE;AACzB,qBAAS,MAAM,SAAS,GAAG,EAAE;AAAA,UACjC,OACK;AACD,qBAAS,MAAM,QAAQA,SAAQ,UAAU;AACzC,qBAAS,MAAM,SAAS,GAAIA,SAAQ,eAAgB,UAAU;AAAA,UAClE;AAAA,QACJ,OAEK;AACD,gBAAM,MAAM,eAAe;AAAA,QAC/B;AAAA,MACJ;AAAA,MACA,cAAc,WAAW,aAAa,SAAS;AAC3C,cAAM,SAAS,KAAK,MAAM,cAAc,CAAC;AAEzC,YAAI,YAAY,GAAG;AACf,gBAAMA,SAAQ,OAAO,OAAO;AAC5B,gBAAM,WAAY,cAAc,IAAK;AACrC,cAAI,IAAI,SAAS,MAAM,MAAM;AAC7B,cAAI,cAAc,GAAG;AACjB,iBAAK,EAAE,OAAQ;AACf,iBAAcA,UAAU;AAAA,UAC5B,OACK;AACD,iBAAK,EAAE,SAAU;AACjB,iBAAgBA,UAAU;AAAA,UAC9B;AACA,mBAAS,MAAM,QAAQ,CAAC;AAAA,QAC5B,WAES,cAAc,GAAG;AACtB,mBAAS,MAAM,QAAQ,OAAO,OAAO,CAAC;AAAA,QAC1C,OAEK;AACD,gBAAM,OAAO,SAAS,KAAK,KAAK,YAAY,CAAC;AAC7C,mBAASD,KAAI,QAAQA,KAAI,MAAMA,MAAK;AAChC,qBAAS,MAAMA,IAAG,OAAO,UAAU,OAAO,UAAU,CAAC,CAAC;AACtD,sBAAU,WAAW,OAAO,EAAE;AAAA,UAClC;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,cAAc,WAAW,aAAaC,QAAO;AACzC,cAAM,SAAS,KAAK,MAAM,cAAc,CAAC;AAEzC,YAAI,YAAY,GAAG;AACf,gBAAM,WAAY,cAAc,IAAK;AACrC,yBAAe,MAAM,QAAQA,UAAS,QAAQ;AAAA,QAClD,WAES,cAAc,GAAG;AACtB,yBAAe,MAAM,QAAQA,MAAK;AAAA,QACtC,OAEK;AACD,gBAAM,OAAO,SAAS,KAAK,KAAK,YAAY,CAAC;AAC7C,mBAASD,KAAI,QAAQA,KAAI,MAAMA,MAAK;AAChC,2BAAe,MAAMA,IAAGC,SAAQ,UAAU;AAC1C,YAAAA,WAAU;AAAA,UACd;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,WAAW;AACnB,aAAS,SAASC,IAAG;AACjB,aAAOA;AAAA,IACX;AACA,YAAQ,WAAW;AACnB,aAAS,QAAQ,OAAO,OAAO;AAC3B,aAAO,SAAUA,IAAG;AAChB,eAAO,MAAM,MAAMA,EAAC,CAAC;AAAA,MACzB;AAAA,IACJ;AACA,YAAQ,UAAU;AAClB,aAAS,SAAS,MAAM,QAAQ;AAC5B,UAAI,WAAW;AACX,eAAO,KAAK;AAAA,eACP,WAAW;AAChB,eAAO,KAAK;AAAA,eACP,WAAW;AAChB,eAAO,KAAK;AAAA,eACP,WAAW;AAChB,eAAO,KAAK;AAAA,eACP,WAAW;AAChB,eAAO,KAAK;AAAA,eACP,WAAW;AAChB,eAAO,KAAK;AAAA,eACP,WAAW;AAChB,eAAO,KAAK;AAAA,eACP,WAAW;AAChB,eAAO,KAAK;AAAA;AAEZ,cAAM,MAAM,YAAY;AAAA,IAChC;AACA,YAAQ,WAAW;AACnB,aAAS,SAAS,MAAM,QAAQD,QAAO;AACnC,UAAI,WAAW;AACX,aAAK,KAAKA;AAAA,eACL,WAAW;AAChB,aAAK,KAAKA;AAAA,eACL,WAAW;AAChB,aAAK,KAAKA;AAAA,eACL,WAAW;AAChB,aAAK,KAAKA;AAAA,eACL,WAAW;AAChB,aAAK,KAAKA;AAAA,eACL,WAAW;AAChB,aAAK,KAAKA;AAAA,eACL,WAAW;AAChB,aAAK,KAAKA;AAAA,eACL,WAAW;AAChB,aAAK,KAAKA;AAAA;AAEV,cAAM,MAAM,YAAY;AAAA,IAChC;AACA,YAAQ,WAAW;AACnB,aAAS,eAAe,MAAM,QAAQA,QAAO;AACzC,UAAI,WAAW;AACX,aAAK,MAAMA;AAAA,eACN,WAAW;AAChB,aAAK,MAAMA;AAAA,eACN,WAAW;AAChB,aAAK,MAAMA;AAAA,eACN,WAAW;AAChB,aAAK,MAAMA;AAAA,eACN,WAAW;AAChB,aAAK,MAAMA;AAAA,eACN,WAAW;AAChB,aAAK,MAAMA;AAAA,eACN,WAAW;AAChB,aAAK,MAAMA;AAAA,eACN,WAAW;AAChB,aAAK,MAAMA;AAAA;AAEX,cAAM,MAAM,YAAY;AAAA,IAChC;AACA,YAAQ,iBAAiB;AAAA;AAAA;;;ACrVzB;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,WAAW;AACnB,QAAM,SAAS;AACf,QAAM,SAAS,CAAC,OAAO,SAAS,SAAS,CAAC;AAa1C,aAAS,SAAS,QAAQ;AACtB,UAAI,UAAU,OAAO,QAAQ;AACzB,iBAASE,KAAI,OAAO,QAAQA,MAAK,QAAQA,MAAK;AAC1C,iBAAOA,EAAC,IAAI,IAAI,OAAO,WAAW,OAAOA,KAAI,CAAC,GAAG,OAAOA,KAAI,CAAC,CAAC;AAAA,QAClE;AAAA,MACJ;AACA,aAAO,OAAO,MAAM;AAAA,IACxB;AACA,YAAQ,WAAW;AAAA;AAAA;;;ACzBnB;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,wBAAwB,QAAQ,sBAAsB,QAAQ,qBAAqB;AAC3F,QAAM,SAAS;AACf,QAAM,aAAa;AACnB,aAAS,mBAAmB,QAAQ,OAAO;AACvC,UAAI,OAAO;AACX,aAAO,QAAQ,GAAG;AACd,eAAO,IAAI,OAAO,WAAW,MAAM,IAAI;AACvC;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACA,YAAQ,qBAAqB;AAC7B,aAAS,oBAAoB,QAAQ,OAAOC,SAAQ;AAChD,YAAM,YAAY,KAAK;AACvB,UAAIA,UAAS;AACT,cAAM,IAAI,MAAM,oBAAoB;AACxC,UAAIA,YAAW;AACX,eAAO,mBAAmB,QAAQ,KAAK;AAC3C,UAAI,UAAU,GAAG;AACb,YAAIA,YAAW;AACX,iBAAO;AAAA;AAEP,gBAAM,IAAI,MAAM,gBAAgB;AAAA,MACxC;AACA,UAAI,UAAU,GAAG;AACb,eAAO,IAAI,OAAO,WAAW,QAAQA,UAAS,IAAI,SAAS,WAAW,SAAS,CAAC,CAAC;AAAA,MACrF;AACA,YAAM,QAAQ,aAAa;AAC3B,UAAIA,WAAU,OAAO;AACjB,eAAO,IAAI,OAAO,WAAW,oBAAoB,QAAQ,QAAQ,GAAGA,OAAM,GAAG,WAAW,SAAS,QAAQ,CAAC,CAAC;AAAA,MAC/G,OACK;AACD,eAAO,IAAI,OAAO,WAAW,mBAAmB,QAAQ,QAAQ,CAAC,GAAG,oBAAoB,QAAQ,QAAQ,GAAGA,UAAS,KAAK,CAAC;AAAA,MAC9H;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAK9B,aAAS,sBAAsB,OAAO,OAAO;AACzC,YAAM,YAAY,KAAK;AACvB,UAAI,MAAM,SAAS,WAAW;AAC1B,cAAM,IAAI,MAAM,gBAAgB,MAAM,iCAAiC,OAAO;AAAA,MAClF;AACA,UAAI,MAAM,WAAW,GAAG;AACpB,eAAO,WAAW,SAAS,KAAK;AAAA,MACpC;AACA,UAAI,UAAU,GAAG;AACb,eAAO,MAAM,CAAC;AAAA,MAClB;AACA,UAAI,UAAU,GAAG;AACb,eAAO,MAAM,SAAS;AAAA;AAAA,UAEd,IAAI,OAAO,WAAW,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC;AAAA;AAAA;AAAA,UAExC,IAAI,OAAO,WAAW,MAAM,CAAC,GAAG,WAAW,SAAS,CAAC,CAAC;AAAA;AAAA,MAClE;AACA,UAAI,QAAQ,MAAM;AAClB,eAAS,IAAI,OAAO,IAAI,GAAG,KAAK;AAC5B,cAAM,iBAAiB,QAAQ;AAC/B,cAAM,YAAY,QAAQ;AAE1B,iBAASC,KAAI,GAAGA,KAAI,WAAWA,MAAK,GAAG;AACnC,gBAAMA,KAAI,CAAC,IAAI,IAAI,OAAO,WAAW,MAAMA,EAAC,GAAG,MAAMA,KAAI,CAAC,CAAC;AAAA,QAC/D;AACA,YAAI,iBAAiB,GAAG;AACpB,gBAAM,YAAY,CAAC,IAAI,IAAI,OAAO,WAAW,MAAM,SAAS,GAAG,WAAW,SAAS,QAAQ,CAAC,CAAC;AAAA,QACjG;AAEA,gBAAQ,YAAY,IAAI;AAAA,MAC5B;AACA,aAAO,MAAM,CAAC;AAAA,IAClB;AACA,YAAQ,wBAAwB;AAAA;AAAA;;;AC5EhC;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,yBAAyB,QAAQ,8BAA8B,QAAQ,yBAAyB;AACxG,QAAM,YAAY;AAClB,QAAM,SAAS;AACf,aAAS,uBAAuB,OAAO,UAAU,OAAO,KAAK;AACzD,YAAM,YAAY,4BAA4B,UAAU,OAAO,GAAG;AAClE,aAAO,UAAU,sBAAsB,WAAW,KAAK;AAAA,IAC3D;AACA,YAAQ,yBAAyB;AAIjC,aAAS,4BAA4B,UAAU,OAAO,KAAK;AACvD,YAAM,OAAO,MAAM;AAInB,YAAM,gBAAgB,KAAK,MAAM,OAAO,EAAE;AAC1C,YAAM,YAAY,IAAI,MAAM,KAAK,KAAK,OAAO,EAAE,CAAC;AAGhD,eAASC,KAAI,GAAGA,KAAI,eAAeA,MAAK;AACpC,cAAM,SAAS,QAAQA,KAAI;AAC3B,kBAAUA,EAAC,IAAI,IAAI,OAAO,SAAS,SAAS,SAAS,SAAS,GAAG,IAAI,GAAG,SAAS,SAAS,SAAS,GAAG,IAAI,GAAG,SAAS,SAAS,SAAS,GAAG,IAAI,GAAG,SAAS,SAAS,SAAS,IAAI,IAAI,GAAG,SAAS,SAAS,SAAS,IAAI,IAAI,GAAG,SAAS,SAAS,SAAS,IAAI,IAAI,GAAG,SAAS,SAAS,SAAS,IAAI,IAAI,GAAG,SAAS,SAAS,SAAS,IAAI,IAAI,CAAC;AAAA,MAClV;AAEA,YAAM,iBAAiB,OAAO;AAE9B,UAAI,iBAAiB,GAAG;AACpB,cAAM,OAAO,IAAI,OAAO,SAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AACvD,kBAAU,aAAa,IAAI;AAE3B,cAAM,aAAa,KAAK,MAAM,iBAAiB,CAAC;AAChD,iBAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACjC,iBAAO,SAAS,MAAM,GAAG,SAAS,SAAS,QAAQ,gBAAgB,KAAK,IAAI,GAAG,IAAI,CAAC;AAAA,QACxF;AACA,cAAM,kBAAkB,OAAO;AAC/B,YAAI,kBAAkB,GAAG;AACrB,cAAI,IAAI;AACR,mBAASA,KAAI,GAAGA,KAAI,iBAAiBA,MAAK;AACtC,iBAAK,SAAS,SAAS,QAAQ,OAAO,kBAAkBA,EAAC,KAAMA,KAAI;AAAA,UACvE;AACA,iBAAO,SAAS,MAAM,YAAY,CAAC;AAAA,QACvC;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACA,YAAQ,8BAA8B;AAItC,aAAS,uBAAuB,UAAU,OAAO,MAAM,OAAO;AAK1D,YAAM,iBAAiB,OAAO;AAG9B,YAAM,gBAAgB,KAAK,MAAM,OAAO,EAAE;AAC1C,eAASA,KAAI,GAAGA,KAAI,eAAeA,MAAK;AACpC,cAAM,OAAO,MAAMA,EAAC;AACpB,cAAM,SAAS,QAAQA,KAAI;AAC3B,iBAAS,SAAS,SAAS,GAAG,KAAK,IAAI,IAAI;AAC3C,iBAAS,SAAS,SAAS,GAAG,KAAK,IAAI,IAAI;AAC3C,iBAAS,SAAS,SAAS,GAAG,KAAK,IAAI,IAAI;AAC3C,iBAAS,SAAS,SAAS,IAAI,KAAK,IAAI,IAAI;AAC5C,iBAAS,SAAS,SAAS,IAAI,KAAK,IAAI,IAAI;AAC5C,iBAAS,SAAS,SAAS,IAAI,KAAK,IAAI,IAAI;AAC5C,iBAAS,SAAS,SAAS,IAAI,KAAK,IAAI,IAAI;AAC5C,iBAAS,SAAS,SAAS,IAAI,KAAK,IAAI,IAAI;AAAA,MAChD;AAEA,UAAI,iBAAiB,GAAG;AACpB,cAAM,OAAO,MAAM,aAAa;AAEhC,cAAM,aAAa,KAAK,MAAM,iBAAiB,CAAC;AAChD,iBAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACjC,mBAAS,SAAS,QAAQ,gBAAgB,KAAK,IAAI,GAAG,OAAO,SAAS,MAAM,CAAC,GAAG,IAAI;AAAA,QACxF;AACA,cAAM,kBAAkB,OAAO;AAC/B,YAAI,kBAAkB,GAAG;AACrB,gBAAM,IAAI,OAAO,SAAS,MAAM,UAAU;AAC1C,mBAASA,KAAI,GAAGA,KAAI,iBAAiBA,MAAK;AACtC,qBAAS,SAAS,QAAQ,OAAO,kBAAkBA,IAAI,KAAMA,KAAI,IAAM,GAAI;AAAA,UAC/E;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AACA,YAAQ,yBAAyB;AAAA;AAAA;;;AC1FjC;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,4BAA4B,QAAQ,oBAAoB,QAAQ,kBAAkB;AAC1F,QAAM,SAAS;AACf,QAAM,WAAW;AACjB,YAAQ,kBAAkB;AAC1B,aAAS,kBAAkB,UAAU,OAAO;AACxC,YAAM,YAAY,CAAC;AACnB,UAAI,OAAO;AACX,iBAAWC,MAAK,SAAS,eAAe,KAAK,GAAG;AAC5C,YAAIA,IAAG;AACH,cAAI,KAAK,OAAO;AACZ,kBAAM,IAAI,MAAM,QAAQ,eAAe;AAC3C,oBAAU,KAAK,KAAK,KAAK,IAAI;AAC7B,iBAAO,KAAK;AAAA,QAChB,OACK;AACD,cAAI,KAAK,OAAO;AACZ,kBAAM,IAAI,MAAM,QAAQ,eAAe;AAC3C,oBAAU,KAAK,KAAK,MAAM,IAAI;AAC9B,iBAAO,KAAK;AAAA,QAChB;AAAA,MACJ;AACA,aAAO,CAAC,KAAK,MAAM,UAAU,QAAQ,CAAC;AAAA,IAC1C;AACA,YAAQ,oBAAoB;AAC5B,aAAS,0BAA0B,QAAQ,MAAM,WAAW;AACxD,UAAI,OAAO,OAAO,SAAS,SAAS,IAAI;AACxC,YAAM,IAAI,UAAU,MAAM,EAAE,QAAQ;AACpC,aAAO,SAAS,GAAG;AACf,cAAM,UAAU,OAAO,SAAS,SAAS,EAAE,IAAI,CAAC;AAChD,YAAI,SAAS,OAAO,CAAC,MAAM,OAAO,CAAC,GAAG;AAClC,iBAAO,IAAI,OAAO,WAAW,MAAM,OAAO;AAAA,QAC9C,OACK;AACD,iBAAO,IAAI,OAAO,WAAW,SAAS,IAAI;AAAA,QAC9C;AACA,iBAAS,SAAS,OAAO,CAAC;AAAA,MAC9B;AACA,aAAO;AAAA,IACX;AACA,YAAQ,4BAA4B;AAAA;AAAA;;;ACzCpC;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,qBAAqB,QAAQ,sBAAsB,QAAQ,kBAAkB,QAAQ,kBAAkB,QAAQ,iBAAiB,QAAQ,iBAAiB,QAAQ,gBAAgB,QAAQ,UAAU,QAAQ,UAAU,QAAQ,OAAO;AAC5O,QAAM,aAAa;AACnB,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,QAAM,UAAU;AAChB,QAAM,WAAW;AAQjB,QAAM,OAAN,MAAW;AAAA,MACP,YAAY,MAAM,MAAM;AACpB,aAAK,YAAY;AACjB,YAAI,MAAM;AACN,cAAI,OAAO,YAAY,aAAa;AAChC,iBAAK,OAAO;AAAA,UAChB,OACK;AACD,iBAAK,OAAO,IAAI,QAAQ,IAAI;AAAA,UAChC;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA,MAIA,OAAO,gBAAgB,OAAO;AAC1B,eAAO,IAAI,KAAK,QAAQ,oBAAoB,KAAK,CAAC;AAAA,MACtD;AAAA;AAAA;AAAA;AAAA,MAIA,IAAI,WAAW;AACX,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,IAAI,SAAS,aAAa;AACtB,aAAK,YAAY;AACjB,YAAI,KAAK,MAAM;AAIX,cAAI,OAAO,YAAY,aAAa;AAChC,iBAAK,KAAK,WAAW;AAAA,UACzB,OACK;AACD,kBAAM,UAAU,KAAK,KAAK,MAAM;AAChC,gBAAI,SAAS;AACT,sBAAQ,WAAW;AAAA,YACvB,OACK;AAED,mBAAK,OAAO;AAAA,YAChB;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA,MAIA,IAAI,OAAO;AACP,eAAO,KAAK,SAAS;AAAA,MACzB;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ;AACJ,eAAO,IAAI,KAAK,KAAK,QAAQ;AAAA,MACjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,WAAW,OAAO;AACd,eAAO,IAAI,KAAK,KAAK,QAAQ,KAAK,GAAG,CAAC,SAAS,KAAK,QAAQ,OAAO,IAAI,CAAC;AAAA,MAC5E;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ,QAAQ;AACZ,eAAO,QAAQ,KAAK,UAAU,MAAM;AAAA,MACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,eAAe,OAAO,OAAO;AACzB,eAAO,eAAe,KAAK,UAAU,OAAO,KAAK;AAAA,MACrD;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ,OAAO;AACX,eAAO,KAAK,QAAQ,KAAK,EAAE;AAAA,MAC/B;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ,QAAQC,IAAG;AACf,aAAK,WAAW,QAAQ,KAAK,UAAU,QAAQA,EAAC;AAAA,MACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,cAAc,QAAQ,YAAY;AAC9B,aAAK,WAAW,cAAc,KAAK,UAAU,QAAQ,UAAU;AAAA,MACnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,eAAe,OAAO,OAAO,MAAM;AAC/B,aAAK,WAAW,eAAe,KAAK,UAAU,OAAO,OAAO,IAAI;AAAA,MACpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ,OAAO,MAAM;AACjB,aAAK,QAAQ,OAAO,OAAO,SAAS,SAAS,IAAI,CAAC;AAAA,MACtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,gBAAgB,OAAO,YAAY,OAAO;AACtC,eAAO,gBAAgB,KAAK,UAAU,OAAO,YAAY,KAAK;AAAA,MAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,oBAAoB,OAAO,YAAY,OAAO;AAC1C,eAAO,oBAAoB,KAAK,UAAU,OAAO,YAAY,KAAK;AAAA,MACtE;AAAA;AAAA;AAAA;AAAA,MAIA,eAAe,OAAO;AAClB,eAAO,SAAS,kBAAkB,KAAK,UAAU,KAAK,EAAE,CAAC;AAAA,MAC7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS,OAAO;AACZ,eAAO,QAAQ,YAAY,KAAK,UAAU,KAAK;AAAA,MACnD;AAAA,IACJ;AACA,YAAQ,OAAO;AAIf,aAAS,QAAQ,UAAU,QAAQ;AAC/B,YAAM,kBAAkB,SAAS,yBAAyB,MAAM;AAChE,UAAI,OAAO;AACX,eAASC,KAAI,GAAGA,KAAI,gBAAgB,QAAQA,MAAK;AAC7C,YAAI,KAAK,OAAO,GAAG;AACf,gBAAM,IAAI,MAAM,sCAAsCA,IAAG;AAAA,QAC7D;AAEA,eAAO,gBAAgBA,EAAC,MAAM,MAAM,KAAK,QAAQ,KAAK;AAAA,MAC1D;AACA,aAAO;AAAA,IACX;AACA,YAAQ,UAAU;AAKlB,aAAS,QAAQ,UAAU,QAAQD,IAAG;AAElC,YAAM,kBAAkB,SAAS,yBAAyB,MAAM;AAChE,YAAM,cAAc,eAAe,UAAU,eAAe;AAC5D,aAAO,iBAAiB,iBAAiB,aAAaA,EAAC;AAAA,IAC3D;AACA,YAAQ,UAAU;AAUlB,aAAS,cAAc,UAAU,QAAQ,YAAY;AAEjD,YAAM,kBAAkB,SAAS,yBAAyB,MAAM;AAChE,YAAM,cAAc,eAAe,UAAU,eAAe;AAC5D,YAAM,iBAAiB,YAAY,YAAY,SAAS,CAAC;AACzD,YAAM,UAAU,gBAAgB,gBAAgB,SAAS,CAAC;AAC1D,YAAM,UAAU,YAAY,MAAM,eAAe,QAAQ,eAAe;AACxE,YAAM,UAAU,WAAW,OAAO;AAClC,aAAO,iBAAiB,iBAAiB,aAAa,OAAO;AAAA,IACjE;AACA,YAAQ,gBAAgB;AAKxB,aAAS,eAAe,UAAU,WAAW;AACzC,UAAI,OAAO;AAGX,YAAM,cAAc,CAAC,QAAQ;AAG7B,eAASC,KAAI,GAAGA,KAAI,UAAU,SAAS,GAAGA,MAAK;AAE3C,YAAI,UAAUA,EAAC,MAAM,KAAK;AACtB,iBAAO,KAAK;AAAA,QAChB,OACK;AACD,iBAAO,KAAK;AAAA,QAChB;AACA,oBAAY,KAAK,IAAI;AAAA,MACzB;AACA,aAAO;AAAA,IACX;AAKA,aAAS,iBAAiB,WAAW,aAAa,SAAS;AACvD,UAAI,OAAO;AAIX,eAASA,KAAI,UAAU,SAAS,GAAGA,MAAK,GAAGA,MAAK;AAC5C,YAAI,UAAUA,EAAC,MAAM,KAAK;AACtB,iBAAO,IAAI,OAAO,WAAW,YAAYA,KAAI,CAAC,EAAE,MAAM,IAAI;AAAA,QAC9D,OACK;AACD,iBAAO,IAAI,OAAO,WAAW,MAAM,YAAYA,KAAI,CAAC,EAAE,KAAK;AAAA,QAC/D;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AAIA,aAAS,eAAe,UAAU,OAAO,OAAO;AAC5C,UAAI,UAAU,GAAG;AACb,eAAO;AAAA,MACX;AACA,UAAI,UAAU,GAAG;AACb,eAAO,UAAU,IAAI,SAAS,OAAO,SAAS;AAAA,MAClD;AAEA,YAAM,aAAa,QAAQ;AAC3B,YAAM,eAAe;AACrB,UAAI,OAAO;AACX,eAAS,IAAI,YAAY,KAAK,cAAc,KAAK;AAC7C,eAAO,WAAW,GAAG,KAAK,IAAI,KAAK,OAAO,KAAK;AAAA,MACnD;AACA,aAAO;AAAA,IACX;AACA,YAAQ,iBAAiB;AAIzB,aAAS,eAAe,UAAU,YAAY,OAAO,aAAa;AAE9D,aAAO,gBAAgB,UAAU,YAAY,CAAC,KAAK,GAAG,CAAC,WAAW,CAAC;AAAA,IACvE;AACA,YAAQ,iBAAiB;AAczB,aAAS,gBAAgB,UAAU,YAAY,SAAS,OAAO;AAc3D,UAAI,eAAe,GAAG;AAClB,eAAO,MAAM,SAAS,IAAI,MAAM,CAAC,IAAI;AAAA,MACzC;AAKA,YAAM,kBAAkB,IAAI,MAAM,UAAU;AAQ5C,YAAM,sBAAsB,IAAI,MAAM,UAAU;AAEhD,YAAM,aAAa,aAAa;AAChC,YAAM,eAAe;AACrB,UAAI,SAAS;AACb,UAAI,OAAO;AAEX,sBAAgB,UAAU,IAAI;AAK9B,eAASA,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AACrC,cAAM,QAAQ,QAAQA,EAAC;AAOvB,iBAAS,IAAI,QAAQ,IAAI,cAAc,KAAK;AACxC,iBAAO,WAAW,GAAG,KAAK,IAAI,KAAK,OAAO,KAAK;AAC/C,0BAAgB,IAAI,CAAC,IAAI;AAAA,QAC7B;AACA,iBAAS;AAeT,cAAM,kBAAkB,QAAQ,OAAO;AACvC,YAAI,gBAAgB;AAEhB,cAAI,QAAQ,MAAM,QAAQA,KAAI,CAAC,GAAG;AAC9B,mBAAO,IAAI,OAAO,WAAW,MAAMA,EAAC,GAAG,MAAMA,KAAI,CAAC,CAAC;AAEnD,YAAAA;AAAA,UACJ,OACK;AACD,mBAAO,IAAI,OAAO,WAAW,MAAMA,EAAC,GAAG,KAAK,KAAK;AAAA,UACrD;AAAA,QACJ,OACK;AACD,iBAAO,IAAI,OAAO,WAAW,KAAK,MAAM,MAAMA,EAAC,CAAC;AAAA,QACpD;AAIA,cAAM,cAAcA,MAAK,QAAQ,SAAS;AAC1C,cAAM,aAAa,cAAc,aAAa,eAAe,OAAO,QAAQA,KAAI,CAAC,CAAC;AAiBlF,iBAAS,IAAI,eAAe,GAAG,KAAK,YAAY,KAAK;AAGjD,cAAI,WAAW,GAAG,KAAK,GAAG;AACtB,gBAAI,eAAe,MAAM,YAAY;AAGjC,qBAAO,IAAI,OAAO,WAAW,MAAM,gBAAgB,CAAC,EAAE,KAAK;AAAA,YAC/D,OACK;AAED,kCAAoB,CAAC,IAAI;AACzB,qBAAO,gBAAgB,CAAC;AAAA,YAC5B;AAAA,UACJ,OACK;AACD,kBAAM,WAAW,oBAAoB,CAAC;AACtC,gBAAI,aAAa,QAAW;AACxB,qBAAO,IAAI,OAAO,WAAW,UAAU,IAAI;AAC3C,kCAAoB,CAAC,IAAI;AAAA,YAC7B,OACK;AACD,qBAAO,IAAI,OAAO,WAAW,gBAAgB,CAAC,EAAE,MAAM,IAAI;AAAA,YAC9D;AAAA,UACJ;AAAA,QACJ;AAGA,iBAAS;AAAA,MACb;AAEA,aAAO;AAAA,IACX;AACA,YAAQ,kBAAkB;AAa1B,aAAS,gBAAgB,UAAU,OAAO,YAAY,OAAO;AAEzD,UAAI,UAAU,GAAG;AACb,eAAO,eAAe,KAAK,QAAQ,IAAI,CAAC,QAAQ,IAAI,CAAC;AAAA,MACzD,WACS,UAAU,GAAG;AAClB,YAAI,UAAU,GAAG;AACb,iBAAO,CAAC;AAAA,QACZ,WACS,UAAU,GAAG;AAClB,iBAAO,eAAe,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,KAAK;AAAA,QAC/D,OACK;AACD,iBAAO,CAAC,SAAS,MAAM,SAAS,KAAK;AAAA,QACzC;AAAA,MACJ;AAEA,YAAM,aAAa,QAAQ;AAC3B,YAAM,eAAe;AACrB,UAAI,SAAS;AACb,UAAI,OAAO;AAGX,YAAM,kBAAkB,IAAI,MAAM,KAAK;AACvC,YAAM,cAAc,IAAI,MAAM,KAAK;AACnC,YAAM,QAAQ,IAAI,MAAM,KAAK;AAE7B,sBAAgB,UAAU,IAAI;AAC9B,eAASA,KAAI,GAAGA,KAAI,OAAOA,MAAK;AAC5B,iBAAS,IAAI,QAAQ,KAAK,cAAc,KAAK;AACzC,cAAI,MAAM,QAAQ;AACd,4BAAgB,CAAC,IAAI;AAAA,UACzB;AACA,gBAAM,SAAS,WAAW,GAAG,aAAaA,EAAC;AAC3C,sBAAY,CAAC,IAAI;AACjB,iBAAO,SAAS,KAAK,OAAO,KAAK;AAAA,QACrC;AACA,cAAMA,EAAC,IAAI;AAGX,iBAAS,IAAI,cAAc,KAAK,YAAY,KAAK;AAC7C,cAAI,YAAY,CAAC,MAAM,MAAM;AACzB,qBAAS;AACT;AAAA,UACJ;AAAA,QACJ;AACA,eAAO,gBAAgB,MAAM;AAAA,MACjC;AACA,aAAO;AAAA,IACX;AACA,YAAQ,kBAAkB;AAI1B,cAAU,oBAAoB,UAAU,OAAO,YAAY,OAAO;AAC9D,YAAM,WAAW,aAAa;AAE9B,YAAM,aAAa,QAAQ;AAC3B,YAAM,eAAe;AACrB,UAAI,SAAS;AACb,UAAI,OAAO;AAGX,YAAM,kBAAkB,IAAI,MAAM,KAAK;AACvC,YAAM,cAAc,IAAI,MAAM,KAAK;AAEnC,sBAAgB,UAAU,IAAI;AAC9B,eAAS,QAAQ,YAAY,QAAQ,UAAU,SAAS;AACpD,iBAAS,IAAI,QAAQ,KAAK,cAAc,KAAK;AACzC,cAAI,MAAM,QAAQ;AACd,4BAAgB,CAAC,IAAI;AAAA,UACzB;AACA,gBAAM,SAAS,WAAW,GAAG,KAAK;AAClC,sBAAY,CAAC,IAAI;AACjB,iBAAO,SAAS,KAAK,OAAO,KAAK;AAAA,QACrC;AACA,cAAM;AAGN,iBAAS,IAAI,cAAc,KAAK,YAAY,KAAK;AAC7C,cAAI,YAAY,CAAC,MAAM,MAAM;AACzB,qBAAS;AACT;AAAA,UACJ;AAAA,QACJ;AACA,eAAO,gBAAgB,MAAM;AAAA,MACjC;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAwB9B,aAAS,mBAAmB,UAAU,YAAY,OAAO;AAcrD,UAAI,QAAQ,GAAG;AACX,eAAO,WAAW,SAAS,UAAU;AAAA,MACzC;AAKA,YAAM,kBAAkB,IAAI,MAAM,UAAU;AAE5C,YAAM,aAAa,aAAa;AAChC,YAAM,eAAe;AACrB,UAAI,SAAS;AACb,UAAI,OAAO;AAEX,sBAAgB,UAAU,IAAI;AAI9B,eAAS,IAAI,QAAQ,KAAK,cAAc,KAAK;AACzC,eAAO,WAAW,GAAG,KAAK,IAAI,KAAK,OAAO,KAAK;AAC/C,wBAAgB,IAAI,CAAC,IAAI;AAAA,MAC7B;AACA,eAAS;AAET,eAAS,IAAI,cAAc,KAAK,YAAY,KAAK;AAC7C,YAAI,WAAW,GAAG,KAAK,GAAG;AAGtB,iBAAO,IAAI,OAAO,WAAW,MAAM,WAAW,SAAS,CAAC,CAAC;AAAA,QAC7D,OACK;AAGD,iBAAO,IAAI,OAAO,WAAW,gBAAgB,CAAC,EAAE,MAAM,IAAI;AAAA,QAC9D;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AACA,YAAQ,qBAAqB;AAO7B,aAAS,WAAW,QAAQ,OAAO;AAC/B,UAAI,SAAS,IAAI;AAIb,cAAM,UAAW,QAAQ,KAAK,OAAQ;AACtC,cAAMC,QAAO,KAAM,SAAS;AAC5B,gBAAQ,UAAUA,WAAUA;AAAA,MAChC;AACA,YAAM,OAAO,KAAK;AAClB,cAAQ,QAAQ,UAAU;AAAA,IAC9B;AAaA,aAAS,eAAe,MAAM,IAAI;AAC9B;AAAA;AAAA,QAEA,KAAK,KAAK,KAAK,KAAK,CAAC,EAAE,OAAO,GAAG,CAAC;AAAA,QAE9B;AAAA;AAAA,IACR;AAAA;AAAA;;;ACjpBA,IAAAC,gBAAA;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,8BAA8B,QAAQ,YAAY,QAAQ,yBAAyB,QAAQ,2BAA2B,QAAQ,wBAAwB,QAAQ,yBAAyB,QAAQ,uBAAuB;AAC9N,QAAM,WAAW;AAQjB,aAAS,qBAAqB,QAAQ;AAClC,YAAM,OAAO,oBAAI,IAAI;AACrB,YAAM,SAAS,oBAAI,IAAI;AACvB,UAAI,IAAI;AACR,aAAO,IAAI,GAAG;AACV,aAAK,IAAI,CAAC;AACV,eAAO,IAAI,SAAS,cAAc,CAAC,CAAC;AACpC,YAAI,SAAS,aAAa,CAAC;AAAA,MAC/B;AACA,aAAO,EAAE,MAAM,OAAO;AAAA,IAC1B;AACA,YAAQ,uBAAuB;AAO/B,aAAS,uBAAuB,QAAQ;AACpC,YAAM,OAAO,oBAAI,IAAI;AACrB,YAAM,SAAS,oBAAI,IAAI;AACvB,UAAI,IAAI;AACR,aAAO,EAAE,SAAS,GAAG;AACjB,aAAK,IAAI,CAAC;AACV,cAAM,UAAU,EAAE,EAAE,SAAS,CAAC;AAC9B,cAAM,SAAS,EAAE,UAAU,GAAG,EAAE,SAAS,CAAC;AAC1C,eAAO,IAAI,UAAU,OAAO,OAAO,IAAI,EAAE;AACzC,YAAI;AAAA,MACR;AACA,aAAO,EAAE,MAAM,OAAO;AAAA,IAC1B;AACA,YAAQ,yBAAyB;AAKjC,aAAS,sBAAsB,UAAU,WAAW;AAChD,UAAI,CAAC,SAAS,QAAQ;AAClB,eAAO,CAAC;AAAA,MACZ;AACA,aAAO,SACF,IAAI,CAAC,MAAM,EAAE,OAAO,SAAS,CAAC,EAC9B,KAAK,EACL,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC;AAAA,IAC5B;AACA,YAAQ,wBAAwB;AAIhC,aAAS,yBAAyB,UAAU;AACxC,UAAI,CAAC,SAAS,QAAQ;AAClB,eAAO,CAAC;AAAA,MACZ;AACA,aAAO,SAAS,KAAK,CAAC,GAAG,MAAM;AAC3B,YAAI,EAAE,SAAS,EAAE,QAAQ;AACrB,iBAAO;AAAA,QACX,WACS,EAAE,SAAS,EAAE,QAAQ;AAC1B,iBAAO;AAAA,QACX;AACA,YAAI,QAAQ,EAAE,QAAQ,GAAG;AACzB,YAAI,QAAQ,EAAE,QAAQ,GAAG;AAEzB,eAAO,MAAM;AACT,cAAI,UAAU,IAAI;AACd,mBAAO;AAAA,UACX,WACS,UAAU,IAAI;AACnB,mBAAO;AAAA,UACX;AACA,cAAI,QAAQ,OAAO;AACf,mBAAO;AAAA,UACX,WACS,QAAQ,OAAO;AACpB,mBAAO;AAAA,UACX;AACA,kBAAQ,EAAE,QAAQ,KAAK,QAAQ,CAAC;AAChC,kBAAQ,EAAE,QAAQ,KAAK,QAAQ,CAAC;AAAA,QACpC;AAAA,MACJ,CAAC;AAAA,IACL;AACA,YAAQ,2BAA2B;AAInC,aAAS,uBAAuB,UAAU;AACtC,YAAM,mBAAmB,SAAS,MAAM,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,SAAS,EAAE,MAAM;AAC5E,YAAM,WAAW,CAAC;AAClB;AAAO,iBAASC,KAAI,GAAGA,KAAI,iBAAiB,QAAQA,MAAK;AACrD,gBAAM,MAAM,iBAAiBA,EAAC;AAC9B,mBAAS,IAAIA,KAAI,GAAG,IAAI,iBAAiB,QAAQ,KAAK;AAClD,kBAAM,MAAM,iBAAiB,CAAC;AAC9B,gBAAI,IAAI,WAAW,GAAG,GAAG;AACrB,uBAAS;AAAA,YACb;AAAA,UACJ;AACA,mBAAS,KAAK,GAAG;AAAA,QACrB;AACA,aAAO;AAAA,IACX;AACA,YAAQ,yBAAyB;AACjC,QAAI;AACJ,KAAC,SAAUC,YAAW;AAClB,MAAAA,WAAUA,WAAU,SAAS,IAAI,CAAC,IAAI;AACtC,MAAAA,WAAUA,WAAU,YAAY,IAAI,CAAC,IAAI;AACzC,MAAAA,WAAUA,WAAU,UAAU,IAAI,CAAC,IAAI;AAAA,IAC3C,GAAG,YAAY,QAAQ,cAAc,QAAQ,YAAY,CAAC,EAAE;AAO5D,aAAS,4BAA4B,UAAU,gBAAgB,MAAM,YAAY,UAAU,SAAS;AAChG,YAAM,SAAS,uBAAuB,QAAQ;AAE9C,YAAM,QAAQ,IAAI,IAAI,gBAAgB,SAAS,CAAC,CAAC;AACjD,YAAM,QAAQ,oBAAI,IAAI;AACtB,YAAM,WAAW,oBAAI,IAAI;AAEzB,UAAI,eAAe;AACnB,iBAAW,UAAU,QAAQ;AACzB,YAAI,OAAO,SAAS;AAChB,yBAAe,OAAO;AAC1B,cAAM,EAAE,MAAM,OAAO,IAAI,uBAAuB,MAAM;AACtD,aAAK,QAAQ,CAAC,MAAM,MAAM,IAAI,CAAC,CAAC;AAChC,eAAO,QAAQ,CAAC,MAAM,SAAS,IAAI,CAAC,CAAC;AAAA,MACzC;AAEA,YAAM,QAAQ,CAAC,MAAM,SAAS,OAAO,CAAC,CAAC;AAEvC,eAAS,QAAQ,CAAC,MAAM,MAAM,IAAI,CAAC,CAAC;AACpC,cAAQ,WAAW;AAAA,QACf,KAAK,UAAU;AACX,iBAAO,sBAAsB,MAAM,KAAK,KAAK,GAAG,YAAY;AAAA,QAChE,KAAK,UAAU;AACX,iBAAO,yBAAyB,MAAM,KAAK,KAAK,CAAC;AAAA,QACrD,KAAK,UAAU;AACX,iBAAO,MAAM,KAAK,KAAK;AAAA,MAC/B;AAAA,IACJ;AACA,YAAQ,8BAA8B;AAAA;AAAA;;;ACxJtC;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,2BAA2B,QAAQ,mBAAmB;AAC9D,QAAM,SAAS;AACf,QAAM,SAAS;AACf,QAAM,SAAS;AASf,aAAS,iBAAiB,UAAU,UAAU;AAC1C,YAAM,OAAO,IAAI,OAAO,KAAK,QAAQ;AACrC,YAAM,kBAAkB,OAAO,4BAA4B,SAAS,IAAI,CAAC,WAAW,OAAO,SAAS,CAAC,CAAC,GAAG,OAAO,OAAO,UAAU,UAAU;AAC3I,YAAM,eAAe,SAAS,MAAM,EAAE,KAAK,CAAC,GAAG,MAAO,IAAI,IAAI,IAAI,EAAG;AACrE,YAAM,SAAS,aAAa,IAAI,CAAC,WAAW,KAAK,QAAQ,MAAM,CAAC;AAChE,YAAM,YAAY,gBAAgB,IAAI,CAAC,WAAW,KAAK,QAAQ,MAAM,CAAC;AACtE,aAAO,CAAC,QAAQ,WAAW,YAAY;AAAA,IAC3C;AACA,YAAQ,mBAAmB;AAU3B,aAAS,yBAAyB,QAAQ,WAAW,UAAU;AAhC/D;AAiCI,UAAI,OAAO,WAAW,SAAS,QAAQ;AACnC,cAAM,IAAI,MAAM,4CAA4C;AAAA,MAChE;AACA,YAAM,iBAAiB,SAAS,IAAI,CAAC,WAAW,OAAO,SAAS,CAAC,CAAC;AAClE,YAAM,oBAAoB,OAAO,4BAA4B,gBAAgB,OAAO,OAAO,UAAU,UAAU;AAC/G,UAAI,kBAAkB,WAAW,UAAU,QAAQ;AAC/C,cAAM,IAAI,MAAM,yDAAyD;AAAA,MAC7E;AAOA,YAAM,WAAW,KAAK,MAAI,oBAAe,CAAC,MAAhB,mBAAmB,WAAU,KAAG,uBAAkB,CAAC,MAAnB,mBAAsB,WAAU,CAAC;AAC3F,YAAMC,UAAS,OAAO,YAAY,MAAM,KAAK,EAAE,QAAQ,SAAS,GAAG,CAAC,GAAGC,OAAM,CAACA,KAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AAEzF,eAASA,KAAI,GAAGA,KAAI,eAAe,QAAQA,MAAK;AAC5C,cAAM,gBAAgB,eAAeA,EAAC;AACtC,cAAM,OAAO,OAAOA,EAAC;AACrB,QAAAD,QAAO,cAAc,MAAM,EAAE,aAAa,IAAI,OAAO,SAAS,SAAS,IAAI;AAAA,MAC/E;AACA,eAASC,KAAI,GAAGA,KAAI,kBAAkB,QAAQA,MAAK;AAC/C,cAAM,mBAAmB,kBAAkBA,EAAC;AAC5C,cAAM,UAAU,UAAUA,EAAC;AAC3B,QAAAD,QAAO,iBAAiB,MAAM,EAAE,gBAAgB,IAAI,OAAO,SAAS,SAAS,OAAO;AAAA,MACxF;AACA,eAASC,KAAI,UAAUA,KAAI,GAAGA,MAAK;AAC/B,cAAM,QAAQD,QAAOC,EAAC;AACtB,cAAM,cAAcD,QAAOC,KAAI,CAAC;AAChC,mBAAW,aAAa,OAAO,KAAK,KAAK,GAAG;AACxC,gBAAM,OAAO,MAAM,SAAS;AAE5B,cAAI,CAAC,MAAM;AACP;AAAA,UACJ;AACA,gBAAM,SAAS,UAAU,UAAU,SAAS,CAAC,MAAM;AACnD,gBAAM,kBAAkB,UAAU,UAAU,GAAG,UAAU,SAAS,CAAC;AACnE,gBAAM,mBAAmB,mBAAmB,SAAS,MAAM;AAC3D,gBAAM,cAAc,MAAM,gBAAgB;AAC1C,cAAI,CAAC,aAAa;AACd,kBAAM,IAAI,MAAM,sBAAsB,kBAAkB;AAAA,UAC5D;AAEA,gBAAM,aAAa,SAAS,IAAI,OAAO,WAAW,MAAM,WAAW,IAAI,IAAI,OAAO,WAAW,aAAa,IAAI;AAC9G,sBAAY,eAAe,IAAI;AAE/B,iBAAO,MAAM,SAAS;AACtB,iBAAO,MAAM,gBAAgB;AAAA,QACjC;AAAA,MACJ;AACA,YAAM,OAAOD,QAAO,CAAC,EAAE,GAAG;AAC1B,UAAI,CAAC,MAAM;AACP,cAAM,IAAI,MAAM,2CAA2C;AAAA,MAC/D;AACA,aAAO;AAAA,IACX;AACA,YAAQ,2BAA2B;AAAA;AAAA;;;AC1FnC;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,kCAAkC,QAAQ,0BAA0B,QAAQ,0BAA0B,QAAQ,0BAA0B,QAAQ,sBAAsB,QAAQ,oBAAoB;AAC1M,QAAM,WAAW;AACjB,QAAM,SAAS;AACf,QAAM,SAAS;AACf,aAAS,kBAAkB,SAAS;AAEhC,YAAM,kBAAkB,oBAAI,IAAI;AAChC,YAAM,iBAAiB,oBAAI,IAAI;AAC/B,iBAAW,aAAa,SAAS;AAC7B,cAAM,gBAAgB,SAAS,yBAAyB,SAAS;AACjE,wBAAgB,IAAI,aAAa;AACjC,cAAM,EAAE,QAAQ,KAAK,IAAI,OAAO,uBAAuB,aAAa;AACpE,aAAK,OAAO,aAAa;AACzB,mBAAW,aAAa,MAAM;AAC1B,yBAAe,IAAI,SAAS;AAAA,QAChC;AACA,mBAAW,eAAe,QAAQ;AAC9B,0BAAgB,IAAI,WAAW;AAAA,QACnC;AAAA,MACJ;AACA,iBAAW,aAAa,gBAAgB;AACpC,wBAAgB,OAAO,SAAS;AAAA,MACpC;AAEA,YAAM,sBAAsB,MAAM,KAAK,eAAe,EAAE,KAAK,CAAC,GAAG,MAAM,EAAE,cAAc,CAAC,CAAC;AAEzF,UAAI,sBAAsB;AAC1B,iBAAW,mBAAmB,qBAAqB;AAC/C,iBAASE,KAAI,GAAGA,KAAI,gBAAgB,QAAQA,MAAK;AAC7C,cAAI,gBAAgB,gBAAgB,SAAS,IAAIA,EAAC,MAAM,KAAK;AACzD,mCAAuB,IAAI,SAASA,KAAI,GAAG,GAAG;AAC9C;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAEA,UAAI,oBAAoB,SAAS,KAAK,GAAG;AACrC,8BAAsB,oBAAoB,OAAO,IAAK,oBAAoB,SAAS,IAAK,oBAAoB,QAAQ,GAAG;AAAA,MAC3H;AAEA,YAAM,aAAa,IAAI,WAAW,oBAAoB,SAAS,CAAC;AAChE,eAASA,KAAI,GAAGA,KAAI,WAAW,QAAQA,MAAK;AACxC,mBAAWA,EAAC,IAAI,OAAO,OAAO,oBAAoB,UAAUA,KAAI,IAAIA,KAAI,KAAK,CAAC,CAAC;AAAA,MACnF;AACA,aAAO;AAAA,IACX;AACA,YAAQ,oBAAoB;AAC5B,aAAS,OAAO,SAAS,UAAU;AAC/B,YAAM,MAAM,WAAW;AACvB,YAAM,UAAU,KAAK,MAAM,WAAW,CAAC;AACvC,YAAM,OAAO,QAAQ,OAAO;AAC5B,cAAQ,KAAK;AAAA,QACT,KAAK;AACD,kBAAQ,OAAO,SAAiB;AAAA,QACpC,KAAK;AACD,kBAAQ,OAAO,QAAiB;AAAA,QACpC,KAAK;AACD,kBAAQ,OAAO,QAAiB;AAAA,QACpC,KAAK;AACD,kBAAQ,OAAO,QAAiB;AAAA,QACpC,KAAK;AACD,kBAAQ,OAAO,OAAiB;AAAA,QACpC,KAAK;AACD,kBAAQ,OAAO,OAAiB;AAAA,QACpC,KAAK;AACD,kBAAQ,OAAO,OAAiB;AAAA,QACpC,KAAK;AACD,kBAAQ,OAAO,OAAiB;AAAA,QACpC;AACI,gBAAM,IAAI,MAAM,aAAa;AAAA,MACrC;AAAA,IACJ;AACA,aAAS,oBAAoB,YAAY;AACrC,YAAM,QAAQ,CAAC;AACf,YAAM,eAAe,WAAW,SAAS;AACzC,UAAI,SAAS;AACb,UAAI,SAAS;AACb,eAASA,KAAI,GAAGA,KAAI,cAAcA,MAAK;AACnC,cAAM,MAAM,OAAO,YAAYA,EAAC;AAChC,cAAM,KAAK,GAAG;AACd,YAAI,KAAK;AACL;AAAA,QACJ,OACK;AACD;AAAA,QACJ;AACA,YAAI,SAAS,QAAQ;AACjB,UAAAA;AACA,cAAIA,KAAI,IAAI,cAAc;AACtB,kBAAM,IAAI,MAAM,oCAAoC;AAAA,UACxD;AACA,iBAAOA,KAAI,cAAcA,MAAK;AAC1B,kBAAMC,OAAM,OAAO,YAAYD,EAAC;AAChC,gBAAIC,MAAK;AACL,oBAAM,IAAI,MAAM,qCAAqC;AAAA,YACzD;AAAA,UACJ;AACA,iBAAO;AAAA,QACX;AAAA,MACJ;AACA,YAAM,IAAI,MAAM,uCAAuC;AAAA,IAC3D;AACA,YAAQ,sBAAsB;AAC9B,aAAS,wBAAwB,MAAM,SAAS,UAAU;AACtD,UAAI,QAAQ,QAAQ,GAAG;AACnB,eAAO,CAAC,KAAK,IAAI;AAAA,MACrB,OACK;AACD,cAAM,OAAO,wBAAwB,KAAK,MAAM,SAAS,WAAW,CAAC;AACrE,cAAM,QAAQ,wBAAwB,KAAK,OAAO,SAAS,WAAW,KAAK,SAAS,CAAC;AACrF,eAAO,CAAC,GAAG,MAAM,GAAG,KAAK;AAAA,MAC7B;AAAA,IACJ;AACA,YAAQ,0BAA0B;AAMlC,aAAS,wBAAwB,SAAS,QAAQ,SAAS;AACvD,UAAI,QAAQ,QAAQ,UAAU,GAAG;AAC7B,eAAO,OAAO,SAAS,SAAS,OAAO,QAAQ,WAAW,CAAC;AAAA,MAC/D,OACK;AACD,eAAO,IAAI,OAAO,WAAW,wBAAwB,SAAS,QAAQ,OAAO,GAAG,wBAAwB,SAAS,QAAQ,OAAO,CAAC;AAAA,MACrI;AAAA,IACJ;AACA,YAAQ,0BAA0B;AAClC,aAAS,wBAAwB,UAAU,YAAY;AACnD,aAAO,wBAAwB,UAAU,oBAAoB,UAAU,GAAG,CAAC;AAAA,IAC/E;AACA,YAAQ,0BAA0B;AAClC,aAAS,gCAAgC,QAAQ,YAAY;AACzD,YAAM,QAAQ,oBAAoB,UAAU;AAC5C,UAAI,MAAM,WAAW,OAAO,SAAS,IAAI,GAAG;AACxC,cAAM,IAAI,MAAM,8CAA8C;AAAA,MAClE;AACA,aAAO,wBAAwB,OAAO,QAAQ,EAAE,UAAU,GAAG,WAAW,EAAE,CAAC;AAAA,IAC/E;AACA,YAAQ,kCAAkC;AAAA;AAAA;;;AC7I1C;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,6BAA6B,QAAQ,2BAA2B,QAAQ,yCAAyC,QAAQ,gCAAgC,QAAQ,wBAAwB,QAAQ,wBAAwB,QAAQ,wBAAwB;AACjQ,QAAM,SAAS;AACf,QAAM,SAAS;AAWf,aAAS,sBAAsB,MAAM,QAAQ,eAAe;AACxD,UAAI,CAAC,cAAc,UAAU,CAAC,cAAc,CAAC,EAAE,WAAW,MAAM,GAAG;AAE/D,eAAO,CAAC,CAAC,GAAG,CAAC,CAAC;AAAA,MAClB,WACS,WAAW,cAAc,CAAC,GAAG;AAElC,sBAAc,MAAM;AACpB,eAAO,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;AAAA,MAC3B,OACK;AAED,cAAM,CAAC,aAAa,UAAU,IAAI,sBAAsB,KAAK,MAAM,SAAS,KAAK,aAAa;AAC9F,cAAM,CAAC,cAAc,WAAW,IAAI,sBAAsB,KAAK,OAAO,SAAS,KAAK,aAAa;AAEjG,cAAM,QAAQ,WAAW;AACzB,eAAO,CAAC,CAAC,KAAK,EAAE,OAAO,aAAa,YAAY,GAAG,WAAW,OAAO,WAAW,CAAC;AAAA,MACrF;AAAA,IACJ;AACA,YAAQ,wBAAwB;AAQhC,aAAS,sBAAsB,SAAS,QAAQ;AAC5C,UAAI,CAAC,OAAO,QAAQ;AAChB,cAAM,IAAI,MAAM,gCAAgC;AAAA,MACpD,WACS,OAAO,WAAW,GAAG;AAC1B,eAAO,OAAO,SAAS,SAAS,OAAO,CAAC,CAAC;AAAA,MAC7C,OACK;AAED,cAAM,QAAQ,QAAQ,CAAC;AACvB,eAAO,IAAI,OAAO,WAAW,sBAAsB,QAAQ,MAAM,GAAG,KAAK,GAAG,OAAO,MAAM,GAAG,KAAK,CAAC,GAAG,sBAAsB,QAAQ,MAAM,KAAK,GAAG,OAAO,MAAM,KAAK,CAAC,CAAC;AAAA,MACzK;AAAA,IACJ;AACA,YAAQ,wBAAwB;AAOhC,aAAS,sBAAsB,UAAU,UAAU;AAC/C,aAAO,sBAAsB,UAAU,KAAK,OAAO,4BAA4B,SAAS,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC;AAAA,IACtH;AACA,YAAQ,wBAAwB;AAOhC,aAAS,8BAA8B,SAAS,QAAQ;AAEpD,aAAO,sBAAsB,SAAS,MAAM;AAAA,IAChD;AACA,YAAQ,gCAAgC;AACxC,aAAS,uCAAuC,SAAS,QAAQ;AAE7D,cAAQ,QAAQ,SAAS,KAAK,IAAI,OAAO,SAAS;AAAA,IACtD;AACA,YAAQ,yCAAyC;AAKjD,aAAS,yBAAyB,QAAQ,YAAY,SAAS,QAAQ;AACnE,YAAM,SAAS,IAAI,SAAS,OAAO,QAAQ,OAAO,YAAY,OAAO,UAAU;AAE/E,aAAO,UAAU,YAAY,OAAO,QAAQ,IAAI;AAEhD,YAAM,oBAAoB,aAAa;AACvC,eAASC,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AACrC,eAAO,UAAUA,KAAI,IAAI,mBAAmB,QAAQA,EAAC,GAAG,IAAI;AAAA,MAChE;AAEA,YAAM,mBAAmB,oBAAoB,QAAQ,SAAS;AAC9D,eAASA,KAAI,GAAGA,KAAI,OAAO,QAAQA,MAAK;AACpC,eAAO,IAAI,OAAOA,EAAC,GAAGA,KAAI,KAAK,gBAAgB;AAAA,MACnD;AAAA,IACJ;AACA,YAAQ,2BAA2B;AACnC,aAAS,2BAA2B,MAAM,YAAY;AAClD,YAAM,SAAS,IAAI,SAAS,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU;AAEzE,YAAM,YAAY,OAAO,UAAU,YAAY,IAAI;AACnD,UAAI,KAAK,UAAU,YAAY,KAAK,IAAI,YAAY,IAAI;AACpD,cAAM,IAAI,MAAM,2DAA2D;AAAA,MAC/E;AAEA,YAAM,oBAAoB,aAAa;AACvC,YAAM,UAAU,MAAM,KAAK,EAAE,QAAQ,YAAY,EAAE,GAAG,CAAC,GAAGA,OAAM,OAAO,UAAUA,KAAI,IAAI,mBAAmB,IAAI,CAAC;AAEjH,YAAM,mBAAmB,oBAAoB,QAAQ,SAAS;AAC9D,YAAM,SAAS,MAAM,KAAK,EAAE,QAAQ,UAAU,GAAG,CAAC,GAAGA,OAAM,KAAK,SAASA,KAAI,KAAK,mBAAmBA,KAAI,KAAK,KAAK,gBAAgB,CAAC;AACpI,aAAO,CAAC,SAAS,MAAM;AAAA,IAC3B;AACA,YAAQ,6BAA6B;AAAA;AAAA;;;ACrHrC;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,mBAAmB,QAAQ,iBAAiB,QAAQ,sBAAsB,QAAQ,cAAc,QAAQ,sBAAsB,QAAQ,YAAY,QAAQ,sBAAsB,QAAQ,oBAAoB;AACpN,QAAM,UAAU;AAChB,QAAM,iBAAiB;AACvB,QAAM,WAAW;AACjB,QAAM,eAAe;AACrB,QAAI,iBAAiB;AACrB,WAAO,eAAe,SAAS,qBAAqB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,eAAe;AAAA,IAAmB,EAAE,CAAC;AACvI,WAAO,eAAe,SAAS,uBAAuB,EAAE,YAAY,MAAM,KAAK,WAAY;AAAE,aAAO,eAAe;AAAA,IAAqB,EAAE,CAAC;AAC3I,QAAI;AACJ,KAAC,SAAUC,YAAW;AAClB,MAAAA,WAAU,QAAQ,IAAI;AACtB,MAAAA,WAAU,YAAY,IAAI;AAC1B,MAAAA,WAAU,OAAO,IAAI;AACrB,MAAAA,WAAU,cAAc,IAAI;AAAA,IAChC,GAAG,YAAY,QAAQ,cAAc,QAAQ,YAAY,CAAC,EAAE;AAI5D,YAAQ,sBAAsB;AAAA,MAC1B,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA;AAAA,IACd;AACA,aAAS,YAAY,UAAU,OAAO;AAClC,cAAQ,MAAM,MAAM;AAAA,QAChB,KAAK,UAAU,QAAQ;AACnB,gBAAM,CAAC,MAAM,SAAS,IAAI,SAAS,kBAAkB,UAAU,MAAM,MAAM;AAC3E,iBAAO;AAAA,YACH,MAAM,UAAU;AAAA,YAChB,QAAQ,MAAM;AAAA,YACd;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,YAAY;AACvB,gBAAM,CAAC,SAAS,MAAM,IAAI,aAAa,sBAAsB,UAAU,MAAM,QAAQ;AACrF,iBAAO;AAAA,YACH,MAAM,UAAU;AAAA,YAChB;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,OAAO;AAClB,gBAAM,CAAC,QAAQ,WAAW,QAAQ,IAAI,QAAQ,iBAAiB,UAAU,MAAM,QAAQ;AACvF,iBAAO;AAAA,YACH,MAAM,UAAU;AAAA,YAChB;AAAA,YACA;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAAA,QACA,KAAK,UAAU,cAAc;AACzB,gBAAM,SAAS,eAAe,wBAAwB,UAAU,MAAM,UAAU;AAChF,iBAAO;AAAA,YACH,MAAM,UAAU;AAAA,YAChB;AAAA,YACA,YAAY,MAAM;AAAA,UACtB;AAAA,QACJ;AAAA,QACA;AACI,gBAAM,IAAI,MAAM,oBAAoB;AAAA,MAC5C;AAAA,IACJ;AACA,YAAQ,cAAc;AACtB,aAAS,oBAAoB,OAAO;AAChC,cAAQ,MAAM,MAAM;AAAA,QAChB,KAAK,UAAU;AACX,iBAAO,SAAS,0BAA0B,MAAM,QAAQ,MAAM,MAAM,MAAM,SAAS;AAAA,QACvF,KAAK,UAAU;AACX,iBAAO,aAAa,8BAA8B,MAAM,SAAS,MAAM,MAAM;AAAA,QACjF,KAAK,UAAU;AACX,iBAAO,QAAQ,yBAAyB,MAAM,QAAQ,MAAM,WAAW,MAAM,QAAQ;AAAA,QACzF,KAAK,UAAU;AACX,iBAAO,eAAe,gCAAgC,MAAM,QAAQ,MAAM,UAAU;AAAA,QACxF;AACI,gBAAM,IAAI,MAAM,oBAAoB;AAAA,MAC5C;AAAA,IACJ;AACA,YAAQ,sBAAsB;AAC9B,aAAS,eAAe,OAAO;AAC3B,cAAQ,MAAM,MAAM;AAAA,QAChB,KAAK,UAAU;AAAA,QACf,KAAK,UAAU;AACX,gBAAM,IAAI,MAAM,iBAAiB;AAAA,QACrC,KAAK,UAAU,YAAY;AACvB,gBAAM,SAAS,IAAI,WAAW,IAAI,aAAa,uCAAuC,MAAM,SAAS,MAAM,MAAM,CAAC;AAClH,iBAAO,CAAC,IAAI,QAAQ,oBAAoB,QAAQ,UAAU,UAAU;AACpE,uBAAa,yBAAyB,QAAQ,GAAG,MAAM,SAAS,MAAM,MAAM;AAC5E,iBAAO;AAAA,QACX;AAAA,QACA;AACI,gBAAM,IAAI,MAAM,oBAAoB;AAAA,MAC5C;AAAA,IACJ;AACA,YAAQ,iBAAiB;AACzB,aAAS,iBAAiB,MAAM;AAC5B,YAAM,YAAY,QAAQ,oBAAoB,KAAK,CAAC,CAAC;AACrD,UAAI,CAAC,WAAW;AACZ,cAAM,IAAI,MAAM,oBAAoB;AAAA,MACxC;AACA,cAAQ,WAAW;AAAA,QACf,KAAK,UAAU;AAAA,QACf,KAAK,UAAU;AACX,gBAAM,IAAI,MAAM,iBAAiB;AAAA,QACrC,KAAK,UAAU,YAAY;AACvB,gBAAM,CAAC,SAAS,MAAM,IAAI,aAAa,2BAA2B,MAAM,CAAC;AACzE,iBAAO;AAAA,YACH,MAAM,UAAU;AAAA,YAChB;AAAA,YACA;AAAA,UACJ;AAAA,QACJ;AAAA,QACA;AACI,gBAAM,IAAI,MAAM,oBAAoB;AAAA,MAC5C;AAAA,IACJ;AACA,YAAQ,mBAAmB;AAAA;AAAA;;;ACvH3B;AAAA;AAAA;AAAA;AAAA;AACA,QAAI,kBAAmB,WAAQ,QAAK,oBAAqB,OAAO,SAAU,SAASC,IAAG,GAAG,GAAG,IAAI;AAC5F,UAAI,OAAO;AAAW,aAAK;AAC3B,aAAO,eAAeA,IAAG,IAAI,EAAE,YAAY,MAAM,KAAK,WAAW;AAAE,eAAO,EAAE,CAAC;AAAA,MAAG,EAAE,CAAC;AAAA,IACvF,IAAM,SAASA,IAAG,GAAG,GAAG,IAAI;AACxB,UAAI,OAAO;AAAW,aAAK;AAC3B,MAAAA,GAAE,EAAE,IAAI,EAAE,CAAC;AAAA,IACf;AACA,QAAI,eAAgB,WAAQ,QAAK,gBAAiB,SAAS,GAAGC,UAAS;AACnE,eAAS,KAAK;AAAG,YAAI,MAAM,aAAa,CAAC,OAAO,UAAU,eAAe,KAAKA,UAAS,CAAC;AAAG,0BAAgBA,UAAS,GAAG,CAAC;AAAA,IAC5H;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,iBAAa,kBAAqB,OAAO;AACzC,iBAAa,kBAAqB,OAAO;AACzC,iBAAa,gBAAmB,OAAO;AACvC,iBAAa,sBAAyB,OAAO;AAC7C,iBAAa,iBAAoB,OAAO;AACxC,iBAAa,mBAAsB,OAAO;AAC1C,iBAAa,gBAAmB,OAAO;AACvC,iBAAa,oBAAuB,OAAO;AAAA;AAAA;;;;;;;;;;ACnB3C,QAAA,UAAA;AAGA,QAAM,aAAa,CAAC,IAAI,WAAW,EAAE,CAAC;AAEtC,aAAgB,SAAS,OAAa;AACpC,UAAI,SAAS,WAAW,QAAQ;AAC9B,iBAASC,KAAI,WAAW,QAAQA,MAAK,OAAOA,MAAK;AAC/C,qBAAWA,EAAC,IAAI,QAAA,OAAO,SAAS,WAAWA,KAAI,CAAC,GAAG,WAAWA,KAAI,CAAC,CAAC;;;AAGxE,aAAO,WAAW,KAAK;IACzB;AAPA,YAAA,WAAA;;;;;;;;;;;;ACLA,QAAA,UAAA;AACA,QAAA,UAAA;AAEA,aAAgB,OAAO,UAAsB,UAAoB;AAC/D,aAAO,QAAA,OAAO,SAAS,UAAU,QAAQ;IAC3C;AAFA,YAAA,SAAA;AAIA,aAAgB,UAAU,QAAsB,QAAc;AAC5D,YAAM,aAAa,UAAU,aAAa,MAAM,IAAI,CAAC;AACrD,UAAI,OAAO,UAAU,GAAG;AACtB,eAAO,QAAA,SAAS,UAAU;;AAG5B,UAAI,aAAa,OAAO;AAIxB,eAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACnC,cAAM,WAAW,aAAa;AAC9B,cAAM,mBAAmB,aAAa;AAItC,iBAASC,KAAI,GAAGA,KAAI,UAAUA,MAAK;AACjC,iBAAO,aAAaA,EAAC,IAAI,QAAA,SAAS,CAAC;;AAGrC,iBAASA,KAAI,GAAGA,KAAI,kBAAkBA,MAAK,GAAG;AAC5C,iBAAOA,KAAI,CAAC,IAAI,OAAO,OAAOA,EAAC,GAAG,OAAOA,KAAI,CAAC,CAAC;;AAGjD,qBAAa,mBAAmB;;AAGlC,aAAO,OAAO,CAAC;IACjB;AA5BA,YAAA,YAAA;AAiCA,aAAgB,oBAAoB,WAAqB;AACvD,YAAM,aAAa,KAAK,KAAK,UAAU,SAAS,EAAE;AAClD,YAAM,SAAS,IAAI,MAAkB,UAAU;AAE/C,eAASA,KAAI,GAAGA,KAAI,YAAYA,MAAK;AACnC,cAAM,QAAQ,IAAI,WAAW,EAAE;AAC/B,cAAM,IAAI,UAAU,MAAMA,KAAI,KAAKA,KAAI,KAAK,EAAE,CAAC;AAC/C,eAAOA,EAAC,IAAI;;AAGd,aAAO;IACT;AAXA,YAAA,sBAAA;AAcA,aAAgB,YAAY,MAAkBC,SAAc;AAC1D,YAAM,YAAY,OAAO,MAAM,EAAE;AACjC,gBAAU,YAAYA,SAAQ,GAAG,CAAC;AAClC,aAAO,OAAO,MAAM,SAAS;IAC/B;AAJA,YAAA,cAAA;AAOA,aAAgB,UAAUD,IAAS;AACjC,UAAIA,OAAM,GAAG;AACX,eAAO;;AAGT,aAAO,KAAK,MAAM,KAAK,KAAKA,EAAC,CAAC,IAAI;IACpC;AANA,YAAA,YAAA;AAeA,aAAgB,iBAAiBE,IAAS;AACxC,UAAIA,OAAM;AAAG,eAAO;AACpB,aAAO,KAAK,KAAK,KAAK,KAAKA,EAAC,CAAC;IAC/B;AAHA,YAAA,mBAAA;AAMA,aAAgB,aAAaA,IAAS;AACpC,aAAOA,MAAK,IAAI,IAAI,KAAK,IAAI,GAAG,UAAUA,KAAI,CAAC,CAAC;IAClD;AAFA,YAAA,eAAA;;;;;;;;;;;;AClFA,aAAgB,WAAc,YAAe,WAAiB;AAC5D,aAAO,IAAI,SAAS,cAAc,gBAAgB,iCAAiC,EAAE,UAAU;IACjG;AAFA,YAAA,aAAA;;;;;;;;;;;;ACAA,QAAA,2BAAA;AA2BA,aAAgB,sBAAsB,MAAU;AAI9C,aAAQ,KAAK,MAAmB,QAAQ,GAAG,CAAC;IAC9C;AALA,YAAA,wBAAA;AAMA,aAAgB,0BAA0B,MAAU;AAClD,aAAO,KAAK;IACd;AAFA,YAAA,4BAAA;AAIA,aAAgB,cAAc,YAAkBC,SAAc;AAC5D,aAAO,IAAI,yBAAA,WAAW,YAAY,yBAAA,SAAS,WAAWA,OAAM,CAAC;IAC/D;AAFA,YAAA,gBAAA;AAIA,aAAgB,cAAc,UAAgB,YAAkB,WAAkB;AAChF,YAAM,aACJ,cAAc;;QAEV,yBAAA,SAAS,WAAW,SAAS;;;QAE5B,SAAS;;AAChB,aAAO,IAAI,yBAAA,WAAW,YAAY,UAAU;IAC9C;AARA,YAAA,gBAAA;AAeA,aAAgB,iCACd,aACAA,SACA,QACA,QACAC,QAAsC;AAEtC,YAAM,SAAS,YAAY;AAC3B,eAASC,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAC/B,oBAAY,uBAAuB,QAAQ,SAASA,KAAI,QAAQD,OAAMC,EAAC,CAAC;;AAE1E,aAAO,SAASF,UAAS;IAC3B;AAZA,YAAA,mCAAA;AAcA,aAAgB,qCACd,aACA,MACA,OACA,KACA,YAAsB;AAEtB,YAAM,SAAS,YAAY;AAG3B,YAAMA,WAAU,MAAM,SAAS;AAC/B,6BAAuBA,SAAQ,YAAY,IAAI;AAE/C,YAAM,SAAS,IAAI,MAA4BA,OAAM;AAErD,eAASE,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAE/B,eAAOA,EAAC,IAAI,YAAY,2BACtB,MACA,QAAQA,KAAI,QACZ,SAASA,KAAI,KAAK,MAAM;;AAI5B,aAAO;IACT;AAzBA,YAAA,uCAAA;AA8BA,aAAgB,gCACd,aACAF,SACA,OACA,QACA,QACA,MAAU;AAEV,YAAM,OAAO,YAAY,aAAaA;AACtC,YAAM,aAAa,KAAK,KAAK,OAAO,EAAE;AAEtC,YAAM,QAAQ,yBAAA,gBAAgB,MAAM,OAAO,GAAG,UAAU;AACxD,+BAAA,uBAAuB,OAAO,UAAU,QAAQ,MAAM,KAAK;AAE3D,aAAO,SAAS;IAClB;AAfA,YAAA,kCAAA;AAkBA,aAAgB,oCACd,aACA,YACA,MACA,OACA,KACA,YAAsB;AAGtB,YAAMA,WAAU,MAAM,SAAS,YAAY;AAC3C,6BAAuBA,SAAQ,YAAY,IAAI;AAG/C,YAAM,aAAa,yBAAA,uBAAuB,YAAY,KAAK,UAAU,OAAO,GAAG;AAE/E,UAAI,WAAW,QAAQ;AACrB,eAAO,cAAc,YAAYA,OAAM;aAClC;AACL,eAAO;;IAEX;AApBA,YAAA,sCAAA;AAyBA,aAAgB,oBACd,aACA,MACA,YAAsB;AAEtB,UAAI,CAAC,MAAM,QAAQ,IAAI,GAAG;AACxB,cAAM,MAAM,sBAAsB;;AAGpC,6BAAuB,KAAK,QAAQ,UAAU;AAE9C,YAAMC,SAAQ,IAAI,MAA4B,KAAK,MAAM;AACzD,eAASC,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACpC,QAAAD,OAAMC,EAAC,IAAI,YAAY,SAAS,KAAKA,EAAC,CAAC;;AAEzC,aAAOD;IACT;AAhBA,YAAA,sBAAA;AAqBA,aAAgB,kBACd,aACAA,QACA,YAAsB;AAEtB,YAAMD,UAAS,WAAW,SAASC,OAAM,SAAS,WAAW;AAE7D,YAAM,OAAO,IAAI,MAAeD,OAAM;AACtC,eAASE,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAC/B,aAAKA,EAAC,IAAI,YAAY,OAAOD,OAAMC,EAAC,CAAC;;AAEvC,aAAO;IACT;AAZA,YAAA,oBAAA;AAiBA,aAAgB,iBACd,aACAD,QAA6B;AAE7B,YAAM,WAAW,IAAI,MAA4BA,OAAM,MAAM;AAE7D,eAASC,KAAI,GAAGA,KAAID,OAAM,QAAQC,MAAK;AACrC,iBAASA,EAAC,IAAI,YAAY,MAAMD,OAAMC,EAAC,CAAC;;AAG1C,aAAO;IACT;AAXA,YAAA,mBAAA;AAgBA,aAAgB,aACd,aACA,GACA,GAAyB;AAEzB,UAAI,EAAE,WAAW,EAAE,QAAQ;AACzB,eAAO;;AAGT,eAASA,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAAK;AACjC,YAAI,CAAC,YAAY,OAAO,EAAEA,EAAC,GAAG,EAAEA,EAAC,CAAC,GAAG;AACnC,iBAAO;;;AAIX,aAAO;IACT;AAhBA,YAAA,eAAA;AAkBA,aAAgB,wBACd,aACAF,SAAc;AAEd,YAAM,SAAS,IAAI,MAA4BA,OAAM;AACrD,eAASE,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAC/B,eAAOA,EAAC,IAAI,YAAY,aAAY;;AAEtC,aAAO;IACT;AATA,YAAA,0BAAA;AAeA,aAAgB,uBAAuBF,SAAgB,YAAwB,uBAA+B;AAC5G,UAAI,yBAAyBA,UAAS,MAAM,GAAG;AAC7C,cAAM,MAAM,wCAAwC;;AAItD,UAAI,WAAW,QAAQ;AACrB,YAAIA,UAAS,WAAW,OAAO;AAC7B,gBAAM,IAAI,MAAM,uBAAuBA,sBAAqB,WAAW,OAAO;;aAE3E;AACL,YAAIA,YAAW,WAAW,QAAQ;AAChC,gBAAM,IAAI,MAAM,2BAA2BA,oBAAmB,WAAW,QAAQ;;;IAGvF;AAfA,YAAA,yBAAA;;;;;;;;;;;;ACrOA,QAAM,8BAA8B,IAAI,MAAiB,GAAG;AAgB5D,QAAa,WAAb,MAAqB;MACnB,YAEW,YAEA,QAAc;AAFd,aAAA,aAAA;AAEA,aAAA,SAAA;AAET,YAAI,WAAW,WAAW,KAAK,KAAK,SAAS,CAAC,GAAG;AAC/C,gBAAM,MAAM,kDAAkD;;MAElE;;MAGA,OAAO,WAAW,QAAc;AAC9B,eAAO,IAAI,SAAS,IAAI,WAAW,KAAK,KAAK,SAAS,CAAC,CAAC,GAAG,MAAM;MACnE;;MAGA,OAAO,cAAc,QAAgB,UAAgB;AACnD,cAAM,WAAW,SAAS,WAAW,MAAM;AAC3C,iBAAS,IAAI,UAAU,IAAI;AAC3B,eAAO;MACT;;MAGA,OAAO,cAAc,YAAqB;AACxC,cAAM,WAAW,SAAS,WAAW,WAAW,MAAM;AACtD,iBAASG,KAAI,GAAGA,KAAI,WAAW,QAAQA,MAAK;AAC1C,cAAI,WAAWA,EAAC,MAAM,MAAM;AAC1B,qBAAS,IAAIA,IAAG,IAAI;;;AAGxB,eAAO;MACT;MAEA,QAAK;AAGH,eAAO,IAAI,SAAS,WAAW,UAAU,MAAM,KAAK,KAAK,YAAY,CAAC,GAAG,KAAK,MAAM;MACtF;;;;MAKA,IAAI,UAAgB;AAClB,cAAM,UAAU,KAAK,MAAM,WAAW,CAAC;AACvC,cAAM,WAAW,WAAW;AAC5B,cAAM,OAAO,KAAK;AAClB,gBAAQ,KAAK,WAAW,OAAO,IAAI,UAAU;MAC/C;;;;MAKA,IAAI,UAAkB,KAAY;AAChC,YAAI,YAAY,KAAK,QAAQ;AAC3B,gBAAM,MAAM,yBAAyB,0BAA0B,KAAK,QAAQ;;AAG9E,cAAM,UAAU,KAAK,MAAM,WAAW,CAAC;AACvC,cAAM,WAAW,WAAW;AAC5B,cAAM,OAAO,KAAK;AAClB,YAAI,OAAO,KAAK,WAAW,OAAO;AAClC,YAAI,KAAK;AAKP,kBAAQ;AACR,eAAK,WAAW,OAAO,IAAI;eACtB;AAEL,eAAK,OAAO,UAAU,MAAM;AAI1B,oBAAQ;AACR,iBAAK,WAAW,OAAO,IAAI;iBACtB;;;MAIX;;MAGA,YAAY,WAAmB;AAC7B,YAAI,UAAU,WAAW,KAAK,QAAQ;AACpC,gBAAM,MAAM,qCAAqC;;AAInD,iBAASA,KAAI,GAAGA,KAAI,KAAK,WAAW,QAAQA,MAAK;AAC/C,eAAK,WAAWA,EAAC,IAAI,KAAK,WAAWA,EAAC,IAAI,UAAU,WAAWA,EAAC;;MAEpE;;;;MAKA,gBAAmB,QAAW;AAC5B,cAAM,MAAW,CAAA;AAEjB,YAAI,OAAO,WAAW,KAAK,QAAQ;AACjC,gBAAM,MAAM,uCAAuC,OAAO,oBAAoB,KAAK,QAAQ;;AAG7F,cAAM,cAAc,KAAK,MAAM,KAAK,SAAS,CAAC;AAC9C,cAAM,gBAAgB,KAAK,SAAS;AAGpC,cAAM,QAAQ,KAAK;AACnB,iBAAS,QAAQ,GAAG,QAAQ,aAAa,SAAS;AAEhD,gBAAM,iBAAiB,8BAA8B,MAAM,KAAK,CAAC;AAEjE,mBAAS,OAAO,GAAG,OAAO,GAAG,QAAQ;AACnC,gBAAI,eAAe,IAAI,GAAG;AACxB,kBAAI,KAAK,OAAO,QAAQ,IAAI,IAAI,CAAC;;;;AAKvC,YAAI,gBAAgB,GAAG;AAErB,gBAAM,iBAAiB,8BAA8B,MAAM,WAAW,CAAC;AAEvE,mBAAS,OAAO,GAAG,OAAO,eAAe,QAAQ;AAC/C,gBAAI,eAAe,IAAI,GAAG;AACxB,kBAAI,KAAK,OAAO,cAAc,IAAI,IAAI,CAAC;;;;AAK7C,eAAO;MACT;;;;MAKA,oBAAiB;AACf,cAAM,UAAoB,CAAA;AAG1B,cAAM,QAAQ,KAAK;AACnB,iBAAS,QAAQ,GAAG,UAAU,MAAM,QAAQ,QAAQ,SAAS,SAAS;AAEpE,gBAAM,iBAAiB,8BAA8B,MAAM,KAAK,CAAC;AAEjE,mBAAS,OAAO,GAAG,OAAO,GAAG,QAAQ;AACnC,gBAAI,eAAe,IAAI,GAAG;AACxB,sBAAQ,KAAK,QAAQ,IAAI,IAAI;;;;AAKnC,eAAO;MACT;;;;;;;;;;MAWA,mBAAgB;AACd,YAAI,QAAuB;AAE3B,cAAM,QAAQ,KAAK;AAGnB,iBAAS,QAAQ,GAAG,UAAU,MAAM,QAAQ,QAAQ,SAAS,SAAS;AAEpE,cAAI,MAAM,KAAK,MAAM,GAAG;AACtB;;AAIF,gBAAM,iBAAiB,8BAA8B,MAAM,KAAK,CAAC;AAEjE,mBAAS,OAAO,GAAG,OAAO,GAAG,QAAQ;AACnC,gBAAI,eAAe,IAAI,MAAM,MAAM;AACjC,kBAAI,UAAU,MAAM;AAElB,uBAAO;;AAGT,sBAAQ,QAAQ,IAAI;;;;AAK1B,YAAI,UAAU,MAAM;AAElB,iBAAO;eACF;AACL,iBAAO;;MAEX;MAEA,cAAW;AACT,cAAM,aAAa,IAAI,MAAe,KAAK,MAAM;AACjD,iBAASA,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACpC,qBAAWA,EAAC,IAAI,KAAK,IAAIA,EAAC;;AAE5B,eAAO;MACT;;AAhNF,YAAA,WAAA;AAwNA,aAAgB,8BAA8B,MAAY;AACxD,UAAI,CAAC,4BAA4B,IAAI,GAAG;AACtC,oCAA4B,IAAI,IAAI,kCAAkC,IAAI;;AAE5E,aAAO,4BAA4B,IAAI;IACzC;AALA,YAAA,gCAAA;AAQA,aAAS,kCAAkC,MAAY;AAErD,YAAM,YAAY,KAAK,SAAS,CAAC;AACjC,YAAM,eAAe,UAAU;AAC/B,YAAM,OAAO,IAAI,MAAe,CAAC;AACjC,eAASA,KAAI,GAAGA,KAAI,GAAGA,MAAK;AAC1B,aAAKA,EAAC,IACJA,KAAI;;UAEA,UAAU,eAAeA,KAAI,CAAC,MAAM;YACpC;;AAER,aAAO;IACT;;;;;;;;;;;;AC3PA,QAAM,YAAY,IAAI,MAAc,GAAG;AAEvC,aAAgB,YAAY,OAA8B;AACxD,UAAI,MAAM;AACV,iBAAW,QAAQ,OAAO;AACxB,YAAI,CAAC,UAAU,IAAI,GAAG;AACpB,oBAAU,IAAI,IAAI,OAAO,KAAK,MAAM,KAAK,SAAS,EAAE,IAAI,KAAK,SAAS,EAAE;;AAE1E,eAAO,UAAU,IAAI;;AAEvB,aAAO;IACT;AATA,YAAA,cAAA;AAWA,aAAgB,cAAc,KAAW;AACvC,UAAI,OAAO,QAAQ,UAAU;AAC3B,cAAM,IAAI,MAAM,qBAAqB,OAAO,4BAA4B;;AAG1E,UAAI,IAAI,WAAW,IAAI,GAAG;AACxB,cAAM,IAAI,MAAM,CAAC;;AAGnB,UAAI,IAAI,SAAS,MAAM,GAAG;AACxB,cAAM,IAAI,MAAM,qBAAqB,IAAI,8BAA8B;;AAGzE,YAAM,UAAU,IAAI,SAAS;AAC7B,YAAM,QAAQ,IAAI,WAAW,OAAO;AACpC,eAASC,KAAI,GAAGA,KAAI,SAASA,MAAK;AAChC,cAAM,OAAO,SAAS,IAAI,MAAMA,KAAI,IAAIA,KAAI,KAAK,CAAC,GAAG,EAAE;AACvD,cAAMA,EAAC,IAAI;;AAEb,aAAO;IACT;AApBA,YAAA,gBAAA;AAsBA,aAAgB,gBAAgB,GAAe,GAAa;AAC1D,UAAI,EAAE,WAAW,EAAE,QAAQ;AACzB,eAAO;;AAET,eAASA,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAAK;AACjC,YAAI,EAAEA,EAAC,MAAM,EAAEA,EAAC;AAAG,iBAAO;;AAE5B,aAAO;IACT;AARA,YAAA,kBAAA;;;;;;;;;;;;ACtCA,QAAA,2BAAA;AAwBA,aAAS,gBAAgBC,OAAU;AACjC,aAAO,CAACA,MAAK;IACf;AAWA,aAAgB,6BAA6B,MAAYA,OAAqB,YAAY,IAAI,eAAe,GAAC;AAE5G,UAAI,iBAAiB,GAAG;AACtB,cAAM,WAAWA,MAAK,mBAAmB,IAAI;AAC7C,YAAI,SAAS,MAAM;AACjB,iBAAO,SAAS;eACX;AACL,iBAAO,SAAS;;;AAIpB,YAAM,cAAcA,MAAK,UAAU;AAEnC,UAAI,KAAK,OAAM,GAAI;AACjB,YAAI,aAAa;AACf,gBAAM,eAAeA,MAAK,iBAAiB,iBAAiB,SAAS,CAAC;AACtE,cAAI,iBAAiB,MAAM;AAEzB,mBAAO;;AAGT,gBAAM,YAAYA,MAAK,gBAAgB,YAAY;AAGnD,cAAI,UAAU,kBAAkB,KAAK,gBAAgB,SAAS,GAAG;AAC/D,mBAAO,UAAU,mBAAmB,IAAI,EAAE;iBAGvC;AACH,mBAAO;;eAKN;AACH,iBAAO;;aAEJ;AACL,YAAI,aAAa;AACf,gBAAM,eAAeA,MAAK,iBAAiB,iBAAiB,SAAS,CAAC;AACtE,cAAI,iBAAiB,MAAM;AAEzB,mBAAO;;AAGT,gBAAM,YAAYA,MAAK,gBAAgB,YAAY;AAEnD,cAAI,CAAC,gBAAgB,SAAS,GAAG;AAC/B,kBAAM,MAAM,0CAA0C;;AAGxD,gBAAM,WAAW,UAAU,mBAAmB,IAAI;AAGlD,cAAI,SAAS,MAAM;AACjB,mBAAO,SAAS;iBACX;AACL,mBAAO,6BAA6B,SAAS,MAAM,SAAS;;eAK3D;AACH,gBAAM,WAAW,6BAA6B,KAAK,MAAMA,OAAM,YAAY,KAAK,eAAe,CAAC;AAChG,gBAAM,YAAY,6BAA6B,KAAK,OAAOA,OAAM,YAAY,KAAK,eAAe,CAAC;AAElG,cAAI,aAAa,KAAK,QAAQ,cAAc,KAAK,OAAO;AACtD,mBAAO;iBACF;AACL,mBAAO,IAAI,yBAAA,WAAW,UAAU,SAAS;;;;IAIjD;AAzEA,YAAA,+BAAA;AA4EA,aAAS,iBAAiB,WAAiB;AACzC,UAAI,cAAc;AAAI,eAAO;AAC7B,aAAO,SAAS,WAAW,CAAC;IAC9B;;;;;;;;;;;;ACpEA,QAAsB,OAAtB,MAA0B;;MA8CxB,aAAaC,QAAQ;AAEnB,cAAM,aAAa,IAAI,WAAW,KAAK,qBAAqBA,MAAK,CAAC;AAClE,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,aAAK,uBAAuB,EAAC,YAAY,SAAQ,GAAG,GAAGA,MAAK;AAC5D,eAAO,KAAK,0BAA0B,EAAC,YAAY,SAAQ,GAAG,GAAG,WAAW,MAAM;MACpF;;MAGA,aAAa,MAAU;AAErB,cAAM,aAAa,IAAI,WAAW,KAAK,oBAAoB,IAAI,CAAC;AAChE,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,aAAK,sBAAsB,EAAC,YAAY,SAAQ,GAAG,GAAG,IAAI;AAC1D,eAAO,KAAK,2BAA2B,EAAC,YAAY,SAAQ,GAAG,GAAG,WAAW,MAAM;MACrF;;MAQA,UAAUA,QAAQ;AAChB,cAAM,aAAa,IAAI,WAAW,KAAK,qBAAqBA,MAAK,CAAC;AAClE,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,aAAK,uBAAuB,EAAC,YAAY,SAAQ,GAAG,GAAGA,MAAK;AAC5D,eAAO;MACT;;MAGA,YAAY,YAAsB;AAQhC,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,eAAO,KAAK,2BAA2B,EAAC,YAAY,SAAQ,GAAG,GAAG,WAAW,MAAM;MACrF;;AAvFF,YAAA,OAAA;;;;;;;;;;;;AChDA,QAAA,2BAAA;AAUA,QAAA,cAAA;AACA,QAAA,cAAA;AACA,QAAA,iCAAA;AACA,QAAA,aAAA;AAGa,YAAA,gBAAgB,OAAO,CAAC;AAwBrC,QAAM,4BAA4B,OAAO,2BAA2B;AAapE,QAAsB,gBAAtB,cAAyD,WAAA,KAAO;MAgB9D,YAMmB,0BAAkC;AAEnD,cAAK;AAFY,aAAA,2BAAA;AArBV,aAAA,UAAU;MAwBnB;;MAGA,cAAW;AACT,eAAO,KAAK,OAAO,KAAK,aAAY,CAAE;MACxC;;MAGA,gBAAa;AACX,eAAO,KAAK,SAAS,KAAK,aAAY,CAAE;MAC1C;;;;;MAwDA,kBAAkB,MAAgB;AAChC,cAAM,WAAW,IAAI,SAAS,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU;AAC3E,cAAM,OAAO,KAAK,0BAA0B,EAAC,YAAY,MAAM,SAAQ,GAAG,GAAG,KAAK,MAAM;AACxF,eAAO,KAAK,QAAQ,IAAI,yBAAA,KAAK,IAAI,CAAC;MACpC;;;;;MAMA,oBAAoB,MAAgB;AAClC,cAAM,WAAW,IAAI,SAAS,KAAK,QAAQ,KAAK,YAAY,KAAK,UAAU;AAC3E,cAAM,OAAO,KAAK,0BAA0B,EAAC,YAAY,MAAM,SAAQ,GAAG,GAAG,KAAK,MAAM;AACxF,eAAO,KAAK,UAAU,IAAI;MAC5B;;;;;MAMA,OAAOC,QAAQ;AACb,cAAM,OAAO,KAAK,aAAaA,MAAK;AACpC,eAAO,KAAK,QAAQ,IAAI,yBAAA,KAAK,IAAI,CAAC;MACpC;;;;;MAMA,SAASA,QAAQ;AACf,cAAM,OAAO,KAAK,aAAaA,MAAK;AACpC,eAAO,KAAK,UAAU,IAAI;MAC5B;;;;;MAMA,gBAAgB,MAAQ;AACtB,cAAM,OAAO,KAAK,WAAW,IAAI;AACjC,eAAO,KAAK,aAAa,IAAI;MAC/B;;;;;MAMA,kBAAkB,MAAU;AAC1B,cAAM,OAAO,KAAK,aAAa,IAAI;AACnC,eAAO,KAAK,aAAa,IAAI;MAC/B;;;;;MAMA,iBAAiB,MAAU;AACzB,cAAM,OAAO,KAAK,aAAa,IAAI;AACnC,eAAO,KAAK,QAAQ,IAAI,yBAAA,KAAK,IAAI,CAAC;MACpC;;;;;MAMA,iBAAiB,MAAQ;AACvB,cAAM,OAAO,KAAK,WAAW,IAAI;AACjC,eAAO,KAAK,UAAU,IAAI;MAC5B;;MAIA,aAAaA,QAAQ;AAEnB,YAAI,KAAK,0BAA0B;AACjC,gBAAM,aAAcA,OAAuC,yBAAyB;AACpF,cAAI,YAAY;AACd,mBAAO;;;AAIX,cAAM,OAAO,YAAA,UAAU,KAAK,SAASA,MAAK,GAAG,KAAK,aAAa;AAE/D,YAAI,KAAK,0BAA0B;AAChC,UAAAA,OAAuC,yBAAyB,IAAI;;AAGvE,eAAO;MACT;;MAGU,uBAAuBA,QAAQ;AACvC,eAAQA,OAAuC,yBAAyB;MAC1E;;;;;;MAgBA,gBAAgB,OAAc,MAAiB;AAC7C,cAAM,oBAAoB,yBAAA,KAAK,gBAAgB,KAAK,EAAE;AACtD,cAAM,WAAW,+BAAA,6BAA6B,mBAAmB,IAAI;AACrE,YAAI,SAAS,UAAa,CAAC,YAAA,gBAAgB,SAAS,MAAM,IAAI,GAAG;AAC/D,gBAAM,IAAI,MAAM,mCAAmC;;AAGrD,eAAO,KAAK,QAAQ,IAAI,yBAAA,KAAK,QAAQ,CAAC;MACxC;;MAGA,iBAAiB,MAAY,WAAqB;AAChD,cAAM,WAAW,KAAK,yBAAyB,MAAM,SAAS;AAC9D,eAAO,yBAAA,YAAY,MAAM;UACvB,MAAM,yBAAA,UAAU;UAChB,UAAU;SACX;MACH;;MAGA,yBAAyB,MAAY,WAAqB;AACxD,cAAM,WAAqB,CAAA;AAE3B,mBAAW,YAAY,WAAW;AAChC,gBAAM,EAAC,MAAAC,OAAM,OAAM,IAAI,KAAK,YAAY,QAAQ;AAChD,cAAI,CAAC,gBAAgBA,KAAI,GAAG;AAC1B,qBAAS,KAAK,MAAM;iBACf;AAEL,kBAAM,eAAeA,MAAK,qBACxB,QACAA,MAAK,cAAc,OAAO,yBAAA,QAAQ,MAAM,MAAM,IAAI,MAAS;AAE7D,uBAAWC,WAAU,cAAc;AACjC,uBAAS,KAAKA,OAAM;;;;AAK1B,eAAO;MACT;;;;MAKA,YAAY,MAAc;AACxB,cAAM,WAAqB,CAAA;AAC3B,YAAID,QAAO;AACX,mBAAW,QAAQ,MAAM;AACvB,cAAIA,MAAK,SAAS;AAChB,kBAAM,IAAI,MAAM,mDAAmD;;AAErE,gBAAM,SAAUA,MAA0B,kBAAkB,IAAI;AAEhE,cAAI,WAAW,MAAM;AACnB,qBAAS,KAAK,MAAM;AACpB,YAAAA,QAAQA,MAA0B,gBAAgB,IAAI;;;AAI1D,eAAO;UACL,MAAAA;UACA,QAAQ,yBAAA,eAAe,QAAQ;;MAEnC;;;;;;MAOA,mBAAmB,MAAU;AAC3B,eAAO,EAAC,MAAM,MAAM,MAAK;MAC3B;;AAjRF,YAAA,gBAAA;AAuSA,aAAgB,gBAAgBA,OAAmB;AACjD,aAAO,CAACA,MAAK;IACf;AAFA,YAAA,kBAAA;;;;;;;;;;;;AC5VA,QAAA,2BAAA;AAeA,QAAsB,WAAtB,MAA8B;;MAO5B,YAAS;AACP,cAAM,SAAS,IAAI,WAAW,KAAK,KAAK,oBAAoB,KAAK,IAAI,CAAC;AACtE,cAAM,WAAW,IAAI,SAAS,OAAO,QAAQ,OAAO,YAAY,OAAO,UAAU;AACjF,aAAK,KAAK,sBAAsB,EAAC,YAAY,QAAQ,SAAQ,GAAG,GAAG,KAAK,IAAI;AAC5E,eAAO;MACT;;;;;;;MAQA,eAAY;AACV,eAAO,KAAK,KAAK;MACnB;;;;;;;;;;;;;;;MAgBA,YAAY,OAAiB;AAC3B,eAAO,KAAK,KAAK,iBAAiB,KAAK,MAAM,KAAK;MACpD;;;;;MAMA,UAAO;AACL,eAAO,KAAK,KAAK,aAAa,KAAK,IAAI;MACzC;;MAGA,QAAK;AACH,eAAO,KAAK,KAAK,QAAQ,IAAI,yBAAA,KAAK,KAAK,IAAI,CAAC;MAC9C;;AArDF,YAAA,WAAA;;;;;;;;;;;;ACZA,QAAA,aAAA;AAKA,QAAa,mBAAb,cAAsC,WAAA,SAAmD;MAGvF,YAAqBE,OAA2D,MAAU;AACxF,cAAK;AADc,aAAA,OAAAA;AAA2D,aAAA,OAAA;AAG9E,aAAK,WAAWA,MAAK,aAAa,KAAK,QAAQ;MACjD;MAEA,IAAI,OAAI;AACN,eAAO,KAAK,KAAK;MACnB;;;MAKA,IAAI,aAAU;AACZ,eAAO,KAAK,SAAS;MACvB;;MAGA,IAAI,SAAM;AACR,eAAO,KAAK,SAAS;MACvB;;MAGA,IAAI,UAAgB;AAClB,eAAO,KAAK,SAAS,IAAI,QAAQ;MACnC;;MAGA,IAAI,UAAkB,KAAY;AAChC,aAAK,SAAS,IAAI,UAAU,GAAG;AAG/B,aAAK,KAAK,WAAW,KAAK,KAAK,aAAa,KAAK,QAAQ;MAC3D;;MAGA,YAAY,WAAmB;AAC7B,aAAK,SAAS,YAAY,SAAS;MACrC;;MAGA,gBAAmB,QAAW;AAC5B,eAAO,KAAK,SAAS,gBAAgB,MAAM;MAC7C;;MAGA,oBAAiB;AACf,eAAO,KAAK,SAAS,kBAAiB;MACxC;;MAGA,mBAAgB;AACd,eAAO,KAAK,SAAS,iBAAgB;MACvC;;MAGA,cAAW;AACT,eAAO,KAAK,SAAS,YAAW;MAClC;;AA7DF,YAAA,mBAAA;;;;;;;;;;;;ACPA,QAAA,aAAA;AAgBA,QAAsB,aAAtB,cAA6F,WAAA,SAAW;;;;;;;;MAyBtG,eAAY;AACV,aAAK,OAAM;AACX,eAAO,MAAM,aAAY;MAC3B;;;;;MAMA,YAAS;AACP,aAAK,OAAM;AACX,eAAO,MAAM,UAAS;MACxB;;;;;;;MAQA,MAAM,mBAA2B;AAC/B,YAAI,mBAAmB;AACrB,iBAAO,KAAK,KAAK,UAAU,KAAK,IAAI;eAC/B;AACL,gBAAMC,SAAQ,KAAK;AACnB,eAAK,WAAU;AACf,iBAAO,KAAK,KAAK,UAAU,KAAK,MAAMA,MAAK;;MAE/C;;AArDF,YAAA,aAAA;;;;;;;;;;;;ACdA,QAAA,aAAA;AAKA,QAAa,qBAAb,cAAwC,WAAA,WAAqD;MAI3F,YAAqBC,OAA2D,WAAe;AAC7F,cAAK;AADc,aAAA,OAAAA;AAA2D,aAAA,YAAA;AAFxE,aAAA,YAA6B;MAIrC;MAEA,IAAI,OAAI;AACN,eAAO,KAAK;MACd;MAEA,IAAI,QAAK;AACP;MACF;MAEA,SAAM;AACJ,YAAI,KAAK,cAAc,MAAM;AAC3B,eAAK,YAAY,KAAK,KAAK,aAAa,KAAK,SAAS;;MAE1D;;;MAKA,IAAI,aAAU;AACZ,eAAO,KAAK,SAAS;MACvB;;MAGA,IAAI,SAAM;AACR,eAAO,KAAK,SAAS;MACvB;;MAGA,IAAI,UAAgB;AAClB,eAAO,KAAK,SAAS,IAAI,QAAQ;MACnC;;MAGA,IAAI,UAAkB,KAAY;AAChC,aAAK,SAAS,IAAI,UAAU,GAAG;MACjC;;MAGA,YAAY,WAAmB;AAC7B,aAAK,SAAS,YAAY,SAAS;MACrC;;MAGA,gBAAmB,QAAW;AAC5B,eAAO,KAAK,SAAS,gBAAgB,MAAM;MAC7C;;MAGA,oBAAiB;AACf,eAAO,KAAK,SAAS,kBAAiB;MACxC;;MAGA,mBAAgB;AACd,eAAO,KAAK,SAAS,iBAAgB;MACvC;;MAGA,cAAW;AACT,eAAO,KAAK,SAAS,YAAW;MAClC;;MAGA,IAAY,WAAQ;AAClB,YAAI,KAAK,cAAc,MAAM;AAC3B,eAAK,YAAY,KAAK,KAAK,aAAa,KAAK,SAAS;;AAExD,eAAO,KAAK;MACd;MAEU,aAAU;AAClB,aAAK,YAAY;MACnB;;AA/EF,YAAA,qBAAA;;;;;;;;;;;;ACRA,QAAA,2BAAA;AACA,QAAA,cAAA;AACA,QAAA,cAAA;AACA,QAAA,cAAA;AAEA,QAAA,aAAA;AACA,QAAA,aAAA;AAUA,QAAsB,eAAtB,cAA2C,YAAA,cAA6D;MAAxG,cAAA;;AACW,aAAA,gBAAgB;MAyF3B;MAvFE,QAAQ,MAAU;AAChB,eAAO,IAAI,WAAA,iBAAiB,MAAM,IAAI;MACxC;MAEA,UAAU,MAAU;AAClB,eAAO,IAAI,WAAA,mBAAmB,MAAM,IAAI;MAC1C;MAEA,WAAW,MAAsB;AAC/B,eAAO,KAAK;MACd;MAEA,aAAa,MAAwB;AACnC,aAAK,OAAM;AACX,eAAO,KAAK;MACd;MAEA,cAAc,MAAwB;AACpC,eAAO,KAAK;MACd;;MAIU,SAASC,QAAe;AAChC,eAAO,YAAA,oBAAoBA,OAAM,UAAU;MAC7C;;MAIA,oBAAiB;AAEf,eAAO;MACT;MAEA,kBAAe;AAEb,cAAM,MAAM,0CAA0C;MACxD;MAEA,mBAAgB;AAEd,cAAM,MAAM,0CAA0C;MACxD;MAEA,mBAAmB,MAAU;AAC3B,eAAO,EAAC,MAAM,MAAM,KAAI;MAC1B;MAEA,qBAAqB,YAAoB,UAAe;AACtD,cAAM,UAAU,KAAK,gBAAgB,QAAQ;AAC7C,cAAM,aAAa,KAAK,KAAK,UAAU,EAAE;AACzC,cAAM,aAAa,yBAAA,eAAe,CAAC,YAAY,yBAAA,SAAS,KAAK,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AAC/E,cAAM,WAAW,IAAI,MAAc,UAAU;AAC7C,iBAASC,KAAI,GAAG,SAAS,YAAYA,KAAI,YAAYA,MAAK,UAAU;AAClE,mBAASA,EAAC,IAAI;;AAIhB,YAAI,KAAK,QAAQ;AACf,mBAAS,KAAK,yBAAA,eAAe,CAAC,YAAY,YAAA,aAAa,CAAC,CAAC;;AAG3D,eAAO;MACT;;MAMA,SAAS,MAAa;AACpB,cAAM,aAAa,YAAA,cAAc,IAAc;AAC/C,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAE7F,eAAO,KAAK,2BAA2B,EAAC,YAAY,SAAQ,GAAG,GAAG,WAAW,MAAM;MACrF;MAEA,OAAOD,QAAe;AACpB,eAAO,YAAA,YAAY,KAAK,UAAUA,MAAK,CAAC;MAC1C;MAEA,MAAMA,QAAe;AACnB,eAAOA,OAAM,MAAK;MACpB;MAEA,OAAO,GAAa,GAAW;AAC7B,eAAO,EAAE,WAAW,EAAE,UAAU,YAAA,gBAAgB,EAAE,YAAY,EAAE,UAAU;MAC5E;;AAzFF,YAAA,eAAA;;;;;;;;;;;;AChBA,QAAA,2BAAA;AACA,QAAA,cAAA;AAEA,QAAA,UAAA;AAEA,QAAA,eAAA;AACA,QAAA,aAAA;AACA,QAAA,aAAA;AAeA,QAAa,cAAb,cAAiC,WAAA,aAAY;MAU3C,YAAqB,WAAmB,MAAqB;AAC3D,cAAK;AADc,aAAA,YAAA;AANZ,aAAA,YAAY;AACZ,aAAA,UAAU;AAGV,aAAA,SAAS;AAKhB,YAAI,cAAc;AAAG,gBAAM,MAAM,wBAAwB;AAEzD,aAAK,YAAW,6BAAM,aAAY,WAAW;AAE7C,aAAK,gBAAgB,KAAK,KAAK,KAAK,YAAY,IAAI,EAAE;AACtD,aAAK,aAAa,YAAA,iBAAiB,KAAK,aAAa;AAErD,aAAK,QAAQ,IAAI,KAAK;AACtB,aAAK,UAAU,KAAK,KAAK,YAAY,CAAC,IAAI;MAC5C;MAEA,OAAO,MAAM,WAAmB,MAAyC;AACvE,eAAO,KAAK,QAAA,WAAW,aAAa,KAAK,QAAQ,GAAG,WAAW,IAAI;MACrE;MAEA,eAAY;AACV,eAAO,WAAA,SAAS,WAAW,CAAC;MAC9B;;;MAMA,qBAAqBE,QAAe;AAClC,eAAO,yBAAyBA,OAAM,MAAM;MAC9C;MAEA,uBAAuB,QAAmB,QAAgBA,QAAe;AACvE,eAAO,WAAW,IAAIA,OAAM,YAAY,MAAM;AAC9C,eAAO,gBAAgB,OAAO,YAAY,QAAQA,OAAM,MAAM;MAChE;MAEA,2BAA2B,MAAiB,OAAe,KAAW;AACpE,cAAM,EAAC,YAAY,OAAM,IAAI,KAAK,sCAAsC,KAAK,YAAY,OAAO,GAAG;AACnG,eAAO,IAAI,WAAA,SAAS,YAAY,MAAM;MACxC;MAEA,oBAAoB,MAAU;AAC5B,eAAO,yBAAyB,aAAA,sBAAsB,IAAI,CAAC;MAC7D;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,cAAM,aAAa,aAAA,0BAA0B,IAAI;AACjD,cAAM,SAAS,aAAA,sBAAsB,IAAI;AAEzC,cAAM,UAAU,KAAK,KAAK,SAAS,CAAC;AACpC,cAAM,WAAW,KAAK,KAAK,UAAU,EAAE;AACvC,cAAM,QAAQ,yBAAA,gBAAgB,YAAY,KAAK,YAAY,GAAG,QAAQ;AACtE,iCAAA,uBAAuB,OAAO,UAAU,QAAQ,SAAS,KAAK;AAE9D,eAAO,gBAAgB,OAAO,YAAY,QAAQ,MAAM;MAC1D;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,cAAM,EAAC,YAAY,OAAM,IAAI,KAAK,sCAAsC,KAAK,YAAY,OAAO,GAAG;AACnG,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,cAAM,aAAa,yBAAA,uBAAuB,KAAK,YAAY,UAAU,GAAG,WAAW,MAAM;AACzF,eAAO,aAAA,cAAc,YAAY,MAAM;MACzC;MAEA,gBAAgB,MAAW;AACzB,YAAI,CAAC;AAAM,gBAAM,IAAI,MAAM,2CAA2C;AACtE,eAAO,KAAK,KAAK,aAAA,sBAAsB,IAAI,IAAI,CAAC;MAClD;;MAIA,aAAaA,QAAe;AAC1B,eAAO,YAAA,YAAY,MAAM,aAAaA,MAAK,GAAGA,OAAM,MAAM;MAC5D;;;;MAQQ,sCAAsC,MAAkB,OAAe,KAAW;AACxF,cAAM,EAAC,YAAY,OAAM,IAAI,sCAAsC,MAAM,OAAO,GAAG;AACnF,YAAI,SAAS,KAAK,WAAW;AAC3B,gBAAM,MAAM,qBAAqB,YAAY,KAAK,WAAW;;AAE/D,eAAO,EAAC,YAAY,OAAM;MAC5B;;AAhGF,YAAA,cAAA;AAqGA,aAAS,sCAAsC,MAAkB,OAAe,KAAW;AACzF,UAAI,MAAM,KAAK,QAAQ;AACrB,cAAM,MAAM,mCAAmC,sBAAsB,KAAK,QAAQ;;AAGpF,YAAM,WAAW,KAAK,MAAM,CAAC;AAC7B,YAAM,OAAO,MAAM;AAEnB,UAAI,aAAa,GAAG;AAClB,cAAM,IAAI,MAAM,oDAAoD;;AAGtE,UAAI,aAAa,GAAG;AAElB,cAAMC,cAAa,WAAW,UAAU,MAAM,KAAK,MAAM,OAAO,MAAM,CAAC;AACvE,cAAMC,WAAU,OAAO,KAAK;AAC5B,eAAO,EAAC,YAAAD,aAAY,QAAAC,QAAM;;AAK5B,YAAM,aAAa,WAAW,UAAU,MAAM,KAAK,MAAM,OAAO,GAAG;AAEnE,YAAM,oBAAoB,SAAS,SAAS,CAAC,EAAE,SAAS;AACxD,YAAM,UAAU,OAAO,KAAK,IAAI;AAChC,YAAM,OAAO,OAAS,IAAI;AAC1B,iBAAW,OAAO,CAAC,KAAK;AACxB,aAAO,EAAC,YAAY,OAAM;IAC5B;AAEA,aAAS,yBAAyB,QAAc;AAC9C,YAAM,QAAQ,KAAK,KAAK,SAAS,CAAC;AAElC,aAAO,SAAS,MAAM,IAAI,QAAQ,IAAI;IACxC;AAMA,aAAS,gBAAgB,QAAoB,QAAgB,QAAc;AACzE,YAAM,UAAU,KAAK,KAAK,SAAS,CAAC;AACpC,YAAM,YAAY,SAAS;AAC3B,UAAI,SAAS,MAAM,GAAG;AACpB,eAAO,SAAS,IAAI;AACpB,eAAO,YAAY;aACd;AACL,eAAO,YAAY,CAAC,KAAK,KAAK,SAAS;AACvC,eAAO;;IAEX;;;;;;;;;;;;AC7KA,QAAA,2BAAA;AACA,QAAA,cAAA;AAEA,QAAA,UAAA;AAEA,QAAA,aAAA;AACA,QAAA,aAAA;AAeA,QAAa,gBAAb,cAAmC,WAAA,aAAY;MAqB7C,YAAqB,YAAoB,MAAuB;AAC9D,cAAK;AADc,aAAA,aAAA;AAbZ,aAAA,SAAS;AAgBhB,YAAI,eAAe;AAAG,gBAAM,MAAM,2BAA2B;AAE7D,aAAK,YAAW,6BAAM,aAAY,aAAa;AAC/C,aAAK,aAAa,KAAK,KAAK,KAAK,aAAa,IAAI,EAAE;AACpD,aAAK,gBAAgB,KAAK;AAC1B,aAAK,QAAQ,YAAA,iBAAiB,KAAK,UAAU;AAC7C,aAAK,YAAY,KAAK,KAAK,KAAK,aAAa,CAAC;AAC9C,aAAK,UAAU,KAAK;AACpB,aAAK,UAAU,KAAK;AAEpB,aAAK,eAAe,aAAa,MAAM,IAAI,IAAI,MAAQ,OAAQ,aAAa;MAC9E;MAEA,OAAO,MAAM,WAAmB,MAA2C;AACzE,eAAO,KAAK,QAAA,WAAW,eAAe,KAAK,QAAQ,GAAG,WAAW,IAAI;MACvE;MAEA,eAAY;AACV,eAAO,WAAA,SAAS,WAAW,KAAK,UAAU;MAC5C;;;MAMA,uBAAoB;AAClB,eAAO,KAAK;MACd;MAEA,uBAAuB,QAAmB,QAAgBC,QAAe;AACvE,eAAO,WAAW,IAAIA,OAAM,YAAY,MAAM;AAC9C,eAAO,SAAS,KAAK;MACvB;MAEA,2BAA2B,MAAiB,OAAe,KAAW;AACpE,aAAK,kBAAkB,KAAK,YAAY,OAAO,GAAG;AAElD,eAAO,IAAI,WAAA,SAAS,WAAW,UAAU,MAAM,KAAK,KAAK,YAAY,OAAO,GAAG,GAAG,KAAK,UAAU;MACnG;MAEA,sBAAmB;AACjB,eAAO,KAAK;MACd;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,cAAM,QAAQ,yBAAA,gBAAgB,MAAM,KAAK,OAAO,GAAG,KAAK,UAAU;AAClE,iCAAA,uBAAuB,OAAO,UAAU,QAAQ,KAAK,WAAW,KAAK;AACrE,eAAO,SAAS,KAAK;MACvB;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,aAAK,kBAAkB,KAAK,YAAY,OAAO,GAAG;AAClD,eAAO,yBAAA,uBAAuB,KAAK,OAAO,KAAK,UAAU,OAAO,GAAG;MACrE;MAEA,kBAAe;AACb,eAAO,KAAK;MACd;;;;;MAUQ,kBAAkB,MAAkB,OAAe,KAAW;AACpE,cAAM,OAAO,MAAM;AACnB,YAAI,MAAM,UAAU,KAAK,WAAW;AAClC,gBAAM,MAAM,0BAA0B,WAAW,KAAK,WAAW;;AAInE;;UAEE,KAAK,eAAe;WAEnB,KAAK,MAAM,CAAC,IAAI,KAAK,gBAAgB;UACtC;AACA,gBAAM,MAAM,qCAAqC;;MAErD;;AA1GF,YAAA,gBAAA;;;;;;;;;;;;ACpBA,QAAA,aAAA;AAQA,QAAsB,YAAtB,cAA2C,WAAA,KAAO;MAAlD,cAAA;;AACW,aAAA,UAAU;AAEV,aAAA,QAAQ;AAER,aAAA,gBAAgB;MA2C3B;MAxCE,uBAAoB;AAClB,eAAO,KAAK;MACd;MAEA,sBAAmB;AACjB,eAAO,KAAK;MACd;MAEU,gBAAgB,MAAY;AACpC,YAAI,SAAS,KAAK,YAAY;AAC5B,gBAAM,MAAM,0BAA0B,iBAAiB,KAAK,YAAY;;MAE5E;MAEA,aAAaC,QAAQ;AAEnB,cAAM,aAAa,IAAI,WAAW,EAAE;AACpC,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,aAAK,uBAAuB,EAAC,YAAY,SAAQ,GAAG,GAAGA,MAAK;AAC5D,eAAO;MACT;MAEA,MAAMA,QAAQ;AAEZ,eAAOA;MACT;MAEA,OAAO,GAAM,GAAI;AAEf,eAAO,MAAM;MACf;;AAtCF,YAAA,YAAA;AAkDA,aAAgB,YAAeC,OAAa;AAC1C,aAAOA,MAAK;IACd;AAFA,YAAA,cAAA;;;;;;;;;;;;AC3DA,QAAA,2BAAA;AAEA,QAAA,UAAA;AAEA,QAAA,UAAA;AAYA,QAAa,cAAb,cAAiC,QAAA,UAAkB;MAQjD,YAAY,MAAkB;AAC5B,cAAK;AAPE,aAAA,aAAa;AACb,aAAA,gBAAgB;AAChB,aAAA,YAAY;AACZ,aAAA,UAAU;AACV,aAAA,UAAU;AAIjB,aAAK,YAAW,6BAAM,aAAY;MACpC;MAEA,OAAO,MAAM,MAAsC;AACjD,eAAO,KAAK,QAAA,WAAW,aAAa,KAAK,QAAQ,GAAG,IAAI;MAC1D;MAEA,eAAY;AACV,eAAO;MACT;;MAIA,uBAAuB,QAAmB,QAAgBC,QAAc;AACtE,eAAO,WAAW,MAAM,IAAIA,SAAQ,IAAI;AACxC,eAAO,SAAS;MAClB;MAEA,2BAA2B,MAAiB,OAAe,KAAW;AACpE,aAAK,gBAAgB,MAAM,KAAK;AAEhC,gBAAQ,KAAK,WAAW,KAAK,GAAG;UAC9B,KAAK;AACH,mBAAO;UACT,KAAK;AACH,mBAAO;UACT;AACE,kBAAM,IAAI,MAAM,2BAA2B,KAAK,WAAW,KAAK,GAAG;;MAEzE;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AAEjE,eAAO,WAAW,MAAM,IAAK,KAAkB,QAAQ,GAAG,CAAC;AAC3D,eAAO,SAAS;MAClB;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,aAAK,gBAAgB,MAAM,KAAK;AAEhC,cAAMA,SAAQ,KAAK,WAAW,KAAK;AACnC,YAAIA,SAAQ,GAAG;AACb,gBAAM,MAAM,0BAA0BA,QAAO;;AAG/C,eAAO,yBAAA,SAAS,WAAWA,MAAK;MAClC;;MAIA,iBAAiB,UAAkB;AACjC,eAAO,SAAS,QAAQ,GAAG,CAAC,MAAM;MACpC;MAEA,eAAe,UAAoBA,QAAc;AAC/C,iBAAS,QAAQ,GAAG,GAAGA,SAAQ,IAAI,CAAC;MACtC;MAEA,uBAAuB,UAAoB,OAAa;AACtD,cAAM,cAAc,QAAQ,KAAK;AACjC,eAAO,SAAS,QAAQ,GAAG,WAAW,MAAM;MAC9C;MAEA,qBAAqB,UAAoB,OAAeA,QAAc;AACpE,cAAM,cAAc,QAAQ,KAAK;AACjC,iBAAS,QAAQ,GAAG,aAAaA,SAAQ,IAAI,CAAC;MAChD;;MAIA,SAAS,MAAa;AACpB,YAAI,OAAO,SAAS,WAAW;AAC7B,gBAAM,MAAM,qBAAqB,OAAO,uBAAuB;;AAEjE,eAAO;MACT;MAEA,OAAOA,QAAc;AACnB,eAAOA;MACT;;AAzFF,YAAA,cAAA;;;;;;;;;;;;AChBA,QAAA,2BAAA;AACA,QAAA,cAAA;AACA,QAAA,cAAA;AAEA,QAAA,cAAA;AAeA,QAAsB,gBAAtB,cAA4C,YAAA,cAA8C;MAA1F,cAAA;;AACW,aAAA,gBAAgB;MAqH3B;MAnHE,eAAY;AAEV,eAAO,IAAI,WAAW,KAAK,OAAO;MACpC;MAEA,QAAQ,MAAU;AAChB,eAAO,KAAK,UAAU,KAAK,QAAQ;MACrC;MAEA,UAAU,MAAU;AAClB,eAAO,KAAK,aAAa,IAAI;MAC/B;MAEA,WAAW,MAAe;AACxB,eAAO,KAAK,aAAa,IAAI;MAC/B;MAEA,aAAa,MAAe;AAC1B,cAAM,aAAa,IAAI,WAAW,KAAK,qBAAqB,IAAI,CAAC;AACjE,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,aAAK,uBAAuB,EAAC,YAAY,SAAQ,GAAG,GAAG,IAAI;AAC3D,eAAO,KAAK,0BAA0B,EAAC,YAAY,SAAQ,GAAG,GAAG,WAAW,MAAM;MACpF;MAEA,gBAAa;AACX;MACF;;MAGA,OAAOC,QAAgB;AACrB,eAAOA;MACT;MAEA,SAASA,QAAgB;AACvB,eAAOA;MACT;;MAIA,uBAAuB,QAAmB,QAAgBA,QAAgB;AACxE,eAAO,WAAW,IAAIA,QAAO,MAAM;AACnC,eAAO,SAASA,OAAM;MACxB;MAEA,2BAA2B,MAAiB,OAAe,KAAW;AACpE,aAAK,gBAAgB,MAAM,KAAK;AAChC,eAAO,WAAW,UAAU,MAAM,KAAK,KAAK,YAAY,OAAO,GAAG;MACpE;;MAIU,SAASA,QAAgB;AACjC,eAAO,YAAA,oBAAoBA,MAAK;MAClC;;MAIA,oBAAiB;AAEf,eAAO;MACT;MAEA,kBAAe;AACb,cAAM,MAAM,2CAA2C;MACzD;MAEA,mBAAgB;AACd,cAAM,MAAM,2CAA2C;MACzD;MAEA,mBAAmB,MAAU;AAC3B,eAAO,EAAC,MAAM,MAAM,KAAI;MAC1B;MAEA,qBAAqB,YAAoB,UAAe;AACtD,cAAM,UAAU,KAAK,gBAAgB,QAAQ;AAC7C,cAAM,aAAa,KAAK,KAAK,UAAU,EAAE;AACzC,cAAM,aAAa,yBAAA,eAAe,CAAC,YAAY,yBAAA,SAAS,KAAK,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AAC/E,cAAM,WAAW,IAAI,MAAc,UAAU;AAC7C,iBAASC,KAAI,GAAG,SAAS,YAAYA,KAAI,YAAYA,MAAK,UAAU;AAClE,mBAASA,EAAC,IAAI;;AAIhB,YAAI,KAAK,QAAQ;AACf,mBAAS,KAAK,yBAAA,eAAe,CAAC,YAAY,YAAA,aAAa,CAAC,CAAC;;AAG3D,eAAO;MACT;;MAMA,SAAS,MAAa;AACpB,cAAMD,SAAQ,YAAA,cAAc,IAAc;AAC1C,aAAK,gBAAgBA,OAAM,MAAM;AACjC,eAAOA;MACT;MAEA,OAAOA,QAAgB;AACrB,eAAO,YAAA,YAAYA,MAAK;MAC1B;;MAGA,MAAMA,QAAgB;AACpB,eAAOA;MACT;MAEA,OAAO,GAAe,GAAa;AACjC,eAAO,YAAA,gBAAgB,GAAG,CAAC;MAC7B;;AAnHF,YAAA,gBAAA;;;;;;;;;;;;ACnBA,QAAA,2BAAA;AACA,QAAA,cAAA;AAEA,QAAA,UAAA;AACA,QAAA,eAAA;AAEA,QAAA,cAAA;AAoBA,QAAa,eAAb,cAAkC,YAAA,cAAa;MAW7C,YAAqB,YAAoB,MAAsB;AAC7D,cAAK;AADc,aAAA,aAAA;AANZ,aAAA,YAAY;AAIZ,aAAA,SAAS;AAKhB,YAAI,eAAe;AAAG,gBAAM,MAAM,wBAAwB;AAE1D,aAAK,YAAW,6BAAM,aAAY,YAAY;AAC9C,aAAK,gBAAgB,KAAK,KAAK,KAAK,aAAa,EAAE;AACnD,aAAK,aAAa,YAAA,iBAAiB,KAAK,aAAa;AACrD,aAAK,QAAQ,IAAI,KAAK;AACtB,aAAK,UAAU;AACf,aAAK,UAAU,KAAK;MACtB;MAEA,OAAO,MAAM,WAAmB,MAA0C;AACxE,eAAO,KAAK,QAAA,WAAW,cAAc,KAAK,QAAQ,GAAG,WAAW,IAAI;MACtE;;;MAMA,qBAAqBE,QAAiB;AACpC,eAAOA,OAAM;MACf;;MAIA,oBAAoB,MAAU;AAC5B,eAAO,aAAA,sBAAsB,IAAI;MACnC;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,cAAM,aAAa,aAAA,0BAA0B,IAAI;AACjD,cAAM,UAAU,aAAA,sBAAsB,IAAI;AAC1C,cAAM,WAAW,KAAK,KAAK,UAAU,EAAE;AACvC,cAAM,QAAQ,yBAAA,gBAAgB,YAAY,KAAK,YAAY,GAAG,QAAQ;AACtE,iCAAA,uBAAuB,OAAO,UAAU,QAAQ,SAAS,KAAK;AAC9D,eAAO,SAAS;MAClB;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,aAAK,gBAAgB,MAAM,KAAK;AAChC,cAAM,aAAa,yBAAA,uBAAuB,KAAK,YAAY,KAAK,UAAU,OAAO,GAAG;AACpF,eAAO,aAAA,cAAc,YAAY,MAAM,KAAK;MAC9C;MAEA,gBAAgB,MAAW;AACzB,YAAI,CAAC;AAAM,gBAAM,IAAI,MAAM,4CAA4C;AACvE,eAAO,aAAA,sBAAsB,IAAI;MACnC;;MAIA,aAAaA,QAAgB;AAC3B,eAAO,YAAA,YAAY,MAAM,aAAaA,MAAK,GAAGA,OAAM,MAAM;MAC5D;;;MAMU,gBAAgB,MAAY;AACpC,YAAI,OAAO,KAAK,YAAY;AAC1B,gBAAM,MAAM,yBAAyB,cAAc,KAAK,YAAY;;MAExE;;AA5EF,YAAA,eAAA;;;;;;;;;;;;AC1BA,QAAA,2BAAA;AACA,QAAA,cAAA;AAEA,QAAA,UAAA;AAEA,QAAA,cAAA;AAsBA,QAAa,iBAAb,cAAoC,YAAA,cAAa;MAW/C,YAAqB,aAAqB,MAAwB;AAChE,cAAK;AADc,aAAA,cAAA;AAFZ,aAAA,SAAS;AAKhB,YAAI,gBAAgB;AAAG,gBAAM,MAAM,2BAA2B;AAE9D,aAAK,YAAW,6BAAM,aAAY,cAAc;AAChD,aAAK,gBAAgB,KAAK,KAAK,KAAK,cAAc,EAAE;AACpD,aAAK,aAAa,YAAA,iBAAiB,KAAK,aAAa;AACrD,aAAK,QAAQ,KAAK;AAClB,aAAK,YAAY,KAAK;AACtB,aAAK,UAAU,KAAK;AACpB,aAAK,UAAU,KAAK;MACtB;MAEA,OAAO,MAAM,WAAmB,MAA4C;AAC1E,eAAO,KAAK,QAAA,WAAW,gBAAgB,KAAK,QAAQ,GAAG,WAAW,IAAI;MACxE;;;MAMA,uBAAoB;AAClB,eAAO,KAAK;MACd;;MAIA,sBAAmB;AACjB,eAAO,KAAK;MACd;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,cAAM,QAAQ,yBAAA,gBAAgB,MAAM,KAAK,YAAY,GAAG,KAAK,aAAa;AAC1E,iCAAA,uBAAuB,OAAO,UAAU,QAAQ,KAAK,WAAW,KAAK;AACrE,eAAO,SAAS,KAAK;MACvB;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,aAAK,gBAAgB,MAAM,KAAK;AAChC,eAAO,yBAAA,uBAAuB,KAAK,YAAY,KAAK,UAAU,OAAO,GAAG;MAC1E;MAEA,kBAAe;AACb,eAAO,KAAK;MACd;;;;MAQU,gBAAgB,MAAY;AACpC,YAAI,SAAS,KAAK,aAAa;AAC7B,gBAAM,MAAM,2BAA2B,iBAAiB,KAAK,aAAa;;MAE9E;;AApEF,YAAA,iBAAA;;;;;;;;;;;;AC3BA,QAAA,2BAAA;AAEA,QAAA,UAAA;AACA,QAAA,cAAA;AACA,QAAA,aAAA;AAoDA,QAAM,oBAAN,cAA8E,WAAA,SAAsC;MAClH,YAAqBC,OAA6C,MAAU;AAC1E,cAAK;AADc,aAAA,OAAAA;AAA6C,aAAA,OAAA;MAElE;MAEA,IAAI,OAAI;AACN,eAAO,KAAK,KAAK;MACnB;;AAGF,aAAgB,0BACdA,OAAkC;AAElC,YAAM,gCAAgC,kBAAyB;;AAG/D,eAAS,QAAQ,GAAG,QAAQA,MAAK,cAAc,QAAQ,SAAS;AAC9D,cAAM,EAAC,WAAW,UAAS,IAAIA,MAAK,cAAc,KAAK;AAKvD,YAAI,QAAA,YAAY,SAAS,GAAG;AAC1B,iBAAO,eAAe,wBAAwB,WAAW,WAAW;YAClE,cAAc;YACd,YAAY;;YAGZ,KAAK,WAAA;AACH,oBAAM,WAAW,yBAAA,eAAe,KAAK,MAAM,KAAK,KAAK,OAAO,KAAK;AACjE,qBAAO,UAAU,iBAAiB,QAAQ;YAC5C;YAEA,KAAK,SAAyCC,QAAK;AACjD,oBAAM,eAAe,yBAAA,eAAe,KAAK,MAAM,KAAK,KAAK,OAAO,KAAK;AACrE,oBAAM,WAAW,aAAa,MAAK;AACnC,wBAAU,eAAe,UAAUA,MAAK;AACxC,mBAAK,KAAK,eAAe,KAAK,KAAK,OAAO,OAAO,QAAQ;YAC3D;WACD;mBAMM,YAAA,gBAAgB,SAAS,GAAG;AACnC,iBAAO,eAAe,wBAAwB,WAAW,WAAW;YAClE,cAAc;YACd,YAAY;;YAGZ,KAAK,WAAA;AACH,oBAAM,SAAS,yBAAA,kBAAkB,KAAK,KAAK,OAAO,KAAK;AACvD,qBAAO,UAAU,QAAQ,KAAK,KAAK,WAAW,MAAM,CAAC;YACvD;;YAGA,KAAK,SAAyCA,QAAc;AAC1D,oBAAM,OAAO,UAAU,WAAWA,MAAK;AACvC,mBAAK,KAAK,eAAe,KAAK,KAAK,OAAO,OAAO,IAAI;YACvD;WACD;eAIE;AAEH,gBAAM,MAAM,qBAAqB,UAAU,0BAA0B,WAAW;;;AAKpF,aAAO,eAAe,yBAAyB,QAAQ,EAAC,OAAOD,MAAK,UAAU,UAAU,MAAK,CAAC;AAE9F,aAAO;IACT;AAjEA,YAAA,4BAAA;;;;;;;;;;;;AClEA,QAAA,2BAAA;AAEA,QAAA,UAAA;AACA,QAAA,cAAA;AAEA,QAAA,aAAA;AA0BA,QAAM,sBAAN,cAAgF,WAAA,WAE/E;MAOC,YACWE,OACC,WACVC,QAAgC;AAEhC,cAAK;AAJI,aAAA,OAAAD;AACC,aAAA,YAAA;AARF,aAAA,QAAgB,CAAA;AAEP,aAAA,eAAe,oBAAI,IAAG;AACtB,aAAA,eAAe,oBAAI,IAAG;AAUvC,YAAIC,QAAO;AACT,eAAK,QAAQA,OAAM;AACnB,eAAK,SAASA,OAAM;AACpB,eAAK,iBAAiBA,OAAM;eACvB;AACL,eAAK,QAAQ,CAAA;AACb,eAAK,SAAS,CAAA;AACd,eAAK,iBAAiB;;MAE1B;MAEA,IAAI,OAAI;AACN,eAAO,KAAK;MACd;MAEA,IAAI,QAAK;AACP,eAAO;UACL,OAAO,KAAK;UACZ,QAAQ,KAAK;UACb,gBAAgB,KAAK;;MAEzB;MAEA,SAAM;AACJ,YAAI,KAAK,aAAa,SAAS,KAAK,KAAK,aAAa,SAAS,GAAG;AAChE;;AAGF,cAAM,eAA8C,CAAA;AAEpD,mBAAW,CAAC,OAAO,IAAI,KAAK,KAAK,cAAc;AAC7C,gBAAM,YAAY,KAAK,KAAK,cAAc,KAAK,EAAE;AACjD,gBAAM,OAAO,UAAU,aAAa,IAAI;AAExC,eAAK,MAAM,KAAK,IAAI;AACpB,uBAAa,KAAK,EAAC,OAAO,KAAI,CAAC;AAG/B,gBAAMA,SAAQ,UAAU,cAAc,IAAI;AAC1C,cAAIA;AAAO,iBAAK,OAAO,KAAK,IAAIA;;AAGlC,mBAAW,SAAS,KAAK,cAAc;AACrC,uBAAa,KAAK,EAAC,OAAO,MAAM,KAAK,MAAM,KAAK,EAAC,CAAC;;AAIpD,cAAM,qBAAqB,aAAa,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK;AACxE,cAAM,UAAU,mBAAmB,IAAI,CAAC,UAAU,MAAM,KAAK;AAC7D,cAAM,QAAQ,mBAAmB,IAAI,CAAC,UAAU,MAAM,IAAI;AAE1D,aAAK,YAAY,yBAAA,gBAAgB,KAAK,WAAW,KAAK,KAAK,OAAO,SAAS,KAAK;AAEhF,aAAK,aAAa,MAAK;AACvB,aAAK,aAAa,MAAK;MACzB;MAEU,aAAU;AAClB,aAAK,QAAQ,CAAA;AACb,aAAK,SAAS,CAAA;AACd,aAAK,iBAAiB;AAGtB,aAAK,aAAa,MAAK;AAIvB,aAAK,aAAa,MAAK;MACzB;;AAGF,aAAgB,4BACdD,OAAkC;AAElC,YAAM,kCAAkC,oBAA2B;;AAGnE,eAAS,QAAQ,GAAG,QAAQA,MAAK,cAAc,QAAQ,SAAS;AAC9D,cAAM,EAAC,WAAW,UAAS,IAAIA,MAAK,cAAc,KAAK;AAKvD,YAAI,QAAA,YAAY,SAAS,GAAG;AAC1B,iBAAO,eAAe,0BAA0B,WAAW,WAAW;YACpE,cAAc;YACd,YAAY;;YAGZ,KAAK,WAAA;AAEH,kBAAI,OAAO,KAAK,MAAM,KAAK;AAC3B,kBAAI,SAAS,QAAW;AACtB,uBAAO,yBAAA,eAAe,KAAK,WAAW,KAAK,KAAK,OAAO,KAAK;AAC5D,qBAAK,MAAM,KAAK,IAAI;;AAGtB,qBAAO,UAAU,iBAAiB,IAAgB;YACpD;YAEA,KAAK,SAA2CE,QAAK;AAEnD,kBAAI;AACJ,kBAAI,KAAK,aAAa,IAAI,KAAK,GAAG;AAEhC,8BAAc,KAAK,MAAM,KAAK;qBACzB;AACL,sBAAM,WAAY,KAAK,MAAM,KAAK,KAAK,yBAAA,eAAe,KAAK,WAAW,KAAK,KAAK,OAAO,KAAK;AAE5F,8BAAc,SAAS,MAAK;AAE5B,qBAAK,MAAM,KAAK,IAAI;AACpB,qBAAK,aAAa,IAAI,KAAK;;AAG7B,wBAAU,eAAe,aAAaA,MAAK;YAC7C;WACD;mBAMM,YAAA,gBAAgB,SAAS,GAAG;AACnC,iBAAO,eAAe,0BAA0B,WAAW,WAAW;YACpE,cAAc;YACd,YAAY;;YAGZ,KAAK,WAAA;AACH,oBAAM,cAAc,KAAK,aAAa,IAAI,KAAK;AAC/C,kBAAI,aAAa;AAEf,uBAAO;;AAGT,kBAAI,OAAO,KAAK,MAAM,KAAK;AAC3B,kBAAI,SAAS,QAAW;AACtB,uBAAO,yBAAA,eAAe,KAAK,WAAW,KAAK,KAAK,OAAO,KAAK;AAC5D,qBAAK,MAAM,KAAK,IAAI;;AAItB,oBAAM,OAAO,UAAU,UAAU,MAAM,KAAK,OAAO,KAAK,CAAC;AACzD,kBAAI,UAAU,eAAe;AAC3B,qBAAK,aAAa,IAAI,OAAO,IAAI;;AAOnC,qBAAO;YACT;;YAGA,KAAK,SAA2C,MAAa;AAK3D,mBAAK,aAAa,IAAI,OAAO,IAAI;YACnC;WACD;eAIE;AAEH,gBAAM,MAAM,qBAAqB,UAAU,0BAA0B,WAAW;;;AAKpF,aAAO,eAAe,2BAA2B,QAAQ,EAAC,OAAOF,MAAK,UAAU,UAAU,MAAK,CAAC;AAEhG,aAAO;IACT;AA1GA,YAAA,8BAAA;;;;;;;;;;;;ACpHa,YAAA,OAAO;MAClB,OAAO,CAAC,UACN,MACG,QAAQ,WAAW,EAAE,EACrB,QAAQ,0BAA0B,CAAC,WAAW,OAAO,CAAC,IAAI,MAAM,OAAO,CAAC,EAAE,YAAW,CAAE;MAC5F,UAAU,CAAC,UACT,MACG,QAAQ,WAAW,EAAE,EACrB,QAAQ,0BAA0B,CAAC,WAAW,OAAO,CAAC,IAAI,MAAM,OAAO,CAAC,CAAC,EACzE,YAAW;MAChB,QAAQ,CAAC,UAAyB;AAChC,cAAM,QAAQ,MAAM,CAAC,EAAE,YAAW;AAClC,gBAAQ,QAAQ,MAAM,MAAM,CAAC,GAAG,QAAQ,WAAW,EAAE;MACvD;MACA,OAAO,CAAC,UAAyB;AAC/B,eAAO,MAAM,CAAC,EAAE,YAAW,IAAK,MAAM,MAAM,CAAC;MAC/C;MACA,QAAQ,CAAC,UAAyB;AAChC,cAAM,QAAQ,MAAM,CAAC,EAAE,YAAW;AAClC,eACE,QACA,MACG,MAAM,CAAC,EACP,QAAQ,WAAW,EAAE,EACrB,QAAQ,0BAA0B,CAAC,WAAW,OAAO,CAAC,IAAI,MAAM,OAAO,CAAC,CAAC;MAEhF;MACA,MAAM,CAAC,UAA0B,QAAA,KAAK,MAAM,KAAK,EAAE,QAAQ,SAAS,KAAK;;;;;;;;;;;;;AC7B3E,QAAA,2BAAA;AAUA,QAAA,cAAA;AAEA,QAAA,UAAA;AAEA,QAAA,cAAA;AACA,QAAA,cAAA;AAEA,QAAA,cAAA;AAKA,QAAA,YAAA;AA6BA,QAAa,gBAAb,cAAiF,YAAA,cAIhF;MAyBC,YAAqB,QAAyB,MAA+B;;AAC3E,cAAM,6BAAM,wBAAwB;AADjB,aAAA,SAAA;AAAyB,aAAA,OAAA;AAlBrC,aAAA,SAAS;AACT,aAAA,gBAAgB;AAqBvB,aAAK,YAAW,6BAAM,aAAY,wBAAwB,MAAM;AAEhE,aAAK,gBAAgB,OAAO,KAAK,MAAM,EAAE;AACzC,aAAK,QAAQ,YAAA,iBAAiB,KAAK,aAAa;AAGhD,aAAK,gBAAgB,CAAA;AACrB,mBAAW,aAAa,OAAO,KAAK,MAAM,GAAuB;AAC/D,eAAK,cAAc,KAAK;YACtB;YACA,WAAW,KAAK,OAAO,SAAS;YAChC,SAAS,kBAAkB,WAAW,6BAAM,WAAW,6BAAM,QAAQ;YACrE,QAAQ,yBAAA,SAAS,KAAK,OAAO,OAAO,KAAK,cAAc,MAAM,CAAC;WAC/D;;AAGH,YAAI,KAAK,cAAc,WAAW,GAAG;AACnC,gBAAM,MAAM,gCAAgC;;AAI9C,aAAK,eAAe,CAAA;AACpB,iBAASG,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,eAAK,aAAa,KAAK,cAAcA,EAAC,EAAE,SAAS,IAAI,yBAAA,SAAS,KAAK,OAAO,OAAOA,EAAC,CAAC;;AAIrF,aAAK,qBAAqB,CAAA;AAC1B,mBAAW,EAAC,WAAW,QAAO,KAAK,KAAK,eAAe;AACrD,eAAK,mBAAmB,OAAO,IAAI;;AAGrC,cAAM,EAAC,QAAQ,QAAQ,UAAS,IAAI,gBAAgB,MAAM;AAC1D,aAAK,UAAU;AACf,aAAK,UAAU;AACf,aAAK,YAAY;AAEjB,cAAM,EAAC,YAAY,qBAAqB,yBAAyB,SAAQ,IAAI,qBAAqB,MAAM;AACxG,aAAK,aAAa;AAClB,aAAK,sBAAsB;AAC3B,aAAK,0BAA0B;AAC/B,aAAK,WAAW;AAIhB,aAAK,aAAW,kCAAM,8BAAN,8BAAkC,UAAS,YAAA,0BAA0B,IAAI;AACzF,aAAK,eAAa,kCAAM,gCAAN,8BAAoC,UAAS,YAAA,4BAA4B,IAAI;MACjG;MAEA,OAAO,MACL,QACA,MAAmD;AAEnD,eAAO,KAAK,QAAA,WAAW,eAAe,KAAK,QAAQ,GAAG,QAAQ,IAAI;MACpE;MAEA,eAAY;AACV,cAAMC,SAAQ,CAAA;AACd,mBAAW,EAAC,WAAW,UAAS,KAAK,KAAK,eAAe;AACvD,UAAAA,OAAM,SAAS,IAAI,UAAU,aAAY;;AAE3C,eAAOA;MACT;MAEA,QAAQ,MAAU;AAChB,eAAO,IAAI,KAAK,SAAS,MAAM,IAAI;MACrC;MAEA,UAAU,MAAYC,QAAe;AACnC,eAAO,IAAI,KAAK,WAAW,MAAM,MAAMA,MAAK;MAC9C;MAEA,cAAc,MAAqC;AACjD,eAAO,KAAK;MACd;MAEA,WAAW,MAAmC;AAC5C,eAAO,KAAK;MACd;MAEA,aAAa,MAAqC;AAChD,aAAK,OAAM;AACX,eAAO,KAAK;MACd;;;;;;;;MAUA,qBAAqBD,QAA4B;AAC/C,YAAI,YAAY;AAChB,iBAASD,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,WAAW,UAAS,IAAI,KAAK,cAAcA,EAAC;AAEnD,uBACE,UAAU,cAAc,OAAO,IAAI,UAAU,qBAAqBC,OAAM,SAAS,CAAC,IAAI,UAAU;;AAEpG,eAAO;MACT;MAEA,uBAAuB,QAAmB,QAAgBA,QAA4B;AACpF,YAAI,aAAa;AACjB,YAAI,gBAAgB,SAAS,KAAK;AAElC,iBAASD,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,WAAW,UAAS,IAAI,KAAK,cAAcA,EAAC;AACnD,cAAI,UAAU,cAAc,MAAM;AAEhC,mBAAO,SAAS,UAAU,YAAY,gBAAgB,QAAQ,IAAI;AAClE,0BAAc;AAEd,4BAAgB,UAAU,uBAAuB,QAAQ,eAAeC,OAAM,SAAS,CAAC;iBACnF;AACL,yBAAa,UAAU,uBAAuB,QAAQ,YAAYA,OAAM,SAAS,CAAC;;;AAGtF,eAAO;MACT;MAEA,2BAA2B,MAAiB,OAAe,KAAW;AACpE,cAAM,cAAc,KAAK,eAAe,KAAK,UAAU,OAAO,GAAG;AACjE,cAAMA,SAAQ,CAAA;AAEd,iBAASD,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,WAAW,UAAS,IAAI,KAAK,cAAcA,EAAC;AACnD,gBAAM,aAAa,YAAYA,EAAC;AAChC,UAAAC,OAAM,SAAS,IAAI,UAAU,2BAA2B,MAAM,QAAQ,WAAW,OAAO,QAAQ,WAAW,GAAG;;AAGhH,eAAOA;MACT;MAEA,oBAAoB,MAAU;AAC5B,YAAI,YAAY;AAChB,cAAM,QAAQ,yBAAA,gBAAgB,MAAM,KAAK,OAAO,GAAG,KAAK,cAAc,MAAM;AAC5E,iBAASD,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,UAAS,IAAI,KAAK,cAAcA,EAAC;AACxC,gBAAMG,QAAO,MAAMH,EAAC;AAEpB,uBAAa,UAAU,cAAc,OAAO,IAAI,UAAU,oBAAoBG,KAAI,IAAI,UAAU;;AAElG,eAAO;MACT;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,YAAI,aAAa;AACjB,YAAI,gBAAgB,SAAS,KAAK;AAElC,cAAM,QAAQ,yBAAA,gBAAgB,MAAM,KAAK,OAAO,GAAG,KAAK,cAAc,MAAM;AAE5E,iBAASH,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,UAAS,IAAI,KAAK,cAAcA,EAAC;AACxC,gBAAMG,QAAO,MAAMH,EAAC;AACpB,cAAI,UAAU,cAAc,MAAM;AAEhC,mBAAO,SAAS,UAAU,YAAY,gBAAgB,QAAQ,IAAI;AAClE,0BAAc;AAEd,4BAAgB,UAAU,sBAAsB,QAAQ,eAAeG,KAAI;iBACtE;AACL,yBAAa,UAAU,sBAAsB,QAAQ,YAAYA,KAAI;;;AAGzE,eAAO;MACT;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,cAAM,cAAc,KAAK,eAAe,KAAK,UAAU,OAAO,GAAG;AACjE,cAAM,QAAQ,IAAI,MAAY,KAAK,cAAc,MAAM;AAEvD,iBAASH,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,UAAS,IAAI,KAAK,cAAcA,EAAC;AACxC,gBAAM,aAAa,YAAYA,EAAC;AAChC,gBAAMA,EAAC,IAAI,UAAU,0BAA0B,MAAM,QAAQ,WAAW,OAAO,QAAQ,WAAW,GAAG;;AAGvG,eAAO,yBAAA,sBAAsB,OAAO,KAAK,KAAK;MAChD;;MAIU,SAAS,QAA6B;AAC9C,cAAM,QAAQ,IAAI,MAAkB,KAAK,cAAc,MAAM;AAE7D,iBAASA,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,WAAW,UAAS,IAAI,KAAK,cAAcA,EAAC;AACnD,gBAAMA,EAAC,IAAI,UAAU,aAAa,OAAO,SAAS,CAAC;;AAGrD,eAAO;MACT;;;;;MAQA,kBAAkB,MAAY;AAC5B,cAAM,SAAS,KAAK,aAAa,IAAI,KAAK,KAAK,aAAa,KAAK,mBAAmB,IAAI,CAAC;AACzF,YAAI,WAAW;AAAW,gBAAM,MAAM,8BAA8B,MAAM;AAC1E,eAAO;MACT;MAEA,gBAAgB,MAAY;AAC1B,cAAMI,QAAO,KAAK,OAAO,IAAI,KAAK,KAAK,OAAO,KAAK,mBAAmB,IAAI,CAAC;AAC3E,YAAIA,UAAS;AAAW,gBAAM,MAAM,8BAA8B,MAAM;AACxE,eAAOA;MACT;MAEA,iBAAiB,OAAa;AAC5B,YAAI,SAAS,KAAK,cAAc,QAAQ;AACtC,iBAAO;;AAET,eAAO,KAAK,cAAc,KAAK,EAAE;MACnC;MAEA,qBAAqB,YAAoB,UAAe;AACtD,cAAM,WAAqB,CAAA;AAC3B,iBAASJ,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,WAAW,UAAS,IAAI,KAAK,cAAcA,EAAC;AACnD,gBAAM,cAAc,KAAK,aAAa,SAAS;AAC/C,gBAAM,sBAAsB,yBAAA,eAAe,CAAC,YAAY,WAAW,CAAC;AAEpE,cAAI,UAAU,SAAS;AACrB,qBAAS,KAAK,mBAAmB;iBAC5B;AACL,kBAAM,gBAAgB;AACtB,gBAAI,UAAU,cAAc,MAAM;AAChC,kBAAI,CAAC,UAAU;AACb,sBAAM,IAAI,MAAM,oDAAoD;;AAEtE,uBAAS,KAAK,GAAG,cAAc,qBAAqB,qBAAqB,yBAAA,QAAQ,UAAU,WAAW,CAAC,CAAC;mBACnG;AACL,uBAAS,KAAK,GAAG,cAAc,qBAAqB,mBAAmB,CAAC;;;;AAK9E,eAAO;MACT;;MAIA,SAAS,MAAa;AACpB,YAAI,OAAO,SAAS,UAAU;AAC5B,gBAAM,MAAM,6BAA6B;;AAE3C,YAAI,SAAS,MAAM;AACjB,gBAAM,MAAM,uBAAuB;;AAGrC,cAAMC,SAAQ,CAAA;AAEd,iBAASD,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,WAAW,WAAW,QAAO,IAAI,KAAK,cAAcA,EAAC;AAC5D,gBAAM,YAAa,KAAiC,OAAO;AAC3D,cAAI,cAAc,QAAW;AAC3B,kBAAM,MAAM,qBAAqB,sBAAsB;;AAEzD,UAAAC,OAAM,SAAS,IAAI,UAAU,SAAS,SAAS;;AAGjD,eAAOA;MACT;MAEA,OAAOA,QAA4B;AACjC,cAAM,OAAgC,CAAA;AAEtC,iBAASD,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,WAAW,WAAW,QAAO,IAAI,KAAK,cAAcA,EAAC;AAC5D,eAAK,OAAO,IAAI,UAAU,OAAOC,OAAM,SAAS,CAAC;;AAGnD,eAAO;MACT;MAEA,MAAMA,QAA4B;AAChC,cAAM,WAAW,CAAA;AAEjB,iBAASD,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,WAAW,UAAS,IAAI,KAAK,cAAcA,EAAC;AACnD,mBAAS,SAAS,IAAI,UAAU,MAAMC,OAAM,SAAS,CAAC;;AAGxD,eAAO;MACT;MAEA,OAAO,GAA0B,GAAwB;AACvD,iBAASD,KAAI,GAAGA,KAAI,KAAK,cAAc,QAAQA,MAAK;AAClD,gBAAM,EAAC,WAAW,UAAS,IAAI,KAAK,cAAcA,EAAC;AACnD,cAAI,CAAC,UAAU,OAAO,EAAE,SAAS,GAAG,EAAE,SAAS,CAAC,GAAG;AACjD,mBAAO;;;AAIX,eAAO;MACT;;;;;;;MAQQ,eAAe,MAAgB,OAAe,KAAW;AAC/D,YAAI,KAAK,wBAAwB,WAAW,GAAG;AAE7C,gBAAM,OAAO,MAAM;AACnB,cAAI,SAAS,KAAK,UAAU;AAC1B,kBAAM,MAAM,GAAG,KAAK,iBAAiB,6BAA6B,KAAK,UAAU;;AAGnF,iBAAO,KAAK;;AAId,cAAM,UAAU,oBAAoB,MAAM,OAAO,KAAK,KAAK,UAAU,KAAK,uBAAuB;AACjG,gBAAQ,KAAK,MAAM,KAAK;AAGxB,YAAI,cAAc;AAClB,YAAI,WAAW;AACf,cAAM,cAAc,IAAI,MAAkB,KAAK,WAAW,MAAM;AAEhE,iBAASA,KAAI,GAAGA,KAAI,KAAK,WAAW,QAAQA,MAAK;AAC/C,cAAI,KAAK,WAAWA,EAAC,GAAG;AAEtB,wBAAYA,EAAC,IAAI,KAAK,oBAAoB,UAAU;iBAC/C;AAEL,wBAAYA,EAAC,IAAI,EAAC,OAAO,QAAQ,WAAW,GAAG,KAAK,QAAQ,cAAc,CAAC,EAAC;AAC5E;;;AAGJ,eAAO;MACT;;AArXF,YAAA,gBAAA;AA2XA,aAAS,oBACP,MACA,OACA,KACA,UACA,yBAAiC;AAMjC,YAAM,OAAO,MAAM;AAGnB,YAAM,UAAU,IAAI,MAAc,wBAAwB,MAAM;AAChE,eAASA,KAAI,GAAGA,KAAI,wBAAwB,QAAQA,MAAK;AACvD,cAAM,SAAS,KAAK,UAAU,QAAQ,wBAAwBA,EAAC,GAAG,IAAI;AAGtE,YAAI,SAAS,MAAM;AACjB,gBAAM,IAAI,MAAM,wBAAwB,YAAY,MAAM;;AAE5D,YAAIA,OAAM,GAAG;AACX,cAAI,WAAW,UAAU;AACvB,kBAAM,IAAI,MAAM,uCAAuC,aAAa,UAAU;;eAE3E;AACL,cAAI,SAAS,QAAQA,KAAI,CAAC,GAAG;AAC3B,kBAAM,IAAI,MAAM,8BAA8B,YAAY,QAAQA,KAAI,CAAC,GAAG;;;AAI9E,gBAAQA,EAAC,IAAI;;AAGf,aAAO;IACT;AAWA,aAAS,qBAAqB,QAAqC;AAMjE,YAAM,aAAwB,CAAA;AAC9B,YAAM,sBAAoC,CAAA;AAC1C,YAAM,0BAAoC,CAAA;AAC1C,UAAI,eAAe;AAEnB,iBAAW,aAAa,OAAO,OAAO,MAAM,GAAG;AAC7C,mBAAW,KAAK,UAAU,cAAc,IAAI;AAC5C,YAAI,UAAU,cAAc,MAAM;AAEhC,kCAAwB,KAAK,YAAY;AACzC,0BAAgB;eACX;AACL,8BAAoB,KAAK,EAAC,OAAO,cAAc,KAAK,eAAe,UAAU,UAAS,CAAC;AACvF,0BAAgB,UAAU;;;AAI9B,aAAO;QACL;QACA;QACA;QACA,UAAU;;IAEd;AAKA,aAAS,gBAAgB,QAAqC;AAK5D,UAAI,SAAS;AACb,UAAI,SAAS;AACb,UAAI,YAA2B;AAE/B,iBAAW,aAAa,OAAO,OAAO,MAAM,GAAG;AAC7C,kBAAU,UAAU;AACpB,kBAAU,UAAU;AAEpB,YAAI,UAAU,cAAc,MAAM;AAEhC,oBAAU;AACV,oBAAU;AACV,sBAAY;mBACH,cAAc,MAAM;AAC7B,uBAAa,UAAU;;;AAG3B,aAAO,EAAC,QAAQ,QAAQ,UAAS;IACnC;AAMA,aAAgB,kBACd,WACA,WACA,UAAkB;AAElB,UAAI,WAAW;AACb,cAAM,iBAAiB,UAAU,SAAS;AAC1C,YAAI,mBAAmB,QAAW;AAChC,gBAAM,MAAM,aAAa,wBAAwB;;AAEnD,eAAO;iBACE,UAAU;AACnB,eAAO,UAAA,KAAK,QAAQ,EAAE,SAAmB;aACpC;AACL,eAAO;;IAEX;AAhBA,YAAA,oBAAA;AAqBA,aAAgB,wBACd,QACA,SAAS,aAAW;AAEpB,YAAM,aAAa,OAAO,KAAK,MAAM;AACrC,YAAM,iBAAiB,WAAW,IAAI,CAAC,cAAc,GAAG,cAAc,OAAO,SAAS,EAAE,UAAU,EAAE,KAAK,IAAI;AAC7G,aAAO,GAAG,WAAW;IACvB;AAPA,YAAA,0BAAA;;;;;;;;;;;;AChjBA,QAAA,2BAAA;AASA,QAAa,mBAAb,cAAyC,yBAAA,KAAI;MAC3C,YAA6B,aAA0CK,QAAQ;AAE7E,cAAM,MAA2B,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;AAFzB,aAAA,cAAA;AAA0C,aAAA,QAAAA;MAGvE;MAEA,IAAI,iBAAc;AAChB,YAAI,KAAK,OAAO,MAAM;AACpB,gBAAM,OAAO,KAAK,YAAY,KAAK,KAAK;AACxC,gBAAM,UAAU,KAAK,cAAc;;AAErC,eAAO;MACT;MAEA,IAAI,OAAI;AACN,eAAO,yBAAA,uBAAuB,KAAK,cAAc;MACnD;MAEA,SAAM;AACJ,eAAO;MACT;MAEA,IAAI,OAAI;AACN,eAAO,KAAK,YAAY,KAAK,KAAK,EAAE;MACtC;MAEA,IAAI,QAAK;AACP,eAAO,KAAK,YAAY,KAAK,KAAK,EAAE;MACtC;;AA5BF,YAAA,mBAAA;;;;;;;;;;;;ACRA,QAAA,cAAA;AACA,QAAA,qBAAA;AAEA,QAAA,aAAA;AAmBA,QAAM,oBAAN,cAA8E,WAAA,SAAsC;MAClH,YAAqBC,OAA6C,MAAU;AAC1E,cAAK;AADc,aAAA,OAAAA;AAA6C,aAAA,OAAA;MAElE;MAEA,IAAI,OAAI;AACN,eAAO,KAAK,KAAK;MACnB;;AAGF,aAAgB,0BACdA,OAAkC;AAElC,YAAM,gCAAgC,kBAAyB;;AAG/D,eAAS,QAAQ,GAAG,QAAQA,MAAK,cAAc,QAAQ,SAAS;AAC9D,cAAM,EAAC,WAAW,UAAS,IAAIA,MAAK,cAAc,KAAK;AAKvD,YAAI,UAAU,SAAS;AACrB,iBAAO,eAAe,wBAAwB,WAAW,WAAW;YAClE,cAAc;YACd,YAAY;;YAGZ,KAAK,WAAA;AACH,qBAAQ,KAAK,KAAK,SAAqD,MAAM,SAAS;YACxF;YAEA,KAAK,SAAyCC,QAAc;AAC1D,oBAAM,OAAO,KAAK,KAAK;AACvB,oBAAM,eAAe,KAAK,KAAK,MAAM,KAAK,KAAK;AAG/C,2BAAa,SAAS,IAAIA;AAC1B,mBAAK,KAAK,WAAW,IAAI,mBAAA,iBAAiB,KAAK,aAAa,GAAG,YAAY;YAC7E;WACD;mBAMM,YAAA,gBAAgB,SAAS,GAAG;AACnC,iBAAO,eAAe,wBAAwB,WAAW,WAAW;YAClE,cAAc;YACd,YAAY;;YAGZ,KAAK,WAAA;AACH,oBAAM,EAAC,OAAAA,OAAK,IAAI,KAAK,KAAK;AAC1B,qBAAO,UAAU,OAAOA,OAAM,SAAS,CAAC;YAC1C;;YAGA,KAAK,SAAyC,MAAa;AACzD,oBAAM,OAAO,KAAK,KAAK;AACvB,oBAAM,eAAe,KAAK,KAAK,MAAM,KAAK,KAAK;AAG/C,2BAAa,SAAS,IAAI,UAAU,gBAAgB,IAAI;AACxD,mBAAK,KAAK,WAAW,IAAI,mBAAA,iBAAiB,KAAK,aAAa,GAAG,YAAY;YAC7E;WACD;eAIE;AAEH,gBAAM,MAAM,qBAAqB,UAAU,0BAA0B,WAAW;;;AAKpF,aAAO,eAAe,yBAAyB,QAAQ,EAAC,OAAOD,MAAK,UAAU,UAAU,MAAK,CAAC;AAE9F,aAAO;IACT;AAtEA,YAAA,4BAAA;;;;;;;;;;;;AChCA,QAAA,cAAA;AAIA,QAAA,aAAA;AAIA,QAAM,sBAAN,cAAgF,WAAA,WAE/E;MAIC,YAAqBE,OAAoC,MAAU;AACjE,cAAK;AADc,aAAA,OAAAA;AAHX,aAAA,eAA6C;AAKrD,aAAK,YAAY;MACnB;MAEA,IAAI,OAAI;AACN,eAAO,KAAK;MACd;MAEA,IAAI,QAAK;AACP;MACF;MAEA,SAAM;AACJ,YAAI,KAAK,iBAAiB,MAAM;AAC9B;;AAGF,cAAMC,SAAQ,KAAK;AACnB,aAAK,eAAe;AAEpB,aAAK,YAAY,KAAK,KAAK,aAAaA,MAAK;MAC/C;MAEU,aAAU;AAClB,aAAK,eAAe;MACtB;;AAGF,aAAgB,4BACdD,OAAkC;AAElC,YAAM,kCAAkC,oBAA2B;;AAGnE,eAAS,QAAQ,GAAG,QAAQA,MAAK,cAAc,QAAQ,SAAS;AAC9D,cAAM,EAAC,WAAW,UAAS,IAAIA,MAAK,cAAc,KAAK;AAKvD,YAAI,UAAU,SAAS;AACrB,iBAAO,eAAe,0BAA0B,WAAW,WAAW;YACpE,cAAc;YACd,YAAY;;YAGZ,KAAK,WAAA;AAEH,sBAAQ,KAAK,gBAAgB,KAAK,UAAU,OAAO,SAAS;YAC9D;YAEA,KAAK,SAA2CC,QAAoC;AAClF,kBAAI,KAAK,iBAAiB,MAAM;AAC9B,qBAAK,eAAe,KAAK,KAAK,MAAM,KAAK,UAAU,KAAK;;AAG1D,mBAAK,aAAa,SAAS,IAAIA;YACjC;WACD;mBAMM,YAAA,gBAAgB,SAAS,GAAG;AACnC,iBAAO,eAAe,0BAA0B,WAAW,WAAW;YACpE,cAAc;YACd,YAAY;;YAGZ,KAAK,WAAA;AACH,oBAAMA,SAAQ,KAAK,gBAAgB,KAAK,UAAU;AAClD,qBAAO,UAAU,SAASA,OAAM,SAAS,CAAC;YAC5C;;YAGA,KAAK,SAA2C,MAAa;AAC3D,kBAAI,KAAK,iBAAiB,MAAM;AAC9B,qBAAK,eAAe,KAAK,KAAK,MAAM,KAAK,UAAU,KAAK;;AAG1D,oBAAMA,SAAQ,UAAU,kBAAkB,IAAI;AAC9C,mBAAK,aAAa,SAAS,IAAIA;YACjC;WACD;eAIE;AAEH,gBAAM,MAAM,qBAAqB,UAAU,0BAA0B,WAAW;;;AAKpF,aAAO,eAAe,2BAA2B,QAAQ,EAAC,OAAOD,MAAK,UAAU,UAAU,MAAK,CAAC;AAEhG,aAAO;IACT;AAtEA,YAAA,8BAAA;;;;;;;;;;;;AC3CA,QAAA,cAAA;AACA,QAAA,cAAA;AAEA,QAAA,UAAA;AACA,QAAA,wBAAA;AACA,QAAA,wBAAA;AACA,QAAA,qBAAA;AAiBA,QAAa,0BAAb,cAA2F,YAAA,cAAqB;MAC9G,YAAqB,QAAgB,MAA+B;AAClE,cAAM,QAAQ;;;UAGZ,WAAU,6BAAM,aAAY,YAAA,wBAAwB,QAAQ,qBAAqB;UACjF,GAAG;UACH,2BAAA,sBAAA;UACA,6BAAA,sBAAA;SACD;AARkB,aAAA,SAAA;AAqBnB,mBAAW,EAAC,WAAW,UAAS,KAAK,KAAK,eAAe;AACvD,cAAI,YAAA,gBAAgB,SAAS,KAAK,UAAU,eAAe;AACzD,kBAAM,MAAM,kCAAkC,cAAc,UAAU,0BAA0B;;;MAGtG;MAEA,OAAO,MACL,QACA,MAAmD;AAEnD,eAAO,KAAK,QAAA,WAAW,YAAA,eAAe,KAAK,QAAQ,GAAG,QAAQ,IAAI;MACpE;MAEA,oBAAoB,MAAU;AAC5B,eAAO,KAAK,qBAAsB,KAAiD,KAAK;MAC1F;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,cAAM,EAAC,OAAAE,OAAK,IAAI;AAChB,eAAO,KAAK,uBAAuB,QAAQ,QAAQA,MAAK;MAC1D;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,cAAMA,SAAQ,KAAK,2BAA2B,MAAM,OAAO,GAAG;AAC9D,eAAO,IAAI,mBAAA,iBAAiB,KAAK,YAAY,KAAK,IAAI,GAAGA,MAAK;MAChE;;;;MAMA,oBAAiB;AACf,eAAO;MACT;;;MAIA,mBAAmB,MAAU;AAG3B,cAAM,aAAa,IAAI,WAAW,MAAM,oBAAoB,IAAI,CAAC;AACjE,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,cAAM,sBAAsB,EAAC,YAAY,SAAQ,GAAG,GAAG,IAAI;AAC3D,cAAMA,SAAQ,KAAK,2BAA2B,EAAC,YAAY,SAAQ,GAAG,GAAG,WAAW,MAAM;AAC1F,eAAO;UACL,MAAM,IAAI,mBAAA,iBAAiB,KAAK,YAAY,KAAK,IAAI,GAAGA,MAAK;UAC7D,MAAM;;MAEV;;MAIA,aAAa,MAAU;AACrB,eAAQ,KAAiD;MAC3D;MAEA,aAAaA,QAA4B;AACvC,eAAO,IAAI,mBAAA,iBAAiB,KAAK,YAAY,KAAK,IAAI,GAAGA,MAAK;MAChE;;MAGQ,YAAYA,QAA4B;AAC9C,cAAM,aAAa,IAAI,WAAW,KAAK,qBAAqBA,MAAK,CAAC;AAClE,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,aAAK,uBAAuB,EAAC,YAAY,SAAQ,GAAG,GAAGA,MAAK;AAC5D,eAAO,MAAM,0BAA0B,EAAC,YAAY,SAAQ,GAAG,GAAG,WAAW,MAAM;MACrF;;AAzFF,YAAA,0BAAA;;;;;;;;;;;;ACzBA,QAAA,2BAAA;AAKA,QAAA,aAAA;AAsBA,QAAa,qBAAb,cAAgF,WAAA,SAAqC;MACnH,YAAqBC,OAA6C,MAAU;AAC1E,cAAK;AADc,aAAA,OAAAA;AAA6C,aAAA,OAAA;MAElE;;;;MAKA,IAAI,SAAM;AACR,eAAO,KAAK,KAAK,eAAe,KAAK,KAAK,QAAQ;MACpD;MAEA,IAAI,OAAI;AACN,eAAO,KAAK,KAAK;MACnB;;;;MAKA,IAAI,OAAa;AAEf,cAAM,aAAa,KAAK,MAAM,QAAQ,KAAK,KAAK,aAAa;AAC7D,cAAM,WAAW,KAAK,KAAK,eAAe,KAAK,KAAK,OAAO,UAAU;AAGrE,eAAO,KAAK,KAAK,YAAY,uBAAuB,UAAU,KAAK;MACrE;;;;MAKA,IAAI,OAAeC,QAA2B;AAC5C,cAAMC,UAAS,KAAK;AACpB,YAAI,SAASA,SAAQ;AACnB,gBAAM,MAAM,mCAAmC,WAAWA,SAAQ;;AAGpE,cAAM,aAAa,KAAK,MAAM,QAAQ,KAAK,KAAK,aAAa;AAC7D,cAAM,eAAe,KAAK,KAAK,eAAe,KAAK,KAAK,OAAO,UAAU;AAGzE,cAAM,WAAW,aAAa,MAAK;AACnC,aAAK,KAAK,YAAY,qBAAqB,UAAU,OAAOD,MAAK;AAGjE,aAAK,KAAK,eAAe,KAAK,KAAK,OAAO,YAAY,QAAQ;MAChE;;;;MAKA,SAAM;AACJ,cAAMC,UAAS,KAAK;AACpB,cAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,IAAI;AACzD,cAAM,aAAa,KAAK,KAAKA,UAAS,KAAK,KAAK,aAAa;AAC7D,cAAM,YAAY,yBAAA,gBAAgB,YAAY,KAAK,KAAK,YAAY,GAAG,UAAU;AAEjF,cAAM,SAAS,IAAI,MAA4BA,OAAM;AACrD,cAAM,gBAAgB,KAAK,KAAK;AAChC,cAAM,eAAe,KAAK,MAAMA,UAAS,aAAa;AACtD,cAAM,YAAYA,UAAS;AAE3B,iBAASC,KAAI,GAAGA,KAAI,cAAcA,MAAK;AACrC,gBAAM,WAAW,UAAUA,EAAC;AAM5B,mBAASC,KAAI,GAAGA,KAAI,eAAeA,MAAK;AACtC,mBAAOD,KAAI,gBAAgBC,EAAC,IAAI,KAAK,KAAK,YAAY,uBACpD,UACAA,EAAC;;;AAKP,YAAI,YAAY,GAAG;AACjB,gBAAM,WAAW,UAAU,YAAY;AACvC,mBAASA,KAAI,GAAGA,KAAI,WAAWA,MAAK;AAClC,mBAAO,eAAe,gBAAgBA,EAAC,IAAI,KAAK,KAAK,YAAY,uBAC/D,UACAA,EAAC;;;AAKP,eAAO;MACT;;AAxFF,YAAA,qBAAA;;;;;;;;;;;;AC3BA,QAAA,2BAAA;AAGA,QAAA,eAAA;AAOA,QAAa,oBAAb,cAA+E,aAAA,mBAA+B;MAC5G,YAAqBC,OAA4C,MAAU;AACzE,cAAMA,OAAM,IAAI;AADG,aAAA,OAAAA;AAA4C,aAAA,OAAA;MAEjE;;;;MAKA,KAAKC,QAA2B;AAC9B,cAAMC,UAAS,KAAK;AACpB,YAAIA,WAAU,KAAK,KAAK,OAAO;AAC7B,gBAAM,MAAM,0BAA0B;;AAGxC,aAAK,KAAK,eAAe,KAAK,MAAMA,UAAS,CAAC;AAG9C,YAAIA,UAAS,KAAK,KAAK,kBAAkB,GAAG;AAI1C,gBAAM,WAAW,yBAAA,SAAS,SAAQ;AAClC,eAAK,KAAK,YAAY,qBAAqB,UAAUA,SAAQD,MAAK;AAGlE,gBAAM,aAAa,KAAK,MAAMC,UAAS,KAAK,KAAK,aAAa;AAC9D,eAAK,KAAK,eAAe,KAAK,KAAK,OAAO,YAAY,QAAQ;eACzD;AAEL,eAAK,IAAIA,SAAQD,MAAK;;MAE1B;;AA/BF,YAAA,oBAAA;;;;;;;;;;;;ACVA,QAAA,2BAAA;AAIA,QAAA,aAAA;AAQA,QAAa,uBAAb,cAAkF,WAAA,WAEjF;MAOC,YACWE,OACC,WACVC,QAAiC;AAEjC,cAAK;AAJI,aAAA,OAAAD;AACC,aAAA,YAAA;AAPO,aAAA,eAAe,oBAAI,IAAG;AAE/B,aAAA,cAAc;AAUtB,YAAIC,QAAO;AACT,eAAK,QAAQA,OAAM;AACnB,eAAK,UAAUA,OAAM;AACrB,eAAK,iBAAiBA,OAAM;eACvB;AACL,eAAK,QAAQ,CAAA;AACb,eAAK,UAAU,KAAK,KAAK,eAAe,SAAS;AACjD,eAAK,iBAAiB;;MAE1B;;;;MAKA,IAAI,SAAM;AACR,eAAO,KAAK;MACd;MAEA,IAAI,OAAI;AACN,eAAO,KAAK;MACd;MAEA,IAAI,QAAK;AACP,eAAO;UACL,OAAO,KAAK;UACZ,QAAQ,KAAK;UACb,gBAAgB,KAAK;;MAEzB;;;;MAKA,IAAI,OAAa;AAEf,cAAM,aAAa,KAAK,MAAM,QAAQ,KAAK,KAAK,aAAa;AAC7D,YAAI,OAAO,KAAK,MAAM,UAAU;AAChC,YAAI,SAAS,QAAW;AACtB,iBAAO,yBAAA,eAAe,KAAK,WAAW,KAAK,KAAK,OAAO,UAAU;AACjE,eAAK,MAAM,UAAU,IAAI;;AAG3B,eAAO,KAAK,KAAK,YAAY,uBAAuB,MAAM,KAAK;MACjE;;;;MAKA,IAAI,OAAeC,QAA2B;AAC5C,YAAI,SAAS,KAAK,SAAS;AACzB,gBAAM,MAAM,mCAAmC,WAAW,KAAK,SAAS;;AAG1E,cAAM,aAAa,KAAK,MAAM,QAAQ,KAAK,KAAK,aAAa;AAG7D,YAAI;AACJ,YAAI,KAAK,aAAa,IAAI,UAAU,GAAG;AAErC,wBAAc,KAAK,MAAM,UAAU;eAC9B;AACL,gBAAM,WAAY,KAAK,MAAM,UAAU,KACrC,yBAAA,eAAe,KAAK,WAAW,KAAK,KAAK,OAAO,UAAU;AAE5D,wBAAc,SAAS,MAAK;AAE5B,eAAK,MAAM,UAAU,IAAI;AACzB,eAAK,aAAa,IAAI,UAAU;;AAGlC,aAAK,KAAK,YAAY,qBAAqB,aAAa,OAAOA,MAAK;MACtE;;;;MAKA,SAAM;AACJ,YAAI,CAAC,KAAK,gBAAgB;AACxB,gBAAM,YAAY,KAAK;AACvB,gBAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,IAAI;AACzD,gBAAM,aAAa,KAAK,KAAK,KAAK,UAAU,KAAK,KAAK,aAAa;AACnE,eAAK,QAAQ,yBAAA,gBAAgB,YAAY,KAAK,KAAK,YAAY,GAAG,UAAU;AAG5E,qBAAW,SAAS,KAAK,cAAc;AACrC,iBAAK,MAAM,KAAK,IAAI,UAAU,KAAK;;AAGrC,eAAK,iBAAiB;;AAGxB,cAAM,SAAS,IAAI,MAA4B,KAAK,OAAO;AAC3D,cAAM,gBAAgB,KAAK,KAAK;AAChC,cAAM,eAAe,KAAK,MAAM,KAAK,UAAU,aAAa;AAC5D,cAAM,YAAY,KAAK,UAAU;AAGjC,iBAASC,KAAI,GAAGA,KAAI,cAAcA,MAAK;AACrC,gBAAM,WAAW,KAAK,MAAMA,EAAC;AAM7B,mBAASC,KAAI,GAAGA,KAAI,eAAeA,MAAK;AACtC,mBAAOD,KAAI,gBAAgBC,EAAC,IAAI,KAAK,KAAK,YAAY,uBACpD,UACAA,EAAC;;;AAKP,YAAI,YAAY,GAAG;AACjB,gBAAM,WAAW,KAAK,MAAM,YAAY;AACxC,mBAASA,KAAI,GAAGA,KAAI,WAAWA,MAAK;AAClC,mBAAO,eAAe,gBAAgBA,EAAC,IAAI,KAAK,KAAK,YAAY,uBAC/D,UACAA,EAAC;;;AAKP,eAAO;MACT;MAEA,SAAM;AACJ,YAAI,KAAK,aAAa,SAAS,GAAG;AAChC;;AAIF,cAAM,UAAU,MAAM,KAAK,KAAK,aAAa,KAAI,CAAE,EAAE,KAAK,CAAC,GAAG,MAAM,IAAI,CAAC;AACzE,cAAM,QAAQ,IAAI,MAAgB,QAAQ,MAAM;AAChD,iBAASA,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AACvC,gBAAMA,EAAC,IAAI,KAAK,MAAM,QAAQA,EAAC,CAAC;;AAGlC,cAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,SAAS;AAE9D,cAAM,gBAAgB,yBAAA,gBAAgB,YAAY,KAAK,KAAK,YAAY,SAAS,KAAK;AAEtF,aAAK,YAAY,KAAK,KAAK,mBACzB,KAAK,WACL,eACA,KAAK,cAAc,KAAK,UAAU,MAAS;AAG7C,aAAK,aAAa,MAAK;AACvB,aAAK,cAAc;MACrB;MAEU,aAAU;AAClB,aAAK,QAAQ,CAAA;AACb,aAAK,iBAAiB;AAGtB,aAAK,aAAa,MAAK;AAGvB,YAAI,KAAK,aAAa;AACpB,eAAK,UAAU,KAAK,KAAK,eAAe,KAAK,SAAS;AACtD,eAAK,cAAc;;MAEvB;;AAnLF,YAAA,uBAAA;;;;;;;;;;;;ACZA,QAAA,2BAAA;AAIA,QAAA,eAAA;AAEA,QAAa,sBAAb,cAAiF,aAAA,qBAAiC;MAChH,YAAqBC,OAA4C,WAAiBC,QAAiC;AACjH,cAAMD,OAAM,WAAWC,MAAK;AADT,aAAA,OAAAD;AAA4C,aAAA,YAAA;MAEjE;;;;MAKA,KAAKE,QAA2B;AAC9B,YAAI,KAAK,WAAW,KAAK,KAAK,OAAO;AACnC,gBAAM,MAAM,0BAA0B;;AAIxC,aAAK,cAAc;AACnB,cAAM,QAAQ,KAAK;AAGnB,YAAI,QAAQ,KAAK,KAAK,kBAAkB,GAAG;AAEzC,gBAAM,aAAa,KAAK,MAAM,QAAQ,KAAK,KAAK,aAAa;AAC7D,eAAK,MAAM,UAAU,IAAI,yBAAA,SAAS,CAAC;;AAGrC,aAAK,IAAI,OAAOA,MAAK;MACvB;;AAzBF,YAAA,sBAAA;;;;;;;;;;;;ACNA,QAAA,2BAAA;AAEA,QAAA,cAAA;AACA,QAAA,eAAA;AAcA,QAAsB,YAAtB,cAAqF,YAAA,cAIpF;MAIC,YAAqB,aAAwB;AAC3C,cAAK;AADc,aAAA,cAAA;MAErB;MAEA,eAAY;AACV,eAAO,aAAA,wBAAwB,KAAK,aAAa,KAAK,UAAU;MAClE;;MAMA,kBAAe;AACb,eAAO,KAAK;MACd;MAEA,kBAAkB,MAAqB;AACrC,YAAI,OAAO,SAAS,UAAU;AAC5B,gBAAM,MAAM,wBAAwB,MAAM;;AAG5C,cAAM,WAAW,KAAK,MAAM,OAAO,KAAK,aAAa;AACrD,eAAO,yBAAA,SAAS,KAAK,OAAO,OAAO,QAAQ,CAAC;MAC9C;MAEA,iBAAiB,OAAa;AAC5B,eAAO;MACT;MAEA,qBAAqB,YAAoB,UAAe;AACtD,YAAIC;AACJ,YAAI,KAAK,QAAQ;AACf,cAAI,CAAC,UAAU;AACb,kBAAM,IAAI,MAAM,gDAAgD;;AAElE,UAAAA,UAAS,KAAK,eAAe,QAAQ;eAChC;AAEL,UAAAA,UAAS,KAAK,eAAe,IAAuB;;AAGtD,cAAM,WAAqB,CAAA;AAE3B,YAAI,YAAA,gBAAgB,KAAK,WAAW,GAAG;AAGrC,gBAAM,aAAa,yBAAA,SAAS,KAAK,OAAO,OAAO,CAAC,CAAC;AACjD,gBAAM,YAAY,aAAa,OAAOA,OAAM;AAC5C,gBAAM,qBAAqB,yBAAA,eAAe,CAAC,YAAY,UAAU,CAAC;AAElE,cAAI,KAAK,YAAY,cAAc,MAAM;AACvC,gBAAI,CAAC,UAAU;AAEb,oBAAM,IAAI,MAAM,6DAA6D;;AAI/E,qBACM,SAAS,YAAY,iBAAiB,oBAC1C,SAAS,WACT,UAAU,kBACV;AACA,uBAAS,KAAK,GAAG,KAAK,YAAY,qBAAqB,gBAAgB,yBAAA,QAAQ,UAAU,MAAM,CAAC,CAAC;;iBAE9F;AACL,qBAASC,KAAI,GAAG,iBAAiB,oBAAoBA,KAAID,SAAQC,MAAK,kBAAkB;AACtF,uBAAS,KAAK,GAAG,KAAK,YAAY,qBAAqB,cAAc,CAAC;;;eAMvE;AACH,gBAAM,aAAa,KAAK,KAAKD,UAAS,KAAK,aAAa;AACxD,gBAAM,aAAa,yBAAA,eAAe,CAAC,YAAY,yBAAA,SAAS,KAAK,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC;AAC/E,gBAAM,YAAY,aAAa,OAAO,UAAU;AAChD,mBAAS,SAAS,YAAY,SAAS,WAAW,UAAU;AAC1D,qBAAS,KAAK,MAAM;;;AAKxB,YAAI,KAAK,QAAQ;AACf,mBAAS,KAAK,yBAAA,eAAe,CAAC,YAAY,YAAA,aAAa,CAAC,CAAC;;AAG3D,eAAO;MACT;;MAIA,SAAS,MAAa;AAGpB,eAAO,aAAA,oBAAoB,KAAK,aAAa,MAAM,IAA6B;MAClF;MAEA,OAAOE,QAA6B;AAClC,eAAO,aAAA,kBAAkB,KAAK,aAAaA,QAAO,IAA6B;MACjF;MAEA,MAAMA,QAA6B;AACjC,eAAO,aAAA,iBAAiB,KAAK,aAAaA,MAAK;MACjD;MAEA,OAAO,GAA2B,GAAyB;AACzD,eAAO,aAAA,aAAa,KAAK,aAAa,GAAG,CAAC;MAC5C;;AAnHF,YAAA,YAAA;;;;;;;;;;;;ACbA,QAAA,eAAA;AAQA,QAAA,cAAA;AAEA,QAAA,UAAA;AAEA,QAAA,cAAA;AACA,QAAA,cAAA;AACA,QAAA,UAAA;AAeA,QAAa,gBAAb,cACU,QAAA,UAAwF;MAehG,YAAqB,aAAmC,OAAe,MAAoB;AACzF,cAAM,WAAW;AADE,aAAA,cAAA;AAAmC,aAAA,QAAA;AAP/C,aAAA,YAAY;AAGZ,aAAA,SAAS;AACT,aAAA,gBAAgB;AACN,aAAA,aAAa;AAK9B,YAAI,CAAC,YAAY;AAAS,gBAAM,MAAM,2BAA2B;AACjE,YAAI,UAAU;AAAG,gBAAM,MAAM,wBAAwB;AAErD,aAAK,YAAW,6BAAM,aAAY,QAAQ,YAAY,aAAa;AAEnE,aAAK,gBAAgB,KAAK,YAAY;AACtC,aAAK,gBAAgB,KAAK,KAAM,KAAK,QAAQ,YAAY,aAAc,EAAE;AACzE,aAAK,aAAa,YAAA,iBAAiB,KAAK,aAAa;AAErD,aAAK,QAAQ,KAAK,aAAa;AAC/B,aAAK,UAAU;AACf,aAAK,UAAU,KAAK,QAAQ,YAAY;MAC1C;MAEA,OAAO,MACL,aACA,OACA,MAAwC;AAExC,eAAO,KAAK,QAAA,WAAW,eAAe,KAAK,QAAQ,GAAG,aAAa,OAAO,IAAI;MAChF;MAEA,QAAQ,MAAU;AAChB,eAAO,IAAI,YAAA,kBAAkB,MAAM,IAAI;MACzC;MAEA,UAAU,MAAYC,QAAe;AAGnC,eAAO,IAAI,YAAA,oBAAoB,MAAM,MAAMA,MAAY;MACzD;MAEA,WAAW,MAAoC;AAC7C,eAAO,KAAK;MACd;MAEA,aAAa,MAAsC;AACjD,aAAK,OAAM;AACX,eAAO,KAAK;MACd;MAEA,cAAc,MAAsC;AAClD,eAAO,KAAK;MACd;;MAIA,qBAAqBC,QAA6B;AAChD,eAAOA,OAAM,SAAS,KAAK,YAAY;MACzC;MAEA,uBAAuB,QAAmB,QAAgBA,QAA6B;AACrF,eAAO,aAAA,iCAAiC,KAAK,aAAaA,OAAM,QAAQ,QAAQ,QAAQA,MAAK;MAC/F;MAEA,2BAA2B,MAAiB,OAAe,KAAW;AACpE,eAAO,aAAA,qCAAqC,KAAK,aAAa,MAAM,OAAO,KAAK,IAAI;MACtF;MAEA,oBAAoB,MAAU;AAC5B,eAAO,KAAK,eAAe,IAAI,IAAI,KAAK,YAAY;MACtD;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,cAAM,aAAa,KAAK,mBAAmB,IAAI;AAC/C,cAAMC,UAAS,KAAK,eAAe,IAAI;AACvC,eAAO,aAAA,gCAAgC,KAAK,aAAaA,SAAQ,KAAK,YAAY,QAAQ,QAAQ,UAAU;MAC9G;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,eAAO,aAAA,oCAAoC,KAAK,aAAa,KAAK,YAAY,MAAM,OAAO,KAAK,IAAI;MACtG;;MAIA,eAAe,MAAU;AACvB,eAAQ,KAAK,MAAmB,QAAQ,GAAG,CAAC;MAC9C;MAEA,eAAe,MAAYA,SAAc;AACvC,aAAK,WAAW,aAAA,cAAc,KAAK,SAAS,MAAMA,OAAM;MAC1D;MAEA,mBAAmB,MAAU;AAC3B,eAAO,KAAK;MACd;MAEA,mBAAmB,UAAgB,YAAkB,WAAkB;AACrE,eAAO,aAAA,cAAc,UAAU,YAAY,SAAS;MACtD;;MAIA,aAAaD,QAA6B;AACxC,eAAO,YAAA,YAAY,MAAM,aAAaA,MAAK,GAAGA,OAAM,MAAM;MAC5D;MAEU,SAASA,QAA6B;AAC9C,cAAM,aAAa,IAAI,WAAW,KAAK,qBAAqBA,MAAK,CAAC;AAClE,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,qBAAA,iCAAiC,KAAK,aAAaA,OAAM,QAAQ,EAAC,YAAY,SAAQ,GAAG,GAAGA,MAAK;AACjG,eAAO,YAAA,oBAAoB,UAAU;MACvC;;AAzHF,YAAA,gBAAA;;;;;;;;;;;;ACjCA,QAAA,2BAAA;AAGA,QAAA,eAAA;AAWA,aAAgB,sBACd,aACA,UAAgB;AAGhB,UAAI,YAAY,cAAc,MAAM;AAClC,eAAO,YAAY,IAAI,YAAY;aAGhC;AACH,eAAO,WAAW,YAAY;;IAElC;AAZA,YAAA,wBAAA;AAcA,aAAgB,sBACd,aACA,UAAgB;AAGhB,UAAI,YAAY,cAAc,MAAM;AAClC,eAAO,YAAY,IAAI,YAAY;aAGhC;AACH,eAAO,WAAW,YAAY;;IAElC;AAZA,YAAA,wBAAA;AAcA,aAAgB,mCACd,aACAE,SACAC,QAA6B;AAG7B,UAAI,YAAY,cAAc,MAAM;AAClC,YAAI,OAAO;AACX,iBAASC,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAC/B,kBAAQ,IAAI,YAAY,qBAAqBD,OAAMC,EAAC,CAAC;;AAEvD,eAAO;aAIJ;AACH,eAAOF,UAAS,YAAY;;IAEhC;AAlBA,YAAA,qCAAA;AAuBA,aAAgB,qCACd,aACAA,SACA,QACA,QACAC,QAA6B;AAG7B,UAAI,YAAY,cAAc,MAAM;AAClC,YAAI,gBAAgB,SAASD,UAAS;AACtC,iBAASE,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAE/B,iBAAO,SAAS,UAAU,SAASA,KAAI,GAAG,gBAAgB,QAAQ,IAAI;AAEtE,0BAAgB,YAAY,uBAAuB,QAAQ,eAAeD,OAAMC,EAAC,CAAC;;AAEpF,eAAO;aAIJ;AACH,iBAASA,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAC/B,sBAAY,uBAAuB,QAAQ,SAASA,KAAI,YAAY,WAAWD,OAAMC,EAAC,CAAC;;AAEzF,eAAO,SAASF,UAAS,YAAY;;IAEzC;AA1BA,YAAA,uCAAA;AA4BA,aAAgB,yCAGd,aACA,MACA,OACA,KACA,YAAsB;AAEtB,YAAM,UAAU,0BAA0B,YAAY,WAAW,KAAK,UAAU,OAAO,KAAK,UAAU;AACtG,YAAMA,UAAS,QAAQ;AAEvB,YAAM,SAAS,IAAI,MAA4BA,OAAM;AAGrD,eAASE,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAE/B,cAAM,UAAU,QAAQ,QAAQA,EAAC;AACjC,cAAM,QAAQA,OAAMF,UAAS,IAAI,MAAM,QAAQ,QAAQE,KAAI,CAAC;AAC5D,eAAOA,EAAC,IAAI,YAAY,2BAA2B,MAAM,SAAS,KAAK;;AAGzE,aAAO;IACT;AAvBA,YAAA,2CAAA;AA4BA,aAAgB,kCACd,aACAF,SACA,OACA,MAAU;AAGV,UAAI,YAAY,cAAc,MAAM;AAClC,cAAM,QAAQ,yBAAA,gBAAgB,MAAM,OAAO,GAAGA,OAAM;AAEpD,YAAI,OAAO;AACX,iBAASE,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,kBAAQ,IAAI,YAAY,oBAAoB,MAAMA,EAAC,CAAC;;AAEtD,eAAO;aAIJ;AACH,eAAOF,UAAS,YAAY;;IAEhC;AArBA,YAAA,oCAAA;AA0BA,aAAgB,oCACd,aACAA,SACA,OACA,MACA,QACA,QAAc;AAEd,YAAM,QAAQ,yBAAA,gBAAgB,MAAM,OAAO,GAAGA,OAAM;AAIpD,UAAI,YAAY,cAAc,MAAM;AAClC,YAAI,gBAAgB,SAASA,UAAS;AACtC,cAAM,EAAC,SAAQ,IAAI;AACnB,iBAASE,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AAErC,mBAAS,UAAU,SAASA,KAAI,GAAG,gBAAgB,QAAQ,IAAI;AAE/D,0BAAgB,YAAY,sBAAsB,QAAQ,eAAe,MAAMA,EAAC,CAAC;;AAEnF,eAAO;aAIJ;AACH,iBAASA,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,mBAAS,YAAY,sBAAsB,QAAQ,QAAQ,MAAMA,EAAC,CAAC;;AAErE,eAAO;;IAEX;AA/BA,YAAA,sCAAA;AAiCA,aAAgB,wCACd,aACA,YACA,MACA,OACA,KACA,YAAsB;AAEtB,YAAM,UAAU,0BAA0B,YAAY,WAAW,KAAK,UAAU,OAAO,KAAK,UAAU;AACtG,YAAMF,UAAS,QAAQ;AAEvB,YAAM,QAAQ,IAAI,MAAYA,OAAM;AAGpC,eAASE,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAE/B,cAAM,UAAU,QAAQ,QAAQA,EAAC;AACjC,cAAM,QAAQA,OAAMF,UAAS,IAAI,MAAM,QAAQ,QAAQE,KAAI,CAAC;AAC5D,cAAMA,EAAC,IAAI,YAAY,0BAA0B,MAAM,SAAS,KAAK;;AAIvE,YAAM,aAAa,yBAAA,sBAAsB,OAAO,UAAU;AAG1D,UAAI,WAAW,QAAQ;AACrB,eAAO,aAAA,cAAc,YAAYF,OAAM;aAClC;AACL,eAAO;;IAEX;AA9BA,YAAA,0CAAA;AAmCA,aAAgB,6BACd,aACAA,SACAC,QAA6B;AAE7B,YAAM,QAAQ,IAAI,MAAkBD,OAAM;AAE1C,eAASE,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAC/B,cAAMA,EAAC,IAAI,YAAY,aAAaD,OAAMC,EAAC,CAAC;;AAG9C,aAAO;IACT;AAZA,YAAA,+BAAA;AAcA,aAAS,0BACP,kBACA,MACA,OACA,KACA,YAAsB;AAEtB,YAAM,OAAO,MAAM;AACnB,UAAI;AAIJ,UAAI,qBAAqB,MAAM;AAC7B,kBAAU,kCAAkC,MAAM,OAAO,IAAI;aAI1D;AAGH,YAAI,qBAAqB,GAAG;AAC1B,gBAAM,MAAM,2BAA2B;;AAEzC,YAAI,OAAO,qBAAqB,GAAG;AACjC,gBAAM,MAAM,QAAQ,6CAA6C,kBAAkB;;AAGrF,cAAMF,UAAS,OAAO;AACtB,kBAAU,IAAI,YAAYA,OAAM;AAEhC,iBAASE,KAAI,GAAGA,KAAIF,SAAQE,MAAK;AAC/B,kBAAQA,EAAC,IAAIA,KAAI;;;AAKrB,mBAAA,uBAAuB,QAAQ,QAAQ,UAAU;AAEjD,aAAO;IACT;AAMA,aAAS,kCAAkC,UAAoB,OAAe,MAAY;AACxF,UAAI,SAAS,GAAG;AACd,eAAO,IAAI,YAAY,CAAC;;AAO1B,YAAM,cAAc,SAAS,UAAU,OAAO,IAAI;AAIlD,YAAM,mBAAmB;AAEzB,UAAI,gBAAgB,GAAG;AACrB,cAAM,MAAM,0BAA0B;;AAGxC,UAAI,mBAAmB,MAAM,GAAG;AAC9B,cAAM,MAAM,sCAAsC;;AAGpD,YAAM,cAAc,mBAAmB;AACvC,YAAM,UAAU,IAAI,YAAY,WAAW;AAC3C,cAAQ,CAAC,IAAI;AAcb,eAAS,YAAY,GAAG,YAAY,aAAa,aAAa;AAC5D,cAAM,SAAS,SAAS,UAAU,QAAQ,YAAY,GAAG,IAAI;AAC7D,gBAAQ,SAAS,IAAI;AAGrB,YAAI,SAAS,MAAM;AACjB,gBAAM,IAAI,MAAM,wBAAwB,YAAY,MAAM;;AAG5D,YAAI,SAAS,QAAQ,YAAY,CAAC,GAAG;AACnC,gBAAM,IAAI,MAAM,8BAA8B,YAAY,QAAQ,YAAY,CAAC,GAAG;;;AAItF,aAAO;IACT;;;;;;;;;;;;ACxUA,QAAA,2BAAA;AAGA,QAAA,aAAA;AAmBA,QAAa,yBAAb,cAEU,WAAA,SAAyC;MACjD,YAAqBC,OAAiD,MAAU;AAC9E,cAAK;AADc,aAAA,OAAAA;AAAiD,aAAA,OAAA;MAEtE;;;;MAKA,IAAI,SAAM;AACR,eAAO,KAAK,KAAK,eAAe,KAAK,KAAK,QAAQ;MACpD;;;;MAKA,IAAI,OAAI;AACN,eAAO,KAAK,KAAK;MACnB;;;;MAKA,IAAI,OAAa;AAEf,cAAM,SAAS,yBAAA,kBAAkB,KAAK,KAAK,OAAO,KAAK;AACvD,cAAM,UAAU,KAAK,KAAK,WAAW,MAAM;AAC3C,eAAO,KAAK,KAAK,YAAY,QAAQ,OAAO;MAC9C;;;;;MAMA,YAAY,OAAa;AAEvB,cAAM,SAAS,yBAAA,kBAAkB,KAAK,KAAK,OAAO,KAAK;AAEvD,cAAM,UAAU,IAAI,yBAAA,KAAK,KAAK,KAAK,QAAQ,MAAM,CAAC;AAClD,eAAO,KAAK,KAAK,YAAY,QAAQ,OAAO;MAC9C;;;;MAKA,IAAI,OAAe,MAAgC;AACjD,cAAMC,UAAS,KAAK;AACpB,YAAI,SAASA,SAAQ;AACnB,gBAAM,MAAM,mCAAmC,WAAWA,SAAQ;;AAGpE,cAAM,OAAO,KAAK,KAAK,YAAY,WAAW,IAAI;AAClD,aAAK,KAAK,eAAe,KAAK,KAAK,OAAO,OAAO,IAAI;MACvD;;;;;;MAOA,iBAAc;AACZ,cAAMA,UAAS,KAAK;AACpB,cAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,IAAI;AACzD,cAAM,QAAQ,yBAAA,gBAAgB,YAAY,KAAK,KAAK,YAAY,GAAGA,OAAM;AACzE,cAAM,QAAQ,IAAI,MAAkCA,OAAM;AAC1D,iBAASC,KAAI,GAAGA,KAAID,SAAQC,MAAK;AAE/B,gBAAMA,EAAC,IAAI,KAAK,KAAK,YAAY,QAAQ,IAAI,yBAAA,KAAK,MAAMA,EAAC,CAAC,CAAC;;AAE7D,eAAO;MACT;;;;;;MAOA,uBAAoB;AAClB,cAAMD,UAAS,KAAK;AACpB,cAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,IAAI;AACzD,cAAM,QAAQ,yBAAA,gBAAgB,YAAY,KAAK,KAAK,YAAY,GAAGA,OAAM;AACzE,cAAM,SAAS,IAAI,MAA4BA,OAAM;AACrD,iBAASC,KAAI,GAAGA,KAAID,SAAQC,MAAK;AAC/B,iBAAOA,EAAC,IAAI,KAAK,KAAK,YAAY,aAAa,MAAMA,EAAC,CAAC;;AAEzD,eAAO;MACT;;AAvFF,YAAA,yBAAA;;;;;;;;;;;;ACnBA,QAAA,mBAAA;AASA,QAAa,wBAAb,cAEU,iBAAA,uBAAmC;MAC3C,YAAqBC,OAAgD,MAAU;AAC7E,cAAMA,OAAM,IAAI;AADG,aAAA,OAAAA;AAAgD,aAAA,OAAA;MAErE;;;;MAKA,KAAK,MAAgC;AACnC,cAAMC,UAAS,KAAK;AACpB,YAAIA,WAAU,KAAK,KAAK,OAAO;AAC7B,gBAAM,MAAM,0BAA0B;;AAGxC,aAAK,KAAK,eAAe,KAAK,MAAMA,UAAS,CAAC;AAE9C,aAAK,IAAIA,SAAQ,IAAI;MACvB;;AAnBF,YAAA,wBAAA;;;;;;;;;;;;ACZA,QAAA,2BAAA;AAIA,QAAA,aAAA;AASA,QAAa,2BAAb,cAEU,WAAA,WAA2C;MAWnD,YACWC,OACC,WACVC,QAAqC;AAErC,cAAK;AAJI,aAAA,OAAAD;AACC,aAAA,YAAA;AAVO,aAAA,eAAe,oBAAI,IAAG;AAK/B,aAAA,cAAc;AAUtB,YAAIC,QAAO;AACT,eAAK,QAAQA,OAAM;AACnB,eAAK,SAASA,OAAM;AACpB,eAAK,UAAUA,OAAM;AACrB,eAAK,iBAAiBA,OAAM;eACvB;AACL,eAAK,QAAQ,CAAA;AACb,eAAK,SAAS,CAAA;AACd,eAAK,UAAU,KAAK,KAAK,eAAe,SAAS;AAEjD,eAAK,iBAAiB,KAAK,YAAY;;MAE3C;;;;MAKA,IAAI,SAAM;AACR,eAAO,KAAK;MACd;MAEA,IAAI,OAAI;AACN,eAAO,KAAK;MACd;MAEA,IAAI,QAAK;AACP,eAAO;UACL,OAAO,KAAK;UACZ,QAAQ,KAAK;UACb,QAAQ,KAAK;UACb,gBAAgB,KAAK;;MAEzB;;;;;;;;MASA,IAAI,OAAa;AACf,cAAM,cAAc,KAAK,aAAa,IAAI,KAAK;AAC/C,YAAI,aAAa;AACf,iBAAO;;AAGT,YAAI,OAAO,KAAK,MAAM,KAAK;AAC3B,YAAI,SAAS,QAAW;AACtB,iBAAO,yBAAA,eAAe,KAAK,WAAW,KAAK,KAAK,OAAO,KAAK;AAC5D,eAAK,MAAM,KAAK,IAAI;;AAItB,cAAM,OAAO,KAAK,KAAK,YAAY,UAAU,MAAM,KAAK,OAAO,KAAK,CAAC;AACrE,YAAI,KAAK,KAAK,YAAY,eAAe;AACvC,eAAK,aAAa,IAAI,OAAO,IAAI;;AAMnC,eAAO;MACT;;;;;MAMA,YAAY,OAAa;AACvB,cAAM,cAAc,KAAK,aAAa,IAAI,KAAK;AAC/C,YAAI,aAAa;AACf,iBAAO;;AAGT,YAAI,OAAO,KAAK,MAAM,KAAK;AAC3B,YAAI,SAAS,QAAW;AACtB,iBAAO,yBAAA,eAAe,KAAK,WAAW,KAAK,KAAK,OAAO,KAAK;AAC5D,eAAK,MAAM,KAAK,IAAI;;AAGtB,eAAO,KAAK,KAAK,YAAY,UAAU,MAAM,KAAK,OAAO,KAAK,CAAC;MACjE;;;;;;;;;;MAYA,IAAI,OAAe,MAAkC;AACnD,YAAI,SAAS,KAAK,SAAS;AACzB,gBAAM,MAAM,mCAAmC,WAAW,KAAK,SAAS;;AAO1E,aAAK,aAAa,IAAI,OAAO,IAAI;MACnC;;;;MAKA,iBAAc;AACZ,aAAK,iBAAgB;AAErB,cAAM,QAAQ,IAAI,MAAoC,KAAK,OAAO;AAClE,iBAASC,KAAI,GAAGA,KAAI,KAAK,SAASA,MAAK;AACrC,gBAAMA,EAAC,IAAI,KAAK,KAAK,YAAY,UAAU,KAAK,MAAMA,EAAC,GAAG,KAAK,OAAOA,EAAC,CAAC;;AAE1E,eAAO;MACT;;;;MAKA,uBAAoB;AAClB,aAAK,iBAAgB;AAErB,cAAM,SAAS,IAAI,MAA4B,KAAK,OAAO;AAC3D,iBAASA,KAAI,GAAGA,KAAI,KAAK,SAASA,MAAK;AACrC,iBAAOA,EAAC,IAAI,KAAK,KAAK,YAAY,aAAa,KAAK,MAAMA,EAAC,CAAC;;AAE9D,eAAO;MACT;MAEA,SAAM;AACJ,YAAI,KAAK,aAAa,SAAS,GAAG;AAChC;;AAGF,cAAM,eAA8C,CAAA;AAEpD,mBAAW,CAAC,OAAO,IAAI,KAAK,KAAK,cAAc;AAC7C,gBAAM,OAAO,KAAK,KAAK,YAAY,aAAa,IAAI;AAEpD,eAAK,MAAM,KAAK,IAAI;AACpB,uBAAa,KAAK,EAAC,OAAO,KAAI,CAAC;AAG/B,gBAAMD,SAAQ,KAAK,KAAK,YAAY,cAAc,IAAI;AACtD,cAAIA;AAAO,iBAAK,OAAO,KAAK,IAAIA;;AAIlC,cAAM,qBAAqB,aAAa,KAAK,CAAC,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK;AACxE,cAAM,UAAU,mBAAmB,IAAI,CAAC,UAAU,MAAM,KAAK;AAC7D,cAAM,QAAQ,mBAAmB,IAAI,CAAC,UAAU,MAAM,IAAI;AAE1D,cAAM,aAAa,KAAK,KAAK,mBAAmB,KAAK,SAAS;AAE9D,cAAM,gBAAgB,yBAAA,gBAAgB,YAAY,KAAK,KAAK,YAAY,SAAS,KAAK;AAEtF,aAAK,YAAY,KAAK,KAAK,mBACzB,KAAK,WACL,eACA,KAAK,cAAc,KAAK,UAAU,MAAS;AAG7C,aAAK,aAAa,MAAK;AACvB,aAAK,cAAc;MACrB;MAEU,aAAU;AAClB,aAAK,QAAQ,CAAA;AACb,aAAK,SAAS,CAAA;AACd,aAAK,iBAAiB;AAItB,aAAK,aAAa,MAAK;AAGvB,YAAI,KAAK,aAAa;AACpB,eAAK,UAAU,KAAK,KAAK,eAAe,KAAK,SAAS;AACtD,eAAK,cAAc;;MAEvB;MAEQ,mBAAgB;AAGtB,YAAI,KAAK,aAAa,OAAO,GAAG;AAC9B,gBAAM,MAAM,8CAA8C;;AAG5D,YAAI,CAAC,KAAK,gBAAgB;AACxB,eAAK,QAAQ,yBAAA,gBAAgB,KAAK,WAAW,KAAK,KAAK,OAAO,GAAG,KAAK,MAAM;AAC5E,eAAK,iBAAiB;;MAE1B;;AAxNF,YAAA,2BAAA;;;;;;;;;;;;ACbA,QAAA,2BAAA;AAIA,QAAA,mBAAA;AAEA,QAAa,0BAAb,cAEU,iBAAA,yBAAqC;MAC7C,YACWE,OACC,WACVC,QAAqC;AAErC,cAAMD,OAAM,WAAWC,MAAK;AAJnB,aAAA,OAAAD;AACC,aAAA,YAAA;MAIZ;;;;MAKA,KAAK,MAAkC;AACrC,YAAI,KAAK,WAAW,KAAK,KAAK,OAAO;AACnC,gBAAM,MAAM,0BAA0B;;AAGxC,aAAK,cAAc;AACnB,cAAM,QAAQ,KAAK;AAEnB,aAAK,IAAI,OAAO,IAAI;MACtB;;;;;;;;;;;;;;MAeA,QAAQ,OAAa;AAEnB,aAAK,OAAM;AACX,cAAM,WAAW,KAAK;AACtB,cAAME,UAAS,KAAK,KAAK,eAAe,QAAQ;AAIhD,YAAI,SAASA,UAAS,GAAG;AACvB,iBAAO;;AAIT,cAAM,aAAa,KAAK,KAAK,mBAAmB,QAAQ;AACxD,cAAM,gBAAgB,yBAAA,mBAAmB,YAAY,KAAK,KAAK,YAAY,KAAK;AAGhF,cAAM,YAAY,QAAQ;AAC1B,cAAM,cAAc,KAAK,KAAK,mBAAmB,UAAU,eAAe,SAAS;AAEnF,eAAO,KAAK,KAAK,UAAU,WAAW;MACxC;;AA3DF,YAAA,0BAAA;;;;;;;;;;;;ACLA,QAAA,cAAA;AAEA,QAAA,UAAA;AAGA,QAAA,eAAA;AACA,QAAA,mBAAA;AAWA,QAAA,kBAAA;AACA,QAAA,kBAAA;AACA,QAAA,UAAA;AAeA,QAAa,oBAAb,cAIU,QAAA,UAAgG;MAexG,YAAqB,aAAmC,OAAe,MAAwB;AAC7F,cAAM,WAAW;AADE,aAAA,cAAA;AAAmC,aAAA,QAAA;AAX/C,aAAA,gBAAgB;AAIhB,aAAA,YAAY;AAGZ,aAAA,SAAS;AACT,aAAA,gBAAgB;AACN,aAAA,aAAa;AAK9B,YAAI,YAAY;AAAS,gBAAM,MAAM,+BAA+B;AACpE,YAAI,UAAU;AAAG,gBAAM,MAAM,wBAAwB;AAErD,aAAK,YAAW,6BAAM,aAAY,QAAQ,YAAY,aAAa;AACnE,aAAK,gBAAgB,KAAK;AAC1B,aAAK,aAAa,YAAA,iBAAiB,KAAK,aAAa;AAErD,aAAK,QAAQ,KAAK,aAAa;AAC/B,aAAK,UAAU;AACf,aAAK,UAAU,iBAAA,sBAAsB,aAAa,KAAK,KAAK;MAC9D;;MAGA,OAAO,MACL,aACA,OACA,MAA4C;AAE5C,eAAO,KAAK,QAAA,WAAW,mBAAmB,KAAK,QAAQ,GAAG,aAAa,OAAO,IAAI;MACpF;MAEA,QAAQ,MAAU;AAChB,eAAO,IAAI,gBAAA,sBAAsB,MAAM,IAAI;MAC7C;MAEA,UAAU,MAAYC,QAAe;AAGnC,eAAO,IAAI,gBAAA,wBAAwB,MAAM,MAAMA,MAAY;MAC7D;MAEA,WAAW,MAAwC;AACjD,eAAO,KAAK;MACd;MAEA,aAAa,MAA0C;AACrD,aAAK,OAAM;AACX,eAAO,KAAK;MACd;MAEA,cAAc,MAA0C;AACtD,eAAO,KAAK;MACd;;MAIA,qBAAqBC,QAA6B;AAChD,eAAO,iBAAA,mCAAmC,KAAK,aAAaA,OAAM,QAAQA,MAAK;MACjF;MAEA,uBAAuB,QAAmB,QAAgBA,QAA6B;AACrF,eAAO,iBAAA,qCAAqC,KAAK,aAAaA,OAAM,QAAQ,QAAQ,QAAQA,MAAK;MACnG;MAEA,2BAA2B,MAAiB,OAAe,KAAW;AACpE,eAAO,iBAAA,yCAAyC,KAAK,aAAa,MAAM,OAAO,KAAK,IAAI;MAC1F;MAEA,oBAAoB,MAAU;AAC5B,cAAM,aAAa,KAAK,mBAAmB,IAAI;AAC/C,cAAMC,UAAS,KAAK,eAAe,IAAI;AACvC,eAAO,iBAAA,kCAAkC,KAAK,aAAaA,SAAQ,KAAK,YAAY,UAAU;MAChG;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,cAAM,aAAa,KAAK,mBAAmB,IAAI;AAC/C,cAAMA,UAAS,KAAK,eAAe,IAAI;AACvC,eAAO,iBAAA,oCAAoC,KAAK,aAAaA,SAAQ,KAAK,YAAY,YAAY,QAAQ,MAAM;MAClH;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,eAAO,iBAAA,wCAAwC,KAAK,aAAa,KAAK,YAAY,MAAM,OAAO,KAAK,IAAI;MAC1G;;MAIA,eAAe,MAAU;AACvB,eAAO,aAAA,sBAAsB,IAAI;MACnC;MAEA,eAAe,MAAYA,SAAc;AACvC,aAAK,WAAW,aAAA,cAAc,KAAK,SAAS,MAAMA,OAAM;MAC1D;MAEA,mBAAmB,MAAU;AAC3B,eAAO,KAAK;MACd;MAEA,mBAAmB,UAAgB,YAAkB,WAAkB;AACrE,eAAO,aAAA,cAAc,UAAU,YAAY,SAAS;MACtD;;MAIA,aAAaD,QAA6B;AACxC,eAAO,YAAA,YAAY,MAAM,aAAaA,MAAK,GAAGA,OAAM,MAAM;MAC5D;MAEU,SAASA,QAA6B;AAC9C,eAAO,iBAAA,6BAA6B,KAAK,aAAaA,OAAM,QAAQA,MAAK;MAC3E;;AA1HF,YAAA,oBAAA;;;;;;;;;;;;ACnCA,QAAA,2BAAA;AAEA,QAAA,UAAA;AAKA,QAAa,WAAb,cAA8B,QAAA,UAAe;MAA7C,cAAA;;AACW,aAAA,WAAW;AACX,aAAA,aAAa;AACb,aAAA,gBAAgB;AAChB,aAAA,YAAY;AACZ,aAAA,UAAU;AACV,aAAA,UAAU;MAsDrB;MApDE,eAAY;AACV,eAAO;MACT;;MAIA,uBAAuB,QAAmB,QAAgBE,QAAW;AACnE,eAAO;MACT;MAEA,2BAA2B,MAAiB,OAAa;AACvD,eAAO;MACT;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,eAAO;MACT;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,eAAO,yBAAA,SAAS,CAAC;MACnB;;MAIA,iBAAiB,UAAkB;AACjC,eAAO;MACT;MAEA,eAAe,UAAoBA,QAAW;AAC5C;MACF;MAEA,uBAAuB,UAAoB,OAAa;AACtD,eAAO;MACT;MAEA,qBAAqB,UAAoB,OAAeA,QAAW;AACjE;MACF;;MAIA,SAAS,MAAa;AACpB,YAAI,SAAS,MAAM;AACjB,gBAAM,MAAM,qCAAqC;;AAEnD,eAAO;MACT;MAEA,OAAOA,QAAW;AAChB,eAAO;MACT;;AA3DF,YAAA,WAAA;;;;;;;;;;;;ACPA,QAAA,2BAAA;AACA,QAAA,UAAA;AAGA,QAAA,UAAA;AAIA,QAAM,sBAAsB,OAAO,OAAO,gBAAgB;AAC1D,QAAM,kBAAkB,OAAO,CAAC,KAAK,OAAO,EAAE;AAC9C,QAAM,mBAAmB,OAAO,CAAC,KAAK,OAAO,GAAG;AAChD,QAAM,mBAAmB,OAAO,CAAC,KAAK,OAAO,GAAG;AAEhD,QAAM,kBAAkB,KAAK;AAC7B,QAAM,gBAAgB;AAYT,YAAA,qBAA0C,CAAC,GAAG,GAAG,GAAG,CAAC;AACrD,YAAA,qBAA0C,CAAC,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE;AAe1E,QAAa,iBAAb,cAAoC,QAAA,UAAiB;MAWnD,YAAqBC,aAA+B,MAAqB;AACvE,cAAK;AADc,aAAA,aAAAA;AAGnB,YAAIA,cAAa,GAAG;AAClB,gBAAM,MAAM,kCAAkC;;AAEhD,YAAI,KAAK,KAAKA,WAAU,IAAI,MAAM,GAAG;AACnC,gBAAM,MAAM,iCAAiC;;AAG/C,aAAK,YAAW,6BAAM,aAAY,OAAOA,cAAa;AACtD,YAAI,6BAAM;AAAc,eAAK,YAAY;AACzC,YAAI,6BAAM;AAAc,eAAK,YAAY;AAEzC,aAAK,gBAAgB,KAAK,KAAK;AAC/B,aAAK,YAAYA;AACjB,aAAK,UAAUA;AACf,aAAK,UAAUA;AACf,aAAK,iBAAiB,OAAO,CAAC,KAAK,OAAO,KAAK,aAAa,CAAC,IAAI,OAAO,CAAC,GAAG,SAAS,EAAE;AAEvF,aAAK,gBAAe,6BAAM,kBAAiB;AAC3C,aAAK,gBAAe,6BAAM,kBAAiB;MAC7C;MAEA,OAAO,MAAMA,aAA+B,MAAyC;AACnF,eAAO,KAAK,QAAA,WAAW,gBAAgB,KAAK,QAAQ,GAAGA,aAAY,IAAI;MACzE;MAEA,eAAY;AACV,eAAO;MACT;;MAIA,uBAAuB,EAAC,SAAQ,GAAc,QAAgBC,QAAa;AACzE,gBAAQ,KAAK,YAAY;UACvB,KAAK;AACH,qBAAS,QAAQ,QAAQA,MAAK;AAC9B;UACF,KAAK;AACH,qBAAS,UAAU,QAAQA,QAAO,IAAI;AACtC;UACF,KAAK;AACH,qBAAS,UAAU,QAAQA,QAAO,IAAI;AACtC;UACF,KAAK;AACH,gBAAIA,WAAU,UAAU;AAEtB,uBAAS,UAAU,QAAQ,UAAU;AACrC,uBAAS,UAAU,SAAS,GAAG,UAAU;mBACpC;AACL,uBAAS,UAAU,QAAQA,SAAQ,YAAY,IAAI;AACnD,uBAAS,UAAU,SAAS,GAAIA,SAAQ,kBAAmB,YAAY,IAAI;;AAE7E;;AAGJ,eAAO,SAAS,KAAK;MACvB;MAEA,2BAA2B,EAAC,SAAQ,GAAc,OAAe,KAAW;AAC1E,aAAK,gBAAgB,MAAM,KAAK;AAEhC,gBAAQ,KAAK,YAAY;UACvB,KAAK;AACH,mBAAO,SAAS,SAAS,KAAK;UAChC,KAAK;AACH,mBAAO,SAAS,UAAU,OAAO,IAAI;UACvC,KAAK;AACH,mBAAO,SAAS,UAAU,OAAO,IAAI;UACvC,KAAK,GAAG;AACN,kBAAM,IAAI,SAAS,UAAU,OAAO,IAAI;AACxC,kBAAM,IAAI,SAAS,UAAU,QAAQ,GAAG,IAAI;AAC5C,gBAAI,MAAM,iBAAiB,MAAM,iBAAiB,KAAK,cAAc;AACnE,qBAAO;mBACF;AACL,qBAAO,IAAI,kBAAkB;;;;MAIrC;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,cAAMA,SAAS,KAAkB,QAAQ,KAAK,YAAY,GAAG,KAAK,YAAY;AAC9E,aAAK,uBAAuB,QAAQ,QAAQA,MAAK;AACjD,eAAO,SAAS,KAAK;MACvB;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,aAAK,gBAAgB,MAAM,KAAK;AAEhC,cAAMA,SAAQ,KAAK,2BAA2B,MAAM,OAAO,GAAG;AAC9D,cAAM,OAAO,yBAAA,SAAS,SAAQ;AAC9B,aAAK,QAAQ,KAAK,YAAY,GAAGA,QAAO,KAAK,YAAY;AACzD,eAAO;MACT;;MAIA,iBAAiB,UAAkB;AACjC,eAAO,SAAS,QAAQ,KAAK,YAAY,GAAG,KAAK,YAAY;MAC/D;MAEA,eAAe,UAAoBA,QAAa;AAC9C,aAAK,qBAAqB,UAAU,GAAGA,MAAK;MAC9C;MAEA,uBAAuB,UAAoB,OAAa;AACtD,cAAM,cAAc,KAAK,cAAc,QAAQ,KAAK;AACpD,eAAO,SAAS,QAAQ,KAAK,YAAY,aAAa,KAAK,YAAY;MACzE;MAEA,qBAAqB,UAAoB,OAAeA,QAAa;AACnE,cAAM,cAAc,KAAK,cAAc,QAAQ,KAAK;AAGpD,YAAI,KAAK,cAAc;AACrB,mBAAS,cAAc,KAAK,YAAY,aAAaA,MAAK;eACrD;AACL,mBAAS,QAAQ,KAAK,YAAY,aAAaA,QAAO,KAAK,YAAY;;MAE3E;;MAIA,SAAS,MAAa;AACpB,YAAI,OAAO,SAAS,UAAU;AAC5B,iBAAO;mBACE,OAAO,SAAS,UAAU;AACnC,cAAI,KAAK,gBAAgB,SAAS,KAAK,eAAe;AAEpD,mBAAO;iBACF;AACL,kBAAM,MAAM,SAAS,MAAM,EAAE;AAC7B,gBAAI,MAAM,GAAG,GAAG;AACd,oBAAM,MAAM,2BAA2B;uBAC9B,MAAM,OAAO,kBAAkB;AAExC,oBAAM,MAAM,wCAAwC;mBAC/C;AACL,qBAAO;;;mBAGF,OAAO,SAAS,UAAU;AACnC,cAAI,OAAO,qBAAqB;AAE9B,kBAAM,MAAM,2CAA2C;iBAClD;AACL,mBAAO,OAAO,IAAI;;eAEf;AACL,gBAAM,MAAM,qBAAqB,OAAO,sBAAsB;;MAElE;MAEA,OAAOA,QAAa;AAClB,YAAIA,WAAU,UAAU;AACtB,iBAAO,KAAK;eACP;AACL,iBAAOA,OAAM,SAAS,EAAE;;MAE5B;;AA5KF,YAAA,iBAAA;AA+LA,QAAa,iBAAb,cAAoC,QAAA,UAAiB;MAQnD,YAAqBD,aAA+B,MAAqB;AACvE,cAAK;AADc,aAAA,aAAAA;AAGnB,YAAIA,cAAa,IAAI;AACnB,gBAAM,MAAM,mCAAmC;;AAEjD,YAAI,KAAK,KAAKA,WAAU,IAAI,MAAM,GAAG;AACnC,gBAAM,MAAM,iCAAiC;;AAG/C,aAAK,YAAW,6BAAM,aAAY,aAAaA,cAAa;AAC5D,aAAK,aAAaA;AAClB,aAAK,gBAAgB,KAAK,KAAK;AAC/B,aAAK,YAAYA;AACjB,aAAK,UAAUA;AACf,aAAK,UAAUA;MACjB;MAEA,OAAO,MAAMA,aAA+B,MAAyC;AACnF,eAAO,KAAK,QAAA,WAAW,gBAAgB,KAAK,QAAQ,GAAGA,aAAY,IAAI;MACzE;MAEA,eAAY;AACV,eAAO,OAAO,CAAC;MACjB;;MAIA,uBAAuB,EAAC,SAAQ,GAAc,QAAgBC,QAAa;AACzE,gBAAQ,KAAK,YAAY;UACvB,KAAK;AACH,qBAAS,QAAQ,QAAQ,OAAOA,MAAK,CAAC;AACtC;UACF,KAAK;AACH,qBAAS,UAAU,QAAQ,OAAOA,MAAK,GAAG,IAAI;AAC9C;UACF,KAAK;AACH,qBAAS,UAAU,QAAQ,OAAOA,MAAK,GAAG,IAAI;AAC9C;UACF,KAAK;AACH,qBAAS,aAAa,QAAQA,QAAO,IAAI;AACzC;UACF,SAAS;AACP,qBAASC,KAAI,GAAGA,KAAI,KAAK,YAAYA,MAAK,GAAG;AAC3C,kBAAIA,KAAI;AAAG,gBAAAD,SAAQA,SAAQ;AAC3B,oBAAM,KAAK,OAAO,QAAQ,IAAIA,MAAK;AACnC,uBAAS,aAAa,SAASC,IAAG,IAAI,IAAI;;;;AAKhD,eAAO,SAAS,KAAK;MACvB;MAEA,2BAA2B,EAAC,SAAQ,GAAc,OAAe,KAAW;AAC1E,cAAM,OAAO,MAAM;AACnB,YAAI,SAAS,KAAK,YAAY;AAC5B,gBAAM,MAAM,gBAAgB,iBAAiB,KAAK,YAAY;;AAIhE,gBAAQ,KAAK,YAAY;UACvB,KAAK;AACH,mBAAO,OAAO,SAAS,SAAS,KAAK,CAAC;UACxC,KAAK;AACH,mBAAO,OAAO,SAAS,UAAU,OAAO,IAAI,CAAC;UAC/C,KAAK;AACH,mBAAO,OAAO,SAAS,UAAU,OAAO,IAAI,CAAC;UAC/C,KAAK;AACH,mBAAO,SAAS,aAAa,OAAO,IAAI;UAC1C,KAAK,IAAI;AACP,kBAAM,IAAI,SAAS,aAAa,OAAO,IAAI;AAC3C,kBAAM,IAAI,SAAS,aAAa,QAAQ,GAAG,IAAI;AAC/C,mBAAO,IAAI,kBAAkB;;UAE/B,KAAK,IAAI;AACP,kBAAM,IAAI,SAAS,aAAa,OAAO,IAAI;AAC3C,kBAAM,IAAI,SAAS,aAAa,QAAQ,GAAG,IAAI;AAC/C,kBAAM,IAAI,SAAS,aAAa,QAAQ,IAAI,IAAI;AAChD,kBAAM,IAAI,SAAS,aAAa,QAAQ,IAAI,IAAI;AAChD,mBAAO,IAAI,mBAAmB,IAAI,mBAAmB,IAAI,kBAAkB;;;MAGjF;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,cAAMD,SAAS,KAAkB,cAAc,KAAK,YAAY,CAAC;AACjE,aAAK,uBAAuB,QAAQ,QAAQA,MAAK;AACjD,eAAO,SAAS,KAAK;MACvB;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,cAAM,OAAO,MAAM;AACnB,YAAI,SAAS,KAAK,YAAY;AAC5B,gBAAM,MAAM,gBAAgB,iBAAiB,KAAK,YAAY;;AAGhE,cAAMA,SAAQ,KAAK,2BAA2B,MAAM,OAAO,GAAG;AAC9D,cAAM,OAAO,yBAAA,SAAS,SAAQ;AAC9B,aAAK,cAAc,KAAK,YAAY,GAAGA,MAAK;AAC5C,eAAO;MACT;;MAIA,iBAAiB,UAAkB;AACjC,eAAO,SAAS,cAAc,KAAK,YAAY,CAAC;MAClD;;MAGA,eAAe,UAAoBA,QAAa;AAC9C,aAAK,qBAAqB,UAAU,GAAGA,MAAK;MAC9C;;MAGA,uBAAuB,UAAoB,OAAa;AACtD,cAAM,cAAc,KAAK,cAAc,QAAQ,KAAK;AACpD,eAAO,SAAS,cAAc,KAAK,YAAY,WAAW;MAC5D;;MAGA,qBAAqB,UAAoB,OAAeA,QAAa;AACnE,cAAM,cAAc,KAAK,cAAc,QAAQ,KAAK;AAEpD,iBAAS,cAAc,KAAK,YAAY,aAAaA,MAAK;MAC5D;;MAIA,SAAS,MAAa;AACpB,YAAI,OAAO,SAAS,UAAU;AAC5B,iBAAO;mBACE,OAAO,SAAS,YAAY,OAAO,SAAS,UAAU;AAC/D,iBAAO,OAAO,IAAI;eACb;AACL,gBAAM,MAAM,qBAAqB,OAAO,sBAAsB;;MAElE;MAEA,OAAOA,QAAa;AAClB,eAAOA,OAAM,SAAS,EAAE;MAC1B;;AArJF,YAAA,iBAAA;;;;;;;;;;;;ACzOA,QAAA,2BAAA;AACA,QAAA,cAAA;AAEA,QAAA,UAAA;AAEA,QAAA,cAAA;AACA,QAAA,eAAA;AACA,QAAA,SAAA;AAWA,QAAM,eAAe,OAAO,CAAC;AAC7B,QAAM,kBAAkB,OAAO,CAAC;AAUhC,QAAa,YAAb,cAA8D,YAAA,cAI7D;MAYC,YAAqB,OAAc,MAAgB;AACjD,cAAK;AADc,aAAA,QAAA;AAVZ,aAAA,QAAQ;AACR,aAAA,gBAAgB;AAChB,aAAA,YAAY;AAGZ,aAAA,SAAS;AACT,aAAA,gBAAgB;AAOvB,YAAI,MAAM,UAAU,KAAK;AACvB,gBAAM,MAAM,+BAA+B;;AAG7C,YAAI,MAAM,WAAW,GAAG;AACtB,gBAAM,MAAM,kCAAkC;;AAGhD,YAAI,MAAM,CAAC,aAAa,OAAA,YAAY,MAAM,SAAS,GAAG;AACpD,gBAAM,MAAM,wDAAwD;;AAGtE,iBAASE,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACrC,cAAI,MAAMA,EAAC,aAAa,OAAA,UAAU;AAChC,kBAAM,MAAM,mCAAmC;;;AAInD,aAAK,YAAW,6BAAM,aAAY,SAAS,MAAM,IAAI,CAACC,OAAMA,GAAE,QAAQ,EAAE,KAAK,GAAG;AAEhF,cAAM,UAAoB,CAAA;AAC1B,cAAM,UAAoB,CAAA;AAE1B,mBAAW,SAAS,OAAO;AACzB,kBAAQ,KAAK,MAAM,OAAO;AAC1B,kBAAQ,KAAK,MAAM,OAAO;;AAG5B,aAAK,UAAU,IAAI,KAAK,IAAI,GAAG,OAAO;AACtC,aAAK,UAAU,IAAI,KAAK,IAAI,GAAG,OAAO;AACtC,aAAK,cAAc,KAAK,MAAM,SAAS;MACzC;MAEA,OAAO,MAAqC,OAAc,MAAoC;AAC5F,eAAO,KAAK,QAAA,WAAW,WAAW,KAAK,QAAQ,GAAG,OAAO,IAAI;MAC/D;MAEA,eAAY;AACV,eAAO;UACL,UAAU;UACV,OAAO,KAAK,MAAM,CAAC,EAAE,aAAY;;MAErC;MAEA,QAAQ,MAAU;AAChB,eAAO,KAAK,aAAa,KAAK,QAAQ;MACxC;MAEA,UAAU,MAAU;AAClB,eAAO,KAAK,aAAa,IAAI;MAC/B;MAEA,gBAAa;AACX;MACF;MAEA,WAAW,MAAyB;AAClC,eAAO,KAAK,aAAa,IAAI;MAC/B;MAEA,aAAa,MAAyB;AACpC,eAAO,KAAK,aAAa,IAAI;MAC/B;MAEA,qBAAqBC,QAA0B;AAC7C,eAAO,IAAI,KAAK,MAAMA,OAAM,QAAQ,EAAE,qBAAqBA,OAAM,KAAK;MACxE;MAEA,uBAAuB,QAAmB,QAAgBA,QAA0B;AAClF,eAAO,WAAW,MAAM,IAAIA,OAAM;AAClC,eAAO,KAAK,MAAMA,OAAM,QAAQ,EAAE,uBAAuB,QAAQ,SAAS,GAAGA,OAAM,KAAK;MAC1F;MAEA,2BAA2B,MAAiB,OAAe,KAAW;AACpE,cAAM,WAAW,KAAK,WAAW,KAAK;AACtC,YAAI,WAAW,KAAK,aAAa;AAC/B,gBAAM,MAAM,oBAAoB,UAAU;;AAG5C,eAAO;UACL;UACA,OAAO,KAAK,MAAM,QAAQ,EAAE,2BAA2B,MAAM,QAAQ,GAAG,GAAG;;MAE/E;MAEA,oBAAoB,MAAU;AAC5B,cAAM,WAAW,aAAA,sBAAsB,IAAI;AAC3C,cAAM,YAAY,KAAK;AACvB,eAAO,IAAI,KAAK,MAAM,QAAQ,EAAE,qBAAqB,SAAS;MAChE;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,cAAM,WAAW,aAAA,sBAAsB,IAAI;AAC3C,cAAM,YAAY,KAAK;AAEvB,eAAO,WAAW,MAAM,IAAI;AAC5B,eAAO,KAAK,MAAM,QAAQ,EAAE,sBAAsB,QAAQ,SAAS,GAAG,SAAS;MACjF;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,cAAM,WAAW,KAAK,WAAW,KAAK;AACtC,YAAI,WAAW,KAAK,aAAa;AAC/B,gBAAM,MAAM,oBAAoB,UAAU;;AAG5C,cAAM,YAAY,KAAK,MAAM,QAAQ,EAAE,0BAA0B,MAAM,QAAQ,GAAG,GAAG;AACrF,eAAO,aAAA,cAAc,WAAW,QAAQ;MAC1C;;MAIA,aAAaA,QAA0B;AACrC,eAAO,YAAA,YAAY,MAAM,aAAaA,MAAK,GAAGA,OAAM,QAAQ;MAC9D;MAEU,SAASA,QAA0B;AAC3C,cAAM,YAAY,KAAK,MAAMA,OAAM,QAAQ,EAAE,aAAaA,OAAM,KAAK;AACrE,eAAO,CAAC,SAAS;MACnB;;MAIA,kBAAkB,MAAY;AAC5B,gBAAQ,MAAM;UACZ,KAAK;AACH,mBAAO;UACT,KAAK;AACH,mBAAO;UACT;AACE,kBAAM,IAAI,MAAM,+BAA+B,MAAM;;MAE3D;MAEA,kBAAe;AAEb,cAAM,IAAI,MAAM,+BAA+B;MACjD;MAEA,iBAAiB,OAAa;AAC5B,YAAI,UAAU;AAAG,iBAAO;AACxB,YAAI,UAAU;AAAG,iBAAO;AACxB,cAAM,MAAM,2BAA2B;MACzC;MAEA,qBAAqB,YAAoB,UAAe;AACtD,YAAI,CAAC,UAAU;AACb,gBAAM,MAAM,mBAAmB;;AAGjC,cAAM,WAAqB,CAAC,yBAAA,eAAe,CAAC,YAAY,eAAe,CAAC,CAAC;AACzE,cAAM,WAAW,aAAA,sBAAsB,QAAQ;AAC/C,cAAMC,QAAO,KAAK,MAAM,QAAQ;AAChC,cAAM,sBAAsB,yBAAA,eAAe,CAAC,YAAY,YAAY,CAAC;AACrE,YAAI,YAAA,gBAAgBA,KAAI,GAAG;AACzB,mBAAS,KAAK,GAAGA,MAAK,qBAAqB,qBAAqB,yBAAA,QAAQ,UAAU,YAAY,CAAC,CAAC;eAC3F;AACL,mBAAS,KAAK,mBAAmB;;AAEnC,eAAO;MACT;;MAIA,SAAS,MAAa;AACpB,YAAI,OAAO,SAAS,UAAU;AAC5B,gBAAM,IAAI,MAAM,6BAA6B;;AAG/C,cAAM,QAAQ;AACd,YAAI,OAAO,MAAM,aAAa,UAAU;AACtC,gBAAM,IAAI,MAAM,4CAA4C;;AAG9D,cAAMA,QAAO,KAAK,MAAM,MAAM,QAAQ;AACtC,YAAI,CAACA,OAAM;AACT,gBAAM,IAAI,MAAM,0CAA0C;;AAG5D,eAAO;UACL,UAAU,MAAM;UAChB,OAAOA,MAAK,OAAO,MAAM,KAAK;;MAElC;MAEA,OAAOD,QAA0B;AAC/B,eAAO;UACL,UAAUA,OAAM;UAChB,OAAO,KAAK,MAAMA,OAAM,QAAQ,EAAE,OAAOA,OAAM,KAAK;;MAExD;MAEA,MAAMA,QAA0B;AAC9B,eAAO;UACL,UAAUA,OAAM;UAChB,OAAO,KAAK,MAAMA,OAAM,QAAQ,EAAE,MAAMA,OAAM,KAAK;;MAEvD;MAEA,OAAO,GAAwB,GAAsB;AACnD,YAAI,EAAE,aAAa,EAAE,UAAU;AAC7B,iBAAO;;AAGT,eAAO,KAAK,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK;MACvD;;AA/NF,YAAA,YAAA;;;;;;;;;;;;AC5BA,QAAA,cAAA;AAEA,QAAA,UAAA;AAGA,QAAA,eAAA;AAMA,QAAA,eAAA;AACA,QAAA,eAAA;AACA,QAAA,UAAA;AAeA,QAAa,kBAAb,cACU,QAAA,UAA0F;MAelG,YAAqB,aAAmCE,SAAgB,MAAsB;AAC5F,cAAM,WAAW;AADE,aAAA,cAAA;AAAmC,aAAA,SAAAA;AAJ/C,aAAA,SAAS;AACT,aAAA,gBAAgB;AAMvB,YAAI,CAAC,YAAY;AAAS,gBAAM,MAAM,2BAA2B;AACjE,YAAIA,YAAW;AAAG,gBAAM,MAAM,2BAA2B;AAEzD,aAAK,YAAW,6BAAM,aAAY,UAAU,YAAY,aAAaA;AAErE,aAAK,gBAAgB,KAAK,YAAY;AACtC,aAAK,gBAAgB,KAAK,KAAMA,UAAS,YAAY,aAAc,EAAE;AACrE,aAAK,aAAa,YAAA,iBAAiB,KAAK,aAAa;AACrD,aAAK,QAAQ,KAAK;AAClB,aAAK,YAAYA,UAAS,YAAY;AACtC,aAAK,UAAU,KAAK;AACpB,aAAK,UAAU,KAAK;AACpB,aAAK,aAAaA;MACpB;MAEA,OAAO,MACL,aACA,OACA,MAA0C;AAE1C,eAAO,KAAK,QAAA,WAAW,iBAAiB,KAAK,QAAQ,GAAG,aAAa,OAAO,IAAI;MAClF;MAEA,QAAQ,MAAU;AAChB,eAAO,IAAI,aAAA,mBAAmB,MAAM,IAAI;MAC1C;MAEA,UAAU,MAAYC,QAAe;AAGnC,eAAO,IAAI,aAAA,qBAAqB,MAAM,MAAMA,MAAY;MAC1D;MAEA,WAAW,MAAqC;AAC9C,eAAO,KAAK;MACd;MAEA,aAAa,MAAuC;AAClD,aAAK,OAAM;AACX,eAAO,KAAK;MACd;MAEA,cAAc,MAAuC;AACnD,eAAO,KAAK;MACd;;MAIA,uBAAoB;AAClB,eAAO,KAAK;MACd;MAEA,uBAAuB,QAAmB,QAAgBC,QAA6B;AACrF,eAAO,aAAA,iCAAiC,KAAK,aAAa,KAAK,QAAQ,QAAQ,QAAQA,MAAK;MAC9F;MAEA,2BAA2B,MAAiB,OAAe,KAAW;AACpE,eAAO,aAAA,qCAAqC,KAAK,aAAa,MAAM,OAAO,KAAK,IAAI;MACtF;MAEA,sBAAmB;AACjB,eAAO,KAAK;MACd;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,eAAO,aAAA,gCAAgC,KAAK,aAAa,KAAK,QAAQ,KAAK,OAAO,QAAQ,QAAQ,IAAI;MACxG;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,eAAO,aAAA,oCAAoC,KAAK,aAAa,KAAK,OAAO,MAAM,OAAO,KAAK,IAAI;MACjG;;MAIA,iBAAc;AACZ,eAAO,KAAK;MACd;MAEA,iBAAc;MAEd;MAEA,mBAAmB,MAAU;AAC3B,eAAO;MACT;MAEA,mBAAmB,UAAgB,YAAgB;AACjD,eAAO;MACT;;MAIU,SAASA,QAA6B;AAC9C,cAAM,aAAa,IAAI,WAAW,KAAK,SAAS;AAChD,cAAM,WAAW,IAAI,SAAS,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;AAC7F,qBAAA,iCAAiC,KAAK,aAAa,KAAK,QAAQ,EAAC,YAAY,SAAQ,GAAG,GAAGA,MAAK;AAChG,eAAO,YAAA,oBAAoB,UAAU;MACvC;;AApHF,YAAA,kBAAA;;;;;;;;;;;;AC5BA,QAAA,cAAA;AAEA,QAAA,UAAA;AAGA,QAAA,mBAAA;AAWA,QAAA,mBAAA;AACA,QAAA,mBAAA;AACA,QAAA,UAAA;AAeA,QAAa,sBAAb,cAIU,QAAA,UAAkG;MAe1G,YAAqB,aAAmCC,SAAgB,MAA0B;AAChG,cAAM,WAAW;AADE,aAAA,cAAA;AAAmC,aAAA,SAAAA;AAX/C,aAAA,gBAAgB;AAOhB,aAAA,SAAS;AACT,aAAA,gBAAgB;AAMvB,YAAI,YAAY;AAAS,gBAAM,MAAM,+BAA+B;AACpE,YAAIA,YAAW;AAAG,gBAAM,MAAM,2BAA2B;AAEzD,aAAK,YAAW,6BAAM,aAAY,UAAU,YAAY,aAAaA;AACrE,aAAK,gBAAgBA;AACrB,aAAK,aAAa,YAAA,iBAAiB,KAAK,aAAa;AACrD,aAAK,QAAQ,KAAK;AAClB,aAAK,YAAY,YAAY,cAAc,OAAO,OAAOA,UAAS,YAAY;AAC9E,aAAK,UAAU,iBAAA,sBAAsB,aAAaA,OAAM;AACxD,aAAK,UAAU,iBAAA,sBAAsB,aAAaA,OAAM;AACxD,aAAK,aAAaA;MACpB;;MAGA,OAAO,MACL,aACA,OACA,MAA8C;AAE9C,eAAO,KAAK,QAAA,WAAW,qBAAqB,KAAK,QAAQ,GAAG,aAAa,OAAO,IAAI;MACtF;MAEA,QAAQ,MAAU;AAChB,eAAO,IAAI,iBAAA,uBAAuB,MAAM,IAAI;MAC9C;MAEA,UAAU,MAAYC,QAAe;AAGnC,eAAO,IAAI,iBAAA,yBAAyB,MAAM,MAAMA,MAAY;MAC9D;MAEA,WAAW,MAAyC;AAClD,eAAO,KAAK;MACd;MAEA,aAAa,MAA2C;AACtD,aAAK,OAAM;AACX,eAAO,KAAK;MACd;MAEA,cAAc,MAA2C;AACvD,eAAO,KAAK;MACd;;MAIA,qBAAqBC,QAA6B;AAChD,eAAO,iBAAA,mCAAmC,KAAK,aAAa,KAAK,QAAQA,MAAK;MAChF;MAEA,uBAAuB,QAAmB,QAAgBA,QAA6B;AACrF,eAAO,iBAAA,qCAAqC,KAAK,aAAa,KAAK,QAAQ,QAAQ,QAAQA,MAAK;MAClG;MAEA,2BAA2B,MAAiB,OAAe,KAAW;AACpE,eAAO,iBAAA,yCAAyC,KAAK,aAAa,MAAM,OAAO,KAAK,IAAI;MAC1F;MAEA,oBAAoB,MAAU;AAC5B,eAAO,iBAAA,kCAAkC,KAAK,aAAa,KAAK,QAAQ,KAAK,OAAO,IAAI;MAC1F;MAEA,sBAAsB,QAAmB,QAAgB,MAAU;AACjE,eAAO,iBAAA,oCAAoC,KAAK,aAAa,KAAK,QAAQ,KAAK,OAAO,MAAM,QAAQ,MAAM;MAC5G;MAEA,0BAA0B,MAAiB,OAAe,KAAW;AACnE,eAAO,iBAAA,wCAAwC,KAAK,aAAa,KAAK,OAAO,MAAM,OAAO,KAAK,IAAI;MACrG;;MAIA,iBAAc;AACZ,eAAO,KAAK;MACd;MAEA,iBAAc;MAEd;MAEA,mBAAmB,MAAU;AAC3B,eAAO;MACT;MAEA,mBAAmB,UAAgB,YAAgB;AACjD,eAAO;MACT;;MAIU,SAASA,QAA6B;AAC9C,eAAO,iBAAA,6BAA6B,KAAK,aAAa,KAAK,QAAQA,MAAK;MAC1E;;AAnHF,YAAA,sBAAA;;;;;;;;;;;;ACjCA,QAAA,YAAA;AAAQ,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAW,EAAA,CAAA;AACnB,QAAA,cAAA;AAAQ,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAa,EAAA,CAAA;AACrB,QAAA,YAAA;AAAQ,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,UAAA;IAAW,EAAA,CAAA;AACnB,QAAA,aAAA;AAAQ,WAAA,eAAA,SAAA,gBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAY,EAAA,CAAA;AACpB,QAAA,eAAA;AAAQ,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,aAAA;IAAc,EAAA,CAAA;AACtB,QAAA,cAAA;AAAQ,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAa,EAAA,CAAA;AACrB,QAAA,wBAAA;AAAQ,WAAA,eAAA,SAAA,2BAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,sBAAA;IAAuB,EAAA,CAAA;AAC/B,QAAA,cAAA;AAAQ,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAa,EAAA,CAAA;AACrB,QAAA,kBAAA;AAAQ,WAAA,eAAA,SAAA,qBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,gBAAA;IAAiB,EAAA,CAAA;AACzB,QAAA,SAAA;AAAQ,WAAA,eAAA,SAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAQ,EAAA,CAAA;AAChB,QAAA,SAAA;AAAQ,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAc,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,OAAA;IAAc,EAAA,CAAA;AACtC,QAAA,UAAA;AAAQ,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAS,EAAA,CAAA;AACjB,QAAA,gBAAA;AAAQ,WAAA,eAAA,SAAA,mBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,cAAA;IAAe,EAAA,CAAA;AACvB,QAAA,oBAAA;AAAQ,WAAA,eAAA,SAAA,uBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,kBAAA;IAAmB,EAAA,CAAA;AAG3B,QAAA,UAAA;AAAQ,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAS,EAAA,CAAA;AACjB,QAAA,aAAA;AAAQ,WAAA,eAAA,SAAA,gBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAY,EAAA,CAAA;AACpB,QAAA,cAAA;AAAQ,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAa,EAAA,CAAA;AAGrB,QAAA,aAAA;AAAQ,WAAA,eAAA,SAAA,QAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAI,EAAA,CAAA;AACZ,QAAA,UAAA;AAAQ,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAS,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,QAAA;IAAW,EAAA,CAAA;AAC9B,QAAA,cAAA;AAAQ,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAa,EAAA,CAAA;AAAoD,WAAA,eAAA,SAAA,mBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAe,EAAA,CAAA;AACxF,QAAA,aAAA;AAAQ,WAAA,eAAA,SAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAQ,EAAA,CAAA;AAChB,QAAA,aAAA;AAAQ,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAU,EAAA,CAAA;AAGlB,QAAA,aAAA;AAAQ,WAAA,eAAA,SAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAQ,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,iCAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAA6B,EAAA,CAAA;AAG/C,QAAA,cAAA;AAAQ,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAa,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAW,EAAA,CAAA;AAAE,WAAA,eAAA,SAAA,mBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAe,EAAA,CAAA;AAEnD,QAAA,cAAA;AAAQ,WAAA,eAAA,SAAA,UAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,YAAA;IAAM,EAAA,CAAA;;;;;;;;;;;;AClCd,QAAA,QAAA;AAQA,QAAA,cAAA;AAEa,YAAA,YAAY,IAAI,MAAA,eAAe,CAAC;AAChC,YAAA,eAAe,IAAI,MAAA,eAAe,CAAC;AACnC,YAAA,UAAU,IAAI,MAAA,eAAe,EAAE;AAE/B,YAAA,aAAa,IAAI,MAAA,cAC5B;MACE,OAAO,QAAA;MACP,gBAAgB,QAAA;MAChB,SAAS,QAAA;MACT,QAAQ,QAAA;OAEV,EAAE,UAAU,cAAc,UAAU,OAAM,CAAE;AAEjC,YAAA,cAAc,IAAI,MAAA,kBAAkB,QAAA,YAAY,YAAA,2BAA2B;;;;;;;;;;;;AChBjF,QAAM,gBAAgB,CAAC,YAAuB;AACnD,aAAO,QAAQ,SAAS,KAAK,QAAQ,QAAQ,SAAS,CAAC,MAAM;IAC/D;AAFa,YAAA,gBAAa;AAInB,QAAM,iBAAiB,CAAC,SAAqB,UAAqB;AACvE,eAAS,KAAK,GAAG,KAAK,GAAG,KAAK,QAAQ,QAAQ,MAAM,GAAG,MAAM,GAAG;AAC9D,cAAM,EAAE,IAAK,QAAQ,EAAE,KAAK,IAAK,QAAQ,KAAK,CAAC;;IAEnD;AAJa,YAAA,iBAAc;AAMpB,QAAM,wBAAwB,CAAC,YAAuB;AAC3D,UAAI,aAAa;AACjB,WAAI,GAAA,QAAA,eAAc,OAAO,GAAG;AAC1B,qBAAa;AAEb,kBAAU,QAAQ,SAAS,GAAG,QAAQ,SAAS,CAAC;;AAElD,YAAM,MAAM,IAAI,WAAW,QAAQ,SAAS,IAAI,CAAC;AAEjD,UAAI,CAAC,IAAI,cAAc;AAGvB,WAAK,QAAQ,SAAS,OAAO,GAAG;AAC9B,YAAI,CAAC,KAAK,KAAK;AACf,YAAI,CAAC,KAAK,QAAQ,CAAC;AACnB,kBAAU,QAAQ,SAAS,CAAC;;AAG9B,OAAA,GAAA,QAAA,gBAAe,SAAS,IAAI,SAAS,CAAC,CAAC;AACvC,aAAO;IACT;AApBa,YAAA,wBAAqB;AAsB3B,QAAM,iBAAiB,CAAC,QAAmB;AAChD,YAAM,IAAI,IAAI,SAAS,IAAI;AAC3B,YAAM,UAAU,IAAI,WAAW,CAAC;AAChC,eAASC,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK;AACnC,cAAM,IAAI,IAAIA,EAAC;AACf,gBAAQA,KAAI,CAAC,IAAI,IAAI;AACrB,gBAAQA,KAAI,IAAI,CAAC,IAAI,IAAI;;AAI3B,cAAQ,IAAI,CAAC,IAAI;AACjB,aAAO;IACT;AAZa,YAAA,iBAAc;AAcpB,QAAM,wBAAwB,CAAC,YAAuB;AAC3D,UAAI,QAAQ,WAAW,GAAG;AACxB,eAAO;;AAET,UAAI,QAAO,GAAA,QAAA,gBAAe,OAAO;AAEjC,UAAI,KAAK,CAAC,IAAI,GAAG;AACf,eAAO,KAAK,SAAS,GAAG,KAAK,SAAS,CAAC;;AAIzC,YAAM,OAAO,KAAK,KAAK,CAAC,IAAI;AAC5B,aAAO,KAAK,SAAS,IAAI;IAC3B;AAba,YAAA,wBAAqB;;;;;;;;;;;;AC5ClC,QAAA,WAAA;AAQA,mBAAe,YACb,SACA,OACA,MAAa;AAEb,UAAI;AACJ,uBAAiB,QAAQ,OAAO;AAC9B,YAAI;AACF,cAAI,KAAK,SAAS,GAAG;AAEnB,iBAAK,KAAK,SAAS,IAAI;iBAClB;AACL,kBAAM,IAAI,QAAc,CAAC,SAAS,WAAU;AAC1C,mBAAK,KAAK,SAAS,MAAM,CAACC,WAAS;AACjC,oBAAIA,QAAO;AACT,yBAAOA,MAAK;uBACP;AACL,0BAAO;;cAEX,CAAC;YACH,CAAC;;iBAEIC,IAAP;AACA,kBAAQA;;;AAGZ,UAAI,OAAO;AACT,cAAM;;IAEV;AAEA,QAAa,oBAAb,cAA2D,SAAA,aAAY;MACrE,KAAwB,UAAsB,MAAsB;AAClE,YAAI,CAAC,MAAM,QAAQ,IAAI;AACvB,cAAMC,QAAO;AAEb,YAAI,YAAaA,MAAa,QAAQ,KAAK,KAAK,CAAA;AAGhD,YAAI,aAAa,UAAa,OAAO,SAAS,YAAY;AACxD,qBAAW;AACX,iBAAO;;AAIT,YAAI,UAAU,iBAAiB,UAAU,kBAAkB;AACzD,iBAAO;YACL,OAAO;YACP,IAAI;;AAGN,qBAAW;;AAIb,oBAAY,MAAM,QAAQ,SAAS,IAAI,YAAY,CAAC,SAAS;AAC7D,oBAAYA,OAAM,UAAU,MAAK,GAAI,IAAI,EAAE,KAAK,QAAQ,EAAE,MAAM,QAAQ;AAExE,eAAOA,MAAK,cAAc,KAAK,IAAI;MACrC;MAEA,KAAwB,OAAmB,UAAc;AACvD,cAAMA,QAAO;AACb,YAAI;AAEJ,YAAI,OAAO,aAAa,YAAY;AAClC,gBAAM,IAAI,UAAU,6BAA6B;;AAInD,YAAI,SAAS,UAAU,GAAG;AACxB,cAAI,SAAUD,IAAM,MAAS;AAC3B,YAAAC,MAAK,eAAe,OAAO,CAAS;AACpC,iBAAK,SAASD,IAAG,IAAI;UACvB;eACK;AACL,cAAI,SAAUA,IAAI;AAChB,YAAAC,MAAK,eAAe,OAAO,CAAS;AACpC,iBAAK,SAASD,IAAG,CAAC;UACpB;;AAGF,QAAAC,MAAK,GAAG,OAAO,CAAS;AAExB,eAAOA;MACT;MAEA,MAAyB,OAAmB,UAAc;AACxD,YAAI,YAAa,KAAa,QAAQ,KAAK,KAAK,CAAA;AAGhD,YAAI,OAAO,aAAa,YAAY;AAClC,gBAAM,IAAI,UAAU,6BAA6B;;AAInD,YAAI,CAAC,MAAM,QAAQ,SAAS,GAAG;AAC7B;AAAE,eAAa,QAAQ,KAAK,IAAI,YAAY,CAAC,SAAS;;AAGxD,kBAAU,QAAQ,QAAQ;AAE1B,eAAO;MACT;MAEA,OAA0B,OAAmB,QAAc,UAAc;AACvE,eAAO,KAAK,cAAc,OAAO,QAAQ,QAAQ;MACnD;MAEA,MAAyB,OAAmB,QAAc,UAAc;AACtE,eAAO,KAAK,cAAc,OAAO,QAAQ,UAAU,OAAO;MAC5D;MAEQ,cACN,OACA,QACA,UACA,eAAsB;AAEtB,YAAI,YAAa,KAAa,QAAQ,KAAK,KAAK,CAAA;AAChD,YAAIC;AACJ,YAAI;AACJ,cAAM,MAAM,kBAAkB,UAAU,IAAI;AAG5C,YAAI,OAAO,aAAa,YAAY;AAClC,gBAAM,IAAI,UAAU,6BAA6B;;AAEnD,YAAI,OAAO,WAAW,YAAY;AAChC,gBAAM,IAAI,UAAU,2BAA2B;;AAIjD,YAAI,CAAC,MAAM,QAAQ,SAAS,GAAG;AAC7B;AAAE,eAAa,QAAQ,KAAK,IAAI,YAAY,CAAC,SAAS;;AAGxD,gBAAQ,UAAU;AAElB,aAAKA,KAAI,UAAU,QAAQA,QAAO;AAChC,cAAI,UAAUA,EAAC,MAAM,QAAQ;AAC3B,oBAAQA,KAAI;AACZ;;;AAIJ,kBAAU,OAAO,OAAO,GAAG,QAAQ;AAEnC,eAAO;MACT;MAEA,GAAsB,OAAmB,UAAc;AACrD,eAAO,MAAM,GAAG,OAAO,QAAQ;MACjC;MAEA,YAA+B,OAAmB,UAAc;AAC9D,eAAO,MAAM,YAAY,OAAO,QAAQ;MAC1C;MAEA,gBAAmC,OAAmB,UAAc;AAClE,eAAO,MAAM,gBAAgB,OAAO,QAAQ;MAC9C;MAEA,oBAAuC,OAAmB,UAAc;AACtE,eAAO,MAAM,oBAAoB,OAAO,QAAQ;MAClD;MAEA,mBAAmB,OAAwB;AACzC,eAAO,MAAM,mBAAmB,KAAK;MACvC;MAEA,eAAkC,OAAmB,UAAc;AACjE,eAAO,MAAM,eAAe,OAAO,QAAQ;MAC7C;MAEA,aAAU;AACR,eAAO,MAAM,WAAU;MACzB;MAEA,UAA6B,OAAiB;AAC5C,eAAO,MAAM,UAAU,KAAK;MAC9B;MAEA,cAAc,OAAuB;AACnC,eAAO,MAAM,cAAc,KAAK;MAClC;MAEA,kBAAe;AACb,eAAO,MAAM,gBAAe;MAC9B;MAEA,gBAAgB,cAAoB;AAClC,eAAO,MAAM,gBAAgB,YAAY;MAC3C;;AAlKF,YAAA,oBAAA;;;;;;;;;;;;AC/CA,QAAa,OAAb,MAAiB;MAAjB,cAAA;AACU,aAAA,UAAkB;AAClB,aAAA,uBAAoD,CAAA;MAsC9D;;;;;MAhCS,MAAM,UAAO;AAClB,YAAI,KAAK,UAAU,GAAG;AACpB,eAAK,WAAW;AAChB,iBAAO,QAAQ,QAAQ,IAAI;;AAK7B,eAAO,IAAI,QAAiB,CAAC,aAAa,KAAK,qBAAqB,KAAK,QAAQ,CAAC;MACpF;;;;;MAMO,UAAO;AACZ,aAAK,WAAW;AAEhB,YAAI,KAAK,UAAU,KAAK,KAAK,qBAAqB,SAAS,GAAG;AAE5D,kBAAQ,KAAK,iEAAiE;mBACrE,KAAK,YAAY,KAAK,KAAK,qBAAqB,SAAS,GAAG;AAGrE,eAAK,WAAW;AAEhB,gBAAM,eAAe,KAAK,qBAAqB,MAAK;AACpD,cAAI,cAAc;AAChB,yBAAa,IAAI;;;MAGvB;;AAvCF,YAAA,OAAA;;;;;ACDA;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,sFAAsF,uIAAuI;AAAA,QAC5O;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,wFAAwF,uIAAuI;AAAA,QAC9O;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,sFAAsF,uIAAuI;AAAA,QAC5O;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU,OAAO,OAAO,IAAI,MAAM,CAAC,GAAG;AAAA,MAC3C,IAAI,GAAG,KAAK;AACV,YACE,QAAQ,gBACR,QAAQ,eACR,QAAQ,iBACR,QAAQ,UACR;AACA,kBAAQ,KAAK,oFAAoF,uIAAuI;AAAA,QAC1O;AAAA,MACF;AAAA,IACF,CAAC,CAAC;AAAA;AAAA;;;ACXF;AAAA;AAAA;AAAA;AAAA;AACA,WAAO,eAAe,SAAS,cAAc,EAAE,OAAO,KAAK,CAAC;AAC5D,YAAQ,yBAAyB,QAAQ,mBAAmB;AAC5D,QAAM,cAAc,OAAO,OAAO;AAAA,MAC9B,UAAU;AAAA,MACV,kBAAkB;AAAA,MAClB,SAAS,CAAC;AAAA,MACV,MAAM;AAAA,MACN,WAAW;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,MACV,oBAAoB;AAAA,MACpB,gBAAgB;AAAA,IACpB,CAAC;AACD,QAAM,mBAAN,cAA+B,MAAM;AAAA,MACjC,YAAY,KAAK,gBAAgB;AAC7B,cAAM,GAAG;AACT,aAAK,iBAAiB;AAAA,MAC1B;AAAA,IACJ;AACA,YAAQ,mBAAmB;AAC3B,QAAM,yBAAN,cAAqC,MAAM;AAAA,MACvC,YAAY,YAAY;AACpB,cAAM,gCAAgC,YAAY;AAClD,aAAK,aAAa;AAAA,MACtB;AAAA,IACJ;AACA,YAAQ,yBAAyB;AACjC,aAAS,WAAW,GAAGC,OAAM;AACzB,UAAI,CAACA,SAAQA,UAAS,UAAUA,UAAS,QAAQ;AAC7C,YAAI;AACA,cAAI,OAAO,IAAI,YAAY,QAAQ,EAAE,OAAO,KAAK,CAAC,EAAE,OAAO,CAAC;AAC5D,cAAIA,UAAS;AACT,mBAAO;AACX,cAAI;AACA,mBAAO,KAAK,MAAM,IAAI;AAAA,UAC1B,SACO,KAAP;AACI,gBAAIA,UAAS;AACT,oBAAM;AACV,mBAAO;AAAA,UACX;AAAA,QACJ,SACO,KAAP;AACI,cAAIA,UAAS,UAAUA,UAAS;AAC5B,kBAAM;AAAA,QACd;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACA,QAAI,SAAS,CAAC;AACd,aAAS,UAAUC,MAAK,UAAU;AAnDlC;AAoDI,UAAI,UAAU,EAAE,GAAG,aAAa,GAAG,SAAS;AAC5C,YAAM,OAAO;AACb,YAAM,QAAQ;AACd,YAAM,OAAO;AACb,YAAM,EAAE,UAAU,IAAI;AACtB,YAAM,EAAE,SAAS,WAAW,IAAI;AAChC,YAAM,WAAW,CAAC,CAAC,SAAS,KAAKA,IAAG;AACpC,UAAI,OAAO;AAAA,QACP,QAAQ,QAAQ,UAAU;AAAA,QAC1B,SAAS,EAAE,mBAAmB,oBAAoB;AAAA,MACtD;AACA,YAAM,YAAY,CAAC,MAAM,EAAE,QAAQ,QAAQ,EAAE,EAAE,YAAY;AAC3D,UAAI,QAAQ,WAAW;AACnB,cAAM,WAAW;AAAA,UACb,WAAW;AAAA,UACX,gBAAgB,KAAK;AAAA,UACrB,gBAAgB;AAAA,UAChB,mBAAmB;AAAA,QACvB;AACA,cAAM,WAAW;AAAA,UACb;AAAA,UACA,cAAY,aAAQ,0BAAR,mBAA+B,IAAI,CAACC,OAAM,UAAUA,EAAC,GAAG;AAAA,QACxE,EAAE,KAAK;AACP,aAAK,QACD,OAAO,QAAQ,MAAM,OAAO,QAAQ,IAAI,KAAK,WAAW,QAAQ,MAAM,MAAM,QAAQ;AAAA,MAC5F;AACA,UAAI,QAAQ,SAAS;AACjB,aAAK,QAAQ,cAAc,IAAI;AACnC,UAAI,QAAQ,MAAM;AACd,YAAI,CAAC,QAAQ;AACT,eAAK,SAAS;AAClB,aAAK,OAAO,QAAQ,SAAS,SAAS,KAAK,UAAU,QAAQ,IAAI,IAAI,QAAQ;AAAA,MACjF;AACA,WAAK,UAAU,EAAE,GAAG,KAAK,SAAS,GAAG,QAAQ,QAAQ;AACrD,UAAI,QAAQ;AACR,aAAK,qBAAqB;AAC9B,YAAM,YAAY,OAAO,QAAQ;AAC7B,cAAM,SAAS,IAAI;AACnB,YAAI,QAAQ,YAAY,OAAO,UAAU,SAAS,OAAO,IAAI,QAAQ,UAAU,GAAG;AAC9E,cAAI,QAAQ,kBAAkB;AAC1B,kBAAM,IAAI,MAAM,qCAAqC;AACzD,kBAAQ,kBAAkB;AAC1B,iBAAO,MAAM,UAAU,WAAWD,MAAK,IAAI,QAAQ,UAAU,CAAC,GAAG,OAAO;AAAA,QAC5E;AACA,YAAI,QAAQ,oBAAoB,WAAW,QAAQ,kBAAkB;AACjE,cAAI,OAAO;AACX,gBAAM,IAAI,uBAAuB,MAAM;AAAA,QAC3C;AACA,YAAI,MAAM,CAAC;AACX,yBAAiB,SAAS;AACtB,cAAI,KAAK,KAAK;AAClB,YAAI,QAAQ,OAAO,OAAO,GAAG;AAC7B,cAAM,WAAW,IAAI,QAAQ,kBAAkB;AAC/C,YAAI,aAAa;AACb,kBAAQ,MAAM,UAAU,KAAK,gBAAgB,EAAE,KAAK;AACxD,YAAI,aAAa,UAAU,aAAa;AACpC,kBAAQ,MAAM,UAAU,KAAK,KAAK,EAAE,KAAK;AAC7C,cAAM,OAAO,WAAW,OAAO,QAAQ,IAAI;AAC3C,YAAI,QAAQ;AACR,iBAAO,EAAE,SAAS,IAAI,SAAS,QAAQ,KAAK;AAChD,eAAO;AAAA,MACX;AACA,aAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAlH5C,YAAAE;AAmHQ,cAAM,cAAc,OAAO,QAAQ;AAC/B,cAAI,OAAO,IAAI,SAAS,+BAA+B;AACnD,gBAAI;AACA,oBAAM,UAAUF,MAAK,EAAE,GAAG,SAAS,oBAAoB,MAAM,uBAAuB,CAAC,EAAE,CAAC;AAAA,YAC5F,SACOG,IAAP;AACI,kBAAIA,MAAKA,GAAE,gBAAgB;AACvB,sBAAM,IAAI,iBAAiB,gCAAgCA,GAAE,kBAAkBA,GAAE,cAAc;AAAA,cACnG;AAAA,YACJ;AAAA,UACJ;AACA,iBAAO,GAAG;AAAA,QACd;AACA,cAAM,OAAO,WAAW,QAAQ,MAAM,QAAQH,MAAK,MAAM,CAAC,QAAQ;AAC9D,cAAI,GAAG,SAAS,WAAW;AAC3B,WAAC,YAAY;AACT,gBAAI;AACA,sBAAQ,MAAM,UAAU,GAAG,CAAC;AAAA,YAChC,SACO,OAAP;AACI,qBAAO,KAAK;AAAA,YAChB;AAAA,UACJ,GAAG;AAAA,QACP,CAAC;AACD,YAAI,GAAG,SAAS,WAAW;AAC3B,cAAM,UAASE,MAAA,QAAQ,0BAAR,gBAAAA,IAA+B,IAAI,CAACD,OAAM,UAAUA,EAAC;AACpE,cAAM,sBAAsB,CAAC,WAAW;AA7IhD,cAAAC;AA8IY,gBAAM,QAAQ,YAAUA,MAAA,OAAO,mBAAmB,MAA1B,gBAAAA,IAA6B,mBAAkB,EAAE;AACzE,cAAI,CAAC,SAAS,OAAO,gBAAgB;AACjC;AACJ,cAAI,OAAO,SAAS,KAAK;AACrB;AACJ,cAAI,KAAK,SAAS,IAAI,iBAAiB,4BAA4B,mBAAmB,UAAU,KAAK,CAAC;AACtG,iBAAO,IAAI,MAAM;AAAA,QACrB;AACA,YAAI,QAAQ,uBAAuB;AAC/B,cAAI,GAAG,UAAU,CAAC,WAAW;AACzB,kBAAM,eAAe,OAChB,UAAU,eAAe,EACzB,IAAI,CAACD,QAAOA,GAAE,QAAQ,IAAI,QAAQ,UAAU,EAAE,CAAC,EAC/C,SAAS,qBAAqB;AACnC,gBAAI;AACA;AACJ,mBAAO,GAAG,iBAAiB,oBAAoB,KAAK,MAAM,MAAM,CAAC;AAAA,UACrE,CAAC;AAAA,QACL;AACA,YAAI,QAAQ;AACR,cAAI,WAAW,IAAI;AACvB,YAAI,KAAK;AACL,cAAI,MAAM,KAAK,IAAI;AACvB,YAAI,IAAI;AAAA,MACZ,CAAC;AAAA,IACL;AACA,QAAM,eAAe,IAAI,IAAI,CAAC,UAAU,mBAAmB,oBAAoB,cAAc,EAAE,IAAI,CAACA,OAAMA,GAAE,YAAY,CAAC,CAAC;AAC1H,QAAM,oBAAoB,IAAI,IAAI;AAAA,MAAC;AAAA,MAAkB;AAAA,MAAmB;AAAA,MAAkC;AAAA,MACtG;AAAA,MAAc;AAAA,MAAkB;AAAA,MAAU;AAAA,MAAW;AAAA,MAAQ;AAAA,MAAO;AAAA,MAAU;AAAA,MAAQ;AAAA,MAAc;AAAA,MAAU;AAAA,MAAW;AAAA,MAAM;AAAA,MAC/H;AAAA,MAAqB;AAAA,MAAW;AAAA,IAAK,EAAE,IAAI,CAACA,OAAMA,GAAE,YAAY,CAAC,CAAC;AACtE,mBAAe,aAAaD,MAAK,UAAU;AACvC,UAAI,UAAU,EAAE,GAAG,aAAa,GAAG,SAAS;AAC5C,YAAM,UAAU,IAAI,QAAQ;AAC5B,UAAI,QAAQ,SAAS;AACjB,gBAAQ,IAAI,gBAAgB,kBAAkB;AAClD,UAAI,SAAS,IAAI,IAAIA,IAAG;AACxB,UAAI,OAAO,UAAU;AACjB,cAAM,OAAO,KAAK,GAAG,OAAO,YAAY,OAAO,UAAU;AACzD,gBAAQ,IAAI,iBAAiB,SAAS,MAAM;AAC5C,eAAO,WAAW;AAClB,eAAO,WAAW;AAAA,MACtB;AACA,MAAAA,OAAM,KAAK;AACX,eAAS,KAAK,QAAQ,SAAS;AAC3B,cAAM,OAAO,EAAE,YAAY;AAC3B,YAAI,aAAa,IAAI,IAAI,KAAM,QAAQ,QAAQ,CAAC,kBAAkB,IAAI,IAAI;AACtE,kBAAQ,IAAI,GAAG,QAAQ,QAAQ,CAAC,CAAC;AAAA,MACzC;AACA,UAAI,OAAO,EAAE,SAAS,UAAU,QAAQ,WAAW,WAAW,SAAS;AACvE,UAAI,CAAC,QAAQ;AACT,aAAK,iBAAiB;AAC1B,UAAI,QAAQ;AACR,aAAK,OAAO;AAChB,UAAI,QAAQ,MAAM;AACd,YAAI,CAAC,QAAQ;AACT,eAAK,SAAS;AAClB,aAAK,OAAO,QAAQ,SAAS,SAAS,KAAK,UAAU,QAAQ,IAAI,IAAI,QAAQ;AAAA,MACjF;AACA,YAAM,MAAM,MAAM,MAAMA,MAAK,IAAI;AACjC,UAAI,QAAQ,oBAAoB,IAAI,WAAW,QAAQ;AACnD,cAAM,IAAI,uBAAuB,IAAI,MAAM;AAC/C,YAAM,OAAO,WAAW,IAAI,WAAW,MAAM,IAAI,YAAY,CAAC,GAAG,QAAQ,IAAI;AAC7E,UAAI,QAAQ;AACR,eAAO,EAAE,SAAS,OAAO,YAAY,IAAI,QAAQ,QAAQ,CAAC,GAAG,QAAQ,IAAI,QAAQ,KAAK;AAC1F,aAAO;AAAA,IACX;AACA,QAAM,UAAU,CAAC,EAAE,OAAO,WAAW,YACjC,QAAQ,YACR,QAAQ,SAAS,QACjB,QAAQ,SAAS;AACrB,aAAS,SAASA,MAAK,SAAS;AAC5B,YAAM,KAAK,UAAU,YAAY;AACjC,aAAO,GAAGA,MAAK,OAAO;AAAA,IAC1B;AACA,YAAQ,UAAU;AAAA;AAAA;;;;;;;;;;ACxNlB,QAAA,eAAA;AAMO,QAAM,oBAAoB,OAAOI,MAAa,WAAqB;AACxE,YAAM,MAAM,OAAM,GAAA,aAAA,SAAMA,MAAK;QAC3B,SAAS;UACP,gBAAgB;;QAElB,MAAM;QACN,MAAM;UACJ,QAAQ,OAAO;UACf,QAAQ,OAAO;UACf,SAAS;UACT,IAAI;;OAEP;AAED,aAAO,IAAI;IACb;AAfa,YAAA,oBAAiB;AAiBvB,QAAM,cAAc,CAAC,aAA0B;;AACpD,UAAI,OAAO,aAAa,UAAU;AAChC,eAAO;mBACE,0CAAU,eAAV,mBAAsB,SAAQ,QAAW;AAClD,eAAO,SAAS,WAAW;aACtB;AACL,cAAM,IAAI,MAAM,iDAAiD;;IAErE;AARa,YAAA,cAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBxB,iBAAA,qBAAA,OAAA;AAKA,iBAAA,iBAAA,OAAA;AAKA,iBAAA,mBAAA,OAAA;AAKA,iBAAA,mBAAA,OAAA;AAKA,iBAAA,sBAAA,OAAA;AAKA,iBAAA,qBAAA,OAAA;AAKA,iBAAA,iBAAA,OAAA;AAKA,YAAA,MAAA;AAKA,iBAAA,iBAAA,OAAA;AAKA,iBAAA,oBAAA,OAAA;AAKA,iBAAA,6BAAA,OAAA;AACA,QAAA,aAAA;AACE,WAAA,eAAA,SAAA,sBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAkB,EAAA,CAAA;AAClB,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAS,EAAA,CAAA;AACT,WAAA,eAAA,SAAA,YAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAQ,EAAA,CAAA;AACR,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAa,EAAA,CAAA;AACb,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAO,EAAA,CAAA;AACP,WAAA,eAAA,SAAA,iBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAa,EAAA,CAAA;AACb,WAAA,eAAA,SAAA,eAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAW,EAAA,CAAA;AACX,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAS,EAAA,CAAA;AACT,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAc,EAAA,CAAA;AACd,WAAA,eAAA,SAAA,WAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAAA,WAAA;IAAO,EAAA,CAAA;AAET,iBAAA,gBAAA,OAAA;AACA,iBAAA,oBAAA,OAAA;;;;;ACKA,SAAS,MAAM,cAAc;AAC3B,MAAI,KAAK,aAAa,cACpB,IAAIC,WAAU,YAAY,EAAE,aAAaA,YAAW,UAAU,MAAM,SAAS,KAAK,GAClF,MAAM,IAAIA,WAAU,CAAC,GAUrB,iBAAiB,IAajB,gBAAgB,GAMhB,aAAa,IAIb,aAAa,IAMb,UAAU,MAKV,UAAU,KAGV,SAAS,OAkBT,cAAc,GAId,gBAAgB,GAGhB,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,oBAAoB;AAAA,IACpB,gBAAgB;AAAA,IAChB,kBAAkB;AAAA,IAClB,mBAAmB;AAAA,IACnB,wBAAwB;AAAA;AAAA,IACxB,QAAQ;AAAA,EACV,GAKA,WAAW,wCACX,iCAAiC;AAgBnC,WAASA,WAAU,GAAG,GAAG;AACvB,QAAIC,WAAU,GAAG,aAAaC,IAAGC,IAAG,OAAO,KAAK,KAC9C,IAAI;AAGN,QAAI,EAAE,aAAaH;AAAY,aAAO,IAAIA,WAAU,GAAG,CAAC;AAExD,QAAI,KAAK,MAAM;AAEb,UAAI,KAAK,EAAE,iBAAiB,MAAM;AAChC,UAAE,IAAI,EAAE;AAER,YAAI,CAAC,EAAE,KAAK,EAAE,IAAI,SAAS;AACzB,YAAE,IAAI,EAAE,IAAI;AAAA,QACd,WAAW,EAAE,IAAI,SAAS;AACxB,YAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,QAChB,OAAO;AACL,YAAE,IAAI,EAAE;AACR,YAAE,IAAI,EAAE,EAAE,MAAM;AAAA,QAClB;AAEA;AAAA,MACF;AAEA,WAAK,QAAQ,OAAO,KAAK,aAAa,IAAI,KAAK,GAAG;AAGhD,UAAE,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,GAAG,MAAM;AAGjC,YAAI,MAAM,CAAC,CAAC,GAAG;AACb,eAAKE,KAAI,GAAGC,KAAI,GAAGA,MAAK,IAAIA,MAAK,IAAID;AAAI;AAEzC,cAAIA,KAAI,SAAS;AACf,cAAE,IAAI,EAAE,IAAI;AAAA,UACd,OAAO;AACL,cAAE,IAAIA;AACN,cAAE,IAAI,CAAC,CAAC;AAAA,UACV;AAEA;AAAA,QACF;AAEA,cAAM,OAAO,CAAC;AAAA,MAChB,OAAO;AAEL,YAAI,CAAC,UAAU,KAAK,MAAM,OAAO,CAAC,CAAC;AAAG,iBAAO,aAAa,GAAG,KAAK,KAAK;AAEvE,UAAE,IAAI,IAAI,WAAW,CAAC,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,GAAG,MAAM;AAAA,MAC7D;AAGA,WAAKA,KAAI,IAAI,QAAQ,GAAG,KAAK;AAAI,cAAM,IAAI,QAAQ,KAAK,EAAE;AAG1D,WAAKC,KAAI,IAAI,OAAO,IAAI,KAAK,GAAG;AAG9B,YAAID,KAAI;AAAG,UAAAA,KAAIC;AACf,QAAAD,MAAK,CAAC,IAAI,MAAMC,KAAI,CAAC;AACrB,cAAM,IAAI,UAAU,GAAGA,EAAC;AAAA,MAC1B,WAAWD,KAAI,GAAG;AAGhB,QAAAA,KAAI,IAAI;AAAA,MACV;AAAA,IAEF,OAAO;AAGL,eAAS,GAAG,GAAG,SAAS,QAAQ,MAAM;AAItC,UAAI,KAAK,MAAM,gCAAgC;AAC7C,YAAI,IAAIF,WAAU,CAAC;AACnB,eAAO,MAAM,GAAG,iBAAiB,EAAE,IAAI,GAAG,aAAa;AAAA,MACzD;AAEA,YAAM,OAAO,CAAC;AAEd,UAAI,QAAQ,OAAO,KAAK,UAAU;AAGhC,YAAI,IAAI,KAAK;AAAG,iBAAO,aAAa,GAAG,KAAK,OAAO,CAAC;AAEpD,UAAE,IAAI,IAAI,IAAI,KAAK,MAAM,IAAI,MAAM,CAAC,GAAG,MAAM;AAG7C,YAAIA,WAAU,SAAS,IAAI,QAAQ,aAAa,EAAE,EAAE,SAAS,IAAI;AAC/D,gBAAM,MACJ,gBAAgB,CAAC;AAAA,QACrB;AAAA,MACF,OAAO;AACL,UAAE,IAAI,IAAI,WAAW,CAAC,MAAM,MAAM,MAAM,IAAI,MAAM,CAAC,GAAG,MAAM;AAAA,MAC9D;AAEA,MAAAC,YAAW,SAAS,MAAM,GAAG,CAAC;AAC9B,MAAAC,KAAIC,KAAI;AAIR,WAAK,MAAM,IAAI,QAAQA,KAAI,KAAKA,MAAK;AACnC,YAAIF,UAAS,QAAQ,IAAI,IAAI,OAAOE,EAAC,CAAC,IAAI,GAAG;AAC3C,cAAI,KAAK,KAAK;AAGZ,gBAAIA,KAAID,IAAG;AACT,cAAAA,KAAI;AACJ;AAAA,YACF;AAAA,UACF,WAAW,CAAC,aAAa;AAGvB,gBAAI,OAAO,IAAI,YAAY,MAAM,MAAM,IAAI,YAAY,MACnD,OAAO,IAAI,YAAY,MAAM,MAAM,IAAI,YAAY,IAAI;AACzD,4BAAc;AACd,cAAAC,KAAI;AACJ,cAAAD,KAAI;AACJ;AAAA,YACF;AAAA,UACF;AAEA,iBAAO,aAAa,GAAG,OAAO,CAAC,GAAG,OAAO,CAAC;AAAA,QAC5C;AAAA,MACF;AAGA,cAAQ;AACR,YAAM,YAAY,KAAK,GAAG,IAAI,EAAE,CAAC;AAGjC,WAAKA,KAAI,IAAI,QAAQ,GAAG,KAAK;AAAI,cAAM,IAAI,QAAQ,KAAK,EAAE;AAAA;AACrD,QAAAA,KAAI,IAAI;AAAA,IACf;AAGA,SAAKC,KAAI,GAAG,IAAI,WAAWA,EAAC,MAAM,IAAIA;AAAI;AAG1C,SAAK,MAAM,IAAI,QAAQ,IAAI,WAAW,EAAE,GAAG,MAAM;AAAI;AAErD,QAAI,MAAM,IAAI,MAAMA,IAAG,EAAE,GAAG,GAAG;AAC7B,aAAOA;AAGP,UAAI,SAASH,WAAU,SACrB,MAAM,OAAO,IAAI,oBAAoB,MAAM,UAAU,CAAC,IAAI;AACxD,cAAM,MACJ,gBAAiB,EAAE,IAAI,CAAE;AAAA,MAC/B;AAGA,WAAKE,KAAIA,KAAIC,KAAI,KAAK,SAAS;AAG7B,UAAE,IAAI,EAAE,IAAI;AAAA,MAGd,WAAWD,KAAI,SAAS;AAGtB,UAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,MAChB,OAAO;AACL,UAAE,IAAIA;AACN,UAAE,IAAI,CAAC;AAMP,QAAAC,MAAKD,KAAI,KAAK;AACd,YAAIA,KAAI;AAAG,UAAAC,MAAK;AAEhB,YAAIA,KAAI,KAAK;AACX,cAAIA;AAAG,cAAE,EAAE,KAAK,CAAC,IAAI,MAAM,GAAGA,EAAC,CAAC;AAEhC,eAAK,OAAO,UAAUA,KAAI,OAAM;AAC9B,cAAE,EAAE,KAAK,CAAC,IAAI,MAAMA,IAAGA,MAAK,QAAQ,CAAC;AAAA,UACvC;AAEA,UAAAA,KAAI,YAAY,MAAM,IAAI,MAAMA,EAAC,GAAG;AAAA,QACtC,OAAO;AACL,UAAAA,MAAK;AAAA,QACP;AAEA,eAAOA,MAAK,OAAO;AAAI;AACvB,UAAE,EAAE,KAAK,CAAC,GAAG;AAAA,MACf;AAAA,IACF,OAAO;AAGL,QAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,IAChB;AAAA,EACF;AAMA,EAAAH,WAAU,QAAQ;AAElB,EAAAA,WAAU,WAAW;AACrB,EAAAA,WAAU,aAAa;AACvB,EAAAA,WAAU,aAAa;AACvB,EAAAA,WAAU,cAAc;AACxB,EAAAA,WAAU,gBAAgB;AAC1B,EAAAA,WAAU,kBAAkB;AAC5B,EAAAA,WAAU,kBAAkB;AAC5B,EAAAA,WAAU,kBAAkB;AAC5B,EAAAA,WAAU,mBAAmB;AAC7B,EAAAA,WAAU,SAAS;AAqCnB,EAAAA,WAAU,SAASA,WAAU,MAAM,SAAU,KAAK;AAChD,QAAI,GAAG;AAEP,QAAI,OAAO,MAAM;AAEf,UAAI,OAAO,OAAO,UAAU;AAI1B,YAAI,IAAI,eAAe,IAAI,gBAAgB,GAAG;AAC5C,cAAI,IAAI,CAAC;AACT,mBAAS,GAAG,GAAG,KAAK,CAAC;AACrB,2BAAiB;AAAA,QACnB;AAIA,YAAI,IAAI,eAAe,IAAI,eAAe,GAAG;AAC3C,cAAI,IAAI,CAAC;AACT,mBAAS,GAAG,GAAG,GAAG,CAAC;AACnB,0BAAgB;AAAA,QAClB;AAMA,YAAI,IAAI,eAAe,IAAI,gBAAgB,GAAG;AAC5C,cAAI,IAAI,CAAC;AACT,cAAI,KAAK,EAAE,KAAK;AACd,qBAAS,EAAE,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC;AACzB,qBAAS,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC;AACxB,yBAAa,EAAE,CAAC;AAChB,yBAAa,EAAE,CAAC;AAAA,UAClB,OAAO;AACL,qBAAS,GAAG,CAAC,KAAK,KAAK,CAAC;AACxB,yBAAa,EAAE,aAAa,IAAI,IAAI,CAAC,IAAI;AAAA,UAC3C;AAAA,QACF;AAKA,YAAI,IAAI,eAAe,IAAI,OAAO,GAAG;AACnC,cAAI,IAAI,CAAC;AACT,cAAI,KAAK,EAAE,KAAK;AACd,qBAAS,EAAE,CAAC,GAAG,CAAC,KAAK,IAAI,CAAC;AAC1B,qBAAS,EAAE,CAAC,GAAG,GAAG,KAAK,CAAC;AACxB,sBAAU,EAAE,CAAC;AACb,sBAAU,EAAE,CAAC;AAAA,UACf,OAAO;AACL,qBAAS,GAAG,CAAC,KAAK,KAAK,CAAC;AACxB,gBAAI,GAAG;AACL,wBAAU,EAAE,UAAU,IAAI,IAAI,CAAC,IAAI;AAAA,YACrC,OAAO;AACL,oBAAM,MACJ,iBAAiB,IAAI,sBAAsB,CAAC;AAAA,YAChD;AAAA,UACF;AAAA,QACF;AAKA,YAAI,IAAI,eAAe,IAAI,QAAQ,GAAG;AACpC,cAAI,IAAI,CAAC;AACT,cAAI,MAAM,CAAC,CAAC,GAAG;AACb,gBAAI,GAAG;AACL,kBAAI,OAAO,UAAU,eAAe,WAClC,OAAO,mBAAmB,OAAO,cAAc;AAC/C,yBAAS;AAAA,cACX,OAAO;AACL,yBAAS,CAAC;AACV,sBAAM,MACJ,iBAAiB,oBAAoB;AAAA,cACzC;AAAA,YACF,OAAO;AACL,uBAAS;AAAA,YACX;AAAA,UACF,OAAO;AACL,kBAAM,MACJ,iBAAiB,IAAI,yBAAyB,CAAC;AAAA,UACnD;AAAA,QACF;AAIA,YAAI,IAAI,eAAe,IAAI,aAAa,GAAG;AACzC,cAAI,IAAI,CAAC;AACT,mBAAS,GAAG,GAAG,GAAG,CAAC;AACnB,wBAAc;AAAA,QAChB;AAIA,YAAI,IAAI,eAAe,IAAI,eAAe,GAAG;AAC3C,cAAI,IAAI,CAAC;AACT,mBAAS,GAAG,GAAG,KAAK,CAAC;AACrB,0BAAgB;AAAA,QAClB;AAIA,YAAI,IAAI,eAAe,IAAI,QAAQ,GAAG;AACpC,cAAI,IAAI,CAAC;AACT,cAAI,OAAO,KAAK;AAAU,qBAAS;AAAA;AAC9B,kBAAM,MACT,iBAAiB,IAAI,qBAAqB,CAAC;AAAA,QAC/C;AAIA,YAAI,IAAI,eAAe,IAAI,UAAU,GAAG;AACtC,cAAI,IAAI,CAAC;AAIT,cAAI,OAAO,KAAK,YAAY,CAAC,wBAAwB,KAAK,CAAC,GAAG;AAC5D,6CAAiC,EAAE,MAAM,GAAG,EAAE,KAAK;AACnD,uBAAW;AAAA,UACb,OAAO;AACL,kBAAM,MACJ,iBAAiB,IAAI,eAAe,CAAC;AAAA,UACzC;AAAA,QACF;AAAA,MAEF,OAAO;AAGL,cAAM,MACJ,iBAAiB,sBAAsB,GAAG;AAAA,MAC9C;AAAA,IACF;AAEA,WAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA,gBAAgB,CAAC,YAAY,UAAU;AAAA,MACvC,OAAO,CAAC,SAAS,OAAO;AAAA,MACxB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EACF;AAYA,EAAAA,WAAU,cAAc,SAAU,GAAG;AACnC,QAAI,CAAC,KAAK,EAAE,iBAAiB;AAAM,aAAO;AAC1C,QAAI,CAACA,WAAU;AAAO,aAAO;AAE7B,QAAIG,IAAGC,IACL,IAAI,EAAE,GACNF,KAAI,EAAE,GACN,IAAI,EAAE;AAER;AAAK,UAAI,CAAC,EAAE,SAAS,KAAK,CAAC,KAAK,kBAAkB;AAEhD,aAAK,MAAM,KAAK,MAAM,OAAOA,MAAK,CAAC,OAAOA,MAAK,OAAOA,OAAM,UAAUA,EAAC,GAAG;AAGxE,cAAI,EAAE,CAAC,MAAM,GAAG;AACd,gBAAIA,OAAM,KAAK,EAAE,WAAW;AAAG,qBAAO;AACtC,kBAAM;AAAA,UACR;AAGA,UAAAC,MAAKD,KAAI,KAAK;AACd,cAAIC,KAAI;AAAG,YAAAA,MAAK;AAIhB,cAAI,OAAO,EAAE,CAAC,CAAC,EAAE,UAAUA,IAAG;AAE5B,iBAAKA,KAAI,GAAGA,KAAI,EAAE,QAAQA,MAAK;AAC7B,cAAAC,KAAI,EAAED,EAAC;AACP,kBAAIC,KAAI,KAAKA,MAAK,QAAQA,OAAM,UAAUA,EAAC;AAAG,sBAAM;AAAA,YACtD;AAGA,gBAAIA,OAAM;AAAG,qBAAO;AAAA,UACtB;AAAA,QACF;AAAA,MAGF,WAAW,MAAM,QAAQF,OAAM,SAAS,MAAM,QAAQ,MAAM,KAAK,MAAM,KAAK;AAC1E,eAAO;AAAA,MACT;AAEA,UAAM,MACH,iBAAiB,wBAAwB,CAAC;AAAA,EAC/C;AAQA,EAAAF,WAAU,UAAUA,WAAU,MAAM,WAAY;AAC9C,WAAO,SAAS,WAAW,EAAE,EAAE;AAAA,EACjC;AAQA,EAAAA,WAAU,UAAUA,WAAU,MAAM,WAAY;AAC9C,WAAO,SAAS,WAAW,EAAE,EAAE;AAAA,EACjC;AAaA,EAAAA,WAAU,SAAU,WAAY;AAC9B,QAAI,UAAU;AAMd,QAAI,iBAAkB,KAAK,OAAO,IAAI,UAAW,UAC9C,WAAY;AAAE,aAAO,UAAU,KAAK,OAAO,IAAI,OAAO;AAAA,IAAG,IACzD,WAAY;AAAE,cAAS,KAAK,OAAO,IAAI,aAAa,KAAK,WACxD,KAAK,OAAO,IAAI,UAAW;AAAA,IAAI;AAEnC,WAAO,SAAU,IAAI;AACnB,UAAI,GAAG,GAAGE,IAAG,GAAG,GACdC,KAAI,GACJ,IAAI,CAAC,GACL,OAAO,IAAIH,WAAU,GAAG;AAE1B,UAAI,MAAM;AAAM,aAAK;AAAA;AAChB,iBAAS,IAAI,GAAG,GAAG;AAExB,UAAI,SAAS,KAAK,QAAQ;AAE1B,UAAI,QAAQ;AAGV,YAAI,OAAO,iBAAiB;AAE1B,cAAI,OAAO,gBAAgB,IAAI,YAAY,KAAK,CAAC,CAAC;AAElD,iBAAOG,KAAI,KAAI;AAQb,gBAAI,EAAEA,EAAC,IAAI,UAAW,EAAEA,KAAI,CAAC,MAAM;AAMnC,gBAAI,KAAK,MAAM;AACb,kBAAI,OAAO,gBAAgB,IAAI,YAAY,CAAC,CAAC;AAC7C,gBAAEA,EAAC,IAAI,EAAE,CAAC;AACV,gBAAEA,KAAI,CAAC,IAAI,EAAE,CAAC;AAAA,YAChB,OAAO;AAIL,gBAAE,KAAK,IAAI,IAAI;AACf,cAAAA,MAAK;AAAA,YACP;AAAA,UACF;AACA,UAAAA,KAAI,IAAI;AAAA,QAGV,WAAW,OAAO,aAAa;AAG7B,cAAI,OAAO,YAAY,KAAK,CAAC;AAE7B,iBAAOA,KAAI,KAAI;AAMb,iBAAM,EAAEA,EAAC,IAAI,MAAM,kBAAoB,EAAEA,KAAI,CAAC,IAAI,gBAC9C,EAAEA,KAAI,CAAC,IAAI,aAAgB,EAAEA,KAAI,CAAC,IAAI,YACtC,EAAEA,KAAI,CAAC,KAAK,OAAO,EAAEA,KAAI,CAAC,KAAK,KAAK,EAAEA,KAAI,CAAC;AAE/C,gBAAI,KAAK,MAAM;AACb,qBAAO,YAAY,CAAC,EAAE,KAAK,GAAGA,EAAC;AAAA,YACjC,OAAO;AAGL,gBAAE,KAAK,IAAI,IAAI;AACf,cAAAA,MAAK;AAAA,YACP;AAAA,UACF;AACA,UAAAA,KAAI,IAAI;AAAA,QACV,OAAO;AACL,mBAAS;AACT,gBAAM,MACJ,iBAAiB,oBAAoB;AAAA,QACzC;AAAA,MACF;AAGA,UAAI,CAAC,QAAQ;AAEX,eAAOA,KAAI,KAAI;AACb,cAAI,eAAe;AACnB,cAAI,IAAI;AAAM,cAAEA,IAAG,IAAI,IAAI;AAAA,QAC7B;AAAA,MACF;AAEA,UAAI,EAAE,EAAEA,EAAC;AACT,YAAM;AAGN,UAAI,KAAK,IAAI;AACX,YAAI,SAAS,WAAW,EAAE;AAC1B,UAAEA,EAAC,IAAI,UAAU,IAAI,CAAC,IAAI;AAAA,MAC5B;AAGA,aAAO,EAAEA,EAAC,MAAM,GAAG,EAAE,IAAI,GAAGA;AAAI;AAGhC,UAAIA,KAAI,GAAG;AACT,YAAI,CAACD,KAAI,CAAC;AAAA,MACZ,OAAO;AAGL,aAAKA,KAAI,IAAK,EAAE,CAAC,MAAM,GAAG,EAAE,OAAO,GAAG,CAAC,GAAGA,MAAK;AAAS;AAGxD,aAAKC,KAAI,GAAG,IAAI,EAAE,CAAC,GAAG,KAAK,IAAI,KAAK,IAAIA;AAAI;AAG5C,YAAIA,KAAI;AAAU,UAAAD,MAAK,WAAWC;AAAA,MACpC;AAEA,WAAK,IAAID;AACT,WAAK,IAAI;AACT,aAAO;AAAA,IACT;AAAA,EACF,EAAG;AAQH,EAAAF,WAAU,MAAM,WAAY;AAC1B,QAAIG,KAAI,GACN,OAAO,WACP,MAAM,IAAIH,WAAU,KAAK,CAAC,CAAC;AAC7B,WAAOG,KAAI,KAAK;AAAS,YAAM,IAAI,KAAK,KAAKA,IAAG,CAAC;AACjD,WAAO;AAAA,EACT;AAOA,gBAAe,WAAY;AACzB,QAAI,UAAU;AAOd,aAAS,UAAU,KAAK,QAAQ,SAASF,WAAU;AACjD,UAAI,GACF,MAAM,CAAC,CAAC,GACR,MACAE,KAAI,GACJ,MAAM,IAAI;AAEZ,aAAOA,KAAI,OAAM;AACf,aAAK,OAAO,IAAI,QAAQ,QAAQ,IAAI,IAAI,KAAK;AAAO;AAEpD,YAAI,CAAC,KAAKF,UAAS,QAAQ,IAAI,OAAOE,IAAG,CAAC;AAE1C,aAAK,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AAE/B,cAAI,IAAI,CAAC,IAAI,UAAU,GAAG;AACxB,gBAAI,IAAI,IAAI,CAAC,KAAK;AAAM,kBAAI,IAAI,CAAC,IAAI;AACrC,gBAAI,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,UAAU;AACjC,gBAAI,CAAC,KAAK;AAAA,UACZ;AAAA,QACF;AAAA,MACF;AAEA,aAAO,IAAI,QAAQ;AAAA,IACrB;AAKA,WAAO,SAAU,KAAK,QAAQ,SAASE,OAAM,kBAAkB;AAC7D,UAAIJ,WAAU,GAAGC,IAAG,GAAGI,IAAG,GAAG,IAAI,GAC/BH,KAAI,IAAI,QAAQ,GAAG,GACnB,KAAK,gBACL,KAAK;AAGP,UAAIA,MAAK,GAAG;AACV,YAAI;AAGJ,wBAAgB;AAChB,cAAM,IAAI,QAAQ,KAAK,EAAE;AACzB,YAAI,IAAIH,WAAU,MAAM;AACxB,YAAI,EAAE,IAAI,IAAI,SAASG,EAAC;AACxB,wBAAgB;AAKhB,UAAE,IAAI;AAAA,UAAU,aAAa,cAAc,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG;AAAA,UACxD;AAAA,UAAI;AAAA,UAAS;AAAA,QAAO;AACrB,UAAE,IAAI,EAAE,EAAE;AAAA,MACZ;AAIA,WAAK,UAAU,KAAK,QAAQ,SAAS,oBACjCF,YAAW,UAAU,YACrBA,YAAW,SAAS,SAAS;AAGjC,MAAAC,KAAI,IAAI,GAAG;AAGX,aAAO,GAAG,EAAE,CAAC,KAAK,GAAG,GAAG,IAAI;AAAE;AAG9B,UAAI,CAAC,GAAG,CAAC;AAAG,eAAOD,UAAS,OAAO,CAAC;AAGpC,UAAIE,KAAI,GAAG;AACT,UAAED;AAAA,MACJ,OAAO;AACL,UAAE,IAAI;AACN,UAAE,IAAIA;AAGN,UAAE,IAAIG;AACN,YAAI,IAAI,GAAG,GAAG,IAAI,IAAI,OAAO;AAC7B,aAAK,EAAE;AACP,QAAAC,KAAI,EAAE;AACN,QAAAJ,KAAI,EAAE;AAAA,MACR;AAKA,UAAIA,KAAI,KAAK;AAGb,MAAAC,KAAI,GAAG,CAAC;AAIR,UAAI,UAAU;AACd,MAAAG,KAAIA,MAAK,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK;AAE/B,MAAAA,KAAI,KAAK,KAAKH,MAAK,QAAQG,QAAO,MAAM,KAAK,OAAO,EAAE,IAAI,IAAI,IAAI,MAC1DH,KAAI,KAAKA,MAAK,MAAK,MAAM,KAAKG,MAAK,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,KAC3D,OAAO,EAAE,IAAI,IAAI,IAAI;AAK5B,UAAI,IAAI,KAAK,CAAC,GAAG,CAAC,GAAG;AAGnB,cAAMA,KAAI,aAAaL,UAAS,OAAO,CAAC,GAAG,CAAC,IAAIA,UAAS,OAAO,CAAC,CAAC,IAAIA,UAAS,OAAO,CAAC;AAAA,MACzF,OAAO;AAGL,WAAG,SAAS;AAGZ,YAAIK,IAAG;AAGL,eAAK,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,WAAU;AACpC,eAAG,CAAC,IAAI;AAER,gBAAI,CAAC,GAAG;AACN,gBAAEJ;AACF,mBAAK,CAAC,CAAC,EAAE,OAAO,EAAE;AAAA,YACpB;AAAA,UACF;AAAA,QACF;AAGA,aAAK,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC;AAAG;AAG9B,aAAKC,KAAI,GAAG,MAAM,IAAIA,MAAK,GAAG,OAAOF,UAAS,OAAO,GAAGE,IAAG,CAAC;AAAE;AAG9D,cAAM,aAAa,KAAKD,IAAGD,UAAS,OAAO,CAAC,CAAC;AAAA,MAC/C;AAGA,aAAO;AAAA,IACT;AAAA,EACF,EAAG;AAIH,QAAO,WAAY;AAGjB,aAAS,SAAS,GAAG,GAAG,MAAM;AAC5B,UAAI,GAAG,MAAM,KAAK,KAChB,QAAQ,GACRE,KAAI,EAAE,QACN,MAAM,IAAI,WACV,MAAM,IAAI,YAAY;AAExB,WAAK,IAAI,EAAE,MAAM,GAAGA,QAAM;AACxB,cAAM,EAAEA,EAAC,IAAI;AACb,cAAM,EAAEA,EAAC,IAAI,YAAY;AACzB,YAAI,MAAM,MAAM,MAAM;AACtB,eAAO,MAAM,MAAQ,IAAI,YAAa,YAAa;AACnD,iBAAS,OAAO,OAAO,MAAM,IAAI,YAAY,KAAK,MAAM;AACxD,UAAEA,EAAC,IAAI,OAAO;AAAA,MAChB;AAEA,UAAI;AAAO,YAAI,CAAC,KAAK,EAAE,OAAO,CAAC;AAE/B,aAAO;AAAA,IACT;AAEA,aAASI,SAAQ,GAAG,GAAG,IAAI,IAAI;AAC7B,UAAIJ,IAAG;AAEP,UAAI,MAAM,IAAI;AACZ,cAAM,KAAK,KAAK,IAAI;AAAA,MACtB,OAAO;AAEL,aAAKA,KAAI,MAAM,GAAGA,KAAI,IAAIA,MAAK;AAE7B,cAAI,EAAEA,EAAC,KAAK,EAAEA,EAAC,GAAG;AAChB,kBAAM,EAAEA,EAAC,IAAI,EAAEA,EAAC,IAAI,IAAI;AACxB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,aAAS,SAAS,GAAG,GAAG,IAAI,MAAM;AAChC,UAAIA,KAAI;AAGR,aAAO,QAAO;AACZ,UAAE,EAAE,KAAKA;AACT,QAAAA,KAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,IAAI;AACxB,UAAE,EAAE,IAAIA,KAAI,OAAO,EAAE,EAAE,IAAI,EAAE,EAAE;AAAA,MACjC;AAGA,aAAO,CAAC,EAAE,CAAC,KAAK,EAAE,SAAS,GAAG,EAAE,OAAO,GAAG,CAAC;AAAE;AAAA,IAC/C;AAGA,WAAO,SAAU,GAAG,GAAG,IAAI,IAAI,MAAM;AACnC,UAAI,KAAKD,IAAGC,IAAG,MAAMC,IAAG,MAAM,OAAO,GAAG,IAAI,KAAK,MAAM,MAAM,IAAI,IAAI,KACnE,IAAI,IACJ,IAAI,EAAE,KAAK,EAAE,IAAI,IAAI,IACrB,KAAK,EAAE,GACP,KAAK,EAAE;AAGT,UAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG;AAElC,eAAO,IAAIJ;AAAA;AAAA,UAGV,CAAC,EAAE,KAAK,CAAC,EAAE,MAAM,KAAK,MAAM,GAAG,CAAC,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM;AAAA;AAAA,YAGnD,MAAM,GAAG,CAAC,KAAK,KAAK,CAAC,KAAK,IAAI,IAAI,IAAI;AAAA;AAAA,QACzC;AAAA,MACD;AAEA,UAAI,IAAIA,WAAU,CAAC;AACnB,WAAK,EAAE,IAAI,CAAC;AACZ,MAAAE,KAAI,EAAE,IAAI,EAAE;AACZ,UAAI,KAAKA,KAAI;AAEb,UAAI,CAAC,MAAM;AACT,eAAO;AACP,QAAAA,KAAI,SAAS,EAAE,IAAI,QAAQ,IAAI,SAAS,EAAE,IAAI,QAAQ;AACtD,YAAI,IAAI,WAAW;AAAA,MACrB;AAIA,WAAKC,KAAI,GAAG,GAAGA,EAAC,MAAM,GAAGA,EAAC,KAAK,IAAIA;AAAI;AAEvC,UAAI,GAAGA,EAAC,KAAK,GAAGA,EAAC,KAAK;AAAI,QAAAD;AAE1B,UAAI,IAAI,GAAG;AACT,WAAG,KAAK,CAAC;AACT,eAAO;AAAA,MACT,OAAO;AACL,aAAK,GAAG;AACR,aAAK,GAAG;AACR,QAAAC,KAAI;AACJ,aAAK;AAIL,QAAAC,KAAI,UAAU,QAAQ,GAAG,CAAC,IAAI,EAAE;AAIhC,YAAIA,KAAI,GAAG;AACT,eAAK,SAAS,IAAIA,IAAG,IAAI;AACzB,eAAK,SAAS,IAAIA,IAAG,IAAI;AACzB,eAAK,GAAG;AACR,eAAK,GAAG;AAAA,QACV;AAEA,aAAK;AACL,cAAM,GAAG,MAAM,GAAG,EAAE;AACpB,eAAO,IAAI;AAGX,eAAO,OAAO,IAAI,IAAI,MAAM,IAAI;AAAE;AAClC,aAAK,GAAG,MAAM;AACd,aAAK,CAAC,CAAC,EAAE,OAAO,EAAE;AAClB,cAAM,GAAG,CAAC;AACV,YAAI,GAAG,CAAC,KAAK,OAAO;AAAG;AAIvB,WAAG;AACD,UAAAA,KAAI;AAGJ,gBAAMG,SAAQ,IAAI,KAAK,IAAI,IAAI;AAG/B,cAAI,MAAM,GAAG;AAIX,mBAAO,IAAI,CAAC;AACZ,gBAAI,MAAM;AAAM,qBAAO,OAAO,QAAQ,IAAI,CAAC,KAAK;AAGhD,YAAAH,KAAI,UAAU,OAAO,GAAG;AAaxB,gBAAIA,KAAI,GAAG;AAGT,kBAAIA,MAAK;AAAM,gBAAAA,KAAI,OAAO;AAG1B,qBAAO,SAAS,IAAIA,IAAG,IAAI;AAC3B,sBAAQ,KAAK;AACb,qBAAO,IAAI;AAMX,qBAAOG,SAAQ,MAAM,KAAK,OAAO,IAAI,KAAK,GAAG;AAC3C,gBAAAH;AAGA,yBAAS,MAAM,KAAK,QAAQ,KAAK,IAAI,OAAO,IAAI;AAChD,wBAAQ,KAAK;AACb,sBAAM;AAAA,cACR;AAAA,YACF,OAAO;AAML,kBAAIA,MAAK,GAAG;AAGV,sBAAMA,KAAI;AAAA,cACZ;AAGA,qBAAO,GAAG,MAAM;AAChB,sBAAQ,KAAK;AAAA,YACf;AAEA,gBAAI,QAAQ;AAAM,qBAAO,CAAC,CAAC,EAAE,OAAO,IAAI;AAGxC,qBAAS,KAAK,MAAM,MAAM,IAAI;AAC9B,mBAAO,IAAI;AAGX,gBAAI,OAAO,IAAI;AAMb,qBAAOG,SAAQ,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG;AACrC,gBAAAH;AAGA,yBAAS,KAAK,KAAK,OAAO,KAAK,IAAI,MAAM,IAAI;AAC7C,uBAAO,IAAI;AAAA,cACb;AAAA,YACF;AAAA,UACF,WAAW,QAAQ,GAAG;AACpB,YAAAA;AACA,kBAAM,CAAC,CAAC;AAAA,UACV;AAGA,aAAGD,IAAG,IAAIC;AAGV,cAAI,IAAI,CAAC,GAAG;AACV,gBAAI,MAAM,IAAI,GAAG,EAAE,KAAK;AAAA,UAC1B,OAAO;AACL,kBAAM,CAAC,GAAG,EAAE,CAAC;AACb,mBAAO;AAAA,UACT;AAAA,QACF,UAAU,OAAO,MAAM,IAAI,CAAC,KAAK,SAAS;AAE1C,eAAO,IAAI,CAAC,KAAK;AAGjB,YAAI,CAAC,GAAG,CAAC;AAAG,aAAG,OAAO,GAAG,CAAC;AAAA,MAC5B;AAEA,UAAI,QAAQ,MAAM;AAGhB,aAAKD,KAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,KAAK,IAAIA;AAAI;AAE7C,cAAM,GAAG,MAAM,EAAE,IAAIA,KAAID,KAAI,WAAW,KAAK,GAAG,IAAI,IAAI;AAAA,MAG1D,OAAO;AACL,UAAE,IAAIA;AACN,UAAE,IAAI,CAAC;AAAA,MACT;AAEA,aAAO;AAAA,IACT;AAAA,EACF,EAAG;AAYH,WAAS,OAAOE,IAAGD,IAAG,IAAI,IAAI;AAC5B,QAAI,IAAID,IAAG,IAAI,KAAK;AAEpB,QAAI,MAAM;AAAM,WAAK;AAAA;AAChB,eAAS,IAAI,GAAG,CAAC;AAEtB,QAAI,CAACE,GAAE;AAAG,aAAOA,GAAE,SAAS;AAE5B,SAAKA,GAAE,EAAE,CAAC;AACV,SAAKA,GAAE;AAEP,QAAID,MAAK,MAAM;AACb,YAAM,cAAcC,GAAE,CAAC;AACvB,YAAM,MAAM,KAAK,MAAM,MAAM,MAAM,cAAc,MAAM,cACpD,cAAc,KAAK,EAAE,IACrB,aAAa,KAAK,IAAI,GAAG;AAAA,IAC9B,OAAO;AACL,MAAAA,KAAI,MAAM,IAAIJ,WAAUI,EAAC,GAAGD,IAAG,EAAE;AAGjC,MAAAD,KAAIE,GAAE;AAEN,YAAM,cAAcA,GAAE,CAAC;AACvB,YAAM,IAAI;AAOV,UAAI,MAAM,KAAK,MAAM,MAAMD,MAAKD,MAAKA,MAAK,aAAa;AAGrD,eAAO,MAAMC,IAAG,OAAO,KAAK;AAAM;AAClC,cAAM,cAAc,KAAKD,EAAC;AAAA,MAG5B,OAAO;AACL,QAAAC,MAAK;AACL,cAAM,aAAa,KAAKD,IAAG,GAAG;AAG9B,YAAIA,KAAI,IAAI,KAAK;AACf,cAAI,EAAEC,KAAI;AAAG,iBAAK,OAAO,KAAKA,MAAK,OAAO;AAAI;AAAA,QAChD,OAAO;AACL,UAAAA,MAAKD,KAAI;AACT,cAAIC,KAAI,GAAG;AACT,gBAAID,KAAI,KAAK;AAAK,qBAAO;AACzB,mBAAOC,MAAK,OAAO;AAAI;AAAA,UACzB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAOC,GAAE,IAAI,KAAK,KAAK,MAAM,MAAM;AAAA,EACrC;AAIA,WAAS,SAAS,MAAM,QAAQ;AAC9B,QAAIA,IACFD,KAAI,GACJ,IAAI,IAAIH,WAAU,KAAK,CAAC,CAAC;AAE3B,WAAOG,KAAI,KAAK,QAAQA,MAAK;AAC3B,MAAAC,KAAI,IAAIJ,WAAU,KAAKG,EAAC,CAAC;AAGzB,UAAI,CAACC,GAAE,GAAG;AACR,YAAIA;AACJ;AAAA,MACF,WAAW,OAAO,KAAK,GAAGA,EAAC,GAAG;AAC5B,YAAIA;AAAA,MACN;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAOA,WAAS,UAAUA,IAAG,GAAGF,IAAG;AAC1B,QAAIC,KAAI,GACN,IAAI,EAAE;AAGR,WAAO,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,IAAI;AAAE;AAGxB,SAAK,IAAI,EAAE,CAAC,GAAG,KAAK,IAAI,KAAK,IAAIA;AAAI;AAGrC,SAAKD,KAAIC,KAAID,KAAI,WAAW,KAAK,SAAS;AAGxC,MAAAE,GAAE,IAAIA,GAAE,IAAI;AAAA,IAGd,WAAWF,KAAI,SAAS;AAGtB,MAAAE,GAAE,IAAI,CAACA,GAAE,IAAI,CAAC;AAAA,IAChB,OAAO;AACL,MAAAA,GAAE,IAAIF;AACN,MAAAE,GAAE,IAAI;AAAA,IACR;AAEA,WAAOA;AAAA,EACT;AAIA,iBAAgB,WAAY;AAC1B,QAAI,aAAa,+BACf,WAAW,eACX,YAAY,eACZ,kBAAkB,sBAClB,mBAAmB;AAErB,WAAO,SAAU,GAAG,KAAK,OAAO,GAAG;AACjC,UAAI,MACF,IAAI,QAAQ,MAAM,IAAI,QAAQ,kBAAkB,EAAE;AAGpD,UAAI,gBAAgB,KAAK,CAAC,GAAG;AAC3B,UAAE,IAAI,MAAM,CAAC,IAAI,OAAO,IAAI,IAAI,KAAK;AAAA,MACvC,OAAO;AACL,YAAI,CAAC,OAAO;AAGV,cAAI,EAAE,QAAQ,YAAY,SAAU,GAAG,IAAI,IAAI;AAC7C,oBAAQ,KAAK,GAAG,YAAY,MAAM,MAAM,KAAK,MAAM,MAAM,IAAI;AAC7D,mBAAO,CAAC,KAAK,KAAK,OAAO,KAAK;AAAA,UAChC,CAAC;AAED,cAAI,GAAG;AACL,mBAAO;AAGP,gBAAI,EAAE,QAAQ,UAAU,IAAI,EAAE,QAAQ,WAAW,MAAM;AAAA,UACzD;AAEA,cAAI,OAAO;AAAG,mBAAO,IAAIJ,WAAU,GAAG,IAAI;AAAA,QAC5C;AAIA,YAAIA,WAAU,OAAO;AACnB,gBAAM,MACH,iBAAiB,WAAW,IAAI,WAAW,IAAI,MAAM,cAAc,GAAG;AAAA,QAC3E;AAGA,UAAE,IAAI;AAAA,MACR;AAEA,QAAE,IAAI,EAAE,IAAI;AAAA,IACd;AAAA,EACF,EAAG;AAOH,WAAS,MAAM,GAAG,IAAI,IAAIM,IAAG;AAC3B,QAAI,GAAGH,IAAG,GAAG,GAAGC,IAAG,IAAI,IACrB,KAAK,EAAE,GACP,SAAS;AAGX,QAAI,IAAI;AAQN,WAAK;AAGH,aAAK,IAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,KAAK,IAAI;AAAI;AAC7C,QAAAD,KAAI,KAAK;AAGT,YAAIA,KAAI,GAAG;AACT,UAAAA,MAAK;AACL,cAAI;AACJ,UAAAC,KAAI,GAAG,KAAK,CAAC;AAGb,eAAKA,KAAI,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK;AAAA,QACpC,OAAO;AACL,eAAK,UAAUD,KAAI,KAAK,QAAQ;AAEhC,cAAI,MAAM,GAAG,QAAQ;AAEnB,gBAAIG,IAAG;AAGL,qBAAO,GAAG,UAAU,IAAI,GAAG,KAAK,CAAC;AAAE;AACnC,cAAAF,KAAI,KAAK;AACT,kBAAI;AACJ,cAAAD,MAAK;AACL,kBAAIA,KAAI,WAAW;AAAA,YACrB,OAAO;AACL,oBAAM;AAAA,YACR;AAAA,UACF,OAAO;AACL,YAAAC,KAAI,IAAI,GAAG,EAAE;AAGb,iBAAK,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI;AAAI;AAGlC,YAAAD,MAAK;AAIL,gBAAIA,KAAI,WAAW;AAGnB,iBAAK,IAAI,IAAI,IAAIC,KAAI,OAAO,IAAI,IAAI,CAAC,IAAI,KAAK;AAAA,UAChD;AAAA,QACF;AAEA,QAAAE,KAAIA,MAAK,KAAK;AAAA;AAAA;AAAA,QAKb,GAAG,KAAK,CAAC,KAAK,SAAS,IAAI,IAAIF,KAAIA,KAAI,OAAO,IAAI,IAAI,CAAC;AAExD,QAAAE,KAAI,KAAK,KACL,MAAMA,QAAO,MAAM,KAAK,OAAO,EAAE,IAAI,IAAI,IAAI,MAC9C,KAAK,KAAK,MAAM,MAAM,MAAM,KAAKA,MAAK,MAAM;AAAA,SAG3CH,KAAI,IAAI,IAAI,IAAIC,KAAI,OAAO,IAAI,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,KAAM,KAC7D,OAAO,EAAE,IAAI,IAAI,IAAI;AAExB,YAAI,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG;AACpB,aAAG,SAAS;AAEZ,cAAIE,IAAG;AAGL,kBAAM,EAAE,IAAI;AAGZ,eAAG,CAAC,IAAI,QAAQ,WAAW,KAAK,YAAY,QAAQ;AACpD,cAAE,IAAI,CAAC,MAAM;AAAA,UACf,OAAO;AAGL,eAAG,CAAC,IAAI,EAAE,IAAI;AAAA,UAChB;AAEA,iBAAO;AAAA,QACT;AAGA,YAAIH,MAAK,GAAG;AACV,aAAG,SAAS;AACZ,cAAI;AACJ;AAAA,QACF,OAAO;AACL,aAAG,SAAS,KAAK;AACjB,cAAI,OAAO,WAAWA,EAAC;AAIvB,aAAG,EAAE,IAAI,IAAI,IAAI,UAAUC,KAAI,OAAO,IAAI,CAAC,IAAI,OAAO,CAAC,CAAC,IAAI,IAAI;AAAA,QAClE;AAGA,YAAIE,IAAG;AAEL,qBAAU;AAGR,gBAAI,MAAM,GAAG;AAGX,mBAAKH,KAAI,GAAG,IAAI,GAAG,CAAC,GAAG,KAAK,IAAI,KAAK,IAAIA;AAAI;AAC7C,kBAAI,GAAG,CAAC,KAAK;AACb,mBAAK,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI;AAAI;AAGlC,kBAAIA,MAAK,GAAG;AACV,kBAAE;AACF,oBAAI,GAAG,CAAC,KAAK;AAAM,qBAAG,CAAC,IAAI;AAAA,cAC7B;AAEA;AAAA,YACF,OAAO;AACL,iBAAG,EAAE,KAAK;AACV,kBAAI,GAAG,EAAE,KAAK;AAAM;AACpB,iBAAG,IAAI,IAAI;AACX,kBAAI;AAAA,YACN;AAAA,UACF;AAAA,QACF;AAGA,aAAKA,KAAI,GAAG,QAAQ,GAAG,EAAEA,EAAC,MAAM,GAAG,GAAG,IAAI;AAAE;AAAA,MAC9C;AAGA,UAAI,EAAE,IAAI,SAAS;AACjB,UAAE,IAAI,EAAE,IAAI;AAAA,MAGd,WAAW,EAAE,IAAI,SAAS;AACxB,UAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AAAA,MAChB;AAAA,IACF;AAEA,WAAO;AAAA,EACT;AAGA,WAAS,QAAQC,IAAG;AAClB,QAAI,KACFF,KAAIE,GAAE;AAER,QAAIF,OAAM;AAAM,aAAOE,GAAE,SAAS;AAElC,UAAM,cAAcA,GAAE,CAAC;AAEvB,UAAMF,MAAK,cAAcA,MAAK,aAC1B,cAAc,KAAKA,EAAC,IACpB,aAAa,KAAKA,IAAG,GAAG;AAE5B,WAAOE,GAAE,IAAI,IAAI,MAAM,MAAM;AAAA,EAC/B;AASA,IAAE,gBAAgB,EAAE,MAAM,WAAY;AACpC,QAAI,IAAI,IAAIJ,WAAU,IAAI;AAC1B,QAAI,EAAE,IAAI;AAAG,QAAE,IAAI;AACnB,WAAO;AAAA,EACT;AAUA,IAAE,aAAa,SAAU,GAAG,GAAG;AAC7B,WAAO,QAAQ,MAAM,IAAIA,WAAU,GAAG,CAAC,CAAC;AAAA,EAC1C;AAgBA,IAAE,gBAAgB,EAAE,KAAK,SAAU,IAAI,IAAI;AACzC,QAAI,GAAGI,IAAG,GACR,IAAI;AAEN,QAAI,MAAM,MAAM;AACd,eAAS,IAAI,GAAG,GAAG;AACnB,UAAI,MAAM;AAAM,aAAK;AAAA;AAChB,iBAAS,IAAI,GAAG,CAAC;AAEtB,aAAO,MAAM,IAAIJ,WAAU,CAAC,GAAG,KAAK,EAAE,IAAI,GAAG,EAAE;AAAA,IACjD;AAEA,QAAI,EAAE,IAAI,EAAE;AAAI,aAAO;AACvB,IAAAI,OAAM,IAAI,EAAE,SAAS,KAAK,SAAS,KAAK,IAAI,QAAQ,KAAK;AAGzD,QAAI,IAAI,EAAE,CAAC;AAAG,aAAO,IAAI,MAAM,GAAG,KAAK,IAAIA;AAAI;AAC/C,QAAIA,KAAI;AAAG,MAAAA,KAAI;AAEf,WAAOA;AAAA,EACT;AAuBA,IAAE,YAAY,EAAE,MAAM,SAAU,GAAG,GAAG;AACpC,WAAO,IAAI,MAAM,IAAIJ,WAAU,GAAG,CAAC,GAAG,gBAAgB,aAAa;AAAA,EACrE;AAOA,IAAE,qBAAqB,EAAE,OAAO,SAAU,GAAG,GAAG;AAC9C,WAAO,IAAI,MAAM,IAAIA,WAAU,GAAG,CAAC,GAAG,GAAG,CAAC;AAAA,EAC5C;AAkBA,IAAE,kBAAkB,EAAE,MAAM,SAAUI,IAAG,GAAG;AAC1C,QAAI,MAAM,UAAUD,IAAG,GAAG,MAAM,QAAQ,QAAQ,QAAQ,GACtD,IAAI;AAEN,IAAAC,KAAI,IAAIJ,WAAUI,EAAC;AAGnB,QAAIA,GAAE,KAAK,CAACA,GAAE,UAAU,GAAG;AACzB,YAAM,MACH,iBAAiB,8BAA8B,QAAQA,EAAC,CAAC;AAAA,IAC9D;AAEA,QAAI,KAAK;AAAM,UAAI,IAAIJ,WAAU,CAAC;AAGlC,aAASI,GAAE,IAAI;AAGf,QAAI,CAAC,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,KAAK,CAAC,EAAE,KAAK,EAAE,EAAE,UAAU,KAAK,CAACA,GAAE,KAAK,CAACA,GAAE,EAAE,CAAC,GAAG;AAIhF,UAAI,IAAIJ,WAAU,KAAK,IAAI,CAAC,QAAQ,CAAC,GAAG,SAASI,GAAE,KAAK,IAAI,MAAMA,EAAC,KAAK,CAAC,QAAQA,EAAC,CAAC,CAAC;AACpF,aAAO,IAAI,EAAE,IAAI,CAAC,IAAI;AAAA,IACxB;AAEA,aAASA,GAAE,IAAI;AAEf,QAAI,GAAG;AAGL,UAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;AAAG,eAAO,IAAIJ,WAAU,GAAG;AAElD,iBAAW,CAAC,UAAU,EAAE,UAAU,KAAK,EAAE,UAAU;AAEnD,UAAI;AAAU,YAAI,EAAE,IAAI,CAAC;AAAA,IAI3B,WAAWI,GAAE,IAAI,MAAM,EAAE,IAAI,KAAK,EAAE,IAAI,OAAO,EAAE,KAAK,IAElD,EAAE,EAAE,CAAC,IAAI,KAAK,UAAU,EAAE,EAAE,CAAC,KAAK,OAElC,EAAE,EAAE,CAAC,IAAI,QAAQ,UAAU,EAAE,EAAE,CAAC,KAAK,aAAa;AAGpD,UAAI,EAAE,IAAI,KAAK,MAAMA,EAAC,IAAI,KAAK;AAG/B,UAAI,EAAE,IAAI;AAAI,YAAI,IAAI;AAGtB,aAAO,IAAIJ,WAAU,SAAS,IAAI,IAAI,CAAC;AAAA,IAEzC,WAAW,eAAe;AAKxB,UAAI,SAAS,gBAAgB,WAAW,CAAC;AAAA,IAC3C;AAEA,QAAI,QAAQ;AACV,aAAO,IAAIA,WAAU,GAAG;AACxB,UAAI;AAAQ,QAAAI,GAAE,IAAI;AAClB,eAAS,MAAMA,EAAC;AAAA,IAClB,OAAO;AACL,MAAAD,KAAI,KAAK,IAAI,CAAC,QAAQC,EAAC,CAAC;AACxB,eAASD,KAAI;AAAA,IACf;AAEA,QAAI,IAAIH,WAAU,GAAG;AAGrB,eAAU;AAER,UAAI,QAAQ;AACV,YAAI,EAAE,MAAM,CAAC;AACb,YAAI,CAAC,EAAE;AAAG;AAEV,YAAI,GAAG;AACL,cAAI,EAAE,EAAE,SAAS;AAAG,cAAE,EAAE,SAAS;AAAA,QACnC,WAAW,UAAU;AACnB,cAAI,EAAE,IAAI,CAAC;AAAA,QACb;AAAA,MACF;AAEA,UAAIG,IAAG;AACL,QAAAA,KAAI,UAAUA,KAAI,CAAC;AACnB,YAAIA,OAAM;AAAG;AACb,iBAASA,KAAI;AAAA,MACf,OAAO;AACL,QAAAC,KAAIA,GAAE,MAAM,IAAI;AAChB,cAAMA,IAAGA,GAAE,IAAI,GAAG,CAAC;AAEnB,YAAIA,GAAE,IAAI,IAAI;AACZ,mBAAS,MAAMA,EAAC;AAAA,QAClB,OAAO;AACL,UAAAD,KAAI,CAAC,QAAQC,EAAC;AACd,cAAID,OAAM;AAAG;AACb,mBAASA,KAAI;AAAA,QACf;AAAA,MACF;AAEA,UAAI,EAAE,MAAM,CAAC;AAEb,UAAI,GAAG;AACL,YAAI,EAAE,KAAK,EAAE,EAAE,SAAS;AAAG,YAAE,EAAE,SAAS;AAAA,MAC1C,WAAW,UAAU;AACnB,YAAI,EAAE,IAAI,CAAC;AAAA,MACb;AAAA,IACF;AAEA,QAAI;AAAU,aAAO;AACrB,QAAI;AAAQ,UAAI,IAAI,IAAI,CAAC;AAEzB,WAAO,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,MAAM,GAAG,eAAe,eAAe,IAAI,IAAI;AAAA,EAC3E;AAWA,IAAE,eAAe,SAAU,IAAI;AAC7B,QAAIC,KAAI,IAAIJ,WAAU,IAAI;AAC1B,QAAI,MAAM;AAAM,WAAK;AAAA;AAChB,eAAS,IAAI,GAAG,CAAC;AACtB,WAAO,MAAMI,IAAGA,GAAE,IAAI,GAAG,EAAE;AAAA,EAC7B;AAOA,IAAE,YAAY,EAAE,KAAK,SAAU,GAAG,GAAG;AACnC,WAAO,QAAQ,MAAM,IAAIJ,WAAU,GAAG,CAAC,CAAC,MAAM;AAAA,EAChD;AAMA,IAAE,WAAW,WAAY;AACvB,WAAO,CAAC,CAAC,KAAK;AAAA,EAChB;AAOA,IAAE,gBAAgB,EAAE,KAAK,SAAU,GAAG,GAAG;AACvC,WAAO,QAAQ,MAAM,IAAIA,WAAU,GAAG,CAAC,CAAC,IAAI;AAAA,EAC9C;AAOA,IAAE,yBAAyB,EAAE,MAAM,SAAU,GAAG,GAAG;AACjD,YAAQ,IAAI,QAAQ,MAAM,IAAIA,WAAU,GAAG,CAAC,CAAC,OAAO,KAAK,MAAM;AAAA,EAEjE;AAMA,IAAE,YAAY,WAAY;AACxB,WAAO,CAAC,CAAC,KAAK,KAAK,SAAS,KAAK,IAAI,QAAQ,IAAI,KAAK,EAAE,SAAS;AAAA,EACnE;AAOA,IAAE,aAAa,EAAE,KAAK,SAAU,GAAG,GAAG;AACpC,WAAO,QAAQ,MAAM,IAAIA,WAAU,GAAG,CAAC,CAAC,IAAI;AAAA,EAC9C;AAOA,IAAE,sBAAsB,EAAE,MAAM,SAAU,GAAG,GAAG;AAC9C,YAAQ,IAAI,QAAQ,MAAM,IAAIA,WAAU,GAAG,CAAC,CAAC,OAAO,MAAM,MAAM;AAAA,EAClE;AAMA,IAAE,QAAQ,WAAY;AACpB,WAAO,CAAC,KAAK;AAAA,EACf;AAMA,IAAE,aAAa,WAAY;AACzB,WAAO,KAAK,IAAI;AAAA,EAClB;AAMA,IAAE,aAAa,WAAY;AACzB,WAAO,KAAK,IAAI;AAAA,EAClB;AAMA,IAAE,SAAS,WAAY;AACrB,WAAO,CAAC,CAAC,KAAK,KAAK,KAAK,EAAE,CAAC,KAAK;AAAA,EAClC;AAuBA,IAAE,QAAQ,SAAU,GAAG,GAAG;AACxB,QAAIG,IAAG,GAAGK,IAAG,MACX,IAAI,MACJ,IAAI,EAAE;AAER,QAAI,IAAIR,WAAU,GAAG,CAAC;AACtB,QAAI,EAAE;AAGN,QAAI,CAAC,KAAK,CAAC;AAAG,aAAO,IAAIA,WAAU,GAAG;AAGtC,QAAI,KAAK,GAAG;AACV,QAAE,IAAI,CAAC;AACP,aAAO,EAAE,KAAK,CAAC;AAAA,IACjB;AAEA,QAAI,KAAK,EAAE,IAAI,UACb,KAAK,EAAE,IAAI,UACX,KAAK,EAAE,GACP,KAAK,EAAE;AAET,QAAI,CAAC,MAAM,CAAC,IAAI;AAGd,UAAI,CAAC,MAAM,CAAC;AAAI,eAAO,MAAM,EAAE,IAAI,CAAC,GAAG,KAAK,IAAIA,WAAU,KAAK,IAAI,GAAG;AAGtE,UAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;AAGpB,eAAO,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,KAAK,IAAIA,WAAU,GAAG,CAAC,IAAI;AAAA;AAAA,UAGpD,iBAAiB,IAAI,KAAK;AAAA,SAAC;AAAA,MAC9B;AAAA,IACF;AAEA,SAAK,SAAS,EAAE;AAChB,SAAK,SAAS,EAAE;AAChB,SAAK,GAAG,MAAM;AAGd,QAAI,IAAI,KAAK,IAAI;AAEf,UAAI,OAAO,IAAI,GAAG;AAChB,YAAI,CAAC;AACL,QAAAQ,KAAI;AAAA,MACN,OAAO;AACL,aAAK;AACL,QAAAA,KAAI;AAAA,MACN;AAEA,MAAAA,GAAE,QAAQ;AAGV,WAAK,IAAI,GAAG,KAAKA,GAAE,KAAK,CAAC;AAAE;AAC3B,MAAAA,GAAE,QAAQ;AAAA,IACZ,OAAO;AAGL,WAAK,QAAQ,IAAI,GAAG,WAAW,IAAI,GAAG,WAAW,IAAI;AAErD,WAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK;AAE1B,YAAI,GAAG,CAAC,KAAK,GAAG,CAAC,GAAG;AAClB,iBAAO,GAAG,CAAC,IAAI,GAAG,CAAC;AACnB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAGA,QAAI;AAAM,MAAAA,KAAI,IAAI,KAAK,IAAI,KAAKA,IAAG,EAAE,IAAI,CAAC,EAAE;AAE5C,SAAK,IAAI,GAAG,WAAWL,KAAI,GAAG;AAI9B,QAAI,IAAI;AAAG,aAAO,KAAK,GAAGA,IAAG,IAAI;AAAE;AACnC,QAAI,OAAO;AAGX,WAAO,IAAI,KAAI;AAEb,UAAI,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG;AACnB,aAAKA,KAAI,GAAGA,MAAK,CAAC,GAAG,EAAEA,EAAC,GAAG,GAAGA,EAAC,IAAI;AAAE;AACrC,UAAE,GAAGA,EAAC;AACN,WAAG,CAAC,KAAK;AAAA,MACX;AAEA,SAAG,CAAC,KAAK,GAAG,CAAC;AAAA,IACf;AAGA,WAAO,GAAG,CAAC,KAAK,GAAG,GAAG,OAAO,GAAG,CAAC,GAAG,EAAE;AAAG;AAGzC,QAAI,CAAC,GAAG,CAAC,GAAG;AAIV,QAAE,IAAI,iBAAiB,IAAI,KAAK;AAChC,QAAE,IAAI,CAAC,EAAE,IAAI,CAAC;AACd,aAAO;AAAA,IACT;AAIA,WAAO,UAAU,GAAG,IAAI,EAAE;AAAA,EAC5B;AAwBA,IAAE,SAAS,EAAE,MAAM,SAAU,GAAG,GAAG;AACjC,QAAI,GAAG,GACL,IAAI;AAEN,QAAI,IAAIH,WAAU,GAAG,CAAC;AAGtB,QAAI,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG;AAClC,aAAO,IAAIA,WAAU,GAAG;AAAA,IAG1B,WAAW,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG;AACjC,aAAO,IAAIA,WAAU,CAAC;AAAA,IACxB;AAEA,QAAI,eAAe,GAAG;AAIpB,UAAI,EAAE;AACN,QAAE,IAAI;AACN,UAAI,IAAI,GAAG,GAAG,GAAG,CAAC;AAClB,QAAE,IAAI;AACN,QAAE,KAAK;AAAA,IACT,OAAO;AACL,UAAI,IAAI,GAAG,GAAG,GAAG,WAAW;AAAA,IAC9B;AAEA,QAAI,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;AAGtB,QAAI,CAAC,EAAE,EAAE,CAAC,KAAK,eAAe;AAAG,QAAE,IAAI,EAAE;AAEzC,WAAO;AAAA,EACT;AAuBA,IAAE,eAAe,EAAE,QAAQ,SAAU,GAAG,GAAG;AACzC,QAAI,GAAGE,IAAGC,IAAG,GAAG,GAAG,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,IAClD,MAAM,UACN,IAAI,MACJ,KAAK,EAAE,GACP,MAAM,IAAI,IAAIH,WAAU,GAAG,CAAC,GAAG;AAGjC,QAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG;AAGlC,UAAI,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI;AAC9D,UAAE,IAAI,EAAE,IAAI,EAAE,IAAI;AAAA,MACpB,OAAO;AACL,UAAE,KAAK,EAAE;AAGT,YAAI,CAAC,MAAM,CAAC,IAAI;AACd,YAAE,IAAI,EAAE,IAAI;AAAA,QAGd,OAAO;AACL,YAAE,IAAI,CAAC,CAAC;AACR,YAAE,IAAI;AAAA,QACR;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAEA,IAAAE,KAAI,SAAS,EAAE,IAAI,QAAQ,IAAI,SAAS,EAAE,IAAI,QAAQ;AACtD,MAAE,KAAK,EAAE;AACT,UAAM,GAAG;AACT,UAAM,GAAG;AAGT,QAAI,MAAM;AAAK,WAAK,IAAI,KAAK,IAAI,KAAK,IAAIC,KAAI,KAAK,MAAM,KAAK,MAAMA;AAGpE,SAAKA,KAAI,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAK,GAAG,KAAK,CAAC;AAAE;AAE7C,WAAO;AACP,eAAW;AAEX,SAAKA,KAAI,KAAK,EAAEA,MAAK,KAAI;AACvB,UAAI;AACJ,YAAM,GAAGA,EAAC,IAAI;AACd,YAAM,GAAGA,EAAC,IAAI,WAAW;AAEzB,WAAK,IAAI,KAAK,IAAIA,KAAI,GAAG,IAAIA,MAAI;AAC/B,cAAM,GAAG,EAAE,CAAC,IAAI;AAChB,cAAM,GAAG,CAAC,IAAI,WAAW;AACzB,YAAI,MAAM,MAAM,MAAM;AACtB,cAAM,MAAM,MAAQ,IAAI,WAAY,WAAY,GAAG,CAAC,IAAI;AACxD,aAAK,MAAM,OAAO,MAAM,IAAI,WAAW,KAAK,MAAM;AAClD,WAAG,GAAG,IAAI,MAAM;AAAA,MAClB;AAEA,SAAG,CAAC,IAAI;AAAA,IACV;AAEA,QAAI,GAAG;AACL,QAAED;AAAA,IACJ,OAAO;AACL,SAAG,OAAO,GAAG,CAAC;AAAA,IAChB;AAEA,WAAO,UAAU,GAAG,IAAIA,EAAC;AAAA,EAC3B;AAOA,IAAE,UAAU,WAAY;AACtB,QAAI,IAAI,IAAIF,WAAU,IAAI;AAC1B,MAAE,IAAI,CAAC,EAAE,KAAK;AACd,WAAO;AAAA,EACT;AAuBA,IAAE,OAAO,SAAU,GAAG,GAAG;AACvB,QAAIQ,IACF,IAAI,MACJ,IAAI,EAAE;AAER,QAAI,IAAIR,WAAU,GAAG,CAAC;AACtB,QAAI,EAAE;AAGN,QAAI,CAAC,KAAK,CAAC;AAAG,aAAO,IAAIA,WAAU,GAAG;AAGrC,QAAI,KAAK,GAAG;AACX,QAAE,IAAI,CAAC;AACP,aAAO,EAAE,MAAM,CAAC;AAAA,IAClB;AAEA,QAAI,KAAK,EAAE,IAAI,UACb,KAAK,EAAE,IAAI,UACX,KAAK,EAAE,GACP,KAAK,EAAE;AAET,QAAI,CAAC,MAAM,CAAC,IAAI;AAGd,UAAI,CAAC,MAAM,CAAC;AAAI,eAAO,IAAIA,WAAU,IAAI,CAAC;AAI1C,UAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC;AAAG,eAAO,GAAG,CAAC,IAAI,IAAI,IAAIA,WAAU,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AAAA,IAC1E;AAEA,SAAK,SAAS,EAAE;AAChB,SAAK,SAAS,EAAE;AAChB,SAAK,GAAG,MAAM;AAGd,QAAI,IAAI,KAAK,IAAI;AACf,UAAI,IAAI,GAAG;AACT,aAAK;AACL,QAAAQ,KAAI;AAAA,MACN,OAAO;AACL,YAAI,CAAC;AACL,QAAAA,KAAI;AAAA,MACN;AAEA,MAAAA,GAAE,QAAQ;AACV,aAAO,KAAKA,GAAE,KAAK,CAAC;AAAE;AACtB,MAAAA,GAAE,QAAQ;AAAA,IACZ;AAEA,QAAI,GAAG;AACP,QAAI,GAAG;AAGP,QAAI,IAAI,IAAI;AAAG,MAAAA,KAAI,IAAI,KAAK,IAAI,KAAKA,IAAG,IAAI;AAG5C,SAAK,IAAI,GAAG,KAAI;AACd,WAAK,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,IAAI,KAAK,OAAO;AAC3C,SAAG,CAAC,IAAI,SAAS,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI;AAAA,IACvC;AAEA,QAAI,GAAG;AACL,WAAK,CAAC,CAAC,EAAE,OAAO,EAAE;AAClB,QAAE;AAAA,IACJ;AAIA,WAAO,UAAU,GAAG,IAAI,EAAE;AAAA,EAC5B;AAkBA,IAAE,YAAY,EAAE,KAAK,SAAU,IAAI,IAAI;AACrC,QAAI,GAAGJ,IAAG,GACR,IAAI;AAEN,QAAI,MAAM,QAAQ,OAAO,CAAC,CAAC,IAAI;AAC7B,eAAS,IAAI,GAAG,GAAG;AACnB,UAAI,MAAM;AAAM,aAAK;AAAA;AAChB,iBAAS,IAAI,GAAG,CAAC;AAEtB,aAAO,MAAM,IAAIJ,WAAU,CAAC,GAAG,IAAI,EAAE;AAAA,IACvC;AAEA,QAAI,EAAE,IAAI,EAAE;AAAI,aAAO;AACvB,QAAI,EAAE,SAAS;AACf,IAAAI,KAAI,IAAI,WAAW;AAEnB,QAAI,IAAI,EAAE,CAAC,GAAG;AAGZ,aAAO,IAAI,MAAM,GAAG,KAAK,IAAIA;AAAI;AAGjC,WAAK,IAAI,EAAE,CAAC,GAAG,KAAK,IAAI,KAAK,IAAIA;AAAI;AAAA,IACvC;AAEA,QAAI,MAAM,EAAE,IAAI,IAAIA;AAAG,MAAAA,KAAI,EAAE,IAAI;AAEjC,WAAOA;AAAA,EACT;AAWA,IAAE,YAAY,SAAU,GAAG;AACzB,aAAS,GAAG,CAAC,kBAAkB,gBAAgB;AAC/C,WAAO,KAAK,MAAM,OAAO,CAAC;AAAA,EAC5B;AAcA,IAAE,aAAa,EAAE,OAAO,WAAY;AAClC,QAAI,GAAGA,IAAGE,IAAG,KAAKE,IAChB,IAAI,MACJ,IAAI,EAAE,GACN,IAAI,EAAE,GACNN,KAAI,EAAE,GACN,KAAK,iBAAiB,GACtB,OAAO,IAAIF,WAAU,KAAK;AAG5B,QAAI,MAAM,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG;AAC1B,aAAO,IAAIA,WAAU,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC;AAAA,IACxE;AAGA,QAAI,KAAK,KAAK,CAAC,QAAQ,CAAC,CAAC;AAIzB,QAAI,KAAK,KAAK,KAAK,IAAI,GAAG;AACxB,MAAAI,KAAI,cAAc,CAAC;AACnB,WAAKA,GAAE,SAASF,MAAK,KAAK;AAAG,QAAAE,MAAK;AAClC,UAAI,KAAK,KAAK,CAACA,EAAC;AAChB,MAAAF,KAAI,UAAUA,KAAI,KAAK,CAAC,KAAKA,KAAI,KAAKA,KAAI;AAE1C,UAAI,KAAK,IAAI,GAAG;AACd,QAAAE,KAAI,OAAOF;AAAA,MACb,OAAO;AACL,QAAAE,KAAI,EAAE,cAAc;AACpB,QAAAA,KAAIA,GAAE,MAAM,GAAGA,GAAE,QAAQ,GAAG,IAAI,CAAC,IAAIF;AAAA,MACvC;AAEA,MAAAI,KAAI,IAAIN,WAAUI,EAAC;AAAA,IACrB,OAAO;AACL,MAAAE,KAAI,IAAIN,WAAU,IAAI,EAAE;AAAA,IAC1B;AAMA,QAAIM,GAAE,EAAE,CAAC,GAAG;AACV,MAAAJ,KAAII,GAAE;AACN,UAAIJ,KAAI;AACR,UAAI,IAAI;AAAG,YAAI;AAGf,iBAAU;AACR,QAAAM,KAAIF;AACJ,QAAAA,KAAI,KAAK,MAAME,GAAE,KAAK,IAAI,GAAGA,IAAG,IAAI,CAAC,CAAC,CAAC;AAEvC,YAAI,cAAcA,GAAE,CAAC,EAAE,MAAM,GAAG,CAAC,OAAOJ,KAAI,cAAcE,GAAE,CAAC,GAAG,MAAM,GAAG,CAAC,GAAG;AAK3E,cAAIA,GAAE,IAAIJ;AAAG,cAAE;AACf,UAAAE,KAAIA,GAAE,MAAM,IAAI,GAAG,IAAI,CAAC;AAKxB,cAAIA,MAAK,UAAU,CAAC,OAAOA,MAAK,QAAQ;AAItC,gBAAI,CAAC,KAAK;AACR,oBAAMI,IAAGA,GAAE,IAAI,iBAAiB,GAAG,CAAC;AAEpC,kBAAIA,GAAE,MAAMA,EAAC,EAAE,GAAG,CAAC,GAAG;AACpB,gBAAAF,KAAIE;AACJ;AAAA,cACF;AAAA,YACF;AAEA,kBAAM;AACN,iBAAK;AACL,kBAAM;AAAA,UACR,OAAO;AAIL,gBAAI,CAAC,CAACJ,MAAK,CAAC,CAACA,GAAE,MAAM,CAAC,KAAKA,GAAE,OAAO,CAAC,KAAK,KAAK;AAG7C,oBAAME,IAAGA,GAAE,IAAI,iBAAiB,GAAG,CAAC;AACpC,kBAAI,CAACA,GAAE,MAAMA,EAAC,EAAE,GAAG,CAAC;AAAA,YACtB;AAEA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,WAAO,MAAMA,IAAGA,GAAE,IAAI,iBAAiB,GAAG,eAAe,CAAC;AAAA,EAC5D;AAYA,IAAE,gBAAgB,SAAU,IAAI,IAAI;AAClC,QAAI,MAAM,MAAM;AACd,eAAS,IAAI,GAAG,GAAG;AACnB;AAAA,IACF;AACA,WAAO,OAAO,MAAM,IAAI,IAAI,CAAC;AAAA,EAC/B;AAeA,IAAE,UAAU,SAAU,IAAI,IAAI;AAC5B,QAAI,MAAM,MAAM;AACd,eAAS,IAAI,GAAG,GAAG;AACnB,WAAK,KAAK,KAAK,IAAI;AAAA,IACrB;AACA,WAAO,OAAO,MAAM,IAAI,EAAE;AAAA,EAC5B;AA4BA,IAAE,WAAW,SAAU,IAAI,IAAIG,SAAQ;AACrC,QAAI,KACF,IAAI;AAEN,QAAIA,WAAU,MAAM;AAClB,UAAI,MAAM,QAAQ,MAAM,OAAO,MAAM,UAAU;AAC7C,QAAAA,UAAS;AACT,aAAK;AAAA,MACP,WAAW,MAAM,OAAO,MAAM,UAAU;AACtC,QAAAA,UAAS;AACT,aAAK,KAAK;AAAA,MACZ,OAAO;AACL,QAAAA,UAAS;AAAA,MACX;AAAA,IACF,WAAW,OAAOA,WAAU,UAAU;AACpC,YAAM,MACH,iBAAiB,6BAA6BA,OAAM;AAAA,IACzD;AAEA,UAAM,EAAE,QAAQ,IAAI,EAAE;AAEtB,QAAI,EAAE,GAAG;AACP,UAAIN,IACF,MAAM,IAAI,MAAM,GAAG,GACnB,KAAK,CAACM,QAAO,WACb,KAAK,CAACA,QAAO,oBACb,iBAAiBA,QAAO,kBAAkB,IAC1C,UAAU,IAAI,CAAC,GACf,eAAe,IAAI,CAAC,GACpB,QAAQ,EAAE,IAAI,GACd,YAAY,QAAQ,QAAQ,MAAM,CAAC,IAAI,SACvC,MAAM,UAAU;AAElB,UAAI;AAAI,QAAAN,KAAI,IAAI,KAAK,IAAI,KAAKA,IAAG,OAAOA;AAExC,UAAI,KAAK,KAAK,MAAM,GAAG;AACrB,QAAAA,KAAI,MAAM,MAAM;AAChB,kBAAU,UAAU,OAAO,GAAGA,EAAC;AAC/B,eAAOA,KAAI,KAAKA,MAAK;AAAI,qBAAW,iBAAiB,UAAU,OAAOA,IAAG,EAAE;AAC3E,YAAI,KAAK;AAAG,qBAAW,iBAAiB,UAAU,MAAMA,EAAC;AACzD,YAAI;AAAO,oBAAU,MAAM;AAAA,MAC7B;AAEA,YAAM,eACH,WAAWM,QAAO,oBAAoB,QAAQ,KAAK,CAACA,QAAO,qBAC1D,aAAa;AAAA,QAAQ,IAAI,OAAO,SAAS,KAAK,QAAQ,GAAG;AAAA,QAC1D,QAAQA,QAAO,0BAA0B;AAAA,MAAG,IAC3C,gBACD;AAAA,IACL;AAEA,YAAQA,QAAO,UAAU,MAAM,OAAOA,QAAO,UAAU;AAAA,EACzD;AAcA,IAAE,aAAa,SAAU,IAAI;AAC3B,QAAI,GAAG,IAAI,IAAI,IAAIP,IAAG,KAAKE,IAAG,IAAI,IAAI,GAAGE,IAAG,GAC1C,IAAI,MACJ,KAAK,EAAE;AAET,QAAI,MAAM,MAAM;AACd,MAAAF,KAAI,IAAIJ,WAAU,EAAE;AAGpB,UAAI,CAACI,GAAE,UAAU,MAAMA,GAAE,KAAKA,GAAE,MAAM,MAAMA,GAAE,GAAG,GAAG,GAAG;AACrD,cAAM,MACH,iBAAiB,eACfA,GAAE,UAAU,IAAI,mBAAmB,sBAAsB,QAAQA,EAAC,CAAC;AAAA,MAC1E;AAAA,IACF;AAEA,QAAI,CAAC;AAAI,aAAO,IAAIJ,WAAU,CAAC;AAE/B,QAAI,IAAIA,WAAU,GAAG;AACrB,SAAK,KAAK,IAAIA,WAAU,GAAG;AAC3B,SAAK,KAAK,IAAIA,WAAU,GAAG;AAC3B,QAAI,cAAc,EAAE;AAIpB,IAAAE,KAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI;AAC3B,MAAE,EAAE,CAAC,IAAI,UAAU,MAAMA,KAAI,YAAY,IAAI,WAAW,MAAM,GAAG;AACjE,SAAK,CAAC,MAAME,GAAE,WAAW,CAAC,IAAI,IAAKF,KAAI,IAAI,IAAI,KAAME;AAErD,UAAM;AACN,cAAU,IAAI;AACd,IAAAA,KAAI,IAAIJ,WAAU,CAAC;AAGnB,OAAG,EAAE,CAAC,IAAI;AAEV,eAAW;AACT,UAAI,IAAII,IAAG,GAAG,GAAG,CAAC;AAClB,WAAK,GAAG,KAAK,EAAE,MAAM,EAAE,CAAC;AACxB,UAAI,GAAG,WAAW,EAAE,KAAK;AAAG;AAC5B,WAAK;AACL,WAAK;AACL,WAAK,GAAG,KAAK,EAAE,MAAM,KAAK,EAAE,CAAC;AAC7B,WAAK;AACL,UAAIA,GAAE,MAAM,EAAE,MAAM,KAAK,CAAC,CAAC;AAC3B,MAAAA,KAAI;AAAA,IACN;AAEA,SAAK,IAAI,GAAG,MAAM,EAAE,GAAG,IAAI,GAAG,CAAC;AAC/B,SAAK,GAAG,KAAK,GAAG,MAAM,EAAE,CAAC;AACzB,SAAK,GAAG,KAAK,GAAG,MAAM,EAAE,CAAC;AACzB,OAAG,IAAI,GAAG,IAAI,EAAE;AAChB,IAAAF,KAAIA,KAAI;AAGR,IAAAI,KAAI,IAAI,IAAI,IAAIJ,IAAG,aAAa,EAAE,MAAM,CAAC,EAAE,IAAI,EAAE;AAAA,MAC7C,IAAI,IAAI,IAAIA,IAAG,aAAa,EAAE,MAAM,CAAC,EAAE,IAAI;AAAA,IAAC,IAAI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;AAE1E,cAAU;AAEV,WAAOI;AAAA,EACT;AAMA,IAAE,WAAW,WAAY;AACvB,WAAO,CAAC,QAAQ,IAAI;AAAA,EACtB;AAcA,IAAE,cAAc,SAAU,IAAI,IAAI;AAChC,QAAI,MAAM;AAAM,eAAS,IAAI,GAAG,GAAG;AACnC,WAAO,OAAO,MAAM,IAAI,IAAI,CAAC;AAAA,EAC/B;AAcA,IAAE,WAAW,SAAU,GAAG;AACxB,QAAI,KACFF,KAAI,MACJ,IAAIA,GAAE,GACNF,KAAIE,GAAE;AAGR,QAAIF,OAAM,MAAM;AACd,UAAI,GAAG;AACL,cAAM;AACN,YAAI,IAAI;AAAG,gBAAM,MAAM;AAAA,MACzB,OAAO;AACL,cAAM;AAAA,MACR;AAAA,IACF,OAAO;AACL,UAAI,KAAK,MAAM;AACb,cAAMA,MAAK,cAAcA,MAAK,aAC3B,cAAc,cAAcE,GAAE,CAAC,GAAGF,EAAC,IACnC,aAAa,cAAcE,GAAE,CAAC,GAAGF,IAAG,GAAG;AAAA,MAC5C,WAAW,MAAM,MAAM,gCAAgC;AACrD,QAAAE,KAAI,MAAM,IAAIJ,WAAUI,EAAC,GAAG,iBAAiBF,KAAI,GAAG,aAAa;AACjE,cAAM,aAAa,cAAcE,GAAE,CAAC,GAAGA,GAAE,GAAG,GAAG;AAAA,MACjD,OAAO;AACL,iBAAS,GAAG,GAAG,SAAS,QAAQ,MAAM;AACtC,cAAM,YAAY,aAAa,cAAcA,GAAE,CAAC,GAAGF,IAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI;AAAA,MAC5E;AAEA,UAAI,IAAI,KAAKE,GAAE,EAAE,CAAC;AAAG,cAAM,MAAM;AAAA,IACnC;AAEA,WAAO;AAAA,EACT;AAOA,IAAE,UAAU,EAAE,SAAS,WAAY;AACjC,WAAO,QAAQ,IAAI;AAAA,EACrB;AAGA,IAAE,eAAe;AAEjB,IAAE,OAAO,WAAW,IAAI;AAGxB,IAAE,OAAO,IAAI,4BAA4B,CAAC,IAAI,EAAE;AAEhD,MAAI,gBAAgB;AAAM,IAAAJ,WAAU,IAAI,YAAY;AAEpD,SAAOA;AACT;AASA,SAAS,SAASI,IAAG;AACnB,MAAID,KAAIC,KAAI;AACZ,SAAOA,KAAI,KAAKA,OAAMD,KAAIA,KAAIA,KAAI;AACpC;AAIA,SAAS,cAAc,GAAG;AACxB,MAAI,GAAG,GACLA,KAAI,GACJ,IAAI,EAAE,QACNG,KAAI,EAAE,CAAC,IAAI;AAEb,SAAOH,KAAI,KAAI;AACb,QAAI,EAAEA,IAAG,IAAI;AACb,QAAI,WAAW,EAAE;AACjB,WAAO,KAAK,IAAI,MAAM;AAAE;AACxB,IAAAG,MAAK;AAAA,EACP;AAGA,OAAK,IAAIA,GAAE,QAAQA,GAAE,WAAW,EAAE,CAAC,MAAM;AAAI;AAE7C,SAAOA,GAAE,MAAM,GAAG,IAAI,KAAK,CAAC;AAC9B;AAIA,SAAS,QAAQ,GAAG,GAAG;AACrB,MAAI,GAAG,GACL,KAAK,EAAE,GACP,KAAK,EAAE,GACPH,KAAI,EAAE,GACN,IAAI,EAAE,GACN,IAAI,EAAE,GACN,IAAI,EAAE;AAGR,MAAI,CAACA,MAAK,CAAC;AAAG,WAAO;AAErB,MAAI,MAAM,CAAC,GAAG,CAAC;AACf,MAAI,MAAM,CAAC,GAAG,CAAC;AAGf,MAAI,KAAK;AAAG,WAAO,IAAI,IAAI,IAAI,CAAC,IAAIA;AAGpC,MAAIA,MAAK;AAAG,WAAOA;AAEnB,MAAIA,KAAI;AACR,MAAI,KAAK;AAGT,MAAI,CAAC,MAAM,CAAC;AAAI,WAAO,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI;AAG7C,MAAI,CAAC;AAAG,WAAO,IAAI,IAAI,IAAI,IAAI;AAE/B,OAAK,IAAI,GAAG,WAAW,IAAI,GAAG,UAAU,IAAI;AAG5C,OAAKA,KAAI,GAAGA,KAAI,GAAGA;AAAK,QAAI,GAAGA,EAAC,KAAK,GAAGA,EAAC;AAAG,aAAO,GAAGA,EAAC,IAAI,GAAGA,EAAC,IAAI,IAAI,IAAI;AAG3E,SAAO,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;AACtC;AAMA,SAAS,SAASC,IAAG,KAAK,KAAK,MAAM;AACnC,MAAIA,KAAI,OAAOA,KAAI,OAAOA,OAAM,UAAUA,EAAC,GAAG;AAC5C,UAAM,MACJ,kBAAkB,QAAQ,eAAe,OAAOA,MAAK,WAClDA,KAAI,OAAOA,KAAI,MAAM,oBAAoB,sBACzC,+BAA+B,OAAOA,EAAC,CAAC;AAAA,EAC/C;AACF;AAIA,SAAS,MAAMA,IAAG;AAChB,MAAI,IAAIA,GAAE,EAAE,SAAS;AACrB,SAAO,SAASA,GAAE,IAAI,QAAQ,KAAK,KAAKA,GAAE,EAAE,CAAC,IAAI,KAAK;AACxD;AAGA,SAAS,cAAc,KAAKF,IAAG;AAC7B,UAAQ,IAAI,SAAS,IAAI,IAAI,OAAO,CAAC,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,QAC5DA,KAAI,IAAI,MAAM,QAAQA;AAC1B;AAGA,SAAS,aAAa,KAAKA,IAAG,GAAG;AAC/B,MAAI,KAAK;AAGT,MAAIA,KAAI,GAAG;AAGT,SAAK,KAAK,IAAI,KAAK,EAAEA,IAAG,MAAM;AAAE;AAChC,UAAM,KAAK;AAAA,EAGb,OAAO;AACL,UAAM,IAAI;AAGV,QAAI,EAAEA,KAAI,KAAK;AACb,WAAK,KAAK,GAAGA,MAAK,KAAK,EAAEA,IAAG,MAAM;AAAE;AACpC,aAAO;AAAA,IACT,WAAWA,KAAI,KAAK;AAClB,YAAM,IAAI,MAAM,GAAGA,EAAC,IAAI,MAAM,IAAI,MAAMA,EAAC;AAAA,IAC3C;AAAA,EACF;AAEA,SAAO;AACT;AAh0FA,IAiDE,WACA,UACA,WAEA,gBACA,eAEA,MACA,UACA,kBAEA,UACA,WAKA,KAowFS,WAEJ;AAx0FP;AAAA;AAAA;AAAA;AAgDA,IACE,YAAY;AADd,IAEE,WAAW,KAAK;AAFlB,IAGE,YAAY,KAAK;AAHnB,IAKE,iBAAiB;AALnB,IAME,gBAAgB,iBAAiB;AANnC,IAQE,OAAO;AART,IASE,WAAW;AATb,IAUE,mBAAmB;AAVrB,IAYE,WAAW,CAAC,GAAG,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,IAAI;AAZnF,IAaE,YAAY;AAbd,IAkBE,MAAM;AAowFD,IAAI,YAAY,MAAM;AAE7B,IAAO,oBAAQ;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACx0Ff,QAAA,wBAAA;AAcA,QAAa,mBAAb,cAAyC,MAAK;MAM5C,YAAY,MAAc,SAAiB,MAAQ;AAEjD,YAAI,CAAC,OAAO,UAAU,IAAI,GAAG;AAC3B,gBAAM,IAAI,MACR,4BAA4B;;AAGhC,YAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,gBAAM,IAAI,MACR,sCAAsC;;AAI1C,cAAM,OAAO;AACb,aAAK,OAAO;AACZ,YAAI,SAAS,QAAW;AACtB,eAAK,OAAO;;MAEhB;;;;MAKA,YAAS;AACP,cAAM,aAAyC;UAC7C,MAAM,KAAK;UACX,SAAS,KAAK;;AAEhB,YAAI,KAAK,SAAS,QAAW;AAC3B,qBAAW,OAAO,KAAK;;AAEzB,YAAI,KAAK,OAAO;AACd,qBAAW,QAAQ,KAAK;;AAE1B,eAAO;MACT;;;;;MAMA,WAAQ;AACN,eAAO,sBAAA,QACL,KAAK,UAAS,GACd,mBACA,CAAC;MAEL;;AArDF,YAAA,mBAAA;AA4DA,QAAa,wBAAb,cAA8C,iBAAmB;;;;;MAM/D,YAAY,MAAc,SAAiB,MAAQ;AAEjD,YAAI,CAAC,uBAAuB,IAAI,GAAG;AACjC,gBAAM,IAAI,MACR,2DAA2D;;AAI/D,cAAM,MAAM,SAAS,IAAI;MAC3B;;AAfF,YAAA,wBAAA;AAoBA,aAAS,uBAAuB,MAAY;AAC1C,aAAO,OAAO,UAAU,IAAI,KAAK,QAAQ,OAAQ,QAAQ;IAC3D;AAEA,aAAS,kBAAkB,GAAYQ,QAAc;AACnD,UAAIA,WAAU,cAAc;AAC1B,eAAO;;AAET,aAAOA;IACT;;;;;;;;;;;;AChFa,YAAA,aAAyB;MACpC,KAAK;QACH,cAAc;QACd,kBAAkB;QAClB,qBAAqB;QACrB,qBAAqB;QACrB,oBAAoB;QACpB,eAAe;QACf,OAAO;QACP,gBAAgB;QAChB,gBAAgB;QAChB,eAAe;QACf,UAAU;;MAEZ,UAAU;QACR,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,cAAc;QACd,mBAAmB;;;AAIV,YAAA,cAAc;MACzB,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;;;;;;;;;;;;;AC7Gb,QAAA,oBAAA;AACA,QAAA,YAAA;AAEA,QAAM,sBAAsB,kBAAA,WAAW,IAAI;AAC3C,QAAM,mBAAmB;AACzB,QAAM,iBAA6C;MACjD,MAAM;MACN,SAAS,mBAAmB,mBAAmB;;AAGpC,YAAA,gCAAgC;AAQ7C,aAAgB,mBACd,MACA,kBAA0B,kBAAgB;AAE1C,UAAI,OAAO,UAAU,IAAI,GAAG;AAC1B,cAAM,aAAa,KAAK,SAAQ;AAEhC,YAAI,OAAO,kBAAA,aAAa,UAAU,GAAG;AACnC,iBAAO,kBAAA,YAAY,UAA2B,EAAE;;AAElD,YAAI,qBAAqB,IAAI,GAAG;AAC9B,iBAAO,QAAA;;;AAGX,aAAO;IACT;AAfA,YAAA,qBAAA;AAqBA,aAAgB,YAAY,MAAY;AACtC,UAAI,CAAC,OAAO,UAAU,IAAI,GAAG;AAC3B,eAAO;;AAGT,YAAM,aAAa,KAAK,SAAQ;AAChC,UAAI,kBAAA,YAAY,UAA2B,GAAG;AAC5C,eAAO;;AAGT,UAAI,qBAAqB,IAAI,GAAG;AAC9B,eAAO;;AAET,aAAO;IACT;AAdA,YAAA,cAAA;AAsBA,aAAgBC,gBACd,OACA,EACE,gBAAgB,gBAChB,qBAAqB,MAAK,IACxB,CAAA,GAAE;;AAGN,UACE,CAAC,iBACD,CAAC,OAAO,UAAU,cAAc,IAAI,KACpC,OAAO,cAAc,YAAY,UACjC;AACA,cAAM,IAAI,MACR,0EAA0E;;AAI9E,UAAI,iBAAiB,UAAA,kBAAkB;AACrC,eAAO,MAAM,UAAS;;AAGxB,YAAM,aAAkD,CAAA;AAExD,UACE,SACA,OAAO,UAAU,YACjB,CAAC,MAAM,QAAQ,KAAK,KACpB,OAAO,OAAkC,MAAM,KAC/C,YAAa,MAAqC,IAAI,GACtD;AACA,cAAM,SAAS;AACf,mBAAW,OAAO,OAAO;AAEzB,YAAI,OAAO,WAAW,OAAO,OAAO,YAAY,UAAU;AACxD,qBAAW,UAAU,OAAO;AAE5B,cAAI,OAAO,QAAQ,MAAM,GAAG;AAC1B,uBAAW,OAAO,OAAO;;eAEtB;AACL,qBAAW,UAAU,mBAClB,WAA0C,IAAI;AAGjD,qBAAW,OAAO,EAAE,eAAe,oBAAoB,KAAK,EAAC;;aAE1D;AACL,mBAAW,OAAO,cAAc;AAEhC,cAAM,WAAO,KAAI,WAAa,QAAA,OAAA,SAAA,SAAA,GAAE;AAEhC,mBAAW,UACT,WAAW,OAAO,YAAY,WAC1B,UACA,cAAc;AAEpB,mBAAW,OAAO,EAAE,eAAe,oBAAoB,KAAK,EAAC;;AAG/D,YAAM,SAAK,KAAI,WAAa,QAAA,OAAA,SAAA,SAAA,GAAE;AAE9B,UAAI,sBAAsB,SAAS,SAAS,OAAO,UAAU,UAAU;AACrE,mBAAW,QAAQ;;AAErB,aAAO;IACT;AAlEA,YAAA,iBAAAA;AAsEA,aAAS,qBAAqB,MAAY;AACxC,aAAO,QAAQ,UAAU,QAAQ;IACnC;AAEA,aAAS,oBAAoB,OAAc;AACzC,UAAI,SAAS,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,KAAK,GAAG;AAC/D,eAAO,OAAO,OAAO,CAAA,GAAI,KAAK;;AAEhC,aAAO;IACT;AAEA,aAAS,OAAO,KAA8B,KAAW;AACvD,aAAO,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG;IACtD;;;;;;;;;;;;AChJA,QAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,oBAAA;AAea,YAAA,YAAY;MACvB,KAAK;;;;QAKH,OAAO,CAAI,QAA0B,mBACnC,kBAAA,WAAW,IAAI,OAAO,GAAG;;;;QAM3B,gBAAgB,CAAI,QAA0B,mBAC5C,kBAAA,WAAW,IAAI,gBAAgB,GAAG;;;;QAMpC,eAAe,CAAI,QAA0B,mBAC3C,kBAAA,WAAW,IAAI,eAAe,GAAG;;;;QAMnC,gBAAgB,CAAI,QAA0B,mBAC5C,kBAAA,WAAW,IAAI,gBAAgB,GAAG;;;;QAMpC,UAAU,CAAI,QAA0B,mBACtC,kBAAA,WAAW,IAAI,UAAU,GAAG;;;;;;QAQ9B,QAAQ,CAAI,SAA+B;AACzC,cAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,MAAM,QAAQ,IAAI,GAAG;AAC5D,kBAAM,IAAI,MAAM,iEAAiE;;AAEnF,gBAAM,EAAE,KAAI,IAAK;AACjB,cAAI,CAAC,OAAO,UAAU,IAAI,KAAK,OAAO,UAAU,OAAO,QAAQ;AAC7D,kBAAM,IAAI,MACR,+DAA+D;;AAGnE,iBAAO,mBAAmB,MAAM,IAAI;QACtC;;;;QAKA,cAAc,CAAI,QAA0B,mBAC1C,kBAAA,WAAW,IAAI,cAAc,GAAG;;;;QAMlC,kBAAkB,CAAI,QAA0B,mBAC9C,kBAAA,WAAW,IAAI,kBAAkB,GAAG;;;;QAMtC,qBAAqB,CAAI,QAA0B,mBACjD,kBAAA,WAAW,IAAI,qBAAqB,GAAG;;;;QAMzC,qBAAqB,CAAI,QAA0B,mBACjD,kBAAA,WAAW,IAAI,qBAAqB,GAAG;;;;QAMzC,oBAAoB,CAAI,QAA0B,mBAChD,kBAAA,WAAW,IAAI,oBAAoB,GAAG;;;;QAMxC,eAAe,CAAI,QAA0B,mBAC3C,kBAAA,WAAW,IAAI,eAAe,GAAG;;MAIrC,UAAU;;;;QAKR,qBAAqB,CAAI,QAAyB;AAChD,iBAAO,oBACL,kBAAA,WAAW,SAAS,qBAAqB,GAAG;QAEhD;;;;QAKA,cAAc,CAAI,QAAyB;AACzC,iBAAO,oBACL,kBAAA,WAAW,SAAS,cAAc,GAAG;QAEzC;;;;QAKA,mBAAmB,CAAI,QAAyB;AAC9C,iBAAO,oBACL,kBAAA,WAAW,SAAS,mBAAmB,GAAG;QAE9C;;;;QAKA,cAAc,CAAI,QAAyB;AACzC,iBAAO,oBACL,kBAAA,WAAW,SAAS,cAAc,GAAG;QAEzC;;;;QAKA,mBAAmB,CAAI,QAAyB;AAC9C,iBAAO,oBACL,kBAAA,WAAW,SAAS,mBAAmB,GAAG;QAE9C;;;;QAKA,QAAQ,CAAI,SAA2B;AACrC,cAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,MAAM,QAAQ,IAAI,GAAG;AAC5D,kBAAM,IAAI,MAAM,sEAAsE;;AAGxF,gBAAM,EAAE,MAAM,SAAS,KAAI,IAAK;AAEhC,cAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,kBAAM,IAAI,MACR,qCAAqC;;AAGzC,iBAAO,IAAI,UAAA,sBAAsB,MAAM,SAAS,IAAI;QACtD;;;AAMJ,aAAS,mBAAsB,MAAc,KAAqB;AAChE,YAAM,CAAC,SAAS,IAAI,IAAI,UAAU,GAAG;AACrC,aAAO,IAAI,UAAA,iBACT,MACA,WAAW,QAAA,mBAAmB,IAAI,GAClC,IAAI;IAER;AAEA,aAAS,oBAAuB,MAAc,KAAqB;AACjE,YAAM,CAAC,SAAS,IAAI,IAAI,UAAU,GAAG;AACrC,aAAO,IAAI,UAAA,sBACT,MACA,WAAW,QAAA,mBAAmB,IAAI,GAClC,IAAI;IAER;AAEA,aAAS,UAAa,KAAqB;AACzC,UAAI,KAAK;AACP,YAAI,OAAO,QAAQ,UAAU;AAC3B,iBAAO,CAAC,GAAG;mBACF,OAAO,QAAQ,YAAY,CAAC,MAAM,QAAQ,GAAG,GAAG;AACzD,gBAAM,EAAE,SAAS,KAAI,IAAK;AAE1B,cAAI,WAAW,OAAO,YAAY,UAAU;AAC1C,kBAAM,IAAI,MAAM,8BAA8B;;AAEhD,iBAAO,CAAC,WAAW,QAAW,IAAI;;;AAGtC,aAAO,CAAA;IACT;;;;;;;;;;;;ACzNA,QAAA,YAAA;AAUE,WAAA,eAAA,SAAA,oBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAVO,UAAA;IAAgB,EAAA,CAAA;AAWvB,WAAA,eAAA,SAAA,yBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAXyB,UAAA;IAAqB,EAAA,CAAA;AAChD,QAAA,UAAA;AAWE,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAVA,QAAA;IAAc,EAAA,CAAA;AAWd,WAAA,eAAA,SAAA,sBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAXgB,QAAA;IAAkB,EAAA,CAAA;AAEpC,QAAA,WAAA;AAKE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aALO,SAAA;IAAS,EAAA,CAAA;AAClB,QAAA,oBAAA;AAGE,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAHO,kBAAA;IAAU,EAAA,CAAA;;;;;AEEnB,SAASC,WAA8BC,SAA+CC,SAAYC,MAAO;AACvG,MAAI;AACFC,YAAQC,MAAMJ,SAASC,SAASC,IAAI;WAC7BG,KAAP;AAEAC,eAAW,MAAK;AACd,YAAMD;IACR,CAAC;EACF;AACH;AAEA,SAASE,YAAcC,KAAQ;AAC7B,QAAMC,KAAID,IAAIE;AACd,QAAMC,OAAO,IAAIC,MAAMH,EAAC;AACxB,WAASI,KAAI,GAAGA,KAAIJ,IAAGI,MAAK,GAAG;AAC7BF,SAAKE,EAAC,IAAIL,IAAIK,EAAC;EAChB;AACD,SAAOF;AACT;AEyLM,SAAUG,uBAA4BC,iBAA0C;AACpF,SAAO,OAAOC,KAAKC,KAAKC,MAAMC,QAAO;AAInC,QAAIC;AACJ,UAAMC,cAAc,IAAIC,QAAeC,aAAW;AAChDH,2BAAqBG;IACvB,CAAC;AAED,QAAIC,wBAAiC;AACrC,QAAIC,gBAAgB;AAGpB,UAAMC,YAAY,YAAW;AAC3BD,sBAAgB;AAKhBP,WAAMS,+BAA6B;AAEjCH,gCAAwBG;AACxBP,2BAAkB;MACpB,CAAC;AACD,YAAMC;;AAGR,QAAI;AACF,YAAMN,gBAAgBC,KAAKC,KAAKS,SAAS;AAEzC,UAAID,eAAe;AACjB,cAAMJ;AACLG,8BAAgD,IAAI;MACtD,OAAM;AACLL,YAAI,IAAI;MACT;aACMS,OAAP;AACA,UAAIJ,uBAAuB;AACxBA,8BAAgDI,KAAK;MACvD,OAAM;AACLT,YAAIS,KAAK;MACV;IACF;;AAEL;qJFpOqBC,mBKlBRC;;;;;;;;;;;;;;ALkBQ,IAAAD,oBAAA,cAAyBE,4BAAY;MACxDC,KAAKC,OAA4B;AAC/B,YAAIC,UAAUD,UAAS;AAEvB,cAAME,SAAoB,KAAaC;AACvC,YAAID,WAAWE,QAAW;AACxBH,oBAAUA,WAAWC,OAAOP,UAAUS;QACvC,WAAU,CAACH,SAAS;AACnB,iBAAO;QACR;AAED,iBAAAI,OAAAC,UAAA7B,QAVoBR,OAAW,IAAAU,MAAA0B,OAAAA,IAAAA,OAAA,IAAA,CAAA,GAAAE,OAAA,GAAAA,OAAAF,MAAAE,QAAA;AAAXtC,eAAWsC,OAAAD,CAAAA,IAAAA,UAAAC,IAAA;QAAA;AAW/B,YAAIN,SAAS;AACX,cAAIO;AACJ,cAAIvC,KAAKQ,SAAS,GAAG;AACnB,aAAC+B,EAAE,IAAIvC;UACR;AACD,cAAIuC,cAAcC,OAAO;AAGvB,kBAAMD;UACP;AAED,gBAAMpC,MAAM,IAAIqC,MAAyB,mBAAAD,KAAE,KAAQA,GAAGE,aAAa,IAAI;AACtEtC,cAAYJ,UAAUwC;AACvB,gBAAMpC;QACP;AAED,cAAML,UAAUmC,OAAOF,KAAI;AAE3B,YAAIjC,YAAYqC,QAAW;AACzB,iBAAO;QACR;AAED,YAAI,OAAOrC,YAAY,YAAY;AACjCD,UAAAA,WAAUC,SAAS,MAAME,IAAI;QAC9B,OAAM;AACL,gBAAM0C,MAAM5C,QAAQU;AACpB,gBAAMmC,YAAYtC,YAAWP,OAAO;AACpC,mBAASa,KAAI,GAAGA,KAAI+B,KAAK/B,MAAK,GAAG;AAC/Bd,YAAAA,WAAU8C,UAAUhC,EAAC,GAAG,MAAMX,IAAI;UACnC;QACF;AAED,eAAO;MACT;IACD;IKhEY4B,oBAAmBgB,OAAO,kBAAkB;;;;;AETzD;AAAA;AAAA;AAAA;AAAA,WAAO,UAAU;AAEjB,aAAS,WAAW,MAAK;AACvB,aAAO,QAAQ,CAAC;AAChB,UAAI,MAAM,KAAK,OAAO,OAAO;AAC7B,UAAI,YAAY,OAAO,KAAK,UAAU,cAAc,KAAK,QAAQ,KAAK,MAAM,KAAK,OAAO,IAAI,GAAG;AAE/F,aAAO,SAASC,kBAAkB;AAChC,oBAAY,YAAY;AACxB,eAAO;AAAA,MACT;AAAA,IAEF;AAAA;AAAA;;;ACZA,IAEa,qBA0CA,aAyCA,eAOA,QAgBA;AA5Gb;AAAA;AAAA;AAAA;AAEO,IAAM,sBAAsB;AAAA,MACjC,eAAe;AAAA,MACf,mBAAmB;AAAA,MACnB,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,WAAW;AAAA,MACX,qBAAqB;AAAA,MACrB,YAAY;AAAA,MACZ,SAAS;AAAA,MACT,kBAAkB;AAAA,MAClB,cAAc;AAAA,MACd,uBAAuB;AAAA,MACvB,OAAO;AAAA,MACP,eAAe;AAAA,MACf,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,gCAAgC;AAAA,MAChC,WAAW;AAAA,MACX,UAAU;AAAA,MACV,OAAO;AAAA,MACP,OAAO;AAAA,MACP,cAAc;AAAA,MACd,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,QAAQ;AAAA,MACR,kBAAkB;AAAA,MAClB,MAAM;AAAA,IACR;AAEO,IAAM,cAAc;AAAA,MACzB,aAAa;AAAA,MACb,SAAS;AAAA,MACT,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,SAAS;AAAA,MACT,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,MACX,eAAe;AAAA,MACf,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,SAAS;AAAA,MACT,MAAM;AAAA,MACN,IAAI;AAAA,MACJ,OAAO;AAAA,MACP,OAAO;AAAA,MACP,aAAa;AAAA,MACb,WAAW;AAAA,MACX,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,IAAI;AAAA,MACJ,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,UAAU;AAAA,MACV,kBAAkB;AAAA,MAClB,WAAW;AAAA,MACX,UAAU;AAAA,MACV,OAAO;AAAA,MACP,OAAO;AAAA,MACP,IAAI;AAAA,MACJ,SAAS;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAEO,IAAM,gBAAgB;AAAA,MAC3B,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,SAAS;AAAA,MACT,IAAI;AAAA,IACN;AAEO,IAAM,SAAS;AAAA,MACpB,cAAc;AAAA,MACd,SAAS;AAAA,MACT,OAAO;AAAA,MACP,KAAK;AAAA,MACL,SAAS;AAAA,MACT,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,MAAM;AAAA,MACN,OAAO;AAAA,MACP,OAAO;AAAA,MACP,UAAU;AAAA,MACV,cAAc;AAAA,MACd,MAAM;AAAA,IACR;AAEO,IAAM,aAAa;AAAA,MACxB,UAAU;AAAA,MACV,OAAO;AAAA,MACP,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,QAAQ;AAAA,IACV;AAAA;AAAA;;;ACnHA,IAEqB;AAFrB;AAAA;AAAA;AAAA;AAAA;AAEA,IAAqB,QAArB,MAA2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOzB,OAAO,cAAc,QAAQ,IAAI;AAC/B,cAAM,QAAQ,GAAG,MAAM,MAAM;AAC7B,eAAQ,SAAS,MAAM,SAAS,KAAK,MAAM,CAAC,KAAM;AAAA,MACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,OAAO,eAAe,QAAQ,IAAI;AAChC,cAAM,QAAQ,GAAG,MAAM,MAAM;AAC7B,eAAQ,SAAS,MAAM,SAAS,KAAK,MAAM,CAAC,KAAM;AAAA,MACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,OAAO,oBAAoB,QAAQ,IAAI,QAAQ;AAC7C,YAAI,OAAO,KAAK,EAAE,GAAG;AACnB,iBAAO;AAAA,QACT;AACA,eAAO;AAAA,MACT;AAAA,MAEA,OAAO,sBAAsB,SAAS;AACpC,gBAAQ,SAAS;AAAA,UACf,KAAK;AAAM,mBAAO;AAAA,UAClB,KAAK;AAAM,mBAAO;AAAA,UAClB,KAAK;AAAU,mBAAO;AAAA,UACtB,KAAK;AAAU,mBAAO;AAAA,UACtB,KAAK;AAAU,mBAAO;AAAA,UACtB,KAAK;AAAU,mBAAO;AAAA,UACtB,KAAK;AAAU,mBAAO;AAAA,UACtB,KAAK;AAAU,mBAAO;AAAA,UACtB,KAAK;AAAU,mBAAO;AAAA,UACtB,KAAK;AAAW,mBAAO;AAAA,UACvB;AAAS,mBAAO;AAAA,QAClB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAsBA,OAAO,oBAAoB,SAAS;AAClC,cAAM,IAAI,QAAQ,MAAM,GAAG,EAAE,OAAO,GAAG,CAAC,EAAE,IAAI,OAAK,SAAS,GAAG,EAAE,KAAK,CAAC;AACvE,UAAE,KAAK,CAAC;AACR,YAAI,EAAE,CAAC,MAAM;AAAI,iBAAO;AACxB,gBAAQ,EAAE,CAAC,GAAG;AAAA,UACZ,KAAK;AAAG,mBAAO;AAAA,UACf,KAAK;AAAG,mBAAO;AAAA,UACf,KAAK;AAAG,mBAAO;AAAA,UACf,KAAK;AAAG,mBAAO;AAAA,UACf,KAAK;AAAG,mBAAO;AAAA,UACf,KAAK;AAAI,mBAAO;AAAA,UAChB,KAAK;AAAI,mBAAO;AAAA,UAChB,KAAK;AAAI,mBAAO;AAAA,UAChB,KAAK;AAAI,mBAAO;AAAA,UAChB,KAAK;AAAI,mBAAO;AAAA,UAChB,KAAK;AAAI,mBAAO;AAAA,UAChB;AAAS,mBAAO;AAAA,QAClB;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA0BA,OAAO,sBAAsB,SAAS;AACpC,cAAM,IAAI,QAAQ,MAAM,GAAG,EAAE,OAAO,GAAG,CAAC,EAAE,IAAI,OAAK,SAAS,GAAG,EAAE,KAAK,CAAC;AACvE,UAAE,KAAK,CAAC;AACR,YAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,IAAI;AAAG,iBAAO;AACnC,YAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,IAAI;AAAG,iBAAO;AACnC,YAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,KAAK;AAAG,iBAAO;AACpC,YAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,IAAI;AAAG,iBAAO;AACnC,YAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,MAAM;AAAG,iBAAO;AACrC,YAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,IAAI;AAAG,iBAAO;AACnC,YAAI,EAAE,CAAC,MAAM;AAAG,iBAAO;AACvB,YAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,IAAI;AAAG,iBAAO;AACnC,YAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,IAAI;AAAG,iBAAO;AACnC,YAAI,EAAE,CAAC,MAAM,KAAK,EAAE,CAAC,KAAK;AAAG,iBAAO;AACpC,YAAI,EAAE,CAAC,MAAM;AAAG,iBAAO;AACvB,YAAI,EAAE,CAAC,MAAM;AAAG,iBAAO;AACvB,YAAI,EAAE,CAAC,MAAM;AAAG,iBAAO;AACvB,YAAI,EAAE,CAAC,MAAM;AAAG,iBAAO;AACvB,YAAI,EAAE,CAAC,MAAM;AAAG,iBAAO;AACvB,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWA,OAAO,oBAAoB,SAAS;AAClC,eAAO,QAAQ,MAAM,GAAG,EAAE;AAAA,MAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBA,OAAO,gBAAgB,UAAU,UAAU,UAAU,OAAO;AAE1D,cAAM,oBAAoB,MAAM,oBAAoB,QAAQ;AAC5D,cAAM,oBAAoB,MAAM,oBAAoB,QAAQ;AAE5D,YAAI,YAAY,KAAK,IAAI,mBAAmB,iBAAiB;AAC7D,YAAI,gBAAgB;AAEpB,cAAM,SAAS,MAAM,IAAI,CAAC,UAAU,QAAQ,GAAG,CAAC,YAAY;AAC1D,gBAAM,QAAQ,YAAY,MAAM,oBAAoB,OAAO;AAG3D,gBAAM,WAAW,UAAU,IAAI,MAAM,QAAQ,CAAC,EAAE,KAAK,IAAI;AAGzD,iBAAO,MAAM,IAAI,SAAS,MAAM,GAAG,GAAG,WAAS,IAAI,MAAM,KAAK,MAAM,MAAM,EAAE,KAAK,GAAG,IAAI,KAAK,EAAE,QAAQ;AAAA,QACzG,CAAC;AAGD,YAAI,SAAS;AACX,0BAAgB,YAAY,KAAK,IAAI,mBAAmB,iBAAiB;AAAA,QAC3E;AAGA,qBAAa;AACb,eAAO,aAAa,eAAe;AAEjC,cAAI,OAAO,CAAC,EAAE,SAAS,IAAI,OAAO,CAAC,EAAE,SAAS,GAAG;AAC/C,mBAAO;AAAA,UACT;AAEA,cAAI,OAAO,CAAC,EAAE,SAAS,MAAM,OAAO,CAAC,EAAE,SAAS,GAAG;AACjD,gBAAI,cAAc,eAAe;AAE/B,qBAAO;AAAA,YACT;AAEA,yBAAa;AAAA,UACf,WAAW,OAAO,CAAC,EAAE,SAAS,IAAI,OAAO,CAAC,EAAE,SAAS,GAAG;AACtD,mBAAO;AAAA,UACT;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,OAAO,IAAI,KAAK,UAAU;AACxB,cAAM,SAAS,CAAC;AAChB,YAAIC;AACJ,YAAI,MAAM,UAAU,KAAK;AACvB,iBAAO,MAAM,UAAU,IAAI,KAAK,KAAK,QAAQ;AAAA,QAC/C;AACA,aAAKA,KAAI,GAAGA,KAAI,IAAI,QAAQA,MAAK,GAAG;AAClC,iBAAO,KAAK,SAAS,IAAIA,EAAC,CAAC,CAAC;AAAA,QAC9B;AACA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,OAAO,KAAK,KAAK,WAAW;AAC1B,YAAIA;AACJ,YAAI;AACJ,YAAI,MAAM,UAAU,MAAM;AACxB,iBAAO,MAAM,UAAU,KAAK,KAAK,KAAK,SAAS;AAAA,QACjD;AACA,aAAKA,KAAI,GAAG,IAAI,IAAI,QAAQA,KAAI,GAAGA,MAAK,GAAG;AACzC,gBAAMC,SAAQ,IAAID,EAAC;AACnB,cAAI,UAAUC,QAAOD,EAAC,GAAG;AACvB,mBAAOC;AAAA,UACT;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,OAAO,OAAO,QAAQ,WAAW;AAC/B,cAAM,SAAS;AACf,YAAID;AACJ,YAAI;AACJ,YAAI,OAAO,QAAQ;AACjB,iBAAO,OAAO,OAAO,KAAK,GAAG,SAAS;AAAA,QACxC;AACA,aAAKA,KAAI,GAAG,IAAI,UAAU,QAAQA,KAAI,GAAGA,MAAK,GAAG;AAC/C,gBAAM,WAAW,UAAUA,EAAC;AAC5B,cAAI,OAAO,aAAa,YAAY,aAAa,MAAM;AACrD,kBAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,iBAAK,QAAQ,CAAC,QAAQ;AACpB,qBAAO,GAAG,IAAI,SAAS,GAAG;AAAA,YAC5B,CAAC;AAAA,UACH;AAAA,QACF;AACA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWA,OAAO,gBAAgB,aAAa;AAClC,eAAO,oBAAoB,WAAW;AAAA,MACxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWA,OAAO,sBAAsB,cAAc;AACzC,eAAO,YAAY,YAAY,KAAK;AAAA,MACtC;AAAA,IACF;AAAA;AAAA;;;ACpTA,IA2BM,yBAEA,cA8pBC;AA3rBP;AAAA;AAAA;AAAA;AAyBA;AAEA,IAAM,0BAA0B;AAEhC,IAAM,eAAe;AAAA;AAAA,MAEnB;AAAA,QACE,MAAM,CAAC,YAAY;AAAA,QACnB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,4BAA4B,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAEtH,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,QAAQ;AAAA,QACf,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,mCAAmC,EAAE;AAE7H,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,cAAc;AAAA,QACrB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,4BAA4B,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAEtH,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,iBAAiB;AAAA,QACxB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,4CAA4C,EAAE;AAEtI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,QAAQ;AAAA,QACf,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,kCAAkC,EAAE;AAE5H,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,YAAY;AAAA,QACnB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,sCAAsC,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAEhI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,QAAQ;AAAA,QACf,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,kCAAkC,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAE5H,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,QAAQ;AAAA,QACf,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,kCAAkC,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAE5H,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,QAAQ;AAAA,QACf,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,mCAAmC,EAAE;AAE7H,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,uBAAuB;AAAA,QAC9B,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,iCAAiC,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAE3H,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,YAAY;AAAA,QACnB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,uCAAuC,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAEjI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,YAAY;AAAA,QACnB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,uCAAuC,EAAE;AAEjI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,gBAAgB;AAAA,QACvB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,2CAA2C,EAAE;AAErI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,sCAAsC,EAAE;AAEhI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,SAAS;AAAA,QAChB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,oCAAoC,EAAE;AAE9H,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,sCAAsC,EAAE;AAEhI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,sCAAsC,EAAE;AAEhI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,iBAAiB;AAAA,QACxB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,4CAA4C,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAEtI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,YAAY;AAAA,QACnB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAO,iBAAkB,KAAK,EAAE,IAAI,oBAAoB;AAAA,UAC1D;AACA,gBAAM,UAAU,MAAM,cAAc,mDAAmD,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAE7I,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,eAAe;AAAA,QACtB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,kCAAkC,EAAE;AAExE,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,UAAU;AAAA,QACjB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AAEA,gBAAM,UAAU,MAAM,cAAc,4BAA4B,EAAE;AAElE,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,gBAAgB;AAAA,QACvB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AAEA,gBAAM,UAAU,MAAM,eAAe,oCAAoC,EAAE;AAE3E,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,UAAU;AAAA,QACjB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,8BAA8B,EAAE;AAEpE,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,YAAY;AAAA,QACnB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,gCAAgC,EAAE;AAEtE,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AAEA,gBAAM,UAAU,MAAM,cAAc,sCAAsC,EAAE;AAE5E,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,OAAO;AAAA,QACd,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,2BAA2B,EAAE;AAEjE,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,UAAU;AAAA,QACjB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,gCAAgC,EAAE;AAEtE,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,+BAA+B,EAAE;AAErE,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,uBAAuB,cAAc;AAAA,QAC5C,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,sCAAsC,EAAE;AAEhI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,iBAAiB;AAAA,QACxB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE,KAAK,MAAM,cAAc,2CAA2C,EAAE;AAErI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,OAAO;AAAA,QACd,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,6BAA6B,EAAE;AAEnE,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,QAAQ;AAAA,QACf,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,2CAA2C,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAErI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,sCAAsC,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAEhI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,0BAA0B;AAAA,QACjC,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,qDAAqD,EAAE;AAE3F,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,mCAAmC,EAAE;AAEzE,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,cAAc;AAAA,QACrB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yCAAyC,EAAE;AAE/E,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,sCAAsC,EAAE,KAAK,MAAM,cAAc,yBAAyB,EAAE;AAEhI,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,oBAAoB;AAAA,QAC3B,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,4CAA4C,EAAE;AAElF,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,MACA;AAAA,QACE,MAAM,CAAC,MAAM;AAAA,QACb,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,8BAA8B,EAAE;AAEpE,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,gBAAM,iBAAiB,CAAC,OAAO,KAAK,eAAe;AACnD,gBAAM,aAAa,OAAO,KAAK,UAAU;AACzC,iBAAO,kBAAkB;AAAA,QAC3B;AAAA,QACA,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE;AAE/D,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,gBAAgB;AAAA,QACvB,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE;AAE/D,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,qBAAqB;AAAA,QAC5B,SAAS,IAAI;AACX,gBAAM,UAAU;AAAA,YACd,MAAM;AAAA,UACR;AACA,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE;AAE/D,cAAI,SAAS;AACX,oBAAQ,UAAU;AAAA,UACpB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,KAAK;AAAA,QACZ,SAAS,IAAI;AAKX,gBAAM,0BAA0B;AAChC,gBAAM,uBAAuB;AAC7B,gBAAM,gBAAgB,GAAG,OAAO,KAAK,MAAM;AAC3C,gBAAM,SAAS,gBAAgB,uBAAuB;AACtD,iBAAO;AAAA,YACL,MAAM,MAAM,cAAc,QAAQ,EAAE;AAAA,YACpC,SAAS,MAAM,eAAe,QAAQ,EAAE;AAAA,UAC1C;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,IAAO,0BAAQ;AAAA;AAAA;;;AC3rBf,IAGO;AAHP;AAAA;AAAA;AAAA;AAAA;AACA;AAEA,IAAO,oBAAQ;AAAA;AAAA,MAEb;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,yBAAyB,EAAE;AAC/D,iBAAO;AAAA,YACL,MAAM,OAAO;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,gBAAgB;AAAA,QACvB,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,0CAA0C,EAAE;AAChF,iBAAO;AAAA,YACL,MAAM,OAAO;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,kCAAkC,EAAE;AACxE,gBAAM,cAAc,MAAM,sBAAsB,OAAO;AAEvD,iBAAO;AAAA,YACL,MAAM,OAAO;AAAA,YACb;AAAA,YACA;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,6BAA6B;AAAA,QACpC,SAAS,IAAI;AACX,gBAAM,SAAS;AAAA,YACb,MAAM,OAAO;AAAA,UACf;AACA,gBAAM,UAAU,MAAM,eAAe,yBAAyB,EAAE;AAChE,cAAI,SAAS;AACX,mBAAO,UAAU;AAAA,UACnB;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,YAAY;AAAA,QACnB,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,8BAA8B,EAAE,EAAE,QAAQ,UAAU,GAAG;AAC3F,gBAAM,cAAc,MAAM,oBAAoB,OAAO;AAErD,gBAAM,KAAK;AAAA,YACT,MAAM,OAAO;AAAA,YACb;AAAA,UACF;AACA,cAAI,aAAa;AACf,eAAG,cAAc;AAAA,UACnB;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,qBAAqB;AAAA,QAC5B,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,sCAAsC,EAAE,EAAE,QAAQ,UAAU,GAAG;AAEnG,iBAAO;AAAA,YACL,MAAM,OAAO;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,gBAAM,iBAAiB,CAAC,OAAO,KAAK,eAAe;AACnD,gBAAM,aAAa,OAAO,KAAK,UAAU;AACzC,iBAAO,kBAAkB;AAAA,QAC3B;AAAA,QACA,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,+BAA+B,EAAE;AACrE,gBAAM,cAAc,MAAM,sBAAsB,OAAO;AACvD,gBAAM,KAAK;AAAA,YACT,MAAM,OAAO;AAAA,YACb;AAAA,UACF;AACA,cAAI,aAAa;AACf,eAAG,cAAc;AAAA,UACnB;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,iBAAiB;AAAA,QACxB,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,oCAAoC,EAAE;AAC1E,gBAAM,KAAK;AAAA,YACT,MAAM,OAAO;AAAA,UACf;AAEA,cAAI,WAAW,QAAQ,QAAQ;AAC7B,eAAG,UAAU;AAAA,UACf;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,uBAAuB,cAAc;AAAA,QAC5C,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,mCAAmC,EAAE,KACpE,MAAM,cAAc,oCAAoC,EAAE,KAC1D,MAAM,cAAc,cAAc,EAAE;AAEzC,iBAAO;AAAA,YACL,MAAM,OAAO;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,OAAO;AAAA,QACd,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,wBAAwB,EAAE;AAE9D,iBAAO;AAAA,YACL,MAAM,OAAO;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,QAAQ;AAAA,QACf,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,4BAA4B,EAAE;AAElE,iBAAO;AAAA,YACL,MAAM,OAAO;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,QAAQ;AAAA,QACf,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,OAAO;AAAA,UACf;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,MAAM;AAAA,QACb,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,OAAO;AAAA,UACf;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,eAAe;AAAA,QACtB,SAAS,IAAI;AACX,gBAAM,UAAU,MAAM,cAAc,oCAAoC,EAAE;AAC1E,iBAAO;AAAA,YACL,MAAM,OAAO;AAAA,YACb;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACtMA,IAQO;AARP;AAAA;AAAA;AAAA;AAAA;AACA;AAOA,IAAO,2BAAQ;AAAA;AAAA,MAEb;AAAA,QACE,MAAM,CAAC,YAAY;AAAA,QACnB,WAAW;AACT,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,SAAS;AAAA,QAChB,SAAS,IAAI;AACX,gBAAM,QAAQ,MAAM,cAAc,cAAc,EAAE,KAAK;AACvD,gBAAM,WAAW;AAAA,YACf,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,UACV;AACA,cAAI,OAAO;AACT,qBAAS,QAAQ;AAAA,UACnB;AACA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,yBAAyB;AAAA,QAChC,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,OAAO;AAAA,QACd,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,YACR,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,6BAA6B;AAAA,QACpC,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,YACR,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,aAAa;AAAA,QACpB,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,YACR,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,OAAO;AAAA,QACd,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,gBAAgB;AAAA,QACvB,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,gBAAM,UAAU,OAAO,KAAK,cAAc;AAC1C,gBAAM,cAAc,OAAO,KAAK,qBAAqB;AACrD,iBAAO,WAAW,CAAC;AAAA,QACrB;AAAA,QACA,SAAS,IAAI;AACX,gBAAM,QAAQ,MAAM,cAAc,kBAAkB,EAAE;AACtD,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,YACR;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,oBAAoB,eAAe;AAAA,QAC1C,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,WAAW;AAAA,QAClB,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,eAAe,IAAI,MAAM;AAAA,QACzC;AAAA,QACA,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,eAAe,IAAI,MAAM;AAAA,QACzC;AAAA,QACA,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,eAAe,MAAM;AAAA,QACrC;AAAA,QACA,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,gBAAM,iBAAiB,OAAO,OAAO,OAAO,aAAa,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC;AACzE,iBAAO,OAAO,UAAU,IAAI,MAAM,aAAc,kBAAkB;AAAA,QACpE;AAAA,QACA,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,UAAU,IAAI,MAAM;AAAA,QACpC;AAAA,QACA,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,UAAU,IAAI,MAAM;AAAA,QACpC;AAAA,QACA,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,YACpB,QAAQ;AAAA,UACV;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,UAAU,IAAI,MAAM;AAAA,QACpC;AAAA,QACA,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,UAAU,IAAI,MAAM;AAAA,QACpC;AAAA,QACA,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,UAAU,IAAI,MAAM;AAAA,QACpC;AAAA,QACA,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,UAAU,IAAI,MAAM;AAAA,QACpC;AAAA,QACA,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,cAAc;AAAA,UACtB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACzQA,IAMO;AANP;AAAA;AAAA;AAAA;AAAA;AACA;AAKA,IAAO,yBAAQ;AAAA;AAAA,MAEb;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,eAAe,IAAI,MAAM;AAAA,QACzC;AAAA,QACA,SAAS,IAAI;AACX,gBAAM,eAAe,WAAW,KAAK,EAAE;AAGvC,cAAI,cAAc;AAChB,mBAAO;AAAA,cACL,MAAM,WAAW;AAAA,YACnB;AAAA,UACF;AAGA,gBAAM,UAAU,MAAM,cAAc,2BAA2B,EAAE;AAEjE,iBAAO;AAAA,YACL,MAAM,WAAW;AAAA,YACjB;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,UAAU;AAAA,QACjB,SAAS,IAAI;AACX,gBAAM,SAAS;AAAA,YACb,MAAM,WAAW;AAAA,UACnB;AAEA,gBAAM,UAAU,MAAM,cAAc,8BAA8B,EAAE;AAEpE,cAAI,SAAS;AACX,mBAAO,UAAU;AAAA,UACnB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,iBAAO,OAAO,KAAK,SAAS;AAAA,QAC9B;AAAA,QACA,SAAS,IAAI;AACX,gBAAM,SAAS;AAAA,YACb,MAAM,WAAW;AAAA,UACnB;AAEA,gBAAM,UAAU,MAAM,cAAc,6BAA6B,EAAE;AAEnE,cAAI,SAAS;AACX,mBAAO,UAAU;AAAA,UACnB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,KAAK,QAAQ;AACX,gBAAM,UAAU,OAAO,KAAK,QAAQ;AACpC,gBAAM,YAAY,OAAO,KAAK,aAAa;AAC3C,iBAAO,WAAW,CAAC;AAAA,QACrB;AAAA,QACA,SAAS,IAAI;AACX,gBAAM,SAAS;AAAA,YACb,MAAM,WAAW;AAAA,UACnB;AAEA,gBAAM,UAAU,MAAM,cAAc,4BAA4B,EAAE;AAElE,cAAI,SAAS;AACX,mBAAO,UAAU;AAAA,UACnB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,0BAA0B;AAAA,QACjC,WAAW;AACT,iBAAO;AAAA,YACL,MAAM,WAAW;AAAA,UACnB;AAAA,QACF;AAAA,MACF;AAAA;AAAA,MAGA;AAAA,QACE,MAAM,CAAC,iBAAiB;AAAA,QACxB,SAAS,IAAI;AACX,gBAAM,SAAS;AAAA,YACb,MAAM,WAAW;AAAA,UACnB;AAEA,gBAAM,UAAU,MAAM,cAAc,6BAA6B,EAAE;AAEnE,cAAI,SAAS;AACX,mBAAO,UAAU;AAAA,UACnB;AAEA,iBAAO;AAAA,QACT;AAAA,MACF;AAAA,IACF;AAAA;AAAA;;;ACvHA,IASM,QAseC;AA/eP;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA,IAAM,SAAN,MAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaX,YAAY,IAAI,cAAc,OAAO;AACnC,YAAI,OAAO,UAAY,OAAO,QAAQ,OAAO,IAAI;AAC/C,gBAAM,IAAI,MAAM,oCAAoC;AAAA,QACtD;AAEA,aAAK,MAAM;AAwBX,aAAK,eAAe,CAAC;AAErB,YAAI,gBAAgB,MAAM;AACxB,eAAK,MAAM;AAAA,QACb;AAAA,MACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,QAAQ;AACN,eAAO,KAAK;AAAA,MACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,KAAK,OAAO;AACV,eAAO,MAAM,KAAK,KAAK,GAAG;AAAA,MAC5B;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,eAAe;AACb,aAAK,aAAa,UAAU,CAAC;AAE7B,cAAM,oBAAoB,MAAM,KAAK,yBAAoB,CAAC,aAAa;AACrE,cAAI,OAAO,SAAS,SAAS,YAAY;AACvC,mBAAO,SAAS,KAAK,IAAI;AAAA,UAC3B;AAEA,cAAI,SAAS,gBAAgB,OAAO;AAClC,mBAAO,SAAS,KAAK,KAAK,eAAa,KAAK,KAAK,SAAS,CAAC;AAAA,UAC7D;AAEA,gBAAM,IAAI,MAAM,sCAAsC;AAAA,QACxD,CAAC;AAED,YAAI,mBAAmB;AACrB,eAAK,aAAa,UAAU,kBAAkB,SAAS,KAAK,MAAM,CAAC;AAAA,QACrE;AAEA,eAAO,KAAK,aAAa;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,aAAa;AACX,YAAI,KAAK,aAAa,SAAS;AAC7B,iBAAO,KAAK,aAAa;AAAA,QAC3B;AAEA,eAAO,KAAK,aAAa;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,eAAe,aAAa;AAC1B,YAAI,aAAa;AACf,iBAAO,OAAO,KAAK,WAAW,EAAE,IAAI,EAAE,YAAY,KAAK;AAAA,QACzD;AACA,eAAO,KAAK,WAAW,EAAE,QAAQ;AAAA,MACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,oBAAoB;AAClB,eAAO,KAAK,WAAW,EAAE;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAaA,QAAQ;AACN,YAAI,KAAK,aAAa,IAAI;AACxB,iBAAO,KAAK,aAAa;AAAA,QAC3B;AAEA,eAAO,KAAK,QAAQ;AAAA,MACtB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,UAAU;AACR,aAAK,aAAa,KAAK,CAAC;AAExB,cAAM,KAAK,MAAM,KAAK,mBAAe,CAAC,QAAQ;AAC5C,cAAI,OAAO,IAAI,SAAS,YAAY;AAClC,mBAAO,IAAI,KAAK,IAAI;AAAA,UACtB;AAEA,cAAI,IAAI,gBAAgB,OAAO;AAC7B,mBAAO,IAAI,KAAK,KAAK,eAAa,KAAK,KAAK,SAAS,CAAC;AAAA,UACxD;AAEA,gBAAM,IAAI,MAAM,sCAAsC;AAAA,QACxD,CAAC;AAED,YAAI,IAAI;AACN,eAAK,aAAa,KAAK,GAAG,SAAS,KAAK,MAAM,CAAC;AAAA,QACjD;AAEA,eAAO,KAAK,aAAa;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,UAAU,aAAa;AACrB,cAAM,EAAE,KAAK,IAAI,KAAK,MAAM;AAE5B,YAAI,aAAa;AACf,iBAAO,OAAO,IAAI,EAAE,YAAY,KAAK;AAAA,QACvC;AAEA,eAAO,QAAQ;AAAA,MACjB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,eAAe;AACb,eAAO,KAAK,MAAM,EAAE;AAAA,MACtB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,cAAc;AACZ,YAAI,KAAK,aAAa,UAAU;AAC9B,iBAAO,KAAK,aAAa;AAAA,QAC3B;AAEA,eAAO,KAAK,cAAc;AAAA,MAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,gBAAgB,cAAc,OAAO;AACnC,cAAM,EAAE,MAAAE,MAAK,IAAI,KAAK,YAAY;AAElC,YAAI,aAAa;AACf,iBAAO,OAAOA,KAAI,EAAE,YAAY,KAAK;AAAA,QACvC;AAEA,eAAOA,SAAQ;AAAA,MACjB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,gBAAgB;AACd,aAAK,aAAa,WAAW,CAAC;AAE9B,cAAM,WAAW,MAAM,KAAK,0BAAqB,CAAC,cAAc;AAC9D,cAAI,OAAO,UAAU,SAAS,YAAY;AACxC,mBAAO,UAAU,KAAK,IAAI;AAAA,UAC5B;AAEA,cAAI,UAAU,gBAAgB,OAAO;AACnC,mBAAO,UAAU,KAAK,KAAK,eAAa,KAAK,KAAK,SAAS,CAAC;AAAA,UAC9D;AAEA,gBAAM,IAAI,MAAM,sCAAsC;AAAA,QACxD,CAAC;AAED,YAAI,UAAU;AACZ,eAAK,aAAa,WAAW,SAAS,SAAS,KAAK,MAAM,CAAC;AAAA,QAC7D;AAEA,eAAO,KAAK,aAAa;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,YAAY;AACV,YAAI,KAAK,aAAa,QAAQ;AAC5B,iBAAO,KAAK,aAAa;AAAA,QAC3B;AAEA,eAAO,KAAK,YAAY;AAAA,MAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,cAAc,aAAa;AACzB,YAAI,aAAa;AACf,iBAAO,OAAO,KAAK,UAAU,EAAE,IAAI,EAAE,YAAY,KAAK;AAAA,QACxD;AACA,eAAO,KAAK,UAAU,EAAE,QAAQ;AAAA,MAClC;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,cAAc;AACZ,aAAK,aAAa,SAAS,CAAC;AAE5B,cAAM,SAAS,MAAM,KAAK,wBAAoB,CAAC,YAAY;AACzD,cAAI,OAAO,QAAQ,SAAS,YAAY;AACtC,mBAAO,QAAQ,KAAK,IAAI;AAAA,UAC1B;AAEA,cAAI,QAAQ,gBAAgB,OAAO;AACjC,mBAAO,QAAQ,KAAK,KAAK,eAAa,KAAK,KAAK,SAAS,CAAC;AAAA,UAC5D;AAEA,gBAAM,IAAI,MAAM,sCAAsC;AAAA,QACxD,CAAC;AAED,YAAI,QAAQ;AACV,eAAK,aAAa,SAAS,OAAO,SAAS,KAAK,MAAM,CAAC;AAAA,QACzD;AAEA,eAAO,KAAK,aAAa;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ;AACN,aAAK,aAAa;AAClB,aAAK,QAAQ;AACb,aAAK,cAAc;AACnB,aAAK,YAAY;AAEjB,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,YAAY;AACV,eAAO,MAAM,OAAO,CAAC,GAAG,KAAK,YAAY;AAAA,MAC3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAoBA,UAAU,WAAW;AACnB,cAAM,mBAAmB,CAAC;AAC1B,YAAI,wBAAwB;AAC5B,cAAM,WAAW,CAAC;AAClB,YAAI,kBAAkB;AAEtB,cAAM,iBAAiB,OAAO,KAAK,SAAS;AAE5C,uBAAe,QAAQ,CAAC,QAAQ;AAC9B,gBAAM,oBAAoB,UAAU,GAAG;AACvC,cAAI,OAAO,sBAAsB,UAAU;AACzC,qBAAS,GAAG,IAAI;AAChB,+BAAmB;AAAA,UACrB,WAAW,OAAO,sBAAsB,UAAU;AAChD,6BAAiB,GAAG,IAAI;AACxB,qCAAyB;AAAA,UAC3B;AAAA,QACF,CAAC;AAED,YAAI,wBAAwB,GAAG;AAC7B,gBAAM,sBAAsB,OAAO,KAAK,gBAAgB;AACxD,gBAAM,uBAAuB,MAAM,KAAK,qBAAqB,UAAS,KAAK,KAAK,IAAI,CAAE;AAEtF,cAAI,sBAAsB;AACxB,kBAAM,WAAW,KAAK,UAAU,iBAAiB,oBAAoB,CAAC;AAEtE,gBAAI,aAAa,QAAQ;AACvB,qBAAO;AAAA,YACT;AAAA,UACF;AAEA,gBAAM,6BAA6B,MAAM;AAAA,YACvC;AAAA,YACA,UAAS,KAAK,WAAW,IAAI;AAAA,UAC/B;AACA,cAAI,4BAA4B;AAC9B,kBAAM,iBAAiB,KAAK,UAAU,iBAAiB,0BAA0B,CAAC;AAElF,gBAAI,mBAAmB,QAAQ;AAC7B,qBAAO;AAAA,YACT;AAAA,UACF;AAAA,QACF;AAEA,YAAI,kBAAkB,GAAG;AACvB,gBAAM,eAAe,OAAO,KAAK,QAAQ;AACzC,gBAAM,qBAAqB,MAAM,KAAK,cAAc,UAAS,KAAK,UAAU,MAAM,IAAI,CAAE;AAExF,cAAI,uBAAuB,QAAQ;AACjC,mBAAO,KAAK,eAAe,SAAS,kBAAkB,CAAC;AAAA,UACzD;AAAA,QACF;AAEA,eAAO;AAAA,MACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,UAAU,aAAa,iBAAiB,OAAO;AAC7C,cAAM,qBAAqB,KAAK,eAAe,EAAE,YAAY;AAC7D,YAAI,mBAAmB,YAAY,YAAY;AAC/C,cAAM,QAAQ,MAAM,sBAAsB,gBAAgB;AAE1D,YAAI,kBAAkB,OAAO;AAC3B,6BAAmB,MAAM,YAAY;AAAA,QACvC;AACA,eAAO,qBAAqB;AAAA,MAC9B;AAAA,MAEA,eAAe,SAAS;AACtB,YAAI,kBAAkB,CAAC,CAAC;AACxB,YAAI,oBAAoB;AACxB,YAAI,UAAU;AAEd,cAAM,wBAAwB,KAAK,kBAAkB;AAErD,YAAI,OAAO,0BAA0B,UAAU;AAC7C,iBAAO;AAAA,QACT;AAEA,YAAI,QAAQ,CAAC,MAAM,OAAO,QAAQ,CAAC,MAAM,KAAK;AAC5C,8BAAoB,QAAQ,OAAO,CAAC;AACpC,cAAI,QAAQ,CAAC,MAAM,KAAK;AACtB,sBAAU;AACV,gCAAoB,QAAQ,OAAO,CAAC;AAAA,UACtC,OAAO;AACL,8BAAkB,CAAC;AAAA,UACrB;AACA,cAAI,QAAQ,CAAC,MAAM,KAAK;AACtB,4BAAgB,KAAK,CAAC;AAAA,UACxB,OAAO;AACL,4BAAgB,KAAK,EAAE;AAAA,UACzB;AAAA,QACF,WAAW,QAAQ,CAAC,MAAM,KAAK;AAC7B,8BAAoB,QAAQ,OAAO,CAAC;AAAA,QACtC,WAAW,QAAQ,CAAC,MAAM,KAAK;AAC7B,oBAAU;AACV,8BAAoB,QAAQ,OAAO,CAAC;AAAA,QACtC;AAEA,eAAO,gBAAgB;AAAA,UACrB,MAAM,gBAAgB,uBAAuB,mBAAmB,OAAO;AAAA,QACzE,IAAI;AAAA,MACN;AAAA,MAEA,KAAK,QAAQ;AACX,eAAO,KAAK,UAAU,IAAI,MAAM,OAAO,MAAM,EAAE,YAAY;AAAA,MAC7D;AAAA,MAEA,WAAW,cAAc;AACvB,eAAO,KAAK,gBAAgB,IAAI,MAAM,OAAO,YAAY,EAAE,YAAY;AAAA,MACzE;AAAA,MAEA,SAAS,YAAY;AACnB,eAAO,KAAK,cAAc,IAAI,MAAM,OAAO,UAAU,EAAE,YAAY;AAAA,MACrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,GAAG,UAAU,iBAAiB,OAAO;AACnC,eAAO,KAAK,UAAU,UAAU,cAAc,KAAK,KAAK,KAAK,QAAQ,KAChE,KAAK,WAAW,QAAQ;AAAA,MAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,KAAK,YAAY,CAAC,GAAG;AACnB,eAAO,UAAU,KAAK,cAAY,KAAK,GAAG,QAAQ,CAAC;AAAA,MACrD;AAAA,IACF;AAEA,IAAO,iBAAQ;AAAA;AAAA;;;AC/ef,IAyBM,QAmDC;AA5EP;AAAA;AAAA;AAAA;AAMA;AACA;AAkBA,IAAM,SAAN,MAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcX,OAAO,UAAU,IAAI,cAAc,OAAO;AACxC,YAAI,OAAO,OAAO,UAAU;AAC1B,gBAAM,IAAI,MAAM,8BAA8B;AAAA,QAChD;AACA,eAAO,IAAI,eAAO,IAAI,WAAW;AAAA,MACnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWA,OAAO,MAAM,IAAI;AACf,eAAQ,IAAI,eAAO,EAAE,EAAG,UAAU;AAAA,MACpC;AAAA,MAEA,WAAW,cAAc;AACvB,eAAO;AAAA,MACT;AAAA,MAEA,WAAW,aAAa;AACtB,eAAO;AAAA,MACT;AAAA,MAEA,WAAW,SAAS;AAClB,eAAO;AAAA,MACT;AAAA,MAEA,WAAW,gBAAgB;AACzB,eAAO;AAAA,MACT;AAAA,IACF;AAEA,IAAO,iBAAQ;AAAA;AAAA;;;ACtER,SAAS,UAAU,KAAK;AAC7B,MAAI,OAAO,OAAO,IAAI,SAAS,YAAY;AACzC,WAAO;AAAA,EACT,OAAO;AACL,WAAO;AAAA,EACT;AACF;AAIO,SAAS,MAAM,MAAM,aAAa;AACvC,MAAI,CAAC;AAAM,WAAO;AAClB,SAAO,IAAI,QAAQ,SAAU,KAAK;AAChC,WAAO,WAAW,WAAY;AAC5B,aAAO,IAAI,WAAW;AAAA,IACxB,GAAG,IAAI;AAAA,EACT,CAAC;AACH;AACO,SAAS,UAAU,KAAK,KAAK;AAClC,SAAO,KAAK,MAAM,KAAK,OAAO,KAAK,MAAM,MAAM,KAAK,GAAG;AACzD;AAKO,SAAS,cAAc;AAC5B,SAAO,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,CAAC;AAC/C;AAWO,SAAS,eAAe;AAC7B,MAAI,MAAK,oBAAI,KAAK,GAAE,QAAQ;AAC5B,MAAI,OAAO,QAAQ;AACjB;AACA,WAAO,KAAK,MAAO;AAAA,EACrB,OAAO;AACL,aAAS;AACT,iBAAa;AACb,WAAO,KAAK;AAAA,EACd;AACF;AACO,SAAS,kBAAkB;AAChC,MAAI,OAAO,cAAc;AAAa,WAAO;AAC7C,MAAI,cAAc,eAAO,MAAM,UAAU,SAAS;AAClD,EAAAC,KAAI,KAAK,KAAK,UAAU,WAAW,GAAG,sBAAsB;AAC5D,MAAI,0BAA0B;AAE9B,MAAI,UAAU,OAAO;AACnB,8BAA0B;AAAA,EAC5B;AAGA,MAAI,YAAY,OAAO,SAAS,eAAO,WAAW,UAAU,YAAY,OAAO,SAAS,eAAO,WAAW,OAAO;AAC/G,8BAA0B;AAAA,EAC5B;AACA,SAAO;AACT;AAtEA,IACAC,kBAYW,wBACA,uBACA,uBAmBP,QACA,YAoCOD;AAvEX;AAAA;AAAA;AAAA;AAAA;AACA,IAAAC,mBAAqB;AAYd,IAAI,yBAAyB,QAAQ,QAAQ,KAAK;AAClD,IAAI,wBAAwB,QAAQ,QAAQ,IAAI;AAChD,IAAI,wBAAwB,QAAQ,QAAQ;AAmBnD,IAAI,SAAS;AACb,IAAI,aAAa;AAoCV,IAAID,OAAM,iBAAAE,QAAS,UAAU,mBAAmB;AACvD,IAAAF,KAAI,SAAS,OAAO;AAAA;AAAA;;;ACrEb,SAAS,OAAO,aAAa;AAClC,MAAI,QAAQ;AAAA,IACV,kBAAkB;AAAA,IAClB,IAAI,IAAI,iBAAiB,WAAW;AAAA,IACpC,QAAQ,CAAC;AAAA;AAAA,EACX;AAEA,QAAM,GAAG,YAAY,SAAU,KAAK;AAClC,QAAI,MAAM,kBAAkB;AAC1B,YAAM,iBAAiB,IAAI,IAAI;AAAA,IACjC;AAAA,EACF;AACA,SAAO;AACT;AACO,SAAS,MAAM,cAAc;AAClC,eAAa,GAAG,MAAM;AACtB,eAAa,SAAS,CAAC;AACzB;AACO,SAAS,YAAY,cAAc,aAAa;AACrD,MAAI;AACF,iBAAa,GAAG,YAAY,aAAa,KAAK;AAC9C,WAAO;AAAA,EACT,SAAS,KAAP;AACA,WAAO,QAAQ,OAAO,GAAG;AAAA,EAC3B;AACF;AACO,SAAS,UAAU,cAAc,IAAI;AAC1C,eAAa,mBAAmB;AAClC;AACO,SAAS,UAAU,SAAS;AAKjC,MAAI,OAAO,WAAW;AAAa,WAAO;AAC1C,MAAI,CAAC,QAAQ;AAAY,WAAO;AAChC,MAAI,OAAO,qBAAqB,YAAY;AAC1C,QAAI,iBAAiB,SAAS;AAC5B,YAAM,IAAI,MAAM,qGAAqG;AAAA,IACvH;AACA,WAAO;AAAA,EACT;AAAO,WAAO;AAChB;AACO,SAAS,sBAAsB;AACpC,SAAO;AACT;AAhDA,IACWG,eACA,MA+CJ;AAjDP;AAAA;AAAA;AAAA;AAAA;AACO,IAAIA,gBAAe;AACnB,IAAI,OAAO;AA+ClB,IAAO,iBAAQ;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,cAAcA;AAAA,IAChB;AAAA;AAAA;;;ACRM,SAAU,mBACZ,cAA0B;AAE1B,MAAM,YAAY,IAAG,IAAK,aAAa;AACvC,MAAM,WAAW,aAAa,IAAI,OAAO,QAAQ,EAAC;AAMlD,SAAO,MAAM;AAET,QAAM,OAAO,SAAS,KAAI,EAAG;AAE7B,QAAI,CAAC,MAAM;AACP;;AAEJ,QAAMC,SAAQ,KAAK,CAAC;AACpB,QAAM,OAAO,KAAK,CAAC;AACnB,QAAI,OAAO,WAAW;AAClB,mBAAa,IAAI,OAAOA,MAAK;WAC1B;AAEH;;;AAGZ;AAEM,SAAU,MAAG;AACf,UAAO,oBAAI,KAAI,GAAG,QAAO;AAC7B;AA/EA,IAKA;AALA;;;;AAKA,IAAA;IAAA,WAAA;AAQI,eAAAC,cACoB,KAAW;AAAX,aAAA,MAAA;AARJ,aAAA,MAAM,oBAAI,IAAG;AAMtB,aAAA,MAAe;MAGlB;AAEJ,MAAAA,cAAA,UAAA,MAAA,SAAID,QAAQ;AACR,eAAO,KAAK,IAAI,IAAIA,MAAK;MAC7B;AAEA,MAAAC,cAAA,UAAA,MAAA,SAAID,QAAQ;AAAZ,YAAA,QAAA;AACI,aAAK,IAAI,IAAIA,QAAO,IAAG,CAAE;AAQzB,YAAI,CAAC,KAAK,KAAK;AACX,eAAK,MAAM;AACX,qBAAW,WAAA;AACP,kBAAK,MAAM;AACX,+BAAmB,KAAI;UAC3B,GAAG,CAAC;;MAEZ;AAEA,MAAAC,cAAA,UAAA,QAAA,WAAA;AACI,aAAK,IAAI,MAAK;MAClB;AACJ,aAAAA;IAAA,EArCA;;;;;ACLO,SAAS,0BAA0B;AACxC,MAAI,kBAAkB,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,CAAC;AAC3F,MAAI,UAAU,KAAK,MAAM,KAAK,UAAU,eAAe,CAAC;AACxD,MAAI,OAAO,QAAQ,eAAe;AAAa,YAAQ,aAAa,gBAAgB;AAGpF,MAAI,OAAO,QAAQ,qBAAqB;AAAa,YAAQ,mBAAmB;AAGhF,MAAI,CAAC,QAAQ;AAAK,YAAQ,MAAM,CAAC;AAEjC,MAAI,CAAC,QAAQ,IAAI;AAAK,YAAQ,IAAI,MAAM,MAAO;AAC/C,MAAI,CAAC,QAAQ,IAAI;AAAkB,YAAQ,IAAI,mBAAmB;AAElE,MAAI,gBAAgB,OAAO,OAAO,gBAAgB,IAAI,YAAY;AAAY,YAAQ,IAAI,UAAU,gBAAgB,IAAI;AAGxH,MAAI,CAAC,QAAQ;AAAc,YAAQ,eAAe,CAAC;AACnD,MAAI,CAAC,QAAQ,aAAa;AAAe,YAAQ,aAAa,gBAAgB,MAAO;AAGrF,MAAI,CAAC,QAAQ;AAAQ,YAAQ,SAAS,CAAC;AACvC,MAAI,CAAC,QAAQ,OAAO;AAAK,YAAQ,OAAO,MAAM;AAC9C,MAAI,CAAC,QAAQ,OAAO;AAAe,YAAQ,OAAO,gBAAgB,MAAO,KAAK;AAG9E,MAAI,gBAAgB;AAAS,YAAQ,UAAU,gBAAgB;AAC/D,SAAO;AACT;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACwBO,SAAS,SAAS;AACvB,MAAI,OAAO,cAAc;AAAa,WAAO;AAC7C,MAAI,OAAO,WAAW,aAAa;AACjC,QAAI,OAAO,OAAO,iBAAiB;AAAa,aAAO,OAAO;AAC9D,QAAI,OAAO,OAAO,oBAAoB;AAAa,aAAO,OAAO;AACjE,QAAI,OAAO,OAAO,gBAAgB;AAAa,aAAO,OAAO;AAAA,EAC/D;AACA,SAAO;AACT;AAOO,SAAS,2BAA2B,IAAI;AAC7C,MAAI,GAAG,QAAQ;AACb,OAAG,OAAO;AAAA,EACZ;AACF;AACO,SAAS,eAAe,aAAa;AAC1C,MAAI,YAAY,OAAO;AAGvB,MAAI,SAAS,YAAY;AAOzB,MAAI,cAAc,UAAU,KAAK,MAAM;AACvC,cAAY,kBAAkB,SAAU,IAAI;AAC1C,QAAI,KAAK,GAAG,OAAO;AACnB,OAAG,kBAAkB,iBAAiB;AAAA,MACpC,SAAS;AAAA,MACT,eAAe;AAAA,IACjB,CAAC;AAAA,EACH;AACA,MAAI,YAAY,IAAI,QAAQ,SAAU,KAAK,KAAK;AAC9C,gBAAY,UAAU,SAAU,IAAI;AAClC,aAAO,IAAI,EAAE;AAAA,IACf;AACA,gBAAY,YAAY,WAAY;AAClC,UAAI,YAAY,MAAM;AAAA,IACxB;AAAA,EACF,CAAC;AACD,SAAO;AACT;AAMO,SAAS,aAAa,IAAI,YAAY,aAAa;AACxD,MAAI,QAAO,oBAAI,KAAK,GAAE,QAAQ;AAC9B,MAAI,cAAc;AAAA,IAChB,MAAM;AAAA,IACN;AAAA,IACA,MAAM;AAAA,EACR;AACA,MAAI,KAAK,GAAG,YAAY,CAAC,eAAe,GAAG,aAAa,oBAAoB;AAC5E,SAAO,IAAI,QAAQ,SAAU,KAAK,KAAK;AACrC,OAAG,aAAa,WAAY;AAC1B,aAAO,IAAI;AAAA,IACb;AACA,OAAG,UAAU,SAAU,IAAI;AACzB,aAAO,IAAI,EAAE;AAAA,IACf;AACA,QAAI,cAAc,GAAG,YAAY,eAAe;AAChD,gBAAY,IAAI,WAAW;AAC3B,+BAA2B,EAAE;AAAA,EAC/B,CAAC;AACH;AAmBO,SAAS,sBAAsB,IAAI,cAAc;AACtD,MAAI,KAAK,GAAG,YAAY,iBAAiB,YAAY,oBAAoB;AACzE,MAAI,cAAc,GAAG,YAAY,eAAe;AAChD,MAAI,MAAM,CAAC;AACX,MAAI,gBAAgB,YAAY,MAAM,eAAe,GAAG,QAAQ;AAOhE,MAAI,YAAY,QAAQ;AACtB,QAAI,gBAAgB,YAAY,OAAO,aAAa;AACpD,WAAO,IAAI,QAAQ,SAAU,KAAK,KAAK;AACrC,oBAAc,UAAU,SAAU,KAAK;AACrC,eAAO,IAAI,GAAG;AAAA,MAChB;AACA,oBAAc,YAAY,SAAUC,IAAG;AACrC,YAAIA,GAAE,OAAO,MAAM;AAAA,MACrB;AAAA,IACF,CAAC;AAAA,EACH;AACA,WAAS,aAAa;AAIpB,QAAI;AACF,sBAAgB,YAAY,MAAM,eAAe,GAAG,QAAQ;AAC5D,aAAO,YAAY,WAAW,aAAa;AAAA,IAC7C,SAASA,IAAP;AACA,aAAO,YAAY,WAAW;AAAA,IAChC;AAAA,EACF;AACA,SAAO,IAAI,QAAQ,SAAU,KAAK,KAAK;AACrC,QAAI,oBAAoB,WAAW;AACnC,sBAAkB,UAAU,SAAU,KAAK;AACzC,aAAO,IAAI,GAAG;AAAA,IAChB;AACA,sBAAkB,YAAY,SAAU,IAAI;AAC1C,UAAI,SAAS,GAAG,OAAO;AACvB,UAAI,QAAQ;AACV,YAAI,OAAO,MAAM,KAAK,eAAe,GAAG;AACtC,iBAAO,UAAU,EAAE,eAAe,CAAC;AAAA,QACrC,OAAO;AACL,cAAI,KAAK,OAAO,KAAK;AACrB,iBAAO,UAAU,EAAE;AAAA,QACrB;AAAA,MACF,OAAO;AACL,mCAA2B,EAAE;AAC7B,YAAI,GAAG;AAAA,MACT;AAAA,IACF;AAAA,EACF,CAAC;AACH;AACO,SAAS,mBAAmB,IAAI,KAAK;AAC1C,MAAI,KAAK,GAAG,YAAY,CAAC,eAAe,GAAG,aAAa,oBAAoB;AAC5E,MAAI,cAAc,GAAG,YAAY,eAAe;AAChD,SAAO,QAAQ,IAAI,IAAI,IAAI,SAAU,IAAI;AACvC,QAAI,gBAAgB,YAAY,QAAQ,EAAE,EAAE;AAC5C,WAAO,IAAI,QAAQ,SAAU,KAAK;AAChC,oBAAc,YAAY,WAAY;AACpC,eAAO,IAAI;AAAA,MACb;AAAA,IACF,CAAC;AAAA,EACH,CAAC,CAAC;AACJ;AACO,SAAS,eAAe,IAAI,KAAK;AACtC,MAAI,aAAY,oBAAI,KAAK,GAAE,QAAQ,IAAI;AACvC,MAAI,KAAK,GAAG,YAAY,iBAAiB,YAAY,oBAAoB;AACzE,MAAI,cAAc,GAAG,YAAY,eAAe;AAChD,MAAI,MAAM,CAAC;AACX,SAAO,IAAI,QAAQ,SAAU,KAAK;AAChC,gBAAY,WAAW,EAAE,YAAY,SAAU,IAAI;AACjD,UAAI,SAAS,GAAG,OAAO;AACvB,UAAI,QAAQ;AACV,YAAI,SAAS,OAAO;AACpB,YAAI,OAAO,OAAO,WAAW;AAC3B,cAAI,KAAK,MAAM;AAEf,iBAAO,UAAU,EAAE;AAAA,QACrB,OAAO;AAEL,qCAA2B,EAAE;AAC7B,cAAI,GAAG;AACP;AAAA,QACF;AAAA,MACF,OAAO;AACL,YAAI,GAAG;AAAA,MACT;AAAA,IACF;AAAA,EACF,CAAC;AACH;AACO,SAAS,iBAAiB,IAAI,KAAK;AACxC,SAAO,eAAe,IAAI,GAAG,EAAE,KAAK,SAAU,QAAQ;AACpD,WAAO,mBAAmB,IAAI,OAAO,IAAI,SAAU,KAAK;AACtD,aAAO,IAAI;AAAA,IACb,CAAC,CAAC;AAAA,EACJ,CAAC;AACH;AACO,SAASC,QAAO,aAAa,SAAS;AAC3C,YAAU,wBAAwB,OAAO;AACzC,SAAO,eAAe,WAAW,EAAE,KAAK,SAAU,IAAI;AACpD,QAAI,QAAQ;AAAA,MACV,QAAQ;AAAA,MACR,cAAc;AAAA,MACd;AAAA,MACA;AAAA,MACA,MAAM,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMlB,MAAM,IAAI,aAAa,QAAQ,IAAI,MAAM,CAAC;AAAA;AAAA,MAE1C,mBAAmB;AAAA,MACnB,kBAAkB;AAAA,MAClB,mBAAmB,CAAC;AAAA,MACpB;AAAA,IACF;AAQA,OAAG,UAAU,WAAY;AACvB,YAAM,SAAS;AACf,UAAI,QAAQ,IAAI;AAAS,gBAAQ,IAAI,QAAQ;AAAA,IAC/C;AAOA,cAAU,KAAK;AACf,WAAO;AAAA,EACT,CAAC;AACH;AACA,SAAS,UAAU,OAAO;AACxB,MAAI,MAAM;AAAQ;AAClB,kBAAgB,KAAK,EAAE,KAAK,WAAY;AACtC,WAAO,MAAM,MAAM,QAAQ,IAAI,gBAAgB;AAAA,EACjD,CAAC,EAAE,KAAK,WAAY;AAClB,WAAO,UAAU,KAAK;AAAA,EACxB,CAAC;AACH;AACA,SAAS,eAAe,QAAQ,OAAO;AACrC,MAAI,OAAO,SAAS,MAAM;AAAM,WAAO;AACvC,MAAI,MAAM,KAAK,IAAI,OAAO,EAAE;AAAG,WAAO;AACtC,MAAI,OAAO,KAAK,OAAO,MAAM;AAAsB,WAAO;AAC1D,SAAO;AACT;AAKA,SAAS,gBAAgB,OAAO;AAE9B,MAAI,MAAM;AAAQ,WAAO;AAGzB,MAAI,CAAC,MAAM;AAAkB,WAAO;AACpC,SAAO,sBAAsB,MAAM,IAAI,MAAM,YAAY,EAAE,KAAK,SAAU,eAAe;AACvF,QAAI,cAAc,cAKd,OAAO,SAAU,QAAQ;AAC3B,aAAO,CAAC,CAAC;AAAA,IACX,CAAC,EAAE,IAAI,SAAU,QAAQ;AACvB,UAAI,OAAO,KAAK,MAAM,cAAc;AAClC,cAAM,eAAe,OAAO;AAAA,MAC9B;AACA,aAAO;AAAA,IACT,CAAC,EAAE,OAAO,SAAU,QAAQ;AAC1B,aAAO,eAAe,QAAQ,KAAK;AAAA,IACrC,CAAC,EAAE,KAAK,SAAU,SAAS,SAAS;AAClC,aAAO,QAAQ,OAAO,QAAQ;AAAA,IAChC,CAAC;AACD,gBAAY,QAAQ,SAAU,QAAQ;AACpC,UAAI,MAAM,kBAAkB;AAC1B,cAAM,KAAK,IAAI,OAAO,EAAE;AACxB,cAAM,iBAAiB,OAAO,IAAI;AAAA,MACpC;AAAA,IACF,CAAC;AACD,WAAO;AAAA,EACT,CAAC;AACH;AACO,SAASC,OAAM,cAAc;AAClC,eAAa,SAAS;AACtB,eAAa,GAAG,MAAM;AACxB;AACO,SAASC,aAAY,cAAc,aAAa;AACrD,eAAa,oBAAoB,aAAa,kBAAkB,KAAK,WAAY;AAC/E,WAAO,aAAa,aAAa,IAAI,aAAa,MAAM,WAAW;AAAA,EACrE,CAAC,EAAE,KAAK,WAAY;AAClB,QAAI,UAAU,GAAG,EAAE,MAAM,GAAG;AAE1B,uBAAiB,aAAa,IAAI,aAAa,QAAQ,IAAI,GAAG;AAAA,IAChE;AAAA,EACF,CAAC;AACD,SAAO,aAAa;AACtB;AACO,SAASC,WAAU,cAAc,IAAI,MAAM;AAChD,eAAa,uBAAuB;AACpC,eAAa,mBAAmB;AAChC,kBAAgB,YAAY;AAC9B;AACO,SAASC,WAAU,SAAS;AACjC,MAAI,CAAC,QAAQ;AAAY,WAAO;AAChC,MAAI,MAAM,OAAO;AACjB,MAAI,CAAC;AAAK,WAAO;AACjB,SAAO;AACT;AACO,SAASC,qBAAoB,SAAS;AAC3C,SAAO,QAAQ,IAAI,mBAAmB;AACxC;AAhVA,IAUWC,eAGP,WACA,iBAMO,sBAGAC,OA0TJ;AAjVP;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AAFO,IAAID,gBAAe;AAG1B,IAAI,YAAY;AAChB,IAAI,kBAAkB;AAMf,IAAI,uBAAuB;AAAA,MAChC,YAAY;AAAA,IACd;AACO,IAAIC,QAAO;AA0TlB,IAAO,qBAAQ;AAAA,MACb,QAAQP;AAAA,MACR,OAAOC;AAAA,MACP,WAAWE;AAAA,MACX,aAAaD;AAAA,MACb,WAAWE;AAAA,MACX,MAAMG;AAAA,MACN,qBAAqBF;AAAA,MACrB,cAAcC;AAAA,IAChB;AAAA;AAAA;;;ACvUO,SAAS,kBAAkB;AAChC,MAAIE;AACJ,MAAI,OAAO,WAAW;AAAa,WAAO;AAC1C,MAAI;AACF,IAAAA,gBAAe,OAAO;AACtB,IAAAA,gBAAe,OAAO,2BAA2B,KAAK,OAAO;AAAA,EAC/D,SAASC,IAAP;AAAA,EAIF;AACA,SAAOD;AACT;AACO,SAAS,WAAW,aAAa;AACtC,SAAO,aAAa;AACtB;AAMO,SAASE,aAAY,cAAc,aAAa;AACrD,SAAO,IAAI,QAAQ,SAAU,KAAK;AAChC,UAAM,EAAE,KAAK,WAAY;AACvB,UAAI,MAAM,WAAW,aAAa,WAAW;AAC7C,UAAI,WAAW;AAAA,QACb,OAAO,YAAY;AAAA,QACnB,OAAM,oBAAI,KAAK,GAAE,QAAQ;AAAA,QACzB,MAAM;AAAA,QACN,MAAM,aAAa;AAAA,MACrB;AACA,UAAIC,SAAQ,KAAK,UAAU,QAAQ;AACnC,sBAAgB,EAAE,QAAQ,KAAKA,MAAK;AAOpC,UAAI,KAAK,SAAS,YAAY,OAAO;AACrC,SAAG,UAAU,WAAW,MAAM,IAAI;AAClC,SAAG,MAAM;AACT,SAAG,WAAWA;AACd,aAAO,cAAc,EAAE;AACvB,UAAI;AAAA,IACN,CAAC;AAAA,EACH,CAAC;AACH;AACO,SAAS,wBAAwB,aAAa,IAAI;AACvD,MAAI,MAAM,WAAW,WAAW;AAChC,MAAI,WAAW,SAASC,UAAS,IAAI;AACnC,QAAI,GAAG,QAAQ,KAAK;AAClB,SAAG,KAAK,MAAM,GAAG,QAAQ,CAAC;AAAA,IAC5B;AAAA,EACF;AACA,SAAO,iBAAiB,WAAW,QAAQ;AAC3C,SAAO;AACT;AACO,SAAS,2BAA2B,UAAU;AACnD,SAAO,oBAAoB,WAAW,QAAQ;AAChD;AACO,SAASC,QAAO,aAAa,SAAS;AAC3C,YAAU,wBAAwB,OAAO;AACzC,MAAI,CAACC,WAAU,OAAO,GAAG;AACvB,UAAM,IAAI,MAAM,+CAA+C;AAAA,EACjE;AACA,MAAI,OAAO,YAAY;AAOvB,MAAI,OAAO,IAAI,aAAa,QAAQ,aAAa,aAAa;AAC9D,MAAI,QAAQ;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA;AAAA,EACF;AAEA,QAAM,WAAW,wBAAwB,aAAa,SAAU,QAAQ;AACtE,QAAI,CAAC,MAAM;AAAkB;AAC7B,QAAI,OAAO,SAAS;AAAM;AAC1B,QAAI,CAAC,OAAO,SAAS,KAAK,IAAI,OAAO,KAAK;AAAG;AAC7C,QAAI,OAAO,KAAK,QAAQ,OAAO,KAAK,OAAO,MAAM;AAAsB;AAEvE,SAAK,IAAI,OAAO,KAAK;AACrB,UAAM,iBAAiB,OAAO,IAAI;AAAA,EACpC,CAAC;AACD,SAAO;AACT;AACO,SAASC,OAAM,cAAc;AAClC,6BAA2B,aAAa,QAAQ;AAClD;AACO,SAASC,WAAU,cAAc,IAAI,MAAM;AAChD,eAAa,uBAAuB;AACpC,eAAa,mBAAmB;AAClC;AACO,SAASF,WAAU,SAAS;AACjC,MAAI,CAAC,QAAQ;AAAY,WAAO;AAChC,MAAI,KAAK,gBAAgB;AACzB,MAAI,CAAC;AAAI,WAAO;AAChB,MAAI;AACF,QAAI,MAAM;AACV,OAAG,QAAQ,KAAK,OAAO;AACvB,OAAG,WAAW,GAAG;AAAA,EACnB,SAASL,IAAP;AAIA,WAAO;AAAA,EACT;AACA,SAAO;AACT;AACO,SAASQ,uBAAsB;AACpC,MAAI,cAAc;AAClB,MAAI,YAAY,UAAU,UAAU,YAAY;AAChD,MAAI,UAAU,SAAS,QAAQ,KAAK,CAAC,UAAU,SAAS,QAAQ,GAAG;AAEjE,WAAO,cAAc;AAAA,EACvB;AACA,SAAO;AACT;AA7IA,IAWWC,eACP,YACOC,OAiIJ;AA9IP;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACO,IAAID,gBAAe;AAC1B,IAAI,aAAa;AACV,IAAIC,QAAO;AAiIlB,IAAO,uBAAQ;AAAA,MACb,QAAQN;AAAA,MACR,OAAOE;AAAA,MACP,WAAWC;AAAA,MACX,aAAaN;AAAA,MACb,WAAWI;AAAA,MACX,MAAMK;AAAA,MACN,qBAAqBF;AAAA,MACrB,cAAcC;AAAA,IAChB;AAAA;AAAA;;;ACvJA,IAAM,cAQA,sBAIA;AAZN;AAAA;AAAA;AAAA;AAAA,IAAM,eAAe,uBAAO,OAAO,IAAI;AACvC,iBAAa,MAAM,IAAI;AACvB,iBAAa,OAAO,IAAI;AACxB,iBAAa,MAAM,IAAI;AACvB,iBAAa,MAAM,IAAI;AACvB,iBAAa,SAAS,IAAI;AAC1B,iBAAa,SAAS,IAAI;AAC1B,iBAAa,MAAM,IAAI;AACvB,IAAM,uBAAuB,uBAAO,OAAO,IAAI;AAC/C,WAAO,KAAK,YAAY,EAAE,QAAQ,SAAO;AACrC,2BAAqB,aAAa,GAAG,CAAC,IAAI;AAAA,IAC9C,CAAC;AACD,IAAM,eAAe,EAAE,MAAM,SAAS,MAAM,eAAe;AAAA;AAAA;;;ACZ3D,IACM,gBAGA,uBAEA,QAKA,cAqBA,oBAQC;AAxCP;AAAA;AAAA;AAAA;AAAA;AACA,IAAM,iBAAiB,OAAO,SAAS,cAClC,OAAO,SAAS,eACb,OAAO,UAAU,SAAS,KAAK,IAAI,MAAM;AACjD,IAAM,wBAAwB,OAAO,gBAAgB;AAErD,IAAM,SAAS,SAAO;AAClB,aAAO,OAAO,YAAY,WAAW,aAC/B,YAAY,OAAO,GAAG,IACtB,OAAO,IAAI,kBAAkB;AAAA,IACvC;AACA,IAAM,eAAe,CAAC,EAAE,MAAAE,OAAM,KAAK,GAAG,gBAAgB,aAAa;AAC/D,UAAI,kBAAkB,gBAAgB,MAAM;AACxC,YAAI,gBAAgB;AAChB,iBAAO,SAAS,IAAI;AAAA,QACxB,OACK;AACD,iBAAO,mBAAmB,MAAM,QAAQ;AAAA,QAC5C;AAAA,MACJ,WACS,0BACJ,gBAAgB,eAAe,OAAO,IAAI,IAAI;AAC/C,YAAI,gBAAgB;AAChB,iBAAO,SAAS,IAAI;AAAA,QACxB,OACK;AACD,iBAAO,mBAAmB,IAAI,KAAK,CAAC,IAAI,CAAC,GAAG,QAAQ;AAAA,QACxD;AAAA,MACJ;AAEA,aAAO,SAAS,aAAaA,KAAI,KAAK,QAAQ,GAAG;AAAA,IACrD;AACA,IAAM,qBAAqB,CAAC,MAAM,aAAa;AAC3C,YAAM,aAAa,IAAI,WAAW;AAClC,iBAAW,SAAS,WAAY;AAC5B,cAAM,UAAU,WAAW,OAAO,MAAM,GAAG,EAAE,CAAC;AAC9C,iBAAS,OAAO,WAAW,GAAG;AAAA,MAClC;AACA,aAAO,WAAW,cAAc,IAAI;AAAA,IACxC;AACA,IAAO,+BAAQ;AAAA;AAAA;;;ACxCf,IACM,OAEA,QAoBO;AAvBb;AAAA;AAAA;AAAA;AACA,IAAM,QAAQ;AAEd,IAAM,SAAS,OAAO,eAAe,cAAc,CAAC,IAAI,IAAI,WAAW,GAAG;AAC1E,aAASC,KAAI,GAAGA,KAAI,MAAM,QAAQA,MAAK;AACnC,aAAO,MAAM,WAAWA,EAAC,CAAC,IAAIA;AAAA,IAClC;AAiBO,IAAM,SAAS,CAAC,WAAW;AAC9B,UAAI,eAAe,OAAO,SAAS,MAAM,MAAM,OAAO,QAAQA,IAAG,IAAI,GAAG,UAAU,UAAU,UAAU;AACtG,UAAI,OAAO,OAAO,SAAS,CAAC,MAAM,KAAK;AACnC;AACA,YAAI,OAAO,OAAO,SAAS,CAAC,MAAM,KAAK;AACnC;AAAA,QACJ;AAAA,MACJ;AACA,YAAM,cAAc,IAAI,YAAY,YAAY,GAAG,QAAQ,IAAI,WAAW,WAAW;AACrF,WAAKA,KAAI,GAAGA,KAAI,KAAKA,MAAK,GAAG;AACzB,mBAAW,OAAO,OAAO,WAAWA,EAAC,CAAC;AACtC,mBAAW,OAAO,OAAO,WAAWA,KAAI,CAAC,CAAC;AAC1C,mBAAW,OAAO,OAAO,WAAWA,KAAI,CAAC,CAAC;AAC1C,mBAAW,OAAO,OAAO,WAAWA,KAAI,CAAC,CAAC;AAC1C,cAAM,GAAG,IAAK,YAAY,IAAM,YAAY;AAC5C,cAAM,GAAG,KAAM,WAAW,OAAO,IAAM,YAAY;AACnD,cAAM,GAAG,KAAM,WAAW,MAAM,IAAM,WAAW;AAAA,MACrD;AACA,aAAO;AAAA,IACX;AAAA;AAAA;;;AC1CA,IAEMC,wBACA,cA2BA,oBASA,WASC;AAhDP;AAAA;AAAA;AAAA;AAAA;AACA;AACA,IAAMA,yBAAwB,OAAO,gBAAgB;AACrD,IAAM,eAAe,CAAC,eAAe,eAAe;AAChD,UAAI,OAAO,kBAAkB,UAAU;AACnC,eAAO;AAAA,UACH,MAAM;AAAA,UACN,MAAM,UAAU,eAAe,UAAU;AAAA,QAC7C;AAAA,MACJ;AACA,YAAMC,QAAO,cAAc,OAAO,CAAC;AACnC,UAAIA,UAAS,KAAK;AACd,eAAO;AAAA,UACH,MAAM;AAAA,UACN,MAAM,mBAAmB,cAAc,UAAU,CAAC,GAAG,UAAU;AAAA,QACnE;AAAA,MACJ;AACA,YAAM,aAAa,qBAAqBA,KAAI;AAC5C,UAAI,CAAC,YAAY;AACb,eAAO;AAAA,MACX;AACA,aAAO,cAAc,SAAS,IACxB;AAAA,QACE,MAAM,qBAAqBA,KAAI;AAAA,QAC/B,MAAM,cAAc,UAAU,CAAC;AAAA,MACnC,IACE;AAAA,QACE,MAAM,qBAAqBA,KAAI;AAAA,MACnC;AAAA,IACR;AACA,IAAM,qBAAqB,CAAC,MAAM,eAAe;AAC7C,UAAID,wBAAuB;AACvB,cAAM,UAAU,OAAO,IAAI;AAC3B,eAAO,UAAU,SAAS,UAAU;AAAA,MACxC,OACK;AACD,eAAO,EAAE,QAAQ,MAAM,KAAK;AAAA,MAChC;AAAA,IACJ;AACA,IAAM,YAAY,CAAC,MAAM,eAAe;AACpC,cAAQ,YAAY;AAAA,QAChB,KAAK;AACD,iBAAO,gBAAgB,cAAc,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI;AAAA,QAC5D,KAAK;AAAA,QACL;AACI,iBAAO;AAAA,MACf;AAAA,IACJ;AACA,IAAO,+BAAQ;AAAA;AAAA;;;AChDf,IAEM,WACA,eAeA,eAYO;AA9Bb;AAAA;AAAA;AAAA;AAAA;AACA;AACA,IAAM,YAAY,OAAO,aAAa,EAAE;AACxC,IAAM,gBAAgB,CAAC,SAAS,aAAa;AAEzC,YAAME,UAAS,QAAQ;AACvB,YAAM,iBAAiB,IAAI,MAAMA,OAAM;AACvC,UAAI,QAAQ;AACZ,cAAQ,QAAQ,CAAC,QAAQC,OAAM;AAE3B,qCAAa,QAAQ,OAAO,mBAAiB;AACzC,yBAAeA,EAAC,IAAI;AACpB,cAAI,EAAE,UAAUD,SAAQ;AACpB,qBAAS,eAAe,KAAK,SAAS,CAAC;AAAA,UAC3C;AAAA,QACJ,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,IAAM,gBAAgB,CAAC,gBAAgB,eAAe;AAClD,YAAM,iBAAiB,eAAe,MAAM,SAAS;AACrD,YAAM,UAAU,CAAC;AACjB,eAASC,KAAI,GAAGA,KAAI,eAAe,QAAQA,MAAK;AAC5C,cAAM,gBAAgB,6BAAa,eAAeA,EAAC,GAAG,UAAU;AAChE,gBAAQ,KAAK,aAAa;AAC1B,YAAI,cAAc,SAAS,SAAS;AAChC;AAAA,QACJ;AAAA,MACJ;AACA,aAAO;AAAA,IACX;AACO,IAAM,WAAW;AAAA;AAAA;;;ACxBjB,SAAS,QAAQ,KAAK;AAC3B,MAAI;AAAK,WAAO,MAAM,GAAG;AAC3B;AAUA,SAAS,MAAM,KAAK;AAClB,WAAS,OAAO,QAAQ,WAAW;AACjC,QAAI,GAAG,IAAI,QAAQ,UAAU,GAAG;AAAA,EAClC;AACA,SAAO;AACT;AAvBA;AAAA;AAAA;AAAA;AAkCA,YAAQ,UAAU,KAClB,QAAQ,UAAU,mBAAmB,SAAS,OAAO,IAAG;AACtD,WAAK,aAAa,KAAK,cAAc,CAAC;AACtC,OAAC,KAAK,WAAW,MAAM,KAAK,IAAI,KAAK,WAAW,MAAM,KAAK,KAAK,CAAC,GAC9D,KAAK,EAAE;AACV,aAAO;AAAA,IACT;AAYA,YAAQ,UAAU,OAAO,SAAS,OAAO,IAAG;AAC1C,eAASC,MAAK;AACZ,aAAK,IAAI,OAAOA,GAAE;AAClB,WAAG,MAAM,MAAM,SAAS;AAAA,MAC1B;AAEA,MAAAA,IAAG,KAAK;AACR,WAAK,GAAG,OAAOA,GAAE;AACjB,aAAO;AAAA,IACT;AAYA,YAAQ,UAAU,MAClB,QAAQ,UAAU,iBAClB,QAAQ,UAAU,qBAClB,QAAQ,UAAU,sBAAsB,SAAS,OAAO,IAAG;AACzD,WAAK,aAAa,KAAK,cAAc,CAAC;AAGtC,UAAI,KAAK,UAAU,QAAQ;AACzB,aAAK,aAAa,CAAC;AACnB,eAAO;AAAA,MACT;AAGA,UAAI,YAAY,KAAK,WAAW,MAAM,KAAK;AAC3C,UAAI,CAAC;AAAW,eAAO;AAGvB,UAAI,KAAK,UAAU,QAAQ;AACzB,eAAO,KAAK,WAAW,MAAM,KAAK;AAClC,eAAO;AAAA,MACT;AAGA,UAAI;AACJ,eAASC,KAAI,GAAGA,KAAI,UAAU,QAAQA,MAAK;AACzC,aAAK,UAAUA,EAAC;AAChB,YAAI,OAAO,MAAM,GAAG,OAAO,IAAI;AAC7B,oBAAU,OAAOA,IAAG,CAAC;AACrB;AAAA,QACF;AAAA,MACF;AAIA,UAAI,UAAU,WAAW,GAAG;AAC1B,eAAO,KAAK,WAAW,MAAM,KAAK;AAAA,MACpC;AAEA,aAAO;AAAA,IACT;AAUA,YAAQ,UAAU,OAAO,SAAS,OAAM;AACtC,WAAK,aAAa,KAAK,cAAc,CAAC;AAEtC,UAAI,OAAO,IAAI,MAAM,UAAU,SAAS,CAAC,GACrC,YAAY,KAAK,WAAW,MAAM,KAAK;AAE3C,eAASA,KAAI,GAAGA,KAAI,UAAU,QAAQA,MAAK;AACzC,aAAKA,KAAI,CAAC,IAAI,UAAUA,EAAC;AAAA,MAC3B;AAEA,UAAI,WAAW;AACb,oBAAY,UAAU,MAAM,CAAC;AAC7B,iBAASA,KAAI,GAAG,MAAM,UAAU,QAAQA,KAAI,KAAK,EAAEA,IAAG;AACpD,oBAAUA,EAAC,EAAE,MAAM,MAAM,IAAI;AAAA,QAC/B;AAAA,MACF;AAEA,aAAO;AAAA,IACT;AAGA,YAAQ,UAAU,eAAe,QAAQ,UAAU;AAUnD,YAAQ,UAAU,YAAY,SAAS,OAAM;AAC3C,WAAK,aAAa,KAAK,cAAc,CAAC;AACtC,aAAO,KAAK,WAAW,MAAM,KAAK,KAAK,CAAC;AAAA,IAC1C;AAUA,YAAQ,UAAU,eAAe,SAAS,OAAM;AAC9C,aAAO,CAAC,CAAE,KAAK,UAAU,KAAK,EAAE;AAAA,IAClC;AAAA;AAAA;;;ACxKA,IAAa;AAAb;AAAA;AAAA;AAAA;AAAO,IAAM,kBAAkB,MAAM;AACjC,UAAI,OAAO,SAAS,aAAa;AAC7B,eAAO;AAAA,MACX,WACS,OAAO,WAAW,aAAa;AACpC,eAAO;AAAA,MACX,OACK;AACD,eAAO,SAAS,aAAa,EAAE;AAAA,MACnC;AAAA,IACJ,GAAG;AAAA;AAAA;;;ACTI,SAAS,KAAK,QAAQ,MAAM;AAC/B,SAAO,KAAK,OAAO,CAAC,KAAK,MAAM;AAC3B,QAAI,IAAI,eAAe,CAAC,GAAG;AACvB,UAAI,CAAC,IAAI,IAAI,CAAC;AAAA,IAClB;AACA,WAAO;AAAA,EACX,GAAG,CAAC,CAAC;AACT;AAIO,SAAS,sBAAsB,KAAK,MAAM;AAC7C,MAAI,KAAK,iBAAiB;AACtB,QAAI,eAAe,mBAAmB,KAAK,cAAU;AACrD,QAAI,iBAAiB,qBAAqB,KAAK,cAAU;AAAA,EAC7D,OACK;AACD,QAAI,eAAe,eAAW,WAAW,KAAK,cAAU;AACxD,QAAI,iBAAiB,eAAW,aAAa,KAAK,cAAU;AAAA,EAChE;AACJ;AAIO,SAAS,WAAW,KAAK;AAC5B,MAAI,OAAO,QAAQ,UAAU;AACzB,WAAO,WAAW,GAAG;AAAA,EACzB;AAEA,SAAO,KAAK,MAAM,IAAI,cAAc,IAAI,QAAQ,eAAe;AACnE;AACA,SAAS,WAAW,KAAK;AACrB,MAAI,IAAI,GAAGC,UAAS;AACpB,WAASC,KAAI,GAAG,IAAI,IAAI,QAAQA,KAAI,GAAGA,MAAK;AACxC,QAAI,IAAI,WAAWA,EAAC;AACpB,QAAI,IAAI,KAAM;AACV,MAAAD,WAAU;AAAA,IACd,WACS,IAAI,MAAO;AAChB,MAAAA,WAAU;AAAA,IACd,WACS,IAAI,SAAU,KAAK,OAAQ;AAChC,MAAAA,WAAU;AAAA,IACd,OACK;AACD,MAAAC;AACA,MAAAD,WAAU;AAAA,IACd;AAAA,EACJ;AACA,SAAOA;AACX;AAnDA,IAUM,oBACA,sBAYA;AAvBN,IAAAE,aAAA;AAAA;AAAA;AAAA;AAAA;AAUA,IAAM,qBAAqB,eAAW;AACtC,IAAM,uBAAuB,eAAW;AAYxC,IAAM,kBAAkB;AAAA;AAAA;;;ACvBxB,IAGM,gBAQO;AAXb;AAAA;AAAA;AAAA;AAAA;AACA;AACA,IAAAC;AACA,IAAM,iBAAN,cAA6B,MAAM;AAAA,MAC/B,YAAY,QAAQ,aAAa,SAAS;AACtC,cAAM,MAAM;AACZ,aAAK,cAAc;AACnB,aAAK,UAAU;AACf,aAAK,OAAO;AAAA,MAChB;AAAA,IACJ;AACO,IAAM,YAAN,cAAwB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOnC,YAAY,MAAM;AACd,cAAM;AACN,aAAK,WAAW;AAChB,8BAAsB,MAAM,IAAI;AAChC,aAAK,OAAO;AACZ,aAAK,QAAQ,KAAK;AAClB,aAAK,SAAS,KAAK;AAAA,MACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,QAAQ,QAAQ,aAAa,SAAS;AAClC,cAAM,aAAa,SAAS,IAAI,eAAe,QAAQ,aAAa,OAAO,CAAC;AAC5E,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,OAAO;AACH,aAAK,aAAa;AAClB,aAAK,OAAO;AACZ,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ;AACJ,YAAI,KAAK,eAAe,aAAa,KAAK,eAAe,QAAQ;AAC7D,eAAK,QAAQ;AACb,eAAK,QAAQ;AAAA,QACjB;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,KAAK,SAAS;AACV,YAAI,KAAK,eAAe,QAAQ;AAC5B,eAAK,MAAM,OAAO;AAAA,QACtB,OACK;AAAA,QAEL;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS;AACL,aAAK,aAAa;AAClB,aAAK,WAAW;AAChB,cAAM,aAAa,MAAM;AAAA,MAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,OAAO,MAAM;AACT,cAAM,SAAS,6BAAa,MAAM,KAAK,OAAO,UAAU;AACxD,aAAK,SAAS,MAAM;AAAA,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS,QAAQ;AACb,cAAM,aAAa,UAAU,MAAM;AAAA,MACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ,SAAS;AACb,aAAK,aAAa;AAClB,cAAM,aAAa,SAAS,OAAO;AAAA,MACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,MAAM,SAAS;AAAA,MAAE;AAAA,IACrB;AAAA;AAAA;;;ACtGO,SAAS,OAAO,KAAK;AACxB,MAAI,UAAU;AACd,KAAG;AACC,cAAU,SAAS,MAAM,MAAM,IAAI;AACnC,UAAM,KAAK,MAAM,MAAM,MAAM;AAAA,EACjC,SAAS,MAAM;AACf,SAAO;AACX;AAqBO,SAAS,QAAQ;AACpB,QAAMC,OAAM,OAAO,CAAC,oBAAI,KAAK,CAAC;AAC9B,MAAIA,SAAQ;AACR,WAAO,OAAO,GAAG,OAAOA;AAC5B,SAAOA,OAAM,MAAM,OAAO,MAAM;AACpC;AA5CA,IAEM,UAAyF,QAAa,KACxG,MAAU,GAAO;AAHrB;AAAA;AAAA;AAAA;AAAA;AAEA,IAAM,WAAW,mEAAmE,MAAM,EAAE;AAA5F,IAA+F,SAAS;AAAxG,IAA4G,MAAM,CAAC;AACnH,IAAI,OAAO;AAAX,IAAc,IAAI;AA6ClB,WAAO,IAAI,QAAQ;AACf,UAAI,SAAS,CAAC,CAAC,IAAI;AAAA;AAAA;;;ACzChB,SAASC,QAAO,KAAK;AACxB,MAAI,MAAM;AACV,WAASC,MAAK,KAAK;AACf,QAAI,IAAI,eAAeA,EAAC,GAAG;AACvB,UAAI,IAAI;AACJ,eAAO;AACX,aAAO,mBAAmBA,EAAC,IAAI,MAAM,mBAAmB,IAAIA,EAAC,CAAC;AAAA,IAClE;AAAA,EACJ;AACA,SAAO;AACX;AAOO,SAASC,QAAO,IAAI;AACvB,MAAI,MAAM,CAAC;AACX,MAAI,QAAQ,GAAG,MAAM,GAAG;AACxB,WAASD,KAAI,GAAG,IAAI,MAAM,QAAQA,KAAI,GAAGA,MAAK;AAC1C,QAAI,OAAO,MAAMA,EAAC,EAAE,MAAM,GAAG;AAC7B,QAAI,mBAAmB,KAAK,CAAC,CAAC,CAAC,IAAI,mBAAmB,KAAK,CAAC,CAAC;AAAA,EACjE;AACA,SAAO;AACX;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IACI,OASS;AAVb;AAAA;AAAA;AAAA;AACA,IAAI,QAAQ;AACZ,QAAI;AACA,cAAQ,OAAO,mBAAmB,eAC9B,qBAAqB,IAAI,eAAe;AAAA,IAChD,SACO,KAAP;AAAA,IAGA;AACO,IAAM,UAAU;AAAA;AAAA;;;ACPhB,SAAS,IAAI,MAAM;AACtB,QAAM,UAAU,KAAK;AAErB,MAAI;AACA,QAAI,gBAAgB,OAAO,mBAAmB,CAAC,WAAW,UAAU;AAChE,aAAO,IAAI,eAAe;AAAA,IAC9B;AAAA,EACJ,SACOE,IAAP;AAAA,EAAY;AACZ,MAAI,CAAC,SAAS;AACV,QAAI;AACA,aAAO,IAAI,eAAW,CAAC,QAAQ,EAAE,OAAO,QAAQ,EAAE,KAAK,GAAG,CAAC,EAAE,mBAAmB;AAAA,IACpF,SACOA,IAAP;AAAA,IAAY;AAAA,EAChB;AACJ;AAlBA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;;;ACMA,SAAS,QAAQ;AAAE;AAgYnB,SAAS,gBAAgB;AACrB,WAASC,MAAK,QAAQ,UAAU;AAC5B,QAAI,QAAQ,SAAS,eAAeA,EAAC,GAAG;AACpC,cAAQ,SAASA,EAAC,EAAE,MAAM;AAAA,IAC9B;AAAA,EACJ;AACJ;AA9YA,IASM,SAMO,SA4NA;AA3Ob;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,IAAAC;AACA;AAEA,IAAM,UAAW,WAAY;AACzB,YAAM,MAAM,IAAI,IAAe;AAAA,QAC3B,SAAS;AAAA,MACb,CAAC;AACD,aAAO,QAAQ,IAAI;AAAA,IACvB,EAAG;AACI,IAAM,UAAN,cAAsB,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOnC,YAAY,MAAM;AACd,cAAM,IAAI;AACV,aAAK,UAAU;AACf,YAAI,OAAO,aAAa,aAAa;AACjC,gBAAM,QAAQ,aAAa,SAAS;AACpC,cAAI,OAAO,SAAS;AAEpB,cAAI,CAAC,MAAM;AACP,mBAAO,QAAQ,QAAQ;AAAA,UAC3B;AACA,eAAK,KACA,OAAO,aAAa,eACjB,KAAK,aAAa,SAAS,YAC3B,SAAS,KAAK;AACtB,eAAK,KAAK,KAAK,WAAW;AAAA,QAC9B;AAIA,cAAM,cAAc,QAAQ,KAAK;AACjC,aAAK,iBAAiB,WAAW,CAAC;AAAA,MACtC;AAAA,MACA,IAAI,OAAO;AACP,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,SAAS;AACL,aAAK,KAAK;AAAA,MACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,MAAM,SAAS;AACX,aAAK,aAAa;AAClB,cAAM,QAAQ,MAAM;AAChB,eAAK,aAAa;AAClB,kBAAQ;AAAA,QACZ;AACA,YAAI,KAAK,WAAW,CAAC,KAAK,UAAU;AAChC,cAAI,QAAQ;AACZ,cAAI,KAAK,SAAS;AACd;AACA,iBAAK,KAAK,gBAAgB,WAAY;AAClC,gBAAE,SAAS,MAAM;AAAA,YACrB,CAAC;AAAA,UACL;AACA,cAAI,CAAC,KAAK,UAAU;AAChB;AACA,iBAAK,KAAK,SAAS,WAAY;AAC3B,gBAAE,SAAS,MAAM;AAAA,YACrB,CAAC;AAAA,UACL;AAAA,QACJ,OACK;AACD,gBAAM;AAAA,QACV;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,OAAO;AACH,aAAK,UAAU;AACf,aAAK,OAAO;AACZ,aAAK,aAAa,MAAM;AAAA,MAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,OAAO,MAAM;AACT,cAAM,WAAW,CAAC,WAAW;AAEzB,cAAI,cAAc,KAAK,cAAc,OAAO,SAAS,QAAQ;AACzD,iBAAK,OAAO;AAAA,UAChB;AAEA,cAAI,YAAY,OAAO,MAAM;AACzB,iBAAK,QAAQ,EAAE,aAAa,iCAAiC,CAAC;AAC9D,mBAAO;AAAA,UACX;AAEA,eAAK,SAAS,MAAM;AAAA,QACxB;AAEA,sBAAc,MAAM,KAAK,OAAO,UAAU,EAAE,QAAQ,QAAQ;AAE5D,YAAI,aAAa,KAAK,YAAY;AAE9B,eAAK,UAAU;AACf,eAAK,aAAa,cAAc;AAChC,cAAI,WAAW,KAAK,YAAY;AAC5B,iBAAK,KAAK;AAAA,UACd,OACK;AAAA,UACL;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,UAAU;AACN,cAAMC,SAAQ,MAAM;AAChB,eAAK,MAAM,CAAC,EAAE,MAAM,QAAQ,CAAC,CAAC;AAAA,QAClC;AACA,YAAI,WAAW,KAAK,YAAY;AAC5B,UAAAA,OAAM;AAAA,QACV,OACK;AAGD,eAAK,KAAK,QAAQA,MAAK;AAAA,QAC3B;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,MAAM,SAAS;AACX,aAAK,WAAW;AAChB,sBAAc,SAAS,CAAC,SAAS;AAC7B,eAAK,QAAQ,MAAM,MAAM;AACrB,iBAAK,WAAW;AAChB,iBAAK,aAAa,OAAO;AAAA,UAC7B,CAAC;AAAA,QACL,CAAC;AAAA,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,MAAM;AACF,YAAI,QAAQ,KAAK,SAAS,CAAC;AAC3B,cAAM,SAAS,KAAK,KAAK,SAAS,UAAU;AAC5C,YAAI,OAAO;AAEX,YAAI,UAAU,KAAK,KAAK,mBAAmB;AACvC,gBAAM,KAAK,KAAK,cAAc,IAAI,MAAM;AAAA,QAC5C;AACA,YAAI,CAAC,KAAK,kBAAkB,CAAC,MAAM,KAAK;AACpC,gBAAM,MAAM;AAAA,QAChB;AAEA,YAAI,KAAK,KAAK,SACR,YAAY,UAAU,OAAO,KAAK,KAAK,IAAI,MAAM,OAC9C,WAAW,UAAU,OAAO,KAAK,KAAK,IAAI,MAAM,KAAM;AAC3D,iBAAO,MAAM,KAAK,KAAK;AAAA,QAC3B;AACA,cAAM,eAAeC,QAAO,KAAK;AACjC,cAAM,OAAO,KAAK,KAAK,SAAS,QAAQ,GAAG,MAAM;AACjD,eAAQ,SACJ,SACC,OAAO,MAAM,KAAK,KAAK,WAAW,MAAM,KAAK,KAAK,YACnD,OACA,KAAK,KAAK,QACT,aAAa,SAAS,MAAM,eAAe;AAAA,MACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,QAAQ,OAAO,CAAC,GAAG;AACf,eAAO,OAAO,MAAM,EAAE,IAAI,KAAK,IAAI,IAAI,KAAK,GAAG,GAAG,KAAK,IAAI;AAC3D,eAAO,IAAI,QAAQ,KAAK,IAAI,GAAG,IAAI;AAAA,MACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,QAAQ,MAAM,IAAI;AACd,cAAM,MAAM,KAAK,QAAQ;AAAA,UACrB,QAAQ;AAAA,UACR;AAAA,QACJ,CAAC;AACD,YAAI,GAAG,WAAW,EAAE;AACpB,YAAI,GAAG,SAAS,CAAC,WAAW,YAAY;AACpC,eAAK,QAAQ,kBAAkB,WAAW,OAAO;AAAA,QACrD,CAAC;AAAA,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS;AACL,cAAM,MAAM,KAAK,QAAQ;AACzB,YAAI,GAAG,QAAQ,KAAK,OAAO,KAAK,IAAI,CAAC;AACrC,YAAI,GAAG,SAAS,CAAC,WAAW,YAAY;AACpC,eAAK,QAAQ,kBAAkB,WAAW,OAAO;AAAA,QACrD,CAAC;AACD,aAAK,UAAU;AAAA,MACnB;AAAA,IACJ;AACO,IAAM,UAAN,cAAsB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOjC,YAAY,KAAK,MAAM;AACnB,cAAM;AACN,8BAAsB,MAAM,IAAI;AAChC,aAAK,OAAO;AACZ,aAAK,SAAS,KAAK,UAAU;AAC7B,aAAK,MAAM;AACX,aAAK,QAAQ,UAAU,KAAK;AAC5B,aAAK,OAAO,WAAc,KAAK,OAAO,KAAK,OAAO;AAClD,aAAK,OAAO;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS;AACL,cAAM,OAAO,KAAK,KAAK,MAAM,SAAS,OAAO,OAAO,cAAc,QAAQ,MAAM,WAAW,sBAAsB,WAAW;AAC5H,aAAK,UAAU,CAAC,CAAC,KAAK,KAAK;AAC3B,aAAK,UAAU,CAAC,CAAC,KAAK,KAAK;AAC3B,cAAM,MAAO,KAAK,MAAM,IAAI,IAAe,IAAI;AAC/C,YAAI;AACA,cAAI,KAAK,KAAK,QAAQ,KAAK,KAAK,KAAK,KAAK;AAC1C,cAAI;AACA,gBAAI,KAAK,KAAK,cAAc;AACxB,kBAAI,yBAAyB,IAAI,sBAAsB,IAAI;AAC3D,uBAASH,MAAK,KAAK,KAAK,cAAc;AAClC,oBAAI,KAAK,KAAK,aAAa,eAAeA,EAAC,GAAG;AAC1C,sBAAI,iBAAiBA,IAAG,KAAK,KAAK,aAAaA,EAAC,CAAC;AAAA,gBACrD;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ,SACOI,IAAP;AAAA,UAAY;AACZ,cAAI,WAAW,KAAK,QAAQ;AACxB,gBAAI;AACA,kBAAI,iBAAiB,gBAAgB,0BAA0B;AAAA,YACnE,SACOA,IAAP;AAAA,YAAY;AAAA,UAChB;AACA,cAAI;AACA,gBAAI,iBAAiB,UAAU,KAAK;AAAA,UACxC,SACOA,IAAP;AAAA,UAAY;AAEZ,cAAI,qBAAqB,KAAK;AAC1B,gBAAI,kBAAkB,KAAK,KAAK;AAAA,UACpC;AACA,cAAI,KAAK,KAAK,gBAAgB;AAC1B,gBAAI,UAAU,KAAK,KAAK;AAAA,UAC5B;AACA,cAAI,qBAAqB,MAAM;AAC3B,gBAAI,MAAM,IAAI;AACV;AACJ,gBAAI,QAAQ,IAAI,UAAU,SAAS,IAAI,QAAQ;AAC3C,mBAAK,OAAO;AAAA,YAChB,OACK;AAGD,mBAAK,aAAa,MAAM;AACpB,qBAAK,QAAQ,OAAO,IAAI,WAAW,WAAW,IAAI,SAAS,CAAC;AAAA,cAChE,GAAG,CAAC;AAAA,YACR;AAAA,UACJ;AACA,cAAI,KAAK,KAAK,IAAI;AAAA,QACtB,SACOA,IAAP;AAII,eAAK,aAAa,MAAM;AACpB,iBAAK,QAAQA,EAAC;AAAA,UAClB,GAAG,CAAC;AACJ;AAAA,QACJ;AACA,YAAI,OAAO,aAAa,aAAa;AACjC,eAAK,QAAQ,QAAQ;AACrB,kBAAQ,SAAS,KAAK,KAAK,IAAI;AAAA,QACnC;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ,KAAK;AACT,aAAK,aAAa,SAAS,KAAK,KAAK,GAAG;AACxC,aAAK,QAAQ,IAAI;AAAA,MACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ,WAAW;AACf,YAAI,gBAAgB,OAAO,KAAK,OAAO,SAAS,KAAK,KAAK;AACtD;AAAA,QACJ;AACA,aAAK,IAAI,qBAAqB;AAC9B,YAAI,WAAW;AACX,cAAI;AACA,iBAAK,IAAI,MAAM;AAAA,UACnB,SACOA,IAAP;AAAA,UAAY;AAAA,QAChB;AACA,YAAI,OAAO,aAAa,aAAa;AACjC,iBAAO,QAAQ,SAAS,KAAK,KAAK;AAAA,QACtC;AACA,aAAK,MAAM;AAAA,MACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS;AACL,cAAM,OAAO,KAAK,IAAI;AACtB,YAAI,SAAS,MAAM;AACf,eAAK,aAAa,QAAQ,IAAI;AAC9B,eAAK,aAAa,SAAS;AAC3B,eAAK,QAAQ;AAAA,QACjB;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ;AACJ,aAAK,QAAQ;AAAA,MACjB;AAAA,IACJ;AACA,YAAQ,gBAAgB;AACxB,YAAQ,WAAW,CAAC;AAMpB,QAAI,OAAO,aAAa,aAAa;AAEjC,UAAI,OAAO,gBAAgB,YAAY;AAEnC,oBAAY,YAAY,aAAa;AAAA,MACzC,WACS,OAAO,qBAAqB,YAAY;AAC7C,cAAM,mBAAmB,gBAAgB,iBAAa,aAAa;AACnE,yBAAiB,kBAAkB,eAAe,KAAK;AAAA,MAC3D;AAAA,IACJ;AAAA;AAAA;;;ACvYA,IACa,UASA,WACA,uBACA;AAZb;AAAA;AAAA;AAAA;AAAA;AACO,IAAM,YAAY,MAAM;AAC3B,YAAM,qBAAqB,OAAO,YAAY,cAAc,OAAO,QAAQ,YAAY;AACvF,UAAI,oBAAoB;AACpB,eAAO,CAAC,OAAO,QAAQ,QAAQ,EAAE,KAAK,EAAE;AAAA,MAC5C,OACK;AACD,eAAO,CAAC,IAAI,iBAAiB,aAAa,IAAI,CAAC;AAAA,MACnD;AAAA,IACJ,GAAG;AACI,IAAM,YAAY,eAAW,aAAa,eAAW;AACrD,IAAM,wBAAwB;AAC9B,IAAM,oBAAoB;AAAA;AAAA;;;ACZjC,IAOM,eAGO;AAVb;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA,IAAAC;AACA;AACA;AAEA,IAAM,gBAAgB,OAAO,cAAc,eACvC,OAAO,UAAU,YAAY,YAC7B,UAAU,QAAQ,YAAY,MAAM;AACjC,IAAM,KAAN,cAAiB,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAO9B,YAAY,MAAM;AACd,cAAM,IAAI;AACV,aAAK,iBAAiB,CAAC,KAAK;AAAA,MAChC;AAAA,MACA,IAAI,OAAO;AACP,eAAO;AAAA,MACX;AAAA,MACA,SAAS;AACL,YAAI,CAAC,KAAK,MAAM,GAAG;AAEf;AAAA,QACJ;AACA,cAAM,MAAM,KAAK,IAAI;AACrB,cAAM,YAAY,KAAK,KAAK;AAE5B,cAAM,OAAO,gBACP,CAAC,IACD,KAAK,KAAK,MAAM,SAAS,qBAAqB,OAAO,OAAO,cAAc,QAAQ,MAAM,WAAW,sBAAsB,gBAAgB,mBAAmB,UAAU,cAAc,UAAU,qBAAqB;AACzN,YAAI,KAAK,KAAK,cAAc;AACxB,eAAK,UAAU,KAAK,KAAK;AAAA,QAC7B;AACA,YAAI;AACA,eAAK,KACD,yBAAyB,CAAC,gBACpB,YACI,IAAI,UAAU,KAAK,SAAS,IAC5B,IAAI,UAAU,GAAG,IACrB,IAAI,UAAU,KAAK,WAAW,IAAI;AAAA,QAChD,SACO,KAAP;AACI,iBAAO,KAAK,aAAa,SAAS,GAAG;AAAA,QACzC;AACA,aAAK,GAAG,aAAa,KAAK,OAAO,cAAc;AAC/C,aAAK,kBAAkB;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,oBAAoB;AAChB,aAAK,GAAG,SAAS,MAAM;AACnB,cAAI,KAAK,KAAK,WAAW;AACrB,iBAAK,GAAG,QAAQ,MAAM;AAAA,UAC1B;AACA,eAAK,OAAO;AAAA,QAChB;AACA,aAAK,GAAG,UAAU,CAAC,eAAe,KAAK,QAAQ;AAAA,UAC3C,aAAa;AAAA,UACb,SAAS;AAAA,QACb,CAAC;AACD,aAAK,GAAG,YAAY,CAAC,OAAO,KAAK,OAAO,GAAG,IAAI;AAC/C,aAAK,GAAG,UAAU,CAACC,OAAM,KAAK,QAAQ,mBAAmBA,EAAC;AAAA,MAC9D;AAAA,MACA,MAAM,SAAS;AACX,aAAK,WAAW;AAGhB,iBAASC,KAAI,GAAGA,KAAI,QAAQ,QAAQA,MAAK;AACrC,gBAAM,SAAS,QAAQA,EAAC;AACxB,gBAAM,aAAaA,OAAM,QAAQ,SAAS;AAC1C,uCAAa,QAAQ,KAAK,gBAAgB,CAAC,SAAS;AAEhD,kBAAM,OAAO,CAAC;AACd,gBAAI,CAAC,uBAAuB;AACxB,kBAAI,OAAO,SAAS;AAChB,qBAAK,WAAW,OAAO,QAAQ;AAAA,cACnC;AACA,kBAAI,KAAK,KAAK,mBAAmB;AAC7B,sBAAM;AAAA;AAAA,kBAEN,aAAa,OAAO,OAAO,OAAO,WAAW,IAAI,IAAI,KAAK;AAAA;AAC1D,oBAAI,MAAM,KAAK,KAAK,kBAAkB,WAAW;AAC7C,uBAAK,WAAW;AAAA,gBACpB;AAAA,cACJ;AAAA,YACJ;AAIA,gBAAI;AACA,kBAAI,uBAAuB;AAEvB,qBAAK,GAAG,KAAK,IAAI;AAAA,cACrB,OACK;AACD,qBAAK,GAAG,KAAK,MAAM,IAAI;AAAA,cAC3B;AAAA,YACJ,SACOD,IAAP;AAAA,YACA;AACA,gBAAI,YAAY;AAGZ,uBAAS,MAAM;AACX,qBAAK,WAAW;AAChB,qBAAK,aAAa,OAAO;AAAA,cAC7B,GAAG,KAAK,YAAY;AAAA,YACxB;AAAA,UACJ,CAAC;AAAA,QACL;AAAA,MACJ;AAAA,MACA,UAAU;AACN,YAAI,OAAO,KAAK,OAAO,aAAa;AAChC,eAAK,GAAG,MAAM;AACd,eAAK,KAAK;AAAA,QACd;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,MAAM;AACF,YAAI,QAAQ,KAAK,SAAS,CAAC;AAC3B,cAAM,SAAS,KAAK,KAAK,SAAS,QAAQ;AAC1C,YAAI,OAAO;AAEX,YAAI,KAAK,KAAK,SACR,UAAU,UAAU,OAAO,KAAK,KAAK,IAAI,MAAM,OAC5C,SAAS,UAAU,OAAO,KAAK,KAAK,IAAI,MAAM,KAAM;AACzD,iBAAO,MAAM,KAAK,KAAK;AAAA,QAC3B;AAEA,YAAI,KAAK,KAAK,mBAAmB;AAC7B,gBAAM,KAAK,KAAK,cAAc,IAAI,MAAM;AAAA,QAC5C;AAEA,YAAI,CAAC,KAAK,gBAAgB;AACtB,gBAAM,MAAM;AAAA,QAChB;AACA,cAAM,eAAeE,QAAO,KAAK;AACjC,cAAM,OAAO,KAAK,KAAK,SAAS,QAAQ,GAAG,MAAM;AACjD,eAAQ,SACJ,SACC,OAAO,MAAM,KAAK,KAAK,WAAW,MAAM,KAAK,KAAK,YACnD,OACA,KAAK,KAAK,QACT,aAAa,SAAS,MAAM,eAAe;AAAA,MACpD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,QAAQ;AACJ,eAAO,CAAC,CAAC;AAAA,MACb;AAAA,IACJ;AAAA;AAAA;;;ACtKA,IAEa;AAFb;AAAA;AAAA;AAAA;AAAA;AACA;AACO,IAAM,aAAa;AAAA,MACtB,WAAW;AAAA,MACX,SAAS;AAAA,IACb;AAAA;AAAA;;;ACkBO,SAAS,MAAM,KAAK;AACvB,QAAM,MAAM,KAAK,IAAI,IAAI,QAAQ,GAAG,GAAGC,KAAI,IAAI,QAAQ,GAAG;AAC1D,MAAI,KAAK,MAAMA,MAAK,IAAI;AACpB,UAAM,IAAI,UAAU,GAAG,CAAC,IAAI,IAAI,UAAU,GAAGA,EAAC,EAAE,QAAQ,MAAM,GAAG,IAAI,IAAI,UAAUA,IAAG,IAAI,MAAM;AAAA,EACpG;AACA,MAAI,IAAI,GAAG,KAAK,OAAO,EAAE,GAAG,MAAM,CAAC,GAAGC,KAAI;AAC1C,SAAOA,MAAK;AACR,QAAI,MAAMA,EAAC,CAAC,IAAI,EAAEA,EAAC,KAAK;AAAA,EAC5B;AACA,MAAI,KAAK,MAAMD,MAAK,IAAI;AACpB,QAAI,SAAS;AACb,QAAI,OAAO,IAAI,KAAK,UAAU,GAAG,IAAI,KAAK,SAAS,CAAC,EAAE,QAAQ,MAAM,GAAG;AACvE,QAAI,YAAY,IAAI,UAAU,QAAQ,KAAK,EAAE,EAAE,QAAQ,KAAK,EAAE,EAAE,QAAQ,MAAM,GAAG;AACjF,QAAI,UAAU;AAAA,EAClB;AACA,MAAI,YAAY,UAAU,KAAK,IAAI,MAAM,CAAC;AAC1C,MAAI,WAAW,SAAS,KAAK,IAAI,OAAO,CAAC;AACzC,SAAO;AACX;AACA,SAAS,UAAU,KAAK,MAAM;AAC1B,QAAM,OAAO,YAAY,QAAQ,KAAK,QAAQ,MAAM,GAAG,EAAE,MAAM,GAAG;AAClE,MAAI,KAAK,MAAM,GAAG,CAAC,KAAK,OAAO,KAAK,WAAW,GAAG;AAC9C,UAAM,OAAO,GAAG,CAAC;AAAA,EACrB;AACA,MAAI,KAAK,MAAM,EAAE,KAAK,KAAK;AACvB,UAAM,OAAO,MAAM,SAAS,GAAG,CAAC;AAAA,EACpC;AACA,SAAO;AACX;AACA,SAAS,SAAS,KAAK,OAAO;AAC1B,QAAM,OAAO,CAAC;AACd,QAAM,QAAQ,6BAA6B,SAAU,IAAI,IAAI,IAAI;AAC7D,QAAI,IAAI;AACJ,WAAK,EAAE,IAAI;AAAA,IACf;AAAA,EACJ,CAAC;AACD,SAAO;AACX;AA5DA,IAmBM,IACA;AApBN;AAAA;AAAA;AAAA;AAmBA,IAAM,KAAK;AACX,IAAM,QAAQ;AAAA,MACV;AAAA,MAAU;AAAA,MAAY;AAAA,MAAa;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAY;AAAA,MAAQ;AAAA,MAAa;AAAA,MAAQ;AAAA,MAAS;AAAA,IACzI;AAAA;AAAA;;;ACtBA,IAMa;AANb;AAAA;AAAA;AAAA;AAAA;AACA,IAAAE;AACA;AACA;AACA;AACA;AACO,IAAM,SAAN,cAAqB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOhC,YAAY,KAAK,OAAO,CAAC,GAAG;AACxB,cAAM;AACN,aAAK,cAAc,CAAC;AACpB,YAAI,OAAO,aAAa,OAAO,KAAK;AAChC,iBAAO;AACP,gBAAM;AAAA,QACV;AACA,YAAI,KAAK;AACL,gBAAM,MAAM,GAAG;AACf,eAAK,WAAW,IAAI;AACpB,eAAK,SAAS,IAAI,aAAa,WAAW,IAAI,aAAa;AAC3D,eAAK,OAAO,IAAI;AAChB,cAAI,IAAI;AACJ,iBAAK,QAAQ,IAAI;AAAA,QACzB,WACS,KAAK,MAAM;AAChB,eAAK,WAAW,MAAM,KAAK,IAAI,EAAE;AAAA,QACrC;AACA,8BAAsB,MAAM,IAAI;AAChC,aAAK,SACD,QAAQ,KAAK,SACP,KAAK,SACL,OAAO,aAAa,eAAe,aAAa,SAAS;AACnE,YAAI,KAAK,YAAY,CAAC,KAAK,MAAM;AAE7B,eAAK,OAAO,KAAK,SAAS,QAAQ;AAAA,QACtC;AACA,aAAK,WACD,KAAK,aACA,OAAO,aAAa,cAAc,SAAS,WAAW;AAC/D,aAAK,OACD,KAAK,SACA,OAAO,aAAa,eAAe,SAAS,OACvC,SAAS,OACT,KAAK,SACD,QACA;AAClB,aAAK,aAAa,KAAK,cAAc,CAAC,WAAW,WAAW;AAC5D,aAAK,cAAc,CAAC;AACpB,aAAK,gBAAgB;AACrB,aAAK,OAAO,OAAO,OAAO;AAAA,UACtB,MAAM;AAAA,UACN,OAAO;AAAA,UACP,iBAAiB;AAAA,UACjB,SAAS;AAAA,UACT,gBAAgB;AAAA,UAChB,iBAAiB;AAAA,UACjB,kBAAkB;AAAA,UAClB,oBAAoB;AAAA,UACpB,mBAAmB;AAAA,YACf,WAAW;AAAA,UACf;AAAA,UACA,kBAAkB,CAAC;AAAA,UACnB,qBAAqB;AAAA,QACzB,GAAG,IAAI;AACP,aAAK,KAAK,OACN,KAAK,KAAK,KAAK,QAAQ,OAAO,EAAE,KAC3B,KAAK,KAAK,mBAAmB,MAAM;AAC5C,YAAI,OAAO,KAAK,KAAK,UAAU,UAAU;AACrC,eAAK,KAAK,QAAQC,QAAO,KAAK,KAAK,KAAK;AAAA,QAC5C;AAEA,aAAK,KAAK;AACV,aAAK,WAAW;AAChB,aAAK,eAAe;AACpB,aAAK,cAAc;AAEnB,aAAK,mBAAmB;AACxB,YAAI,OAAO,qBAAqB,YAAY;AACxC,cAAI,KAAK,KAAK,qBAAqB;AAI/B,iBAAK,4BAA4B,MAAM;AACnC,kBAAI,KAAK,WAAW;AAEhB,qBAAK,UAAU,mBAAmB;AAClC,qBAAK,UAAU,MAAM;AAAA,cACzB;AAAA,YACJ;AACA,6BAAiB,gBAAgB,KAAK,2BAA2B,KAAK;AAAA,UAC1E;AACA,cAAI,KAAK,aAAa,aAAa;AAC/B,iBAAK,uBAAuB,MAAM;AAC9B,mBAAK,QAAQ,mBAAmB;AAAA,gBAC5B,aAAa;AAAA,cACjB,CAAC;AAAA,YACL;AACA,6BAAiB,WAAW,KAAK,sBAAsB,KAAK;AAAA,UAChE;AAAA,QACJ;AACA,aAAK,KAAK;AAAA,MACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,gBAAgB,MAAM;AAClB,cAAM,QAAQ,OAAO,OAAO,CAAC,GAAG,KAAK,KAAK,KAAK;AAE/C,cAAM,MAAM;AAEZ,cAAM,YAAY;AAElB,YAAI,KAAK;AACL,gBAAM,MAAM,KAAK;AACrB,cAAM,OAAO,OAAO,OAAO,CAAC,GAAG,KAAK,KAAK,iBAAiB,IAAI,GAAG,KAAK,MAAM;AAAA,UACxE;AAAA,UACA,QAAQ;AAAA,UACR,UAAU,KAAK;AAAA,UACf,QAAQ,KAAK;AAAA,UACb,MAAM,KAAK;AAAA,QACf,CAAC;AACD,eAAO,IAAI,WAAW,IAAI,EAAE,IAAI;AAAA,MACpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,OAAO;AACH,YAAI;AACJ,YAAI,KAAK,KAAK,mBACV,OAAO,yBACP,KAAK,WAAW,QAAQ,WAAW,MAAM,IAAI;AAC7C,sBAAY;AAAA,QAChB,WACS,MAAM,KAAK,WAAW,QAAQ;AAEnC,eAAK,aAAa,MAAM;AACpB,iBAAK,aAAa,SAAS,yBAAyB;AAAA,UACxD,GAAG,CAAC;AACJ;AAAA,QACJ,OACK;AACD,sBAAY,KAAK,WAAW,CAAC;AAAA,QACjC;AACA,aAAK,aAAa;AAElB,YAAI;AACA,sBAAY,KAAK,gBAAgB,SAAS;AAAA,QAC9C,SACOC,IAAP;AACI,eAAK,WAAW,MAAM;AACtB,eAAK,KAAK;AACV;AAAA,QACJ;AACA,kBAAU,KAAK;AACf,aAAK,aAAa,SAAS;AAAA,MAC/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,aAAa,WAAW;AACpB,YAAI,KAAK,WAAW;AAChB,eAAK,UAAU,mBAAmB;AAAA,QACtC;AAEA,aAAK,YAAY;AAEjB,kBACK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC,EACnC,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC,EACrC,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC,EACnC,GAAG,SAAS,CAAC,WAAW,KAAK,QAAQ,mBAAmB,MAAM,CAAC;AAAA,MACxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,MAAM,MAAM;AACR,YAAI,YAAY,KAAK,gBAAgB,IAAI;AACzC,YAAI,SAAS;AACb,eAAO,wBAAwB;AAC/B,cAAM,kBAAkB,MAAM;AAC1B,cAAI;AACA;AACJ,oBAAU,KAAK,CAAC,EAAE,MAAM,QAAQ,MAAM,QAAQ,CAAC,CAAC;AAChD,oBAAU,KAAK,UAAU,CAAC,QAAQ;AAC9B,gBAAI;AACA;AACJ,gBAAI,WAAW,IAAI,QAAQ,YAAY,IAAI,MAAM;AAC7C,mBAAK,YAAY;AACjB,mBAAK,aAAa,aAAa,SAAS;AACxC,kBAAI,CAAC;AACD;AACJ,qBAAO,wBAAwB,gBAAgB,UAAU;AACzD,mBAAK,UAAU,MAAM,MAAM;AACvB,oBAAI;AACA;AACJ,oBAAI,aAAa,KAAK;AAClB;AACJ,wBAAQ;AACR,qBAAK,aAAa,SAAS;AAC3B,0BAAU,KAAK,CAAC,EAAE,MAAM,UAAU,CAAC,CAAC;AACpC,qBAAK,aAAa,WAAW,SAAS;AACtC,4BAAY;AACZ,qBAAK,YAAY;AACjB,qBAAK,MAAM;AAAA,cACf,CAAC;AAAA,YACL,OACK;AACD,oBAAM,MAAM,IAAI,MAAM,aAAa;AAEnC,kBAAI,YAAY,UAAU;AAC1B,mBAAK,aAAa,gBAAgB,GAAG;AAAA,YACzC;AAAA,UACJ,CAAC;AAAA,QACL;AACA,iBAAS,kBAAkB;AACvB,cAAI;AACA;AAEJ,mBAAS;AACT,kBAAQ;AACR,oBAAU,MAAM;AAChB,sBAAY;AAAA,QAChB;AAEA,cAAM,UAAU,CAAC,QAAQ;AACrB,gBAAM,QAAQ,IAAI,MAAM,kBAAkB,GAAG;AAE7C,gBAAM,YAAY,UAAU;AAC5B,0BAAgB;AAChB,eAAK,aAAa,gBAAgB,KAAK;AAAA,QAC3C;AACA,iBAAS,mBAAmB;AACxB,kBAAQ,kBAAkB;AAAA,QAC9B;AAEA,iBAAS,UAAU;AACf,kBAAQ,eAAe;AAAA,QAC3B;AAEA,iBAAS,UAAU,IAAI;AACnB,cAAI,aAAa,GAAG,SAAS,UAAU,MAAM;AACzC,4BAAgB;AAAA,UACpB;AAAA,QACJ;AAEA,cAAM,UAAU,MAAM;AAClB,oBAAU,eAAe,QAAQ,eAAe;AAChD,oBAAU,eAAe,SAAS,OAAO;AACzC,oBAAU,eAAe,SAAS,gBAAgB;AAClD,eAAK,IAAI,SAAS,OAAO;AACzB,eAAK,IAAI,aAAa,SAAS;AAAA,QACnC;AACA,kBAAU,KAAK,QAAQ,eAAe;AACtC,kBAAU,KAAK,SAAS,OAAO;AAC/B,kBAAU,KAAK,SAAS,gBAAgB;AACxC,aAAK,KAAK,SAAS,OAAO;AAC1B,aAAK,KAAK,aAAa,SAAS;AAChC,kBAAU,KAAK;AAAA,MACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS;AACL,aAAK,aAAa;AAClB,eAAO,wBAAwB,gBAAgB,KAAK,UAAU;AAC9D,aAAK,aAAa,MAAM;AACxB,aAAK,MAAM;AAGX,YAAI,WAAW,KAAK,cAAc,KAAK,KAAK,SAAS;AACjD,cAAIC,KAAI;AACR,gBAAM,IAAI,KAAK,SAAS;AACxB,iBAAOA,KAAI,GAAGA,MAAK;AACf,iBAAK,MAAM,KAAK,SAASA,EAAC,CAAC;AAAA,UAC/B;AAAA,QACJ;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS,QAAQ;AACb,YAAI,cAAc,KAAK,cACnB,WAAW,KAAK,cAChB,cAAc,KAAK,YAAY;AAC/B,eAAK,aAAa,UAAU,MAAM;AAElC,eAAK,aAAa,WAAW;AAC7B,kBAAQ,OAAO,MAAM;AAAA,YACjB,KAAK;AACD,mBAAK,YAAY,KAAK,MAAM,OAAO,IAAI,CAAC;AACxC;AAAA,YACJ,KAAK;AACD,mBAAK,iBAAiB;AACtB,mBAAK,WAAW,MAAM;AACtB,mBAAK,aAAa,MAAM;AACxB,mBAAK,aAAa,MAAM;AACxB;AAAA,YACJ,KAAK;AACD,oBAAM,MAAM,IAAI,MAAM,cAAc;AAEpC,kBAAI,OAAO,OAAO;AAClB,mBAAK,QAAQ,GAAG;AAChB;AAAA,YACJ,KAAK;AACD,mBAAK,aAAa,QAAQ,OAAO,IAAI;AACrC,mBAAK,aAAa,WAAW,OAAO,IAAI;AACxC;AAAA,UACR;AAAA,QACJ,OACK;AAAA,QACL;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,YAAY,MAAM;AACd,aAAK,aAAa,aAAa,IAAI;AACnC,aAAK,KAAK,KAAK;AACf,aAAK,UAAU,MAAM,MAAM,KAAK;AAChC,aAAK,WAAW,KAAK,eAAe,KAAK,QAAQ;AACjD,aAAK,eAAe,KAAK;AACzB,aAAK,cAAc,KAAK;AACxB,aAAK,aAAa,KAAK;AACvB,aAAK,OAAO;AAEZ,YAAI,aAAa,KAAK;AAClB;AACJ,aAAK,iBAAiB;AAAA,MAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,mBAAmB;AACf,aAAK,eAAe,KAAK,gBAAgB;AACzC,aAAK,mBAAmB,KAAK,aAAa,MAAM;AAC5C,eAAK,QAAQ,cAAc;AAAA,QAC/B,GAAG,KAAK,eAAe,KAAK,WAAW;AACvC,YAAI,KAAK,KAAK,WAAW;AACrB,eAAK,iBAAiB,MAAM;AAAA,QAChC;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,UAAU;AACN,aAAK,YAAY,OAAO,GAAG,KAAK,aAAa;AAI7C,aAAK,gBAAgB;AACrB,YAAI,MAAM,KAAK,YAAY,QAAQ;AAC/B,eAAK,aAAa,OAAO;AAAA,QAC7B,OACK;AACD,eAAK,MAAM;AAAA,QACf;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ;AACJ,YAAI,aAAa,KAAK,cAClB,KAAK,UAAU,YACf,CAAC,KAAK,aACN,KAAK,YAAY,QAAQ;AACzB,gBAAM,UAAU,KAAK,mBAAmB;AACxC,eAAK,UAAU,KAAK,OAAO;AAG3B,eAAK,gBAAgB,QAAQ;AAC7B,eAAK,aAAa,OAAO;AAAA,QAC7B;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,qBAAqB;AACjB,cAAM,yBAAyB,KAAK,cAChC,KAAK,UAAU,SAAS,aACxB,KAAK,YAAY,SAAS;AAC9B,YAAI,CAAC,wBAAwB;AACzB,iBAAO,KAAK;AAAA,QAChB;AACA,YAAI,cAAc;AAClB,iBAASA,KAAI,GAAGA,KAAI,KAAK,YAAY,QAAQA,MAAK;AAC9C,gBAAM,OAAO,KAAK,YAAYA,EAAC,EAAE;AACjC,cAAI,MAAM;AACN,2BAAe,WAAW,IAAI;AAAA,UAClC;AACA,cAAIA,KAAI,KAAK,cAAc,KAAK,YAAY;AACxC,mBAAO,KAAK,YAAY,MAAM,GAAGA,EAAC;AAAA,UACtC;AACA,yBAAe;AAAA,QACnB;AACA,eAAO,KAAK;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,MAAM,KAAK,SAAS,IAAI;AACpB,aAAK,WAAW,WAAW,KAAK,SAAS,EAAE;AAC3C,eAAO;AAAA,MACX;AAAA,MACA,KAAK,KAAK,SAAS,IAAI;AACnB,aAAK,WAAW,WAAW,KAAK,SAAS,EAAE;AAC3C,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,WAAWC,OAAM,MAAM,SAAS,IAAI;AAChC,YAAI,eAAe,OAAO,MAAM;AAC5B,eAAK;AACL,iBAAO;AAAA,QACX;AACA,YAAI,eAAe,OAAO,SAAS;AAC/B,eAAK;AACL,oBAAU;AAAA,QACd;AACA,YAAI,cAAc,KAAK,cAAc,aAAa,KAAK,YAAY;AAC/D;AAAA,QACJ;AACA,kBAAU,WAAW,CAAC;AACtB,gBAAQ,WAAW,UAAU,QAAQ;AACrC,cAAM,SAAS;AAAA,UACX,MAAMA;AAAA,UACN;AAAA,UACA;AAAA,QACJ;AACA,aAAK,aAAa,gBAAgB,MAAM;AACxC,aAAK,YAAY,KAAK,MAAM;AAC5B,YAAI;AACA,eAAK,KAAK,SAAS,EAAE;AACzB,aAAK,MAAM;AAAA,MACf;AAAA;AAAA;AAAA;AAAA,MAIA,QAAQ;AACJ,cAAMC,SAAQ,MAAM;AAChB,eAAK,QAAQ,cAAc;AAC3B,eAAK,UAAU,MAAM;AAAA,QACzB;AACA,cAAM,kBAAkB,MAAM;AAC1B,eAAK,IAAI,WAAW,eAAe;AACnC,eAAK,IAAI,gBAAgB,eAAe;AACxC,UAAAA,OAAM;AAAA,QACV;AACA,cAAM,iBAAiB,MAAM;AAEzB,eAAK,KAAK,WAAW,eAAe;AACpC,eAAK,KAAK,gBAAgB,eAAe;AAAA,QAC7C;AACA,YAAI,cAAc,KAAK,cAAc,WAAW,KAAK,YAAY;AAC7D,eAAK,aAAa;AAClB,cAAI,KAAK,YAAY,QAAQ;AACzB,iBAAK,KAAK,SAAS,MAAM;AACrB,kBAAI,KAAK,WAAW;AAChB,+BAAe;AAAA,cACnB,OACK;AACD,gBAAAA,OAAM;AAAA,cACV;AAAA,YACJ,CAAC;AAAA,UACL,WACS,KAAK,WAAW;AACrB,2BAAe;AAAA,UACnB,OACK;AACD,YAAAA,OAAM;AAAA,UACV;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ,KAAK;AACT,eAAO,wBAAwB;AAC/B,aAAK,aAAa,SAAS,GAAG;AAC9B,aAAK,QAAQ,mBAAmB,GAAG;AAAA,MACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ,QAAQ,aAAa;AACzB,YAAI,cAAc,KAAK,cACnB,WAAW,KAAK,cAChB,cAAc,KAAK,YAAY;AAE/B,eAAK,eAAe,KAAK,gBAAgB;AAEzC,eAAK,UAAU,mBAAmB,OAAO;AAEzC,eAAK,UAAU,MAAM;AAErB,eAAK,UAAU,mBAAmB;AAClC,cAAI,OAAO,wBAAwB,YAAY;AAC3C,gCAAoB,gBAAgB,KAAK,2BAA2B,KAAK;AACzE,gCAAoB,WAAW,KAAK,sBAAsB,KAAK;AAAA,UACnE;AAEA,eAAK,aAAa;AAElB,eAAK,KAAK;AAEV,eAAK,aAAa,SAAS,QAAQ,WAAW;AAG9C,eAAK,cAAc,CAAC;AACpB,eAAK,gBAAgB;AAAA,QACzB;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,eAAe,UAAU;AACrB,cAAM,mBAAmB,CAAC;AAC1B,YAAIF,KAAI;AACR,cAAM,IAAI,SAAS;AACnB,eAAOA,KAAI,GAAGA,MAAK;AACf,cAAI,CAAC,KAAK,WAAW,QAAQ,SAASA,EAAC,CAAC;AACpC,6BAAiB,KAAK,SAASA,EAAC,CAAC;AAAA,QACzC;AACA,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO,WAAW;AAAA;AAAA;;;AChkBlB,IAEaG;AAFb,IAAAC,YAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA,IAAAC;AACA;AACA;AALO,IAAMF,YAAW,OAAO;AAAA;AAAA;;;ACQxB,SAAS,IAAI,KAAK,OAAO,IAAI,KAAK;AACrC,MAAI,MAAM;AAEV,QAAM,OAAQ,OAAO,aAAa,eAAe;AACjD,MAAI,QAAQ;AACR,UAAM,IAAI,WAAW,OAAO,IAAI;AAEpC,MAAI,OAAO,QAAQ,UAAU;AACzB,QAAI,QAAQ,IAAI,OAAO,CAAC,GAAG;AACvB,UAAI,QAAQ,IAAI,OAAO,CAAC,GAAG;AACvB,cAAM,IAAI,WAAW;AAAA,MACzB,OACK;AACD,cAAM,IAAI,OAAO;AAAA,MACrB;AAAA,IACJ;AACA,QAAI,CAAC,sBAAsB,KAAK,GAAG,GAAG;AAClC,UAAI,gBAAgB,OAAO,KAAK;AAC5B,cAAM,IAAI,WAAW,OAAO;AAAA,MAChC,OACK;AACD,cAAM,aAAa;AAAA,MACvB;AAAA,IACJ;AAEA,UAAM,MAAM,GAAG;AAAA,EACnB;AAEA,MAAI,CAAC,IAAI,MAAM;AACX,QAAI,cAAc,KAAK,IAAI,QAAQ,GAAG;AAClC,UAAI,OAAO;AAAA,IACf,WACS,eAAe,KAAK,IAAI,QAAQ,GAAG;AACxC,UAAI,OAAO;AAAA,IACf;AAAA,EACJ;AACA,MAAI,OAAO,IAAI,QAAQ;AACvB,QAAM,OAAO,IAAI,KAAK,QAAQ,GAAG,MAAM;AACvC,QAAM,OAAO,OAAO,MAAM,IAAI,OAAO,MAAM,IAAI;AAE/C,MAAI,KAAK,IAAI,WAAW,QAAQ,OAAO,MAAM,IAAI,OAAO;AAExD,MAAI,OACA,IAAI,WACA,QACA,QACC,OAAO,IAAI,SAAS,IAAI,OAAO,KAAK,MAAM,IAAI;AACvD,SAAO;AACX;AA1DA;AAAA;AAAA;AAAA;AAAA,IAAAG;AAAA;AAAA;;;ACkBO,SAAS,SAAS,KAAK;AAC1B,SAASC,2BAA0B,eAAe,eAAeC,QAAO,GAAG,MACtEC,mBAAkB,eAAe,QACjC,kBAAkB,eAAe;AAC1C;AACO,SAAS,UAAU,KAAK,QAAQ;AACnC,MAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;AACjC,WAAO;AAAA,EACX;AACA,MAAI,MAAM,QAAQ,GAAG,GAAG;AACpB,aAASC,KAAI,GAAG,IAAI,IAAI,QAAQA,KAAI,GAAGA,MAAK;AACxC,UAAI,UAAU,IAAIA,EAAC,CAAC,GAAG;AACnB,eAAO;AAAA,MACX;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACA,MAAI,SAAS,GAAG,GAAG;AACf,WAAO;AAAA,EACX;AACA,MAAI,IAAI,UACJ,OAAO,IAAI,WAAW,cACtB,UAAU,WAAW,GAAG;AACxB,WAAO,UAAU,IAAI,OAAO,GAAG,IAAI;AAAA,EACvC;AACA,aAAW,OAAO,KAAK;AACnB,QAAI,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG,KAAK,UAAU,IAAI,GAAG,CAAC,GAAG;AACvE,aAAO;AAAA,IACX;AAAA,EACJ;AACA,SAAO;AACX;AAjDA,IAAMH,wBACAC,SAKA,UACAC,iBAGA;AAVN;AAAA;AAAA;AAAA;AAAA,IAAMF,yBAAwB,OAAO,gBAAgB;AACrD,IAAMC,UAAS,CAAC,QAAQ;AACpB,aAAO,OAAO,YAAY,WAAW,aAC/B,YAAY,OAAO,GAAG,IACtB,IAAI,kBAAkB;AAAA,IAChC;AACA,IAAM,WAAW,OAAO,UAAU;AAClC,IAAMC,kBAAiB,OAAO,SAAS,cAClC,OAAO,SAAS,eACb,SAAS,KAAK,IAAI,MAAM;AAChC,IAAM,iBAAiB,OAAO,SAAS,cAClC,OAAO,SAAS,eACb,SAAS,KAAK,IAAI,MAAM;AAAA;AAAA;;;ACJzB,SAAS,kBAAkB,QAAQ;AACtC,QAAM,UAAU,CAAC;AACjB,QAAM,aAAa,OAAO;AAC1B,QAAM,OAAO;AACb,OAAK,OAAO,mBAAmB,YAAY,OAAO;AAClD,OAAK,cAAc,QAAQ;AAC3B,SAAO,EAAE,QAAQ,MAAM,QAAiB;AAC5C;AACA,SAAS,mBAAmB,MAAM,SAAS;AACvC,MAAI,CAAC;AACD,WAAO;AACX,MAAI,SAAS,IAAI,GAAG;AAChB,UAAM,cAAc,EAAE,cAAc,MAAM,KAAK,QAAQ,OAAO;AAC9D,YAAQ,KAAK,IAAI;AACjB,WAAO;AAAA,EACX,WACS,MAAM,QAAQ,IAAI,GAAG;AAC1B,UAAM,UAAU,IAAI,MAAM,KAAK,MAAM;AACrC,aAASE,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AAClC,cAAQA,EAAC,IAAI,mBAAmB,KAAKA,EAAC,GAAG,OAAO;AAAA,IACpD;AACA,WAAO;AAAA,EACX,WACS,OAAO,SAAS,YAAY,EAAE,gBAAgB,OAAO;AAC1D,UAAM,UAAU,CAAC;AACjB,eAAW,OAAO,MAAM;AACpB,UAAI,OAAO,UAAU,eAAe,KAAK,MAAM,GAAG,GAAG;AACjD,gBAAQ,GAAG,IAAI,mBAAmB,KAAK,GAAG,GAAG,OAAO;AAAA,MACxD;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AACA,SAAO;AACX;AASO,SAAS,kBAAkB,QAAQ,SAAS;AAC/C,SAAO,OAAO,mBAAmB,OAAO,MAAM,OAAO;AACrD,SAAO,OAAO;AACd,SAAO;AACX;AACA,SAAS,mBAAmB,MAAM,SAAS;AACvC,MAAI,CAAC;AACD,WAAO;AACX,MAAI,QAAQ,KAAK,iBAAiB,MAAM;AACpC,UAAM,eAAe,OAAO,KAAK,QAAQ,YACrC,KAAK,OAAO,KACZ,KAAK,MAAM,QAAQ;AACvB,QAAI,cAAc;AACd,aAAO,QAAQ,KAAK,GAAG;AAAA,IAC3B,OACK;AACD,YAAM,IAAI,MAAM,qBAAqB;AAAA,IACzC;AAAA,EACJ,WACS,MAAM,QAAQ,IAAI,GAAG;AAC1B,aAASA,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AAClC,WAAKA,EAAC,IAAI,mBAAmB,KAAKA,EAAC,GAAG,OAAO;AAAA,IACjD;AAAA,EACJ,WACS,OAAO,SAAS,UAAU;AAC/B,eAAW,OAAO,MAAM;AACpB,UAAI,OAAO,UAAU,eAAe,KAAK,MAAM,GAAG,GAAG;AACjD,aAAK,GAAG,IAAI,mBAAmB,KAAK,GAAG,GAAG,OAAO;AAAA,MACrD;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX;AAlFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAAC;AAAA;AAAA,IAQaA,WACF,YAaE,SA0EA,SAqKP;AArQN,IAAAC,YAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAMO,IAAMD,YAAW;AAExB,KAAC,SAAUE,aAAY;AACnB,MAAAA,YAAWA,YAAW,SAAS,IAAI,CAAC,IAAI;AACxC,MAAAA,YAAWA,YAAW,YAAY,IAAI,CAAC,IAAI;AAC3C,MAAAA,YAAWA,YAAW,OAAO,IAAI,CAAC,IAAI;AACtC,MAAAA,YAAWA,YAAW,KAAK,IAAI,CAAC,IAAI;AACpC,MAAAA,YAAWA,YAAW,eAAe,IAAI,CAAC,IAAI;AAC9C,MAAAA,YAAWA,YAAW,cAAc,IAAI,CAAC,IAAI;AAC7C,MAAAA,YAAWA,YAAW,YAAY,IAAI,CAAC,IAAI;AAAA,IAC/C,GAAG,eAAe,aAAa,CAAC,EAAE;AAI3B,IAAM,UAAN,MAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMjB,YAAY,UAAU;AAClB,aAAK,WAAW;AAAA,MACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,OAAO,KAAK;AACR,YAAI,IAAI,SAAS,WAAW,SAAS,IAAI,SAAS,WAAW,KAAK;AAC9D,cAAI,UAAU,GAAG,GAAG;AAChB,mBAAO,KAAK,eAAe;AAAA,cACvB,MAAM,IAAI,SAAS,WAAW,QACxB,WAAW,eACX,WAAW;AAAA,cACjB,KAAK,IAAI;AAAA,cACT,MAAM,IAAI;AAAA,cACV,IAAI,IAAI;AAAA,YACZ,CAAC;AAAA,UACL;AAAA,QACJ;AACA,eAAO,CAAC,KAAK,eAAe,GAAG,CAAC;AAAA,MACpC;AAAA;AAAA;AAAA;AAAA,MAIA,eAAe,KAAK;AAEhB,YAAI,MAAM,KAAK,IAAI;AAEnB,YAAI,IAAI,SAAS,WAAW,gBACxB,IAAI,SAAS,WAAW,YAAY;AACpC,iBAAO,IAAI,cAAc;AAAA,QAC7B;AAGA,YAAI,IAAI,OAAO,QAAQ,IAAI,KAAK;AAC5B,iBAAO,IAAI,MAAM;AAAA,QACrB;AAEA,YAAI,QAAQ,IAAI,IAAI;AAChB,iBAAO,IAAI;AAAA,QACf;AAEA,YAAI,QAAQ,IAAI,MAAM;AAClB,iBAAO,KAAK,UAAU,IAAI,MAAM,KAAK,QAAQ;AAAA,QACjD;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,eAAe,KAAK;AAChB,cAAM,iBAAiB,kBAAkB,GAAG;AAC5C,cAAM,OAAO,KAAK,eAAe,eAAe,MAAM;AACtD,cAAM,UAAU,eAAe;AAC/B,gBAAQ,QAAQ,IAAI;AACpB,eAAO;AAAA,MACX;AAAA,IACJ;AAMO,IAAM,UAAN,cAAsB,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMjC,YAAY,SAAS;AACjB,cAAM;AACN,aAAK,UAAU;AAAA,MACnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,IAAI,KAAK;AACL,YAAI;AACJ,YAAI,OAAO,QAAQ,UAAU;AACzB,cAAI,KAAK,eAAe;AACpB,kBAAM,IAAI,MAAM,iDAAiD;AAAA,UACrE;AACA,mBAAS,KAAK,aAAa,GAAG;AAC9B,gBAAM,gBAAgB,OAAO,SAAS,WAAW;AACjD,cAAI,iBAAiB,OAAO,SAAS,WAAW,YAAY;AACxD,mBAAO,OAAO,gBAAgB,WAAW,QAAQ,WAAW;AAE5D,iBAAK,gBAAgB,IAAI,oBAAoB,MAAM;AAEnD,gBAAI,OAAO,gBAAgB,GAAG;AAC1B,oBAAM,aAAa,WAAW,MAAM;AAAA,YACxC;AAAA,UACJ,OACK;AAED,kBAAM,aAAa,WAAW,MAAM;AAAA,UACxC;AAAA,QACJ,WACS,SAAS,GAAG,KAAK,IAAI,QAAQ;AAElC,cAAI,CAAC,KAAK,eAAe;AACrB,kBAAM,IAAI,MAAM,kDAAkD;AAAA,UACtE,OACK;AACD,qBAAS,KAAK,cAAc,eAAe,GAAG;AAC9C,gBAAI,QAAQ;AAER,mBAAK,gBAAgB;AACrB,oBAAM,aAAa,WAAW,MAAM;AAAA,YACxC;AAAA,UACJ;AAAA,QACJ,OACK;AACD,gBAAM,IAAI,MAAM,mBAAmB,GAAG;AAAA,QAC1C;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,aAAa,KAAK;AACd,YAAIC,KAAI;AAER,cAAM,IAAI;AAAA,UACN,MAAM,OAAO,IAAI,OAAO,CAAC,CAAC;AAAA,QAC9B;AACA,YAAI,WAAW,EAAE,IAAI,MAAM,QAAW;AAClC,gBAAM,IAAI,MAAM,yBAAyB,EAAE,IAAI;AAAA,QACnD;AAEA,YAAI,EAAE,SAAS,WAAW,gBACtB,EAAE,SAAS,WAAW,YAAY;AAClC,gBAAM,QAAQA,KAAI;AAClB,iBAAO,IAAI,OAAO,EAAEA,EAAC,MAAM,OAAOA,MAAK,IAAI,QAAQ;AAAA,UAAE;AACrD,gBAAM,MAAM,IAAI,UAAU,OAAOA,EAAC;AAClC,cAAI,OAAO,OAAO,GAAG,KAAK,IAAI,OAAOA,EAAC,MAAM,KAAK;AAC7C,kBAAM,IAAI,MAAM,qBAAqB;AAAA,UACzC;AACA,YAAE,cAAc,OAAO,GAAG;AAAA,QAC9B;AAEA,YAAI,QAAQ,IAAI,OAAOA,KAAI,CAAC,GAAG;AAC3B,gBAAM,QAAQA,KAAI;AAClB,iBAAO,EAAEA,IAAG;AACR,kBAAM,IAAI,IAAI,OAAOA,EAAC;AACtB,gBAAI,QAAQ;AACR;AACJ,gBAAIA,OAAM,IAAI;AACV;AAAA,UACR;AACA,YAAE,MAAM,IAAI,UAAU,OAAOA,EAAC;AAAA,QAClC,OACK;AACD,YAAE,MAAM;AAAA,QACZ;AAEA,cAAM,OAAO,IAAI,OAAOA,KAAI,CAAC;AAC7B,YAAI,OAAO,QAAQ,OAAO,IAAI,KAAK,MAAM;AACrC,gBAAM,QAAQA,KAAI;AAClB,iBAAO,EAAEA,IAAG;AACR,kBAAM,IAAI,IAAI,OAAOA,EAAC;AACtB,gBAAI,QAAQ,KAAK,OAAO,CAAC,KAAK,GAAG;AAC7B,gBAAEA;AACF;AAAA,YACJ;AACA,gBAAIA,OAAM,IAAI;AACV;AAAA,UACR;AACA,YAAE,KAAK,OAAO,IAAI,UAAU,OAAOA,KAAI,CAAC,CAAC;AAAA,QAC7C;AAEA,YAAI,IAAI,OAAO,EAAEA,EAAC,GAAG;AACjB,gBAAM,UAAU,KAAK,SAAS,IAAI,OAAOA,EAAC,CAAC;AAC3C,cAAI,QAAQ,eAAe,EAAE,MAAM,OAAO,GAAG;AACzC,cAAE,OAAO;AAAA,UACb,OACK;AACD,kBAAM,IAAI,MAAM,iBAAiB;AAAA,UACrC;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,SAAS,KAAK;AACV,YAAI;AACA,iBAAO,KAAK,MAAM,KAAK,KAAK,OAAO;AAAA,QACvC,SACOC,IAAP;AACI,iBAAO;AAAA,QACX;AAAA,MACJ;AAAA,MACA,OAAO,eAAeC,OAAM,SAAS;AACjC,gBAAQA,OAAM;AAAA,UACV,KAAK,WAAW;AACZ,mBAAO,OAAO,YAAY;AAAA,UAC9B,KAAK,WAAW;AACZ,mBAAO,YAAY;AAAA,UACvB,KAAK,WAAW;AACZ,mBAAO,OAAO,YAAY,YAAY,OAAO,YAAY;AAAA,UAC7D,KAAK,WAAW;AAAA,UAChB,KAAK,WAAW;AACZ,mBAAO,MAAM,QAAQ,OAAO,KAAK,QAAQ,SAAS;AAAA,UACtD,KAAK,WAAW;AAAA,UAChB,KAAK,WAAW;AACZ,mBAAO,MAAM,QAAQ,OAAO;AAAA,QACpC;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA,MAIA,UAAU;AACN,YAAI,KAAK,eAAe;AACpB,eAAK,cAAc,uBAAuB;AAC1C,eAAK,gBAAgB;AAAA,QACzB;AAAA,MACJ;AAAA,IACJ;AASA,IAAM,sBAAN,MAA0B;AAAA,MACtB,YAAY,QAAQ;AAChB,aAAK,SAAS;AACd,aAAK,UAAU,CAAC;AAChB,aAAK,YAAY;AAAA,MACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASA,eAAe,SAAS;AACpB,aAAK,QAAQ,KAAK,OAAO;AACzB,YAAI,KAAK,QAAQ,WAAW,KAAK,UAAU,aAAa;AAEpD,gBAAM,SAAS,kBAAkB,KAAK,WAAW,KAAK,OAAO;AAC7D,eAAK,uBAAuB;AAC5B,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,yBAAyB;AACrB,aAAK,YAAY;AACjB,aAAK,UAAU,CAAC;AAAA,MACpB;AAAA,IACJ;AAAA;AAAA;;;ACpSO,SAAS,GAAG,KAAK,IAAI,IAAI;AAC5B,MAAI,GAAG,IAAI,EAAE;AACb,SAAO,SAAS,aAAa;AACzB,QAAI,IAAI,IAAI,EAAE;AAAA,EAClB;AACJ;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAOM,iBAiCOC;AAxCb,IAAAC,eAAA;AAAA;AAAA;AAAA;AAAA,IAAAC;AACA;AACA;AAKA,IAAM,kBAAkB,OAAO,OAAO;AAAA,MAClC,SAAS;AAAA,MACT,eAAe;AAAA,MACf,YAAY;AAAA,MACZ,eAAe;AAAA;AAAA,MAEf,aAAa;AAAA,MACb,gBAAgB;AAAA,IACpB,CAAC;AAyBM,IAAMF,UAAN,cAAqB,QAAQ;AAAA;AAAA;AAAA;AAAA,MAIhC,YAAY,IAAI,KAAK,MAAM;AACvB,cAAM;AAeN,aAAK,YAAY;AAKjB,aAAK,YAAY;AAIjB,aAAK,gBAAgB,CAAC;AAItB,aAAK,aAAa,CAAC;AAOnB,aAAK,SAAS,CAAC;AAKf,aAAK,YAAY;AACjB,aAAK,MAAM;AACX,aAAK,OAAO,CAAC;AACb,aAAK,QAAQ,CAAC;AACd,aAAK,KAAK;AACV,aAAK,MAAM;AACX,YAAI,QAAQ,KAAK,MAAM;AACnB,eAAK,OAAO,KAAK;AAAA,QACrB;AACA,aAAK,QAAQ,OAAO,OAAO,CAAC,GAAG,IAAI;AACnC,YAAI,KAAK,GAAG;AACR,eAAK,KAAK;AAAA,MAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAeA,IAAI,eAAe;AACf,eAAO,CAAC,KAAK;AAAA,MACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,YAAY;AACR,YAAI,KAAK;AACL;AACJ,cAAM,KAAK,KAAK;AAChB,aAAK,OAAO;AAAA,UACR,GAAG,IAAI,QAAQ,KAAK,OAAO,KAAK,IAAI,CAAC;AAAA,UACrC,GAAG,IAAI,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,UACzC,GAAG,IAAI,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,UACvC,GAAG,IAAI,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AAAA,QAC3C;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkBA,IAAI,SAAS;AACT,eAAO,CAAC,CAAC,KAAK;AAAA,MAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAWA,UAAU;AACN,YAAI,KAAK;AACL,iBAAO;AACX,aAAK,UAAU;AACf,YAAI,CAAC,KAAK,GAAG,eAAe;AACxB,eAAK,GAAG,KAAK;AACjB,YAAI,WAAW,KAAK,GAAG;AACnB,eAAK,OAAO;AAChB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,OAAO;AACH,eAAO,KAAK,QAAQ;AAAA,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAgBA,QAAQ,MAAM;AACV,aAAK,QAAQ,SAAS;AACtB,aAAK,KAAK,MAAM,MAAM,IAAI;AAC1B,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAkBA,KAAK,OAAO,MAAM;AACd,YAAI,gBAAgB,eAAe,EAAE,GAAG;AACpC,gBAAM,IAAI,MAAM,MAAM,GAAG,SAAS,IAAI,4BAA4B;AAAA,QACtE;AACA,aAAK,QAAQ,EAAE;AACf,YAAI,KAAK,MAAM,WAAW,CAAC,KAAK,MAAM,aAAa,CAAC,KAAK,MAAM,UAAU;AACrE,eAAK,YAAY,IAAI;AACrB,iBAAO;AAAA,QACX;AACA,cAAM,SAAS;AAAA,UACX,MAAM,WAAW;AAAA,UACjB,MAAM;AAAA,QACV;AACA,eAAO,UAAU,CAAC;AAClB,eAAO,QAAQ,WAAW,KAAK,MAAM,aAAa;AAElD,YAAI,eAAe,OAAO,KAAK,KAAK,SAAS,CAAC,GAAG;AAC7C,gBAAM,KAAK,KAAK;AAChB,gBAAM,MAAM,KAAK,IAAI;AACrB,eAAK,qBAAqB,IAAI,GAAG;AACjC,iBAAO,KAAK;AAAA,QAChB;AACA,cAAM,sBAAsB,KAAK,GAAG,UAChC,KAAK,GAAG,OAAO,aACf,KAAK,GAAG,OAAO,UAAU;AAC7B,cAAM,gBAAgB,KAAK,MAAM,aAAa,CAAC,uBAAuB,CAAC,KAAK;AAC5E,YAAI,eAAe;AAAA,QACnB,WACS,KAAK,WAAW;AACrB,eAAK,wBAAwB,MAAM;AACnC,eAAK,OAAO,MAAM;AAAA,QACtB,OACK;AACD,eAAK,WAAW,KAAK,MAAM;AAAA,QAC/B;AACA,aAAK,QAAQ,CAAC;AACd,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA,MAIA,qBAAqB,IAAI,KAAK;AAC1B,YAAI;AACJ,cAAMG,YAAW,KAAK,KAAK,MAAM,aAAa,QAAQ,OAAO,SAAS,KAAK,KAAK,MAAM;AACtF,YAAIA,aAAY,QAAW;AACvB,eAAK,KAAK,EAAE,IAAI;AAChB;AAAA,QACJ;AAEA,cAAM,QAAQ,KAAK,GAAG,aAAa,MAAM;AACrC,iBAAO,KAAK,KAAK,EAAE;AACnB,mBAASC,KAAI,GAAGA,KAAI,KAAK,WAAW,QAAQA,MAAK;AAC7C,gBAAI,KAAK,WAAWA,EAAC,EAAE,OAAO,IAAI;AAC9B,mBAAK,WAAW,OAAOA,IAAG,CAAC;AAAA,YAC/B;AAAA,UACJ;AACA,cAAI,KAAK,MAAM,IAAI,MAAM,yBAAyB,CAAC;AAAA,QACvD,GAAGD,QAAO;AACV,aAAK,KAAK,EAAE,IAAI,IAAI,SAAS;AAEzB,eAAK,GAAG,eAAe,KAAK;AAC5B,cAAI,MAAM,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;AAAA,QACnC;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiBA,YAAY,OAAO,MAAM;AAErB,cAAM,UAAU,KAAK,MAAM,YAAY,UAAa,KAAK,MAAM,eAAe;AAC9E,eAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACpC,eAAK,KAAK,CAAC,MAAM,SAAS;AACtB,gBAAI,SAAS;AACT,qBAAO,OAAO,OAAO,IAAI,IAAI,QAAQ,IAAI;AAAA,YAC7C,OACK;AACD,qBAAO,QAAQ,IAAI;AAAA,YACvB;AAAA,UACJ,CAAC;AACD,eAAK,KAAK,IAAI,GAAG,IAAI;AAAA,QACzB,CAAC;AAAA,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,YAAY,MAAM;AACd,YAAI;AACJ,YAAI,OAAO,KAAK,KAAK,SAAS,CAAC,MAAM,YAAY;AAC7C,gBAAM,KAAK,IAAI;AAAA,QACnB;AACA,cAAM,SAAS;AAAA,UACX,IAAI,KAAK;AAAA,UACT,UAAU;AAAA,UACV,SAAS;AAAA,UACT;AAAA,UACA,OAAO,OAAO,OAAO,EAAE,WAAW,KAAK,GAAG,KAAK,KAAK;AAAA,QACxD;AACA,aAAK,KAAK,CAAC,QAAQ,iBAAiB;AAChC,cAAI,WAAW,KAAK,OAAO,CAAC,GAAG;AAE3B;AAAA,UACJ;AACA,gBAAM,WAAW,QAAQ;AACzB,cAAI,UAAU;AACV,gBAAI,OAAO,WAAW,KAAK,MAAM,SAAS;AACtC,mBAAK,OAAO,MAAM;AAClB,kBAAI,KAAK;AACL,oBAAI,GAAG;AAAA,cACX;AAAA,YACJ;AAAA,UACJ,OACK;AACD,iBAAK,OAAO,MAAM;AAClB,gBAAI,KAAK;AACL,kBAAI,MAAM,GAAG,YAAY;AAAA,YAC7B;AAAA,UACJ;AACA,iBAAO,UAAU;AACjB,iBAAO,KAAK,YAAY;AAAA,QAC5B,CAAC;AACD,aAAK,OAAO,KAAK,MAAM;AACvB,aAAK,YAAY;AAAA,MACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,YAAY,QAAQ,OAAO;AACvB,YAAI,CAAC,KAAK,aAAa,KAAK,OAAO,WAAW,GAAG;AAC7C;AAAA,QACJ;AACA,cAAM,SAAS,KAAK,OAAO,CAAC;AAC5B,YAAI,OAAO,WAAW,CAAC,OAAO;AAC1B;AAAA,QACJ;AACA,eAAO,UAAU;AACjB,eAAO;AACP,aAAK,QAAQ,OAAO;AACpB,aAAK,KAAK,MAAM,MAAM,OAAO,IAAI;AAAA,MACrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,OAAO,QAAQ;AACX,eAAO,MAAM,KAAK;AAClB,aAAK,GAAG,QAAQ,MAAM;AAAA,MAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS;AACL,YAAI,OAAO,KAAK,QAAQ,YAAY;AAChC,eAAK,KAAK,CAAC,SAAS;AAChB,iBAAK,mBAAmB,IAAI;AAAA,UAChC,CAAC;AAAA,QACL,OACK;AACD,eAAK,mBAAmB,KAAK,IAAI;AAAA,QACrC;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,mBAAmB,MAAM;AACrB,aAAK,OAAO;AAAA,UACR,MAAM,WAAW;AAAA,UACjB,MAAM,KAAK,OACL,OAAO,OAAO,EAAE,KAAK,KAAK,MAAM,QAAQ,KAAK,YAAY,GAAG,IAAI,IAChE;AAAA,QACV,CAAC;AAAA,MACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,QAAQ,KAAK;AACT,YAAI,CAAC,KAAK,WAAW;AACjB,eAAK,aAAa,iBAAiB,GAAG;AAAA,QAC1C;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,QAAQ,QAAQ,aAAa;AACzB,aAAK,YAAY;AACjB,eAAO,KAAK;AACZ,aAAK,aAAa,cAAc,QAAQ,WAAW;AAAA,MACvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,SAAS,QAAQ;AACb,cAAM,gBAAgB,OAAO,QAAQ,KAAK;AAC1C,YAAI,CAAC;AACD;AACJ,gBAAQ,OAAO,MAAM;AAAA,UACjB,KAAK,WAAW;AACZ,gBAAI,OAAO,QAAQ,OAAO,KAAK,KAAK;AAChC,mBAAK,UAAU,OAAO,KAAK,KAAK,OAAO,KAAK,GAAG;AAAA,YACnD,OACK;AACD,mBAAK,aAAa,iBAAiB,IAAI,MAAM,2LAA2L,CAAC;AAAA,YAC7O;AACA;AAAA,UACJ,KAAK,WAAW;AAAA,UAChB,KAAK,WAAW;AACZ,iBAAK,QAAQ,MAAM;AACnB;AAAA,UACJ,KAAK,WAAW;AAAA,UAChB,KAAK,WAAW;AACZ,iBAAK,MAAM,MAAM;AACjB;AAAA,UACJ,KAAK,WAAW;AACZ,iBAAK,aAAa;AAClB;AAAA,UACJ,KAAK,WAAW;AACZ,iBAAK,QAAQ;AACb,kBAAM,MAAM,IAAI,MAAM,OAAO,KAAK,OAAO;AAEzC,gBAAI,OAAO,OAAO,KAAK;AACvB,iBAAK,aAAa,iBAAiB,GAAG;AACtC;AAAA,QACR;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,QAAQ,QAAQ;AACZ,cAAM,OAAO,OAAO,QAAQ,CAAC;AAC7B,YAAI,QAAQ,OAAO,IAAI;AACnB,eAAK,KAAK,KAAK,IAAI,OAAO,EAAE,CAAC;AAAA,QACjC;AACA,YAAI,KAAK,WAAW;AAChB,eAAK,UAAU,IAAI;AAAA,QACvB,OACK;AACD,eAAK,cAAc,KAAK,OAAO,OAAO,IAAI,CAAC;AAAA,QAC/C;AAAA,MACJ;AAAA,MACA,UAAU,MAAM;AACZ,YAAI,KAAK,iBAAiB,KAAK,cAAc,QAAQ;AACjD,gBAAM,YAAY,KAAK,cAAc,MAAM;AAC3C,qBAAW,YAAY,WAAW;AAC9B,qBAAS,MAAM,MAAM,IAAI;AAAA,UAC7B;AAAA,QACJ;AACA,cAAM,KAAK,MAAM,MAAM,IAAI;AAC3B,YAAI,KAAK,QAAQ,KAAK,UAAU,OAAO,KAAK,KAAK,SAAS,CAAC,MAAM,UAAU;AACvE,eAAK,cAAc,KAAK,KAAK,SAAS,CAAC;AAAA,QAC3C;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,IAAI,IAAI;AACJ,cAAME,QAAO;AACb,YAAI,OAAO;AACX,eAAO,YAAa,MAAM;AAEtB,cAAI;AACA;AACJ,iBAAO;AACP,UAAAA,MAAK,OAAO;AAAA,YACR,MAAM,WAAW;AAAA,YACjB;AAAA,YACA,MAAM;AAAA,UACV,CAAC;AAAA,QACL;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,MAAM,QAAQ;AACV,cAAM,MAAM,KAAK,KAAK,OAAO,EAAE;AAC/B,YAAI,eAAe,OAAO,KAAK;AAC3B,cAAI,MAAM,MAAM,OAAO,IAAI;AAC3B,iBAAO,KAAK,KAAK,OAAO,EAAE;AAAA,QAC9B,OACK;AAAA,QACL;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,UAAU,IAAI,KAAK;AACf,aAAK,KAAK;AACV,aAAK,YAAY,OAAO,KAAK,SAAS;AACtC,aAAK,OAAO;AACZ,aAAK,YAAY;AACjB,aAAK,aAAa;AAClB,aAAK,aAAa,SAAS;AAC3B,aAAK,YAAY,IAAI;AAAA,MACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,eAAe;AACX,aAAK,cAAc,QAAQ,CAAC,SAAS,KAAK,UAAU,IAAI,CAAC;AACzD,aAAK,gBAAgB,CAAC;AACtB,aAAK,WAAW,QAAQ,CAAC,WAAW;AAChC,eAAK,wBAAwB,MAAM;AACnC,eAAK,OAAO,MAAM;AAAA,QACtB,CAAC;AACD,aAAK,aAAa,CAAC;AAAA,MACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,eAAe;AACX,aAAK,QAAQ;AACb,aAAK,QAAQ,sBAAsB;AAAA,MACvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,UAAU;AACN,YAAI,KAAK,MAAM;AAEX,eAAK,KAAK,QAAQ,CAAC,eAAe,WAAW,CAAC;AAC9C,eAAK,OAAO;AAAA,QAChB;AACA,aAAK,GAAG,UAAU,EAAE,IAAI;AAAA,MAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAiBA,aAAa;AACT,YAAI,KAAK,WAAW;AAChB,eAAK,OAAO,EAAE,MAAM,WAAW,WAAW,CAAC;AAAA,QAC/C;AAEA,aAAK,QAAQ;AACb,YAAI,KAAK,WAAW;AAEhB,eAAK,QAAQ,sBAAsB;AAAA,QACvC;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ;AACJ,eAAO,KAAK,WAAW;AAAA,MAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,SAAS,UAAU;AACf,aAAK,MAAM,WAAW;AACtB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUA,IAAI,WAAW;AACX,aAAK,MAAM,WAAW;AACtB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcA,QAAQF,UAAS;AACb,aAAK,MAAM,UAAUA;AACrB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYA,MAAM,UAAU;AACZ,aAAK,gBAAgB,KAAK,iBAAiB,CAAC;AAC5C,aAAK,cAAc,KAAK,QAAQ;AAChC,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAYA,WAAW,UAAU;AACjB,aAAK,gBAAgB,KAAK,iBAAiB,CAAC;AAC5C,aAAK,cAAc,QAAQ,QAAQ;AACnC,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBA,OAAO,UAAU;AACb,YAAI,CAAC,KAAK,eAAe;AACrB,iBAAO;AAAA,QACX;AACA,YAAI,UAAU;AACV,gBAAM,YAAY,KAAK;AACvB,mBAASC,KAAI,GAAGA,KAAI,UAAU,QAAQA,MAAK;AACvC,gBAAI,aAAa,UAAUA,EAAC,GAAG;AAC3B,wBAAU,OAAOA,IAAG,CAAC;AACrB,qBAAO;AAAA,YACX;AAAA,UACJ;AAAA,QACJ,OACK;AACD,eAAK,gBAAgB,CAAC;AAAA,QAC1B;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,eAAe;AACX,eAAO,KAAK,iBAAiB,CAAC;AAAA,MAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcA,cAAc,UAAU;AACpB,aAAK,wBAAwB,KAAK,yBAAyB,CAAC;AAC5D,aAAK,sBAAsB,KAAK,QAAQ;AACxC,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAcA,mBAAmB,UAAU;AACzB,aAAK,wBAAwB,KAAK,yBAAyB,CAAC;AAC5D,aAAK,sBAAsB,QAAQ,QAAQ;AAC3C,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAmBA,eAAe,UAAU;AACrB,YAAI,CAAC,KAAK,uBAAuB;AAC7B,iBAAO;AAAA,QACX;AACA,YAAI,UAAU;AACV,gBAAM,YAAY,KAAK;AACvB,mBAASA,KAAI,GAAGA,KAAI,UAAU,QAAQA,MAAK;AACvC,gBAAI,aAAa,UAAUA,EAAC,GAAG;AAC3B,wBAAU,OAAOA,IAAG,CAAC;AACrB,qBAAO;AAAA,YACX;AAAA,UACJ;AAAA,QACJ,OACK;AACD,eAAK,wBAAwB,CAAC;AAAA,QAClC;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA,uBAAuB;AACnB,eAAO,KAAK,yBAAyB,CAAC;AAAA,MAC1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,wBAAwB,QAAQ;AAC5B,YAAI,KAAK,yBAAyB,KAAK,sBAAsB,QAAQ;AACjE,gBAAM,YAAY,KAAK,sBAAsB,MAAM;AACnD,qBAAW,YAAY,WAAW;AAC9B,qBAAS,MAAM,MAAM,OAAO,IAAI;AAAA,UACpC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;;;AC1zBO,SAAS,QAAQ,MAAM;AAC1B,SAAO,QAAQ,CAAC;AAChB,OAAK,KAAK,KAAK,OAAO;AACtB,OAAK,MAAM,KAAK,OAAO;AACvB,OAAK,SAAS,KAAK,UAAU;AAC7B,OAAK,SAAS,KAAK,SAAS,KAAK,KAAK,UAAU,IAAI,KAAK,SAAS;AAClE,OAAK,WAAW;AACpB;AAlBA;AAAA;AAAA;AAAA;AAyBA,YAAQ,UAAU,WAAW,WAAY;AACrC,UAAI,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,QAAQ,KAAK,UAAU;AACxD,UAAI,KAAK,QAAQ;AACb,YAAI,OAAO,KAAK,OAAO;AACvB,YAAI,YAAY,KAAK,MAAM,OAAO,KAAK,SAAS,EAAE;AAClD,cAAM,KAAK,MAAM,OAAO,EAAE,IAAI,MAAM,IAAI,KAAK,YAAY,KAAK;AAAA,MAClE;AACA,aAAO,KAAK,IAAI,IAAI,KAAK,GAAG,IAAI;AAAA,IACpC;AAMA,YAAQ,UAAU,QAAQ,WAAY;AAClC,WAAK,WAAW;AAAA,IACpB;AAMA,YAAQ,UAAU,SAAS,SAAU,KAAK;AACtC,WAAK,KAAK;AAAA,IACd;AAMA,YAAQ,UAAU,SAAS,SAAU,KAAK;AACtC,WAAK,MAAM;AAAA,IACf;AAMA,YAAQ,UAAU,YAAY,SAAU,QAAQ;AAC5C,WAAK,SAAS;AAAA,IAClB;AAAA;AAAA;;;ACjEA,IAMa;AANb;AAAA;AAAA;AAAA;AAAA,IAAAE;AACA,IAAAC;AACA,IAAAD;AACA;AACA;AACA;AACO,IAAM,UAAN,cAAsB,QAAQ;AAAA,MACjC,YAAY,KAAK,MAAM;AACnB,YAAI;AACJ,cAAM;AACN,aAAK,OAAO,CAAC;AACb,aAAK,OAAO,CAAC;AACb,YAAI,OAAO,aAAa,OAAO,KAAK;AAChC,iBAAO;AACP,gBAAM;AAAA,QACV;AACA,eAAO,QAAQ,CAAC;AAChB,aAAK,OAAO,KAAK,QAAQ;AACzB,aAAK,OAAO;AACZ,8BAAsB,MAAM,IAAI;AAChC,aAAK,aAAa,KAAK,iBAAiB,KAAK;AAC7C,aAAK,qBAAqB,KAAK,wBAAwB,QAAQ;AAC/D,aAAK,kBAAkB,KAAK,qBAAqB,GAAI;AACrD,aAAK,qBAAqB,KAAK,wBAAwB,GAAI;AAC3D,aAAK,qBAAqB,KAAK,KAAK,yBAAyB,QAAQ,OAAO,SAAS,KAAK,GAAG;AAC7F,aAAK,UAAU,IAAI,QAAQ;AAAA,UACvB,KAAK,KAAK,kBAAkB;AAAA,UAC5B,KAAK,KAAK,qBAAqB;AAAA,UAC/B,QAAQ,KAAK,oBAAoB;AAAA,QACrC,CAAC;AACD,aAAK,QAAQ,QAAQ,KAAK,UAAU,MAAQ,KAAK,OAAO;AACxD,aAAK,cAAc;AACnB,aAAK,MAAM;AACX,cAAM,UAAU,KAAK,UAAU;AAC/B,aAAK,UAAU,IAAI,QAAQ,QAAQ;AACnC,aAAK,UAAU,IAAI,QAAQ,QAAQ;AACnC,aAAK,eAAe,KAAK,gBAAgB;AACzC,YAAI,KAAK;AACL,eAAK,KAAK;AAAA,MAClB;AAAA,MACA,aAAa,GAAG;AACZ,YAAI,CAAC,UAAU;AACX,iBAAO,KAAK;AAChB,aAAK,gBAAgB,CAAC,CAAC;AACvB,eAAO;AAAA,MACX;AAAA,MACA,qBAAqB,GAAG;AACpB,YAAI,MAAM;AACN,iBAAO,KAAK;AAChB,aAAK,wBAAwB;AAC7B,eAAO;AAAA,MACX;AAAA,MACA,kBAAkB,GAAG;AACjB,YAAI;AACJ,YAAI,MAAM;AACN,iBAAO,KAAK;AAChB,aAAK,qBAAqB;AAC1B,SAAC,KAAK,KAAK,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG,OAAO,CAAC;AACpE,eAAO;AAAA,MACX;AAAA,MACA,oBAAoB,GAAG;AACnB,YAAI;AACJ,YAAI,MAAM;AACN,iBAAO,KAAK;AAChB,aAAK,uBAAuB;AAC5B,SAAC,KAAK,KAAK,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG,UAAU,CAAC;AACvE,eAAO;AAAA,MACX;AAAA,MACA,qBAAqB,GAAG;AACpB,YAAI;AACJ,YAAI,MAAM;AACN,iBAAO,KAAK;AAChB,aAAK,wBAAwB;AAC7B,SAAC,KAAK,KAAK,aAAa,QAAQ,OAAO,SAAS,SAAS,GAAG,OAAO,CAAC;AACpE,eAAO;AAAA,MACX;AAAA,MACA,QAAQ,GAAG;AACP,YAAI,CAAC,UAAU;AACX,iBAAO,KAAK;AAChB,aAAK,WAAW;AAChB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,uBAAuB;AAEnB,YAAI,CAAC,KAAK,iBACN,KAAK,iBACL,KAAK,QAAQ,aAAa,GAAG;AAE7B,eAAK,UAAU;AAAA,QACnB;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAQA,KAAK,IAAI;AACL,YAAI,CAAC,KAAK,YAAY,QAAQ,MAAM;AAChC,iBAAO;AACX,aAAK,SAAS,IAAI,OAAO,KAAK,KAAK,KAAK,IAAI;AAC5C,cAAM,SAAS,KAAK;AACpB,cAAME,QAAO;AACb,aAAK,cAAc;AACnB,aAAK,gBAAgB;AAErB,cAAM,iBAAiB,GAAG,QAAQ,QAAQ,WAAY;AAClD,UAAAA,MAAK,OAAO;AACZ,gBAAM,GAAG;AAAA,QACb,CAAC;AAED,cAAM,WAAW,GAAG,QAAQ,SAAS,CAAC,QAAQ;AAC1C,UAAAA,MAAK,QAAQ;AACb,UAAAA,MAAK,cAAc;AACnB,eAAK,aAAa,SAAS,GAAG;AAC9B,cAAI,IAAI;AACJ,eAAG,GAAG;AAAA,UACV,OACK;AAED,YAAAA,MAAK,qBAAqB;AAAA,UAC9B;AAAA,QACJ,CAAC;AACD,YAAI,UAAU,KAAK,UAAU;AACzB,gBAAMC,WAAU,KAAK;AACrB,cAAIA,aAAY,GAAG;AACf,2BAAe;AAAA,UACnB;AAEA,gBAAM,QAAQ,KAAK,aAAa,MAAM;AAClC,2BAAe;AACf,mBAAO,MAAM;AAEb,mBAAO,KAAK,SAAS,IAAI,MAAM,SAAS,CAAC;AAAA,UAC7C,GAAGA,QAAO;AACV,cAAI,KAAK,KAAK,WAAW;AACrB,kBAAM,MAAM;AAAA,UAChB;AACA,eAAK,KAAK,KAAK,SAAS,aAAa;AACjC,yBAAa,KAAK;AAAA,UACtB,CAAC;AAAA,QACL;AACA,aAAK,KAAK,KAAK,cAAc;AAC7B,aAAK,KAAK,KAAK,QAAQ;AACvB,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,QAAQ,IAAI;AACR,eAAO,KAAK,KAAK,EAAE;AAAA,MACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS;AAEL,aAAK,QAAQ;AAEb,aAAK,cAAc;AACnB,aAAK,aAAa,MAAM;AAExB,cAAM,SAAS,KAAK;AACpB,aAAK,KAAK,KAAK,GAAG,QAAQ,QAAQ,KAAK,OAAO,KAAK,IAAI,CAAC,GAAG,GAAG,QAAQ,QAAQ,KAAK,OAAO,KAAK,IAAI,CAAC,GAAG,GAAG,QAAQ,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC,GAAG,GAAG,QAAQ,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC,GAAG,GAAG,KAAK,SAAS,WAAW,KAAK,UAAU,KAAK,IAAI,CAAC,CAAC;AAAA,MAC7P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS;AACL,aAAK,aAAa,MAAM;AAAA,MAC5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,OAAO,MAAM;AACT,YAAI;AACA,eAAK,QAAQ,IAAI,IAAI;AAAA,QACzB,SACOC,IAAP;AACI,eAAK,QAAQ,eAAeA,EAAC;AAAA,QACjC;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,UAAU,QAAQ;AAEd,iBAAS,MAAM;AACX,eAAK,aAAa,UAAU,MAAM;AAAA,QACtC,GAAG,KAAK,YAAY;AAAA,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ,KAAK;AACT,aAAK,aAAa,SAAS,GAAG;AAAA,MAClC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,OAAO,KAAK,MAAM;AACd,YAAI,SAAS,KAAK,KAAK,GAAG;AAC1B,YAAI,CAAC,QAAQ;AACT,mBAAS,IAAIC,QAAO,MAAM,KAAK,IAAI;AACnC,eAAK,KAAK,GAAG,IAAI;AAAA,QACrB,WACS,KAAK,gBAAgB,CAAC,OAAO,QAAQ;AAC1C,iBAAO,QAAQ;AAAA,QACnB;AACA,eAAO;AAAA,MACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,SAAS,QAAQ;AACb,cAAM,OAAO,OAAO,KAAK,KAAK,IAAI;AAClC,mBAAW,OAAO,MAAM;AACpB,gBAAMC,UAAS,KAAK,KAAK,GAAG;AAC5B,cAAIA,QAAO,QAAQ;AACf;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,OAAO;AAAA,MAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA,QAAQ,QAAQ;AACZ,cAAM,iBAAiB,KAAK,QAAQ,OAAO,MAAM;AACjD,iBAASC,KAAI,GAAGA,KAAI,eAAe,QAAQA,MAAK;AAC5C,eAAK,OAAO,MAAM,eAAeA,EAAC,GAAG,OAAO,OAAO;AAAA,QACvD;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,UAAU;AACN,aAAK,KAAK,QAAQ,CAAC,eAAe,WAAW,CAAC;AAC9C,aAAK,KAAK,SAAS;AACnB,aAAK,QAAQ,QAAQ;AAAA,MACzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,SAAS;AACL,aAAK,gBAAgB;AACrB,aAAK,gBAAgB;AACrB,aAAK,QAAQ,cAAc;AAC3B,YAAI,KAAK;AACL,eAAK,OAAO,MAAM;AAAA,MAC1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,aAAa;AACT,eAAO,KAAK,OAAO;AAAA,MACvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,QAAQ,QAAQ,aAAa;AACzB,aAAK,QAAQ;AACb,aAAK,QAAQ,MAAM;AACnB,aAAK,cAAc;AACnB,aAAK,aAAa,SAAS,QAAQ,WAAW;AAC9C,YAAI,KAAK,iBAAiB,CAAC,KAAK,eAAe;AAC3C,eAAK,UAAU;AAAA,QACnB;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,YAAY;AACR,YAAI,KAAK,iBAAiB,KAAK;AAC3B,iBAAO;AACX,cAAML,QAAO;AACb,YAAI,KAAK,QAAQ,YAAY,KAAK,uBAAuB;AACrD,eAAK,QAAQ,MAAM;AACnB,eAAK,aAAa,kBAAkB;AACpC,eAAK,gBAAgB;AAAA,QACzB,OACK;AACD,gBAAM,QAAQ,KAAK,QAAQ,SAAS;AACpC,eAAK,gBAAgB;AACrB,gBAAM,QAAQ,KAAK,aAAa,MAAM;AAClC,gBAAIA,MAAK;AACL;AACJ,iBAAK,aAAa,qBAAqBA,MAAK,QAAQ,QAAQ;AAE5D,gBAAIA,MAAK;AACL;AACJ,YAAAA,MAAK,KAAK,CAAC,QAAQ;AACf,kBAAI,KAAK;AACL,gBAAAA,MAAK,gBAAgB;AACrB,gBAAAA,MAAK,UAAU;AACf,qBAAK,aAAa,mBAAmB,GAAG;AAAA,cAC5C,OACK;AACD,gBAAAA,MAAK,YAAY;AAAA,cACrB;AAAA,YACJ,CAAC;AAAA,UACL,GAAG,KAAK;AACR,cAAI,KAAK,KAAK,WAAW;AACrB,kBAAM,MAAM;AAAA,UAChB;AACA,eAAK,KAAK,KAAK,SAAS,aAAa;AACjC,yBAAa,KAAK;AAAA,UACtB,CAAC;AAAA,QACL;AAAA,MACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,cAAc;AACV,cAAM,UAAU,KAAK,QAAQ;AAC7B,aAAK,gBAAgB;AACrB,aAAK,QAAQ,MAAM;AACnB,aAAK,aAAa,aAAa,OAAO;AAAA,MAC1C;AAAA,IACJ;AAAA;AAAA;;;ACjWA,SAASM,QAAO,KAAK,MAAM;AACvB,MAAI,OAAO,QAAQ,UAAU;AACzB,WAAO;AACP,UAAM;AAAA,EACV;AACA,SAAO,QAAQ,CAAC;AAChB,QAAM,SAAS,IAAI,KAAK,KAAK,QAAQ,YAAY;AACjD,QAAM,SAAS,OAAO;AACtB,QAAM,KAAK,OAAO;AAClB,QAAM,OAAO,OAAO;AACpB,QAAM,gBAAgB,MAAM,EAAE,KAAK,QAAQ,MAAM,EAAE,EAAE,MAAM;AAC3D,QAAM,gBAAgB,KAAK,YACvB,KAAK,sBAAsB,KAC3B,UAAU,KAAK,aACf;AACJ,MAAI;AACJ,MAAI,eAAe;AACf,SAAK,IAAI,QAAQ,QAAQ,IAAI;AAAA,EACjC,OACK;AACD,QAAI,CAAC,MAAM,EAAE,GAAG;AACZ,YAAM,EAAE,IAAI,IAAI,QAAQ,QAAQ,IAAI;AAAA,IACxC;AACA,SAAK,MAAM,EAAE;AAAA,EACjB;AACA,MAAI,OAAO,SAAS,CAAC,KAAK,OAAO;AAC7B,SAAK,QAAQ,OAAO;AAAA,EACxB;AACA,SAAO,GAAG,OAAO,OAAO,MAAM,IAAI;AACtC;AApCA,IAMM;AANN,IAAAC,YAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,IAAAC;AAgDA,IAAAD;AA5CA,IAAM,QAAQ,CAAC;AAiCf,WAAO,OAAOD,SAAQ;AAAA,MAClB;AAAA,MACA,QAAAG;AAAA,MACA,IAAIH;AAAA,MACJ,SAASA;AAAA,IACb,CAAC;AAAA;AAAA;;;AC5CD,IAAAI,mBAAA;AAAA;AAAA;AAAA;AAAA;AAEA,QAAI,KAAK,mBAAoB;AAE7B,QAAIC,MAAK,IAAI,GAAG,WAAW;AAC3B,QAAI,gBAAgB,WAAO,UAAU,WAAO,YAAY,CAAC;AACzD,QAAI,SAAS,cAAc,UAAU,cAAc;AAEnD,QAAI,aAAa;AAEjB,QAAM,iBAAiB,OAAO,KAAK,oEAAoE,KAAK;AAC5G,QAAM,SAAS,OAAO,MAAM,IAAI,CAAC;AAEjC,aAAS,OAAO,WAAW,SAAS;AAClC,UAAI,CAAC,WAAW;AACd,cAAM,IAAI,MAAM,WAAW,kBAAkB;AAAA,MAC/C;AAAA,IACF;AAEA,aAAS,SAAU,GAAG;AACpB,aAAO,OAAO,SAAS,CAAC,KAAK,EAAE,WAAW;AAAA,IAC5C;AAEA,aAAS,kBAAkB,YAAY;AACrC,UAAI,CAAC,SAAS,UAAU,GACxB;AACE,eAAO;AAAA,MACT;AACA,aAAO,WAAW,QAAQ,MAAM,IAAI;AAAA,MACpC,WAAW,QAAQ,cAAc,IAAI;AAAA,IACvC;AAGA,aAAS,eAAe,IAAI,IAAI;AAC9B,UAAI,GAAG,WAAW,GAAG,QAAQ;AAC3B,eAAO;AAAA,MACT;AACA,UAAI,MAAM;AACV,eAASC,KAAI,GAAGA,KAAI,GAAG,QAAQA,MAAK;AAClC,eAAO,GAAGA,EAAC,IAAI,GAAGA,EAAC;AAAA,MACrB;AACA,aAAO,QAAQ;AAAA,IACjB;AAKA,aAAS,YAAY,MAAM;AACzB,UAAI,MAAM,IAAI,WAAW,IAAI;AAC7B,UAAI,OAAO,cAAc,oBAAoB,aAAa;AACxD,eAAO,OAAO,KAAK,WAAW,YAAY,IAAI,CAAC;AAAA,MACjD,OAAO;AACL,sBAAc,gBAAgB,GAAG;AAAA,MACnC;AACA,aAAO,OAAO,KAAK,GAAG;AAAA,IACxB;AAEA,aAAS,OAAO,KAAK;AACnB,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,OAAO,WAAW,WAAW,QAAQ;AACzC,YAAI,SAAS,KAAK,OAAO,GAAG,EAAE,OAAO;AACrC,gBAAQ,IAAI,WAAW,MAAM,CAAC;AAAA,MAChC,CAAC;AAAA,IACH;AAEA,aAAS,OAAO,IAAI;AAClB,aAAO,SAAS,IAAI,KAAK,MAAM;AAC7B,eAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,cAAI,QAAQ;AACV,gBAAI,kBAAkB,EAAC,MAAM,UAAS;AACtC,gBAAI,OAAO,OAAO,UAAU,OAAO,KAAK,iBAAiB,OAAO,CAAC,EAAE,CAAC;AACpE,mBAAO,KAAK,KAAK,SAAS,WAAW;AACnC,kBAAI,eAAe,EAAC,MAAM,WAAW,GAAM;AAC3C,qBAAO,OAAO,EAAE,EAAE,cAAc,WAAW,IAAI;AAAA,YACjD,CAAC,EAAE,KAAK,SAAS,QAAQ;AACvB,sBAAQ,OAAO,KAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AAAA,YAC7C,CAAC;AAAA,UACH,OAAO;AACL,gBAAI,OAAO,WAAW;AACpB,kBAAI,SAAS,WAAW,eAAe,eAAe,KAAK,EAAE;AAC7D,kBAAI,aAAa,OAAO,OAAO,IAAI;AACnC,kBAAI,cAAc,OAAO,MAAM;AAC/B,sBAAQ,OAAO,OAAO,CAAC,YAAY,WAAW,CAAC,CAAC;AAAA,YAClD,WACS,OAAO,WAAW;AACzB,kBAAI,WAAW,WAAW,iBAAiB,eAAe,KAAK,EAAE;AACjE,kBAAI,aAAa,SAAS,OAAO,IAAI;AACrC,kBAAI,cAAc,SAAS,MAAM;AACjC,sBAAQ,OAAO,OAAO,CAAC,YAAY,WAAW,CAAC,CAAC;AAAA,YAClD;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAEA,QAAI,gBAAgB,OAAO,SAAS;AACpC,QAAI,gBAAgB,OAAO,SAAS;AAEpC,aAAS,eAAe,KAAK,KAAK;AAChC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,OAAO,WAAW,WAAW,UAAU,OAAO,KAAK,GAAG,CAAC;AAC3D,aAAK,OAAO,GAAG;AACf,YAAI,SAAS,KAAK,OAAO;AACzB,gBAAQ,MAAM;AAAA,MAChB,CAAC;AAAA,IACH;AAEA,aAAS,iBAAiB,KAAK,KAAK,KAAK;AACvC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,OAAO,WAAW,WAAW,UAAU,OAAO,KAAK,GAAG,CAAC;AAC3D,aAAK,OAAO,GAAG;AACf,YAAI,cAAc,KAAK,OAAO;AAC9B,gBAAQ,eAAe,aAAa,GAAG,CAAC;AAAA,MAC1C,CAAC;AAAA,IACH;AAQA,YAAQ,kBAAkB,WAAY;AACpC,UAAI,aAAa,YAAY,EAAE;AAC/B,aAAO,CAAC,kBAAkB,UAAU,GAAG;AACrC,qBAAa,YAAY,EAAE;AAAA,MAC7B;AACA,aAAO;AAAA,IACT;AAEA,QAAIC,aAAY,QAAQ,YAAY,SAAS,YAAY;AAEvD,aAAO,WAAW,WAAW,IAAI,iBAAiB;AAClD,aAAO,kBAAkB,UAAU,GAAG,iBAAiB;AAGvD,aAAO,OAAO,KAAKF,IAAG,eAAe,UAAU,EAAE,UAAU,KAAK,CAAC;AAAA,IACnE;AAKA,QAAI,sBAAsB,QAAQ,sBAAsB,SAAS,YAAY;AAC3E,aAAO,WAAW,WAAW,IAAI,iBAAiB;AAClD,aAAO,kBAAkB,UAAU,GAAG,iBAAiB;AAEvD,UAAI,aAAa;AACjB,aAAO,OAAO,KAAKA,IAAG,eAAe,UAAU,EAAE,UAAU,YAAY,KAAK,CAAC;AAAA,IAC/E;AAOA,YAAQ,OAAO,SAAS,YAAY,KAAK;AACvC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,eAAO,WAAW,WAAW,IAAI,iBAAiB;AAClD,eAAO,kBAAkB,UAAU,GAAG,iBAAiB;AACvD,eAAO,IAAI,SAAS,GAAG,6BAA6B;AACpD,eAAO,IAAI,UAAU,IAAI,qBAAqB;AAC9C,gBAAQ,OAAO,KAAKA,IAAG,KAAK,KAAK,YAAY,EAAC,WAAW,KAAI,CAAC,EAAE,MAAM,CAAC,CAAC;AAAA,MAC1E,CAAC;AAAA,IACH;AAEA,YAAQ,SAAS,SAAS,WAAW,KAAK,KAAK;AAC7C,aAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AAC3C,eAAO,UAAU,WAAW,MAAM,UAAU,WAAW,IAAI,gBAAgB;AAC3E,YAAI,UAAU,WAAW,IACzB;AACE,iBAAO,UAAU,CAAC,MAAM,GAAG,gBAAgB;AAAA,QAC7C;AACA,YAAI,UAAU,WAAW,IACzB;AACE,iBAAO,UAAU,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM,GAAG,gBAAgB;AAAA,QACnE;AACA,eAAO,IAAI,SAAS,GAAG,6BAA6B;AACpD,eAAO,IAAI,UAAU,IAAI,qBAAqB;AAC9C,YAAIA,IAAG,OAAO,KAAK,KAAK,SAAS,GAAG;AAClC,kBAAQ,IAAI;AAAA,QACd,OAAO;AACL,iBAAO,IAAI,MAAM,eAAe,CAAC;AAAA,QACnC;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,iBAAiB,QAAQ,SAAS,SAAS,aAAa,YAAY;AACtE,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,eAAO,OAAO,SAAS,WAAW,GAAG,iBAAiB;AACtD,eAAO,OAAO,SAAS,UAAU,GAAG,gBAAgB;AACpD,eAAO,YAAY,WAAW,IAAI,iBAAiB;AACnD,eAAO,kBAAkB,WAAW,GAAG,iBAAiB;AACxD,eAAO,WAAW,WAAW,MAAM,WAAW,WAAW,IAAI,gBAAgB;AAC7E,YAAI,WAAW,WAAW,IAC1B;AACE,iBAAO,WAAW,CAAC,MAAM,GAAG,gBAAgB;AAAA,QAC9C;AACA,YAAI,WAAW,WAAW,IAC1B;AACE,iBAAO,WAAW,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,GAAG,gBAAgB;AAAA,QACrE;AACA,YAAI,OAAOA,IAAG,eAAe,WAAW;AACxC,YAAI,OAAOA,IAAG,cAAc,UAAU;AACtC,YAAI,KAAK,KAAK,OAAO,KAAK,UAAU,CAAC;AACrC,gBAAQ,OAAO,KAAK,GAAG,QAAQ,CAAC,CAAC;AAAA,MACnC,CAAC;AAAA,IACH;AAEA,QAAI,eAAe,QAAQ,eAAe,SAAS,aAAa,YAAY;AAC1E,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,eAAO,OAAO,SAAS,WAAW,GAAG,iBAAiB;AACtD,eAAO,OAAO,SAAS,UAAU,GAAG,gBAAgB;AACpD,eAAO,YAAY,WAAW,IAAI,iBAAiB;AACnD,eAAO,kBAAkB,WAAW,GAAG,iBAAiB;AACxD,eAAO,WAAW,WAAW,MAAM,WAAW,WAAW,IAAI,gBAAgB;AAC7E,YAAI,WAAW,WAAW,IAC1B;AACE,iBAAO,WAAW,CAAC,MAAM,GAAG,gBAAgB;AAAA,QAC9C;AACA,YAAI,WAAW,WAAW,IAC1B;AACE,iBAAO,WAAW,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,GAAG,gBAAgB;AAAA,QACrE;AACA,YAAI,OAAOA,IAAG,eAAe,WAAW;AACxC,YAAI,OAAOA,IAAG,cAAc,UAAU;AACtC,YAAI,KAAK,KAAK,OAAO,KAAK,UAAU,CAAC;AACrC,gBAAQ,OAAO,KAAK,GAAG,SAAS,IAAI,EAAE,GAAG,KAAK,CAAC;AAAA,MACjD,CAAC;AAAA,IACH;AAEA,YAAQ,UAAU,SAAS,aAAa,KAAK,MAAM;AACjD,aAAO,QAAQ,CAAC;AAEhB,UAAI,IAAI,gBAAgB,YAAY;AACpC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,kBAAkB,KAAK,mBAAmB,YAAY,EAAE;AAE5D,eAAM,CAAC,kBAAkB,eAAe,GACxC;AACE,4BAAkB,KAAK,mBAAmB,YAAY,EAAE;AAAA,QAC1D;AACA,yBAAiBE,WAAU,eAAe;AAC1C,gBAAQ,eAAe,iBAAiB,WAAW,CAAC;AAAA,MACtD,CAAC,EAAE,KAAK,SAAS,IAAI;AACnB,eAAO,OAAO,EAAE;AAAA,MAClB,CAAC,EAAE,KAAK,SAAS,MAAM;AACrB,aAAK,KAAK,MAAM,YAAY,EAAE;AAC9B,YAAI,gBAAgB,KAAK,MAAM,GAAG,EAAE;AACpC,iBAAS,KAAK,MAAM,EAAE;AACtB,eAAO,cAAc,IAAI,eAAe,GAAG;AAAA,MAC7C,CAAC,EAAE,KAAK,SAAS,MAAM;AACrB,qBAAa;AACb,YAAI,YAAY,OAAO,OAAO,CAAC,IAAI,gBAAgB,UAAU,CAAC;AAC9D,eAAO,eAAe,QAAQ,SAAS;AAAA,MACzC,CAAC,EAAE,KAAK,SAAS,KAAK;AACpB,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,QAAMC,WAAU,SAAS,YAAY,MAAM,UAAU,OAAO;AAE1D,UAAI;AACJ,YAAM,SAAS,UAAU,eAAe;AACxC,aAAO,OAAO,YAAY,KAAK,cAAc,EAAE,KAAK,SAAS,IAAI;AAC/D,eAAO,OAAO,EAAE;AAAA,MAClB,CAAC,EAAE,KAAK,SAAS,MAAM;AACrB,wBAAgB,KAAK,MAAM,GAAG,EAAE;AAChC,YAAI,SAAS,KAAK,MAAM,EAAE;AAC1B,YAAI,YAAY,OAAO,OAAO;AAAA,UAC5B,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,QACP,CAAC;AACD,eAAO,iBAAiB,QAAQ,WAAW,KAAK,GAAG;AAAA,MACrD,CAAC,EAAE,KAAK,SAAS,SAAS;AACxB,YAAI,CAAC,WAAW,YAAY,OAAO;AACjC,iBAAOA,SAAQ,YAAY,MAAM,IAAI;AAAA,QACvC,WAAW,CAAC,WAAW,YAAY,MAAM;AACvC,gBAAM,IAAI,MAAM,6BAA6B;AAAA,QAC/C;AACA,eAAO,cAAc,KAAK,IAAI,eAAe,KAAK,UAAU,EAAE,KAAK,SAAS,KAAK;AAC/E,iBAAO,OAAO,KAAK,IAAI,WAAW,GAAG,CAAC;AAAA,QACxC,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,YAAQ,UAAUA;AAAA;AAAA;;;sCChSZC;;;;;;;;AAAN,IAAMA,OAAMC,iBAAAA,QAASC,UAAU,cAAc;AAC7CF,IAAAA,KAAIG,SAASC,wBAAOC,IAAI;;;;;ACLxB;AAAA;AAAA;AAAA;AAAA;AAEA,QAAI;AACJ,QAAI;AACJ,QAAI,UAAU;AAAA,MACb,KAAK;AAAA,MACL,MAAM;AAAA,MACN,KAAK;AAAA,MACL,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,IACJ;AACA,QAAI;AAGJ,aAAS,MAAM,GAAG;AACjB,YAAM;AAAA,QACL,MAAM;AAAA,QACN,SAAS;AAAA,QACT;AAAA,QACA;AAAA,MACD;AAAA,IACD;AAEA,aAAS,KAAK,GAAG;AAEhB,UAAI,KAAK,MAAM,IAAI;AAClB,cAAM,eAAe,IAAI,mBAAmB,KAAK,GAAG;AAAA,MACrD;AAIA,WAAK,KAAK,OAAO,EAAE;AACnB,YAAM;AACN,aAAO;AAAA,IACR;AAEA,aAAS,SAAS;AAEjB,UAAI;AACJ,UAAI,MAAM;AAEV,UAAI,OAAO,KAAK;AACf,cAAM;AACN,aAAK,GAAG;AAAA,MACT;AACA,aAAO,MAAM,OAAO,MAAM,KAAK;AAC9B,eAAO;AACP,aAAK;AAAA,MACN;AACA,UAAI,OAAO,KAAK;AACf,eAAO;AACP,eAAO,KAAK,KAAK,MAAM,OAAO,MAAM,KAAK;AACxC,iBAAO;AAAA,QACR;AAAA,MACD;AACA,UAAI,OAAO,OAAO,OAAO,KAAK;AAC7B,eAAO;AACP,aAAK;AACL,YAAI,OAAO,OAAO,OAAO,KAAK;AAC7B,iBAAO;AACP,eAAK;AAAA,QACN;AACA,eAAO,MAAM,OAAO,MAAM,KAAK;AAC9B,iBAAO;AACP,eAAK;AAAA,QACN;AAAA,MACD;AACA,YAAM,OAAO,GAAG;AAChB,UAAI,CAAC,SAAS,GAAG,GAAG;AACnB,cAAM,YAAY;AAAA,MACnB;AACA,aAAO;AAAA,IACR;AAEA,aAAS,SAAS;AAEjB,UAAI;AACJ,UAAIC;AACJ,UAAI,MAAM;AACV,UAAI;AAGJ,UAAI,OAAO,KAAK;AACf,eAAO,KAAK,GAAG;AACd,cAAI,OAAO,KAAK;AACf,iBAAK;AACL,mBAAO;AAAA,UACR,WAAW,OAAO,MAAM;AACvB,iBAAK;AACL,gBAAI,OAAO,KAAK;AACf,sBAAQ;AACR,mBAAKA,KAAI,GAAGA,KAAI,GAAGA,MAAK,GAAG;AAC1B,sBAAM,SAAS,KAAK,GAAG,EAAE;AACzB,oBAAI,CAAC,SAAS,GAAG,GAAG;AACnB;AAAA,gBACD;AACA,wBAAS,QAAQ,KAAM;AAAA,cACxB;AACA,qBAAO,OAAO,aAAa,KAAK;AAAA,YACjC,WAAW,OAAO,QAAQ,EAAE,MAAM,UAAU;AAC3C,qBAAO,QAAQ,EAAE;AAAA,YAClB,OAAO;AACN;AAAA,YACD;AAAA,UACD,OAAO;AACN,mBAAO;AAAA,UACR;AAAA,QACD;AAAA,MACD;AACA,YAAM,YAAY;AAAA,IACnB;AAGA,aAAS,QAAQ;AAChB,aAAO,MAAM,MAAM,KAAK;AACvB,aAAK;AAAA,MACN;AAAA,IACD;AAGA,aAAS,OAAO;AACf,cAAQ,IAAI;AAAA,QACX,KAAK;AACJ,eAAK,GAAG;AACR,eAAK,GAAG;AACR,eAAK,GAAG;AACR,eAAK,GAAG;AACR,iBAAO;AAAA,QACR,KAAK;AACJ,eAAK,GAAG;AACR,eAAK,GAAG;AACR,eAAK,GAAG;AACR,eAAK,GAAG;AACR,eAAK,GAAG;AACR,iBAAO;AAAA,QACR,KAAK;AACJ,eAAK,GAAG;AACR,eAAK,GAAG;AACR,eAAK,GAAG;AACR,eAAK,GAAG;AACR,iBAAO;AAAA,QACR;AACC,gBAAM,iBAAiB,KAAK,GAAG;AAAA,MACjC;AAAA,IACD;AAGA,aAAS,QAAQ;AAChB,UAAI,MAAM,CAAC;AAEX,UAAI,OAAO,KAAK;AACf,aAAK,GAAG;AACR,cAAM;AACN,YAAI,OAAO,KAAK;AACf,eAAK,GAAG;AACR,iBAAO;AAAA,QACR;AACA,eAAO,IAAI;AACV,cAAI,KAAKC,OAAM,CAAC;AAChB,gBAAM;AACN,cAAI,OAAO,KAAK;AACf,iBAAK,GAAG;AACR,mBAAO;AAAA,UACR;AACA,eAAK,GAAG;AACR,gBAAM;AAAA,QACP;AAAA,MACD;AACA,YAAM,WAAW;AAAA,IAClB;AAGA,aAAS,SAAS;AACjB,UAAI;AACJ,UAAI,MAAM,CAAC;AAEX,UAAI,OAAO,KAAK;AACf,aAAK,GAAG;AACR,cAAM;AACN,YAAI,OAAO,KAAK;AACf,eAAK,GAAG;AACR,iBAAO;AAAA,QACR;AACA,eAAO,IAAI;AACV,gBAAM,OAAO;AACb,gBAAM;AACN,eAAK,GAAG;AACR,cAAI,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG,GAAG;AACnD,kBAAM,oBAAoB,MAAM,GAAG;AAAA,UACpC;AACA,cAAI,GAAG,IAAIA,OAAM;AACjB,gBAAM;AACN,cAAI,OAAO,KAAK;AACf,iBAAK,GAAG;AACR,mBAAO;AAAA,UACR;AACA,eAAK,GAAG;AACR,gBAAM;AAAA,QACP;AAAA,MACD;AACA,YAAM,YAAY;AAAA,IACnB;AAGA,aAASA,SAAQ;AAChB,YAAM;AACN,cAAQ,IAAI;AAAA,QACX,KAAK;AACJ,iBAAO,OAAO;AAAA,QACf,KAAK;AACJ,iBAAO,MAAM;AAAA,QACd,KAAK;AACJ,iBAAO,OAAO;AAAA,QACf,KAAK;AACJ,iBAAO,OAAO;AAAA,QACf;AACC,iBAAO,MAAM,OAAO,MAAM,MAAM,OAAO,IAAI,KAAK;AAAA,MAClD;AAAA,IACD;AAGA,WAAO,UAAU,SAAU,QAAQ,SAAS;AAC3C,UAAI;AAEJ,aAAO;AACP,WAAK;AACL,WAAK;AACL,eAASA,OAAM;AACf,YAAM;AACN,UAAI,IAAI;AACP,cAAM,cAAc;AAAA,MACrB;AAQA,aAAO,OAAO,YAAY,aAAc,SAAS,KAAK,QAAQ,KAAK;AAClE,YAAI;AACJ,YAAI;AACJ,YAAI,MAAM,OAAO,GAAG;AACpB,YAAI,OAAO,OAAO,QAAQ,UAAU;AACnC,eAAK,KAAKA,QAAO;AAChB,gBAAI,OAAO,UAAU,eAAe,KAAK,KAAK,CAAC,GAAG;AACjD,kBAAI,KAAK,KAAK,CAAC;AACf,kBAAI,OAAO,MAAM,aAAa;AAC7B,uBAAO,IAAI,CAAC;AAAA,cACb,OAAO;AACN,oBAAI,CAAC,IAAI;AAAA,cACV;AAAA,YACD;AAAA,UACD;AAAA,QACD;AACA,eAAO,QAAQ,KAAK,QAAQ,KAAK,GAAG;AAAA,MACrC,EAAE,EAAE,IAAI,OAAO,GAAG,EAAE,IAAK;AAAA,IAC1B;AAAA;AAAA;;;ACpQA;AAAA;AAAA;AAAA;AAAA;AAEA,QAAI,YAAY;AAChB,QAAI;AACJ,QAAI;AACJ,QAAI,OAAO;AAAA;AAAA,MACV,MAAM;AAAA,MACN,KAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,KAAK;AAAA,MACL,MAAM;AAAA,IACP;AACA,QAAI;AAEJ,aAAS,MAAM,QAAQ;AAKtB,gBAAU,YAAY;AACtB,aAAO,UAAU,KAAK,MAAM,IAAI,MAAM,OAAO,QAAQ,WAAW,SAAU,GAAG;AAC5E,YAAI,IAAI,KAAK,CAAC;AACd,eAAO,OAAO,MAAM,WAAW,IAC5B,SAAS,SAAS,EAAE,WAAW,CAAC,EAAE,SAAS,EAAE,GAAG,MAAM,EAAE;AAAA,MAC5D,CAAC,IAAI,MAAM,MAAM,SAAS;AAAA,IAC3B;AAEA,aAAS,IAAI,KAAK,QAAQ;AAEzB,UAAIC;AACJ,UAAI;AACJ,UAAI;AACJ,UAAIC;AACJ,UAAI,OAAO;AACX,UAAI;AACJ,UAAIC,SAAQ,OAAO,GAAG;AAGtB,UAAIA,UAAS,OAAOA,WAAU,YAAY,OAAOA,OAAM,WAAW,YAAY;AAC7E,QAAAA,SAAQA,OAAM,OAAO,GAAG;AAAA,MACzB;AAGA,UAAI,OAAO,QAAQ,YAAY;AAC9B,QAAAA,SAAQ,IAAI,KAAK,QAAQ,KAAKA,MAAK;AAAA,MACpC;AAGA,cAAQ,OAAOA,QAAO;AAAA,QACrB,KAAK;AACJ,iBAAO,MAAMA,MAAK;AAAA,QAEnB,KAAK;AAEJ,iBAAO,SAASA,MAAK,IAAI,OAAOA,MAAK,IAAI;AAAA,QAE1C,KAAK;AAAA,QACL,KAAK;AAIJ,iBAAO,OAAOA,MAAK;AAAA,QAEpB,KAAK;AACJ,cAAI,CAACA,QAAO;AACX,mBAAO;AAAA,UACR;AACA,iBAAO;AACP,oBAAU,CAAC;AAGX,cAAI,OAAO,UAAU,SAAS,MAAMA,MAAK,MAAM,kBAAkB;AAChE,YAAAD,UAASC,OAAM;AACf,iBAAKF,KAAI,GAAGA,KAAIC,SAAQD,MAAK,GAAG;AAC/B,sBAAQA,EAAC,IAAI,IAAIA,IAAGE,MAAK,KAAK;AAAA,YAC/B;AAGA,gBAAI,QAAQ,WAAW,IAAI,OAAO,MAC/B,QAAQ,MAAM,QAAQ,KAAK,QAAQ,GAAG,IAAI,OAAO,OAAO,MACxD,MAAM,QAAQ,KAAK,GAAG,IAAI;AAC7B,kBAAM;AACN,mBAAO;AAAA,UACR;AAGA,cAAI,OAAO,OAAO,QAAQ,UAAU;AACnC,YAAAD,UAAS,IAAI;AACb,iBAAKD,KAAI,GAAGA,KAAIC,SAAQD,MAAK,GAAG;AAC/B,kBAAI,IAAIA,EAAC;AACT,kBAAI,OAAO,MAAM,UAAU;AAC1B,oBAAI,IAAI,GAAGE,MAAK;AAChB,oBAAI,GAAG;AACN,0BAAQ,KAAK,MAAM,CAAC,KAAK,MAAM,OAAO,OAAO,CAAC;AAAA,gBAC/C;AAAA,cACD;AAAA,YACD;AAAA,UACD,OAAO;AAEN,iBAAK,KAAKA,QAAO;AAChB,kBAAI,OAAO,UAAU,eAAe,KAAKA,QAAO,CAAC,GAAG;AACnD,oBAAI,IAAI,GAAGA,MAAK;AAChB,oBAAI,GAAG;AACN,0BAAQ,KAAK,MAAM,CAAC,KAAK,MAAM,OAAO,OAAO,CAAC;AAAA,gBAC/C;AAAA,cACD;AAAA,YACD;AAAA,UACD;AAIA,cAAI,QAAQ,WAAW,IAAI,OAAO,MAC/B,QAAQ,MAAM,QAAQ,KAAK,QAAQ,GAAG,IAAI,OAAO,OAAO,MACxD,MAAM,QAAQ,KAAK,GAAG,IAAI;AAC7B,gBAAM;AACN,iBAAO;AAAA,QACR;AAAA,MACD;AAAA,IACD;AAEA,WAAO,UAAU,SAAUA,QAAO,UAAU,OAAO;AAClD,UAAIF;AACJ,YAAM;AACN,eAAS;AAGT,UAAI,OAAO,UAAU,UAAU;AAC9B,aAAKA,KAAI,GAAGA,KAAI,OAAOA,MAAK,GAAG;AAC9B,oBAAU;AAAA,QACX;AAAA,MACD,WAAW,OAAO,UAAU,UAAU;AAErC,iBAAS;AAAA,MACV;AAGA,YAAM;AACN,UACC,YACG,OAAO,aAAa,eACnB,OAAO,aAAa,YAAY,OAAO,SAAS,WAAW,WAC9D;AACD,cAAM,IAAI,MAAM,gBAAgB;AAAA,MACjC;AAIA,aAAO,IAAI,IAAI,EAAE,IAAIE,OAAM,CAAC;AAAA,IAC7B;AAAA;AAAA;;;ACtJA;AAAA;AAAA;AAAA;AAAA;AAEA,YAAQ,QAAQ;AAChB,YAAQ,YAAY;AAAA;AAAA;;;ACHpB;AAAA;AAAA;AAAA;AAAA;AAEA,QAAI,OAAO,OAAO,SAAS,cAAc,OAAO;AAEhD,QAAI,UAAU,MAAM,WAAW,SAAU,GAAG;AAC3C,aAAO,CAAC,EAAE,SAAS,KAAK,CAAC,MAAM;AAAA,IAChC;AAEA,QAAI,aAAa,OAAO,QAAQ,SAAU,KAAK;AAC9C,UAAI,MAAM,OAAO,UAAU,kBAAkB,WAAY;AAAE,eAAO;AAAA,MAAM;AACxE,UAAI,OAAO,CAAC;AACZ,eAAS,OAAO,KAAK;AACpB,YAAI,IAAI,KAAK,KAAK,GAAG,GAAG;AAAE,eAAK,KAAK,GAAG;AAAA,QAAG;AAAA,MAC3C;AACA,aAAO;AAAA,IACR;AAEA,WAAO,UAAU,SAAU,KAAK,MAAM;AACrC,UAAI,CAAC,MAAM;AAAE,eAAO,CAAC;AAAA,MAAG;AACxB,UAAI,OAAO,SAAS,YAAY;AAAE,eAAO,EAAE,KAAK,KAAK;AAAA,MAAG;AACxD,UAAI,QAAQ,KAAK,SAAS;AAC1B,UAAI,OAAO,UAAU,UAAU;AAAE,gBAAQ,MAAM,QAAQ,CAAC,EAAE,KAAK,GAAG;AAAA,MAAG;AACrE,UAAI,SAAS,OAAO,KAAK,WAAW,YAAY,KAAK,SAAS;AAC9D,UAAI,WAAW,KAAK,YAAY,SAAU,KAAKC,QAAO;AAAE,eAAOA;AAAA,MAAO;AAEtE,UAAI,MAAM,KAAK,OAAQ,SAAU,GAAG;AACnC,eAAO,SAAU,MAAM;AACtB,iBAAO,SAAU,GAAG,GAAG;AACtB,gBAAI,OAAO,EAAE,KAAK,GAAG,OAAO,KAAK,CAAC,EAAE;AACpC,gBAAI,OAAO,EAAE,KAAK,GAAG,OAAO,KAAK,CAAC,EAAE;AACpC,mBAAO,EAAE,MAAM,IAAI;AAAA,UACpB;AAAA,QACD;AAAA,MACD,EAAE,KAAK,GAAG;AAEV,UAAI,OAAO,CAAC;AACZ,aAAQ,SAASC,WAAU,QAAQ,KAAK,MAAM,OAAO;AACpD,YAAI,SAAS,QAAQ,OAAO,IAAI,MAAM,QAAQ,CAAC,EAAE,KAAK,KAAK,IAAI;AAC/D,YAAI,iBAAiB,QAAQ,OAAO;AAEpC,YAAI,QAAQ,KAAK,UAAU,OAAO,KAAK,WAAW,YAAY;AAC7D,iBAAO,KAAK,OAAO;AAAA,QACpB;AAEA,eAAO,SAAS,KAAK,QAAQ,KAAK,IAAI;AAEtC,YAAI,SAAS,QAAW;AACvB;AAAA,QACD;AACA,YAAI,OAAO,SAAS,YAAY,SAAS,MAAM;AAC9C,iBAAO,KAAK,UAAU,IAAI;AAAA,QAC3B;AACA,YAAI,QAAQ,IAAI,GAAG;AAClB,cAAI,MAAM,CAAC;AACX,mBAASC,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACrC,gBAAI,OAAOD,WAAU,MAAMC,IAAG,KAAKA,EAAC,GAAG,QAAQ,CAAC,KAAK,KAAK,UAAU,IAAI;AACxE,gBAAI,KAAK,SAAS,QAAQ,IAAI;AAAA,UAC/B;AACA,iBAAO,MAAM,IAAI,KAAK,GAAG,IAAI,SAAS;AAAA,QACvC;AAEA,YAAI,KAAK,QAAQ,IAAI,MAAM,IAAI;AAC9B,cAAI,QAAQ;AAAE,mBAAO,KAAK,UAAU,WAAW;AAAA,UAAG;AAClD,gBAAM,IAAI,UAAU,uCAAuC;AAAA,QAC5D,OAAO;AAAE,eAAK,KAAK,IAAI;AAAA,QAAG;AAE1B,YAAI,OAAO,WAAW,IAAI,EAAE,KAAK,OAAO,IAAI,IAAI,CAAC;AACjD,YAAI,MAAM,CAAC;AACX,iBAASA,KAAI,GAAGA,KAAI,KAAK,QAAQA,MAAK;AACrC,cAAI,MAAM,KAAKA,EAAC;AAChB,cAAIF,SAAQC,WAAU,MAAM,KAAK,KAAK,GAAG,GAAG,QAAQ,CAAC;AAErD,cAAI,CAACD,QAAO;AAAE;AAAA,UAAU;AAExB,cAAI,WAAW,KAAK,UAAU,GAAG,IAC7B,iBACAA;AAEJ,cAAI,KAAK,SAAS,QAAQ,QAAQ;AAAA,QACnC;AACA,aAAK,OAAO,KAAK,QAAQ,IAAI,GAAG,CAAC;AACjC,eAAO,MAAM,IAAI,KAAK,GAAG,IAAI,SAAS;AAAA,MAEvC,EAAE,EAAE,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC;AAAA,IAC1B;AAAA;AAAA;;;ACpFA,IAAAG,mBAAA;AAAA;AAAA;AAAA;AAAA;AAEA,QAAI,KAAK,mBAAoB;AAE7B,QAAIC,MAAK,IAAI,GAAG,WAAW;AAC3B,QAAI,gBAAgB,WAAO,UAAU,WAAO,YAAY,CAAC;AACzD,QAAI,SAAS,cAAc,UAAU,cAAc;AAEnD,QAAI,aAAa;AAEjB,QAAM,iBAAiB,OAAO,KAAK,oEAAoE,KAAK;AAC5G,QAAM,SAAS,OAAO,MAAM,IAAI,CAAC;AAEjC,aAAS,OAAO,WAAW,SAAS;AAClC,UAAI,CAAC,WAAW;AACd,cAAM,IAAI,MAAM,WAAW,kBAAkB;AAAA,MAC/C;AAAA,IACF;AAEA,aAAS,SAAU,GAAG;AACpB,aAAO,OAAO,SAAS,CAAC,KAAK,EAAE,WAAW;AAAA,IAC5C;AAEA,aAAS,kBAAkB,YAAY;AACrC,UAAI,CAAC,SAAS,UAAU,GACxB;AACE,eAAO;AAAA,MACT;AACA,aAAO,WAAW,QAAQ,MAAM,IAAI;AAAA,MACpC,WAAW,QAAQ,cAAc,IAAI;AAAA,IACvC;AAGA,aAAS,eAAe,IAAI,IAAI;AAC9B,UAAI,GAAG,WAAW,GAAG,QAAQ;AAC3B,eAAO;AAAA,MACT;AACA,UAAI,MAAM;AACV,eAASC,KAAI,GAAGA,KAAI,GAAG,QAAQA,MAAK;AAClC,eAAO,GAAGA,EAAC,IAAI,GAAGA,EAAC;AAAA,MACrB;AACA,aAAO,QAAQ;AAAA,IACjB;AAKA,aAAS,YAAY,MAAM;AACzB,UAAI,MAAM,IAAI,WAAW,IAAI;AAC7B,UAAI,OAAO,cAAc,oBAAoB,aAAa;AACxD,eAAO,OAAO,KAAK,WAAW,YAAY,IAAI,CAAC;AAAA,MACjD,OAAO;AACL,sBAAc,gBAAgB,GAAG;AAAA,MACnC;AACA,aAAO,OAAO,KAAK,GAAG;AAAA,IACxB;AAEA,aAAS,OAAO,KAAK;AACnB,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,OAAO,WAAW,WAAW,QAAQ;AACzC,YAAI,SAAS,KAAK,OAAO,GAAG,EAAE,OAAO;AACrC,gBAAQ,IAAI,WAAW,MAAM,CAAC;AAAA,MAChC,CAAC;AAAA,IACH;AAEA,aAAS,OAAO,IAAI;AAClB,aAAO,SAAS,IAAI,KAAK,MAAM;AAC7B,eAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,cAAI,QAAQ;AACV,gBAAI,kBAAkB,EAAC,MAAM,UAAS;AACtC,gBAAI,OAAO,OAAO,UAAU,OAAO,KAAK,iBAAiB,OAAO,CAAC,EAAE,CAAC;AACpE,mBAAO,KAAK,KAAK,SAAS,WAAW;AACnC,kBAAI,eAAe,EAAC,MAAM,WAAW,GAAM;AAC3C,qBAAO,OAAO,EAAE,EAAE,cAAc,WAAW,IAAI;AAAA,YACjD,CAAC,EAAE,KAAK,SAAS,QAAQ;AACvB,sBAAQ,OAAO,KAAK,IAAI,WAAW,MAAM,CAAC,CAAC;AAAA,YAC7C,CAAC;AAAA,UACH,OAAO;AACL,gBAAI,OAAO,WAAW;AACpB,kBAAI,SAAS,WAAW,eAAe,eAAe,KAAK,EAAE;AAC7D,kBAAI,aAAa,OAAO,OAAO,IAAI;AACnC,kBAAI,cAAc,OAAO,MAAM;AAC/B,sBAAQ,OAAO,OAAO,CAAC,YAAY,WAAW,CAAC,CAAC;AAAA,YAClD,WACS,OAAO,WAAW;AACzB,kBAAI,WAAW,WAAW,iBAAiB,eAAe,KAAK,EAAE;AACjE,kBAAI,aAAa,SAAS,OAAO,IAAI;AACrC,kBAAI,cAAc,SAAS,MAAM;AACjC,sBAAQ,OAAO,OAAO,CAAC,YAAY,WAAW,CAAC,CAAC;AAAA,YAClD;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAEA,QAAI,gBAAgB,OAAO,SAAS;AACpC,QAAI,gBAAgB,OAAO,SAAS;AAEpC,aAAS,eAAe,KAAK,KAAK;AAChC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,OAAO,WAAW,WAAW,UAAU,OAAO,KAAK,GAAG,CAAC;AAC3D,aAAK,OAAO,GAAG;AACf,YAAI,SAAS,KAAK,OAAO;AACzB,gBAAQ,MAAM;AAAA,MAChB,CAAC;AAAA,IACH;AAEA,aAAS,iBAAiB,KAAK,KAAK,KAAK;AACvC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,OAAO,WAAW,WAAW,UAAU,OAAO,KAAK,GAAG,CAAC;AAC3D,aAAK,OAAO,GAAG;AACf,YAAI,cAAc,KAAK,OAAO;AAC9B,gBAAQ,eAAe,aAAa,GAAG,CAAC;AAAA,MAC1C,CAAC;AAAA,IACH;AAQA,YAAQ,kBAAkB,WAAY;AACpC,UAAI,aAAa,YAAY,EAAE;AAC/B,aAAO,CAAC,kBAAkB,UAAU,GAAG;AACrC,qBAAa,YAAY,EAAE;AAAA,MAC7B;AACA,aAAO;AAAA,IACT;AAEA,QAAIC,aAAY,QAAQ,YAAY,SAAS,YAAY;AAEvD,aAAO,WAAW,WAAW,IAAI,iBAAiB;AAClD,aAAO,kBAAkB,UAAU,GAAG,iBAAiB;AAGvD,aAAO,OAAO,KAAKF,IAAG,eAAe,UAAU,EAAE,UAAU,KAAK,CAAC;AAAA,IACnE;AAKA,QAAI,sBAAsB,QAAQ,sBAAsB,SAAS,YAAY;AAC3E,aAAO,WAAW,WAAW,IAAI,iBAAiB;AAClD,aAAO,kBAAkB,UAAU,GAAG,iBAAiB;AAEvD,UAAI,aAAa;AACjB,aAAO,OAAO,KAAKA,IAAG,eAAe,UAAU,EAAE,UAAU,YAAY,KAAK,CAAC;AAAA,IAC/E;AAOA,YAAQ,OAAO,SAAS,YAAY,KAAK;AACvC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,eAAO,WAAW,WAAW,IAAI,iBAAiB;AAClD,eAAO,kBAAkB,UAAU,GAAG,iBAAiB;AACvD,eAAO,IAAI,SAAS,GAAG,6BAA6B;AACpD,eAAO,IAAI,UAAU,IAAI,qBAAqB;AAC9C,gBAAQ,OAAO,KAAKA,IAAG,KAAK,KAAK,YAAY,EAAC,WAAW,KAAI,CAAC,EAAE,MAAM,CAAC,CAAC;AAAA,MAC1E,CAAC;AAAA,IACH;AAEA,YAAQ,SAAS,SAAS,WAAW,KAAK,KAAK;AAC7C,aAAO,IAAI,QAAQ,SAAS,SAAS,QAAQ;AAC3C,eAAO,UAAU,WAAW,MAAM,UAAU,WAAW,IAAI,gBAAgB;AAC3E,YAAI,UAAU,WAAW,IACzB;AACE,iBAAO,UAAU,CAAC,MAAM,GAAG,gBAAgB;AAAA,QAC7C;AACA,YAAI,UAAU,WAAW,IACzB;AACE,iBAAO,UAAU,CAAC,MAAM,KAAK,UAAU,CAAC,MAAM,GAAG,gBAAgB;AAAA,QACnE;AACA,eAAO,IAAI,SAAS,GAAG,6BAA6B;AACpD,eAAO,IAAI,UAAU,IAAI,qBAAqB;AAC9C,YAAIA,IAAG,OAAO,KAAK,KAAK,SAAS,GAAG;AAClC,kBAAQ,IAAI;AAAA,QACd,OAAO;AACL,iBAAO,IAAI,MAAM,eAAe,CAAC;AAAA,QACnC;AAAA,MACF,CAAC;AAAA,IACH;AAGA,QAAI,iBAAiB,QAAQ,SAAS,SAAS,aAAa,YAAY;AACtE,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,eAAO,OAAO,SAAS,WAAW,GAAG,iBAAiB;AACtD,eAAO,OAAO,SAAS,UAAU,GAAG,gBAAgB;AACpD,eAAO,YAAY,WAAW,IAAI,iBAAiB;AACnD,eAAO,kBAAkB,WAAW,GAAG,iBAAiB;AACxD,eAAO,WAAW,WAAW,MAAM,WAAW,WAAW,IAAI,gBAAgB;AAC7E,YAAI,WAAW,WAAW,IAC1B;AACE,iBAAO,WAAW,CAAC,MAAM,GAAG,gBAAgB;AAAA,QAC9C;AACA,YAAI,WAAW,WAAW,IAC1B;AACE,iBAAO,WAAW,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,GAAG,gBAAgB;AAAA,QACrE;AACA,YAAI,OAAOA,IAAG,eAAe,WAAW;AACxC,YAAI,OAAOA,IAAG,cAAc,UAAU;AACtC,YAAI,KAAK,KAAK,OAAO,KAAK,UAAU,CAAC;AACrC,gBAAQ,OAAO,KAAK,GAAG,QAAQ,CAAC,CAAC;AAAA,MACnC,CAAC;AAAA,IACH;AAEA,QAAI,eAAe,QAAQ,eAAe,SAAS,aAAa,YAAY;AAC1E,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,eAAO,OAAO,SAAS,WAAW,GAAG,iBAAiB;AACtD,eAAO,OAAO,SAAS,UAAU,GAAG,gBAAgB;AACpD,eAAO,YAAY,WAAW,IAAI,iBAAiB;AACnD,eAAO,kBAAkB,WAAW,GAAG,iBAAiB;AACxD,eAAO,WAAW,WAAW,MAAM,WAAW,WAAW,IAAI,gBAAgB;AAC7E,YAAI,WAAW,WAAW,IAC1B;AACE,iBAAO,WAAW,CAAC,MAAM,GAAG,gBAAgB;AAAA,QAC9C;AACA,YAAI,WAAW,WAAW,IAC1B;AACE,iBAAO,WAAW,CAAC,MAAM,KAAK,WAAW,CAAC,MAAM,GAAG,gBAAgB;AAAA,QACrE;AACA,YAAI,OAAOA,IAAG,eAAe,WAAW;AACxC,YAAI,OAAOA,IAAG,cAAc,UAAU;AACtC,YAAI,KAAK,KAAK,OAAO,KAAK,UAAU,CAAC;AACrC,gBAAQ,OAAO,KAAK,GAAG,SAAS,IAAI,EAAE,GAAG,KAAK,CAAC;AAAA,MACjD,CAAC;AAAA,IACH;AAEA,YAAQ,UAAU,SAAS,aAAa,KAAK,MAAM;AACjD,aAAO,QAAQ,CAAC;AAEhB,UAAI,IAAI,gBAAgB,YAAY;AACpC,aAAO,IAAI,QAAQ,SAAS,SAAS;AACnC,YAAI,kBAAkB,KAAK,mBAAmB,YAAY,EAAE;AAE5D,eAAM,CAAC,kBAAkB,eAAe,GACxC;AACE,4BAAkB,KAAK,mBAAmB,YAAY,EAAE;AAAA,QAC1D;AACA,yBAAiBE,WAAU,eAAe;AAC1C,gBAAQ,eAAe,iBAAiB,WAAW,CAAC;AAAA,MACtD,CAAC,EAAE,KAAK,SAAS,IAAI;AACnB,eAAO,OAAO,EAAE;AAAA,MAClB,CAAC,EAAE,KAAK,SAAS,MAAM;AACrB,aAAK,KAAK,MAAM,YAAY,EAAE;AAC9B,YAAI,gBAAgB,KAAK,MAAM,GAAG,EAAE;AACpC,iBAAS,KAAK,MAAM,EAAE;AACtB,eAAO,cAAc,IAAI,eAAe,GAAG;AAAA,MAC7C,CAAC,EAAE,KAAK,SAAS,MAAM;AACrB,qBAAa;AACb,YAAI,YAAY,OAAO,OAAO,CAAC,IAAI,gBAAgB,UAAU,CAAC;AAC9D,eAAO,eAAe,QAAQ,SAAS;AAAA,MACzC,CAAC,EAAE,KAAK,SAAS,KAAK;AACpB,eAAO;AAAA,UACL;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH;AAEA,QAAMC,WAAU,SAAS,YAAY,MAAM,UAAU,OAAO;AAE1D,UAAI;AACJ,YAAM,SAAS,UAAU,eAAe;AACxC,aAAO,OAAO,YAAY,KAAK,cAAc,EAAE,KAAK,SAAS,IAAI;AAC/D,eAAO,OAAO,EAAE;AAAA,MAClB,CAAC,EAAE,KAAK,SAAS,MAAM;AACrB,wBAAgB,KAAK,MAAM,GAAG,EAAE;AAChC,YAAI,SAAS,KAAK,MAAM,EAAE;AAC1B,YAAI,YAAY,OAAO,OAAO;AAAA,UAC5B,KAAK;AAAA,UACL,KAAK;AAAA,UACL,KAAK;AAAA,QACP,CAAC;AACD,eAAO,iBAAiB,QAAQ,WAAW,KAAK,GAAG;AAAA,MACrD,CAAC,EAAE,KAAK,SAAS,SAAS;AACxB,YAAI,CAAC,WAAW,YAAY,OAAO;AACjC,iBAAOA,SAAQ,YAAY,MAAM,IAAI;AAAA,QACvC,WAAW,CAAC,WAAW,YAAY,MAAM;AACvC,gBAAM,IAAI,MAAM,6BAA6B;AAAA,QAC/C;AACA,eAAO,cAAc,KAAK,IAAI,eAAe,KAAK,UAAU,EAAE,KAAK,SAAS,KAAK;AAC/E,iBAAO,OAAO,KAAK,IAAI,WAAW,GAAG,CAAC;AAAA,QACxC,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAEA,YAAQ,UAAUA;AAAA;AAAA;;;AGrRZ,SAAUC,kBAAkBC,cAAsB;AACtD,SAAO;IACLC,IAAIC,OAAOC,KAAKH,aAAaC,IAAI,KAAK;IACtCG,gBAAgBF,OAAOC,KAAKH,aAAaI,gBAAgB,KAAK;IAC9DC,YAAYH,OAAOC,KAAKH,aAAaK,YAAY,KAAK;IACtDC,KAAKJ,OAAOC,KAAKH,aAAaM,KAAK,KAAK;;AAE5C;AAEM,SAAUC,kBAAkBC,WAAgB;AAChD,SAAO;IACLP,IAAIC,OAAOC,KAAKK,UAAUP,EAAE,EAAEQ,SAAS,KAAK;IAC5CL,gBAAgBF,OAAOC,KAAKK,UAAUJ,cAAc,EAAEK,SAAS,KAAK;IACpEJ,YAAYH,OAAOC,KAAKK,UAAUH,UAAU,EAAEI,SAAS,KAAK;IAC5DH,KAAKJ,OAAOC,KAAKK,UAAUF,GAAG,EAAEG,SAAS,KAAK;;AAElD;AAEO,eAAeC,YAAYC,YAAoBC,GAAU;AAC9D,QAAMC,gBAAgBC,KAAKC,UAAUH,CAAC;AACtC,QAAMI,gBAAgBd,OAAOC,KAAKU,eAAe,OAAO;AACxD,QAAML,YAAY,UAAMS,6BAAQC,2BAAUhB,OAAOC,KAAKQ,YAAY,KAAK,CAAC,GAAGK,aAAa;AACxF,QAAMhB,eAAeO,kBAAkBC,SAAS;AAChD,QAAMW,QAAQL,KAAKC,UAAUf,YAAY;AACzC,SAAOmB;AACT;AAEO,eAAeC,YAAeT,YAAoBC,GAAS;AAChE,QAAMZ,eAAyBc,KAAKO,MAAMT,CAAC;AAC3C,QAAMJ,YAAYT,kBAAkBC,YAAY;AAChD,QAAMsB,UAAUC,GAAGC,eAAeb,UAAU;AAC5C,QAAMK,gBAAgB,UAAMS,yBAAQvB,OAAOC,KAAKmB,QAAQI,WAAU,EAAGjB,SAAS,OAAO,EAAE,GAAG,KAAK,GAAGD,SAAS;AAC3G,QAAMK,gBAAgBG,cAAcP,SAAS,OAAO;AACpD,QAAMkB,OAAUb,KAAKO,MAAMR,aAAa;AACxC,SAAOc;AACT;oFF3CaJ;;;;;;;;;;;IAAAA,KAAK,IAAIK,gBAAAA,GAAG,WAAW;;;;;AGc7B,SAAS,UAAU,GAAG;AAC3B,aAAO,eAAAC,SAAiB,WAAW,EAAE,OAAO,CAAC,EAAE,OAAO;AACxD;AAMO,SAASC,YAAW,aAAa;AACtC,SAAOC,cAAa;AACtB;AAMO,SAASC,aAAY,cAAc,aAAa;AACrD,SAAO,IAAI,QAAQ,SAAU,KAAK,KAAK;AACrC,UAAM,EAAE,KAAmB,kBAAgC,oBAAAC,QAAoB,KAAK,SAAS,UAAU;AACrG,UAAI,KAAK,mBAAmB,SAAS;AACrC,aAAO,oBAAAA,QAAoB,KAAK,SAAS,SAAS,UAAU;AAC1D,eAAO;AAAG,kBAAQ,SAAS,OAAO,SAAS,MAAM;AAAA,YAC/C,KAAK;AACH,oBAAMH,YAAW,aAAa,WAAW;AACzC,kCAAoB,UAAU,GAAG;AACjC,uBAAS,OAAO;AAChB,qBAAO,YAAY,kBAAkB,SAAS,KAAK,GAAG;AAAA,gBACpD,OAAO,YAAY;AAAA,gBACnB,OAAM,oBAAI,KAAK,GAAE,QAAQ;AAAA,gBACzB,MAAM;AAAA,gBACN,MAAM,aAAa;AAAA,cACrB,CAAC;AAAA,YACH,KAAK;AACH,wBAAU,SAAS;AACnB,uBAAS,SAAK,4BAAU,iBAAiB,EAAE,SAAS,KAAK;AACzD,uBAAS,KAAK;AACd,uBAAS,OAAO;AAChB,yBAAO,uBAAK,mBAAmB,UAAU,OAAO,CAAC;AAAA,YACnD,KAAK;AACH,uBAAS,KAAK,SAAS,KAAK,SAAS,KAAK;AAC1C,qBAAO;AAAA,gBACL,KAAK,SAAS;AAAA,gBACd,MAAM,SAAS;AAAA,gBACf,WAAW,SAAS;AAAA,cACtB;AACA,kBAAI,aAAa;AAAS,qBAAK,UAAU,aAAa;AACtD,qBAAO,SAAS,OAAO,UAAU,MAAM,aAAa,YAAY,gBAAgB;AAAA,gBAC9E,QAAQ;AAAA,gBACR,MAAM,KAAK,UAAU,IAAI;AAAA,gBACzB,SAAS;AAAA,kBACP,gBAAgB;AAAA,gBAClB;AAAA,cACF,CAAC,EAAE,KAAK,GAAG,EAAE,OAAO,EAAE,GAAG,CAAC;AAAA,YAC5B,KAAK;AAAA,YACL,KAAK;AACH,qBAAO,SAAS,KAAK;AAAA,UACzB;AAAA,MACF,GAAG,OAAO;AAAA,IACZ,CAAC,CAAC,CAAC;AAAA,EACL,CAAC;AACH;AACO,SAAS,kBAAkB,WAAW;AAC3C,MAAI,sBAAsB;AACxB,WAAO;AAAA,EACT;AACA,MAAI,cAAcI,QAAG,WAAW;AAAA,IAC9B,YAAY,CAAC,aAAa,SAAS;AAAA;AAAA,IAEnC,iBAAiB;AAAA,IACjB,sBAAsB;AAAA,IACtB,sBAAsB;AAAA,EACxB,CAAC;AACD,cAAY,GAAG,iBAAiB,SAAU,KAAK;AAE7C,gBAAY,GAAG,KAAK,aAAa,CAAC,WAAW,WAAW;AACxD,IAAAC,KAAI,MAAM,iBAAiB,GAAG;AAAA,EAChC,CAAC;AACD,cAAY,GAAG,WAAwB,kBAAgC,oBAAAF,QAAoB,KAAK,SAAS,WAAW;AAClH,QAAI;AACJ,WAAO,oBAAAA,QAAoB,KAAK,SAAS,UAAU,WAAW;AAC5D,aAAO;AAAG,gBAAQ,UAAU,OAAO,UAAU,MAAM;AAAA,UACjD,KAAK;AACH,qBAAS,YAAY,GAAG;AACxB,YAAAE,KAAI,MAAM,0BAA0B,OAAO,UAAU,IAAI;AACzD,mBAAO,KAAK,WAAW,WAAY;AAEjC,cAAAA,KAAI,MAAM,YAAY,OAAO,UAAU,IAAI;AAAA,YAC7C,CAAC;AAED,mBAAO,KAAK,SAAS,SAAU,QAAQ;AAErC,cAAAA,KAAI,MAAM,qBAAqB,MAAM;AAAA,YACvC,CAAC;AAAA,UACH,KAAK;AAAA,UACL,KAAK;AACH,mBAAO,UAAU,KAAK;AAAA,QAC1B;AAAA,IACF,GAAG,QAAQ;AAAA,EACb,CAAC,CAAC,CAAC;AACH,cAAY,GAAG,SAAS,SAAU,KAAK;AACrC,IAAAA,KAAI,MAAM,kBAAkB,GAAG;AAC/B,gBAAY,WAAW;AAAA,EACzB,CAAC;AACD,yBAAuB;AACvB,SAAO;AACT;AACO,SAAS,sBAAsB,WAAW,aAAa,IAAI;AAChE,MAAI,aAAa,kBAAkB,SAAS;AAC5C,MAAI,MAAML,YAAW,WAAW;AAChC,MAAI,oBAAoB,UAAU,GAAG;AACrC,MAAI,oBAAgB,4BAAU,iBAAiB,EAAE,SAAS,KAAK;AAC/D,MAAI,WAAW,WAAW;AACxB,eAAW,KAAK,qBAAqB,aAAa;AAAA,EACpD,OAAO;AACL,eAAW,KAAK,WAAW,WAAY;AACrC,MAAAK,KAAI,MAAM,uBAAuB;AACjC,iBAAW,KAAK,qBAAqB,aAAa;AAAA,IACpD,CAAC;AAAA,EACH;AACA,MAAI,YAAY,SAASC,aAAY;AACnC,eAAW,KAAK,WAAwB,kBAAgC,oBAAAH,QAAoB,KAAK,SAAS,WAAW;AACnH,aAAO,oBAAAA,QAAoB,KAAK,SAAS,UAAU,WAAW;AAC5D,eAAO;AAAG,kBAAQ,UAAU,OAAO,UAAU,MAAM;AAAA,YACjD,KAAK;AACH,yBAAW,KAAK,qBAAqB,aAAa;AAAA,YACpD,KAAK;AAAA,YACL,KAAK;AACH,qBAAO,UAAU,KAAK;AAAA,UAC1B;AAAA,MACF,GAAG,QAAQ;AAAA,IACb,CAAC,CAAC,CAAC;AAAA,EACL;AACA,MAAI,qBAAqB,SAASI,sBAAqB;AAErD,QAAI,CAAC,YAAY;AACf,eAAS,oBAAoB,oBAAoBA,mBAAkB;AACnE;AAAA,IACF;AAEA,QAAI,CAAC,WAAW,aAAa,SAAS,oBAAoB,WAAW;AACnE,gBAAU;AAAA,IACZ;AAAA,EACF;AACA,MAAI,WAAwB,WAAY;AACtC,QAAI,QAAQ,kBAAgC,oBAAAJ,QAAoB,KAAK,SAAS,SAAS,IAAI;AACzF,UAAI;AACJ,aAAO,oBAAAA,QAAoB,KAAK,SAAS,UAAU,WAAW;AAC5D,eAAO;AAAG,kBAAQ,UAAU,OAAO,UAAU,MAAM;AAAA,YACjD,KAAK;AACH,wBAAU,OAAO;AACjB,wBAAU,OAAO;AACjB,qBAAO,YAAY,kBAAkB,SAAS,KAAK,GAAG,EAAE;AAAA,YAC1D,KAAK;AACH,wBAAU,UAAU;AACpB,cAAAE,KAAI,KAAK,OAAO;AAChB,iBAAG,OAAO;AACV,wBAAU,OAAO;AACjB;AAAA,YACF,KAAK;AACH,wBAAU,OAAO;AACjB,wBAAU,KAAK,UAAU,OAAO,EAAE,CAAC;AACnC,cAAAA,KAAI,MAAM,UAAU,EAAE;AAAA,YACxB,KAAK;AAAA,YACL,KAAK;AACH,qBAAO,UAAU,KAAK;AAAA,UAC1B;AAAA,MACF,GAAG,UAAU,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAAA,IAC7B,CAAC,CAAC;AACF,WAAO,SAASG,UAAS,IAAI;AAC3B,aAAO,MAAM,MAAM,MAAM,SAAS;AAAA,IACpC;AAAA,EACF,EAAE;AACF,aAAW,GAAG,cAAc,WAAY;AACtC,IAAAH,KAAI,MAAM,qBAAqB;AAC/B,QAAI,gBAAgB,IAAI,WAAW,GAAG;AACpC,MAAAA,KAAI,MAAM,uDAAuD;AACjE,gBAAU;AAAA,IACZ;AAAA,EACF,CAAC;AACD,aAAW,GAAG,gBAAgB,YAAY,QAAQ;AAClD,MAAI,OAAO,aAAa;AAAa,aAAS,iBAAiB,oBAAoB,kBAAkB;AACrG,SAAO;AACT;AAMO,SAASI,QAAO,aAAa,SAAS;AAC3C,YAAU,wBAAwB,OAAO;AACzC,MAAI,CAACC,WAAU,OAAO,GAAG;AACvB,UAAM,IAAI,MAAM,yCAAyC;AAAA,EAC3D;AACA,MAAI,OAAO,YAAY;AAOvB,MAAI,OAAO,IAAI,aAAa,QAAQ,OAAO,aAAa;AACxD,MAAI,QAAQ;AAAA,IACV;AAAA,IACA;AAAA,IACA;AAAA;AAAA,IAEA,WAAW,QAAQ,OAAO;AAAA,EAC5B;AACA,MAAI,QAAQ,OAAO;AAAS,UAAM,UAAU,QAAQ,OAAO;AAC3D,wBAAsB,QAAQ,OAAO,KAAK,aAAa,SAAU,QAAQ;AACvE,QAAI,CAAC,MAAM;AAAkB;AAC7B,QAAI,OAAO,SAAS,MAAM;AAAM;AAChC,QAAI,CAAC,OAAO,SAAS,MAAM,KAAK,IAAI,OAAO,KAAK;AAAG;AAGnD,UAAM,KAAK,IAAI,OAAO,KAAK;AAC3B,UAAM,iBAAiB,OAAO,IAAI;AAAA,EACpC,CAAC;AACD,kBAAgB,IAAI,WAAW;AAC/B,SAAO;AACT;AACO,SAASC,OAAM,cAAc;AAClC,kBAAgB,QAAQ,EAAE,aAAa,WAAW;AAOpD;AAEO,SAASC,WAAU,cAAc,IAAI,MAAM;AAChD,eAAa,uBAAuB;AACpC,eAAa,mBAAmB;AAClC;AACO,SAASF,aAAY;AAC1B,SAAO;AACT;AACO,SAASG,uBAAsB;AACpC,MAAI,cAAc;AAElB,SAAO;AACT;AAvQA,IACAC,qBAWAC,kBAEAC,gBAIWC,eAMPhB,aACOiB,OACP,sBAEA,iBA4OG;AAxQP;AAAA;AAAA;AAAA;AAAA;AACA,IAAAJ,sBAAgC;AAShC;AACA,IAAAK;AACA,IAAAJ,mBAAgC;AAChC;AACA,IAAAC,iBAA6B;AAC7B;AACA;AACA;AACO,IAAIC,gBAAe;AAM1B,IAAIhB,cAAa;AACV,IAAIiB,QAAO;AAClB,IAAI,uBAAuB;AAE3B,IAAI,kBAAkB,oBAAI,IAAI;AA4O9B,IAAO,iBAAQ;AAAA,MACb,QAAQT;AAAA,MACR,OAAOE;AAAA,MACP,WAAWC;AAAA,MACX,aAAaV;AAAA,MACb,WAAWQ;AAAA,MACX,MAAMQ;AAAA,MACN,qBAAqBL;AAAA,MACrB,cAAcI;AAAA,IAChB;AAAA;AAAA;;;AC7QO,SAASG,QAAO,aAAa;AAClC,MAAI,QAAQ;AAAA,IACV,MAAM;AAAA,IACN,kBAAkB;AAAA,EACpB;AACA,oBAAkB,IAAI,KAAK;AAC3B,SAAO;AACT;AACO,SAASC,OAAM,cAAc;AAClC,oBAAkB,QAAQ,EAAE,YAAY;AAC1C;AACO,SAASC,aAAY,cAAc,aAAa;AACrD,SAAO,IAAI,QAAQ,SAAU,KAAK;AAChC,WAAO,WAAW,WAAY;AAC5B,UAAI,eAAe,MAAM,KAAK,iBAAiB;AAC/C,mBAAa,OAAO,SAAU,SAAS;AACrC,eAAO,QAAQ,SAAS,aAAa;AAAA,MACvC,CAAC,EAAE,OAAO,SAAU,SAAS;AAC3B,eAAO,YAAY;AAAA,MACrB,CAAC,EAAE,OAAO,SAAU,SAAS;AAC3B,eAAO,CAAC,CAAC,QAAQ;AAAA,MACnB,CAAC,EAAE,QAAQ,SAAU,SAAS;AAC5B,eAAO,QAAQ,iBAAiB,WAAW;AAAA,MAC7C,CAAC;AACD,UAAI;AAAA,IACN,GAAG,CAAC;AAAA,EACN,CAAC;AACH;AACO,SAASC,WAAU,cAAc,IAAI;AAC1C,eAAa,mBAAmB;AAClC;AACO,SAASC,aAAY;AAC1B,SAAO;AACT;AACO,SAASC,uBAAsB;AACpC,SAAO;AACT;AAxCA,IACWC,eACAC,OACP,mBAsCG;AAzCP;AAAA;AAAA;AAAA;AAAA;AACO,IAAID,gBAAe;AACnB,IAAIC,QAAO;AAClB,IAAI,oBAAoB,oBAAI,IAAI;AAsChC,IAAO,mBAAQ;AAAA,MACb,QAAQP;AAAA,MACR,OAAOC;AAAA,MACP,WAAWE;AAAA,MACX,aAAaD;AAAA,MACb,WAAWE;AAAA,MACX,MAAMG;AAAA,MACN,qBAAqBF;AAAA,MACrB,cAAcC;AAAA,IAChB;AAAA;AAAA;;;ACxCO,SAAS,aAAa,SAAS;AACpC,MAAI,gBAAgB,CAAC,EAAE,OAAO,QAAQ,SAAS,OAAO,EAAE,OAAO,OAAO;AAGtE,MAAI,QAAQ,MAAM;AAChB,QAAI,QAAQ,SAAS,YAAY;AAE/B,aAAO;AAAA,IACT;AACA,QAAI,MAAM,cAAc,KAAK,SAAU,GAAG;AACxC,aAAO,EAAE,SAAS,QAAQ;AAAA,IAC5B,CAAC;AACD,QAAI,CAAC;AAAK,YAAM,IAAI,MAAM,iBAAiB,QAAQ,OAAO,YAAY;AAAA;AAAO,aAAO;AAAA,EACtF;AAMA,MAAI,CAAC,QAAQ,kBAAkB;AAC7B,oBAAgB,cAAc,OAAO,SAAU,GAAG;AAChD,aAAO,EAAE,SAAS;AAAA,IACpB,CAAC;AAAA,EACH;AACA,MAAI,YAAY,cAAc,KAAK,SAAU,QAAQ;AACnD,WAAO,OAAO,UAAU,OAAO;AAAA,EACjC,CAAC;AACD,MAAI,CAAC;AAAW,UAAM,IAAI,MAAM,gCAAgC,KAAK,UAAU,QAAQ,IAAI,SAAU,GAAG;AACtG,aAAO,EAAE;AAAA,IACX,CAAC,CAAC,CAAC;AAAA;AAAO,WAAO;AACnB;AAxCA,IAOI;AAPJ;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA,IAAI,UAAU;AAAA,MAAC;AAAA;AAAA,MAEf;AAAA,MAAgB;AAAA,MAAoB;AAAA,IAAY;AAAA;AAAA;;;ACwJhD,SAAS,MAAM,kBAAkBE,OAAM,KAAK;AAC1C,MAAI,OAAO,iBAAiB,OAAO,aAAa;AAChD,MAAI,SAAS;AAAA,IACX;AAAA,IACA,MAAMA;AAAA,IACN,MAAM;AAAA,EACR;AACA,MAAI,eAAe,iBAAiB,SAAS,iBAAiB,SAAS;AACvE,SAAO,aAAa,KAAK,WAAY;AACnC,QAAI,cAAc,iBAAiB,OAAO,YAAY,iBAAiB,QAAQ,MAAM;AAGrF,qBAAiB,KAAK,IAAI,WAAW;AACrC,gBAAY,OAAO,EAAE,EAAE,KAAK,WAAY;AACtC,aAAO,iBAAiB,KAAK,QAAQ,EAAE,WAAW;AAAA,IACpD,CAAC;AACD,WAAO;AAAA,EACT,CAAC;AACH;AACA,SAAS,gBAAgB,SAAS;AAChC,MAAI,eAAe,QAAQ,OAAO,OAAO,QAAQ,MAAM,QAAQ,OAAO;AACtE,MAAI,UAAU,YAAY,GAAG;AAC3B,YAAQ,SAAS;AACjB,iBAAa,KAAK,SAAU,GAAG;AAK7B,cAAQ,SAAS;AAAA,IACnB,CAAC;AAAA,EACH,OAAO;AACL,YAAQ,SAAS;AAAA,EACnB;AACF;AACA,SAAS,qBAAqB,SAAS;AACrC,MAAI,QAAQ,OAAO,QAAQ,SAAS;AAAG,WAAO;AAC9C,MAAI,QAAQ,OAAO,SAAS,SAAS;AAAG,WAAO;AAC/C,SAAO;AACT;AACA,SAAS,mBAAmB,SAASA,OAAM,KAAK;AAC9C,UAAQ,OAAOA,KAAI,EAAE,KAAK,GAAG;AAC7B,kBAAgB,OAAO;AACzB;AACA,SAAS,sBAAsB,SAASA,OAAM,KAAK;AACjD,UAAQ,OAAOA,KAAI,IAAI,QAAQ,OAAOA,KAAI,EAAE,OAAO,SAAUC,IAAG;AAC9D,WAAOA,OAAM;AAAA,EACf,CAAC;AACD,iBAAe,OAAO;AACxB;AACA,SAAS,gBAAgB,SAAS;AAChC,MAAI,CAAC,QAAQ,OAAO,qBAAqB,OAAO,GAAG;AAGjD,QAAI,aAAa,SAASC,YAAW,QAAQ;AAC3C,cAAQ,OAAO,OAAO,IAAI,EAAE,QAAQ,SAAU,gBAAgB;AAU5D,YAAI,mBAAmB,MAAM;AAC7B,YAAI,iBAAiB,eAAe,OAAO;AAC3C,YAAI,OAAO,QAAQ,gBAAgB;AACjC,yBAAe,GAAG,OAAO,IAAI;AAAA,QAC/B,WAAW,QAAQ,OAAO,SAAS,UAAU;AAE3C,yBAAe,GAAG,OAAO,IAAI;AAAA,QAC/B;AAAA,MACF,CAAC;AAAA,IACH;AACA,QAAI,OAAO,QAAQ,OAAO,aAAa;AACvC,QAAI,QAAQ,QAAQ;AAClB,cAAQ,OAAO,KAAK,WAAY;AAC9B,gBAAQ,MAAM;AACd,gBAAQ,OAAO,UAAU,QAAQ,QAAQ,YAAY,IAAI;AAAA,MAC3D,CAAC;AAAA,IACH,OAAO;AACL,cAAQ,MAAM;AACd,cAAQ,OAAO,UAAU,QAAQ,QAAQ,YAAY,IAAI;AAAA,IAC3D;AAAA,EACF;AACF;AACA,SAAS,eAAe,SAAS;AAC/B,MAAI,QAAQ,OAAO,CAAC,qBAAqB,OAAO,GAAG;AAEjD,YAAQ,MAAM;AACd,QAAI,OAAO,QAAQ,OAAO,aAAa;AACvC,YAAQ,OAAO,UAAU,QAAQ,QAAQ,MAAM,IAAI;AAAA,EACrD;AACF;AA9PA,IAQW,yBACP,QACOC,mBA+DP;AAzEJ;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAMO,IAAI,0BAA0B,oBAAI,IAAI;AAC7C,IAAI,SAAS;AACN,IAAIA,oBAAmB,SAASA,kBAAiB,MAAM,SAAS;AAErE,WAAK,KAAK;AACV,8BAAwB,IAAI,IAAI;AAChC,WAAK,OAAO;AACZ,UAAI,kBAAkB;AACpB,kBAAU;AAAA,MACZ;AACA,WAAK,UAAU,wBAAwB,OAAO;AAC9C,WAAK,SAAS,aAAa,KAAK,OAAO;AAGvC,WAAK,MAAM;AAOX,WAAK,QAAQ;AAKb,WAAK,SAAS;AAAA,QACZ,SAAS,CAAC;AAAA,QACV,UAAU,CAAC;AAAA,MACb;AAOA,WAAK,OAAO,oBAAI,IAAI;AAOpB,WAAK,QAAQ,CAAC;AAKd,WAAK,SAAS;AACd,sBAAgB,IAAI;AAAA,IACtB;AASA,IAAAA,kBAAiB,UAAU;AAY3B,IAAAA,kBAAiB,YAAY;AAAA,MAC3B,aAAa,SAASC,aAAY,KAAK;AACrC,YAAI,KAAK,QAAQ;AACf,gBAAM,IAAI,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,UAMhB,KAAK,UAAU,GAAG,CAAC;AAAA,QACrB;AACA,eAAO,MAAM,MAAM,WAAW,GAAG;AAAA,MACnC;AAAA,MACA,cAAc,SAAS,aAAa,KAAK;AACvC,eAAO,MAAM,MAAM,YAAY,GAAG;AAAA,MACpC;AAAA,MACA,IAAI,UAAU,IAAI;AAChB,YAAI,OAAO,KAAK,OAAO,aAAa;AACpC,YAAI,YAAY;AAAA,UACd;AAAA,UACA;AAAA,QACF;AACA,8BAAsB,MAAM,WAAW,KAAK,KAAK;AACjD,YAAI,MAAM,OAAO,OAAO,YAAY;AAClC,eAAK,QAAQ;AACb,6BAAmB,MAAM,WAAW,SAAS;AAAA,QAC/C,OAAO;AACL,eAAK,QAAQ;AAAA,QACf;AAAA,MACF;AAAA,MACA,kBAAkB,SAASC,kBAAiBL,OAAM,IAAI;AACpD,YAAI,OAAO,KAAK,OAAO,aAAa;AACpC,YAAI,YAAY;AAAA,UACd;AAAA,UACA;AAAA,QACF;AACA,2BAAmB,MAAMA,OAAM,SAAS;AAAA,MAC1C;AAAA,MACA,qBAAqB,SAASM,qBAAoBN,OAAM,IAAI;AAC1D,YAAI,MAAM,KAAK,OAAOA,KAAI,EAAE,KAAK,SAAUO,MAAK;AAC9C,iBAAOA,KAAI,OAAO;AAAA,QACpB,CAAC;AACD,8BAAsB,MAAMP,OAAM,GAAG;AAAA,MACvC;AAAA,MACA,OAAO,SAASQ,SAAQ;AACtB,YAAI,QAAQ;AACZ,YAAI,KAAK,QAAQ;AACf;AAAA,QACF;AACA,gCAAwB,QAAQ,EAAE,IAAI;AACtC,aAAK,SAAS;AACd,YAAI,eAAe,KAAK,SAAS,KAAK,SAAS;AAC/C,aAAK,QAAQ;AACb,aAAK,OAAO,UAAU,CAAC;AACvB,eAAO,aAEN,KAAK,WAAY;AAChB,iBAAO,QAAQ,IAAI,MAAM,KAAK,MAAM,IAAI,CAAC;AAAA,QAC3C,CAAC,EAEA,KAAK,WAAY;AAChB,iBAAO,QAAQ,IAAI,MAAM,MAAM,IAAI,SAAU,IAAI;AAC/C,mBAAO,GAAG;AAAA,UACZ,CAAC,CAAC;AAAA,QACJ,CAAC,EAEA,KAAK,WAAY;AAChB,iBAAO,MAAM,OAAO,MAAM,MAAM,MAAM;AAAA,QACxC,CAAC;AAAA,MACH;AAAA,MACA,IAAI,OAAO;AACT,eAAO,KAAK,OAAO;AAAA,MACrB;AAAA,MACA,IAAI,WAAW;AACb,eAAO,KAAK;AAAA,MACd;AAAA,IACF;AAAA;AAAA;;;AC3JA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;sCCIMC;;;;;;;;AAAN,IAAMA,OAAMC,iBAAAA,QAASC,UAAU,cAAc;AAC7CF,IAAAA,KAAIG,SAASC,wBAAOC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;AGIxB,SAASC,gBAA4CC,cAAiBC,MAAY;AAEhF,SAAO,OAAOD,aAAaE,iBAAiB,cAAcF,aAAaE,aAAaD,IAAI,IAAID,aAAaG,UAAUF,IAAI;AACzH;AAEc,SAAUG,wBAAoDC,eAAkBC,MAA4B;AAExH,QAAMC,YAAYD,QAAQ,CAAA;AAC1B,MAAIE,cAAcD,UAAUC,eAAeC;AAC3C,MAAI,OAAOD,gBAAgB,YAAYA,gBAAgB;AAAgBA,kBAAcE;AACrF,MAAI,OAAOF,gBAAgB;AAAY,UAAM,IAAIG,MAAM,+CAA+C;AAEtG,MAAIC,SAASP;AAEb,MAAIQ,YAAaC,eAAgB;AAC/B,UAAMC,YAAYH;AAClBA,aAASE;AAETC,cACGC,WAAU,EACVC,OAAOT,WAAwC,EAC/CU,QAASjB,UAAgB;AACxBF,sBAAgBgB,WAAWd,IAAI,EAAEiB,QAASC,aAAsCL,UAAUM,GAAGnB,MAAMkB,OAAO,CAAC;IAC7G,CAAC;AAGHJ,cAAUM,mBAAkB;;AAG9B,QAAMC,QAAQ,IAAIC,MAAS,CAAA,GAAS;IAClCC,KAAKA,CAACC,GAAGxB,SAAQ;AAEf,UAAIA,SAAS;AAAa,eAAOY;AACjC,aAAOD,OAAOX,IAAI;;IAEpByB,KAAKA,CAACD,GAAGxB,MAAM0B,WAAS;AAEtB,UAAI1B,SAAS,aAAa;AACxBY,oBAAYc;AACZ,eAAO;MACR;AACDf,aAAOX,IAAI,IAAI0B;AACf,aAAO;IACT;EACD,CAAA;AAED,SAAOL;AACT;;;;;;;;;;;;;;;;;;;;;;AGuDM,SAAUM,mBAAmBC,QAAkB;AACnD,QAAMC,WAAqC,IAAIC,kBAAgB;AAE/DD,WAASE,YAAY,OAAaC,QAAuB;AACvD,UAAMC,MAAM,MAAML,OAAOM,OAAOF,GAAG;AACnC,QAAIC,IAAIE,OAAO;AAAA,UAAAC,YAAAC;AACb,YAAMC,UAAMC,uCAAeN,IAAIE,OAAO;QACpCK,eAAe;UACbC,WAASL,aAAAH,IAAIE,WAAKC,QAAAA,eAAA,SAAA,SAATA,WAAWK,YAAWR,IAAIE,MAAMO,SAAQ;UACjDC,QAAMN,cAAAJ,IAAIE,WAAKE,QAAAA,gBAATA,SAAAA,SAAAA,YAAWM,SAAQ;QAC1B;MACF,CAAA;AAED,YAAMC,iCAAUC,IAAIC,SAASR,GAAG;IACjC;AACD,WAAOL,IAAIc;;AAGblB,WAASmB,OAAO,CAAOhB,KAAqBiB,aAAkD;AAC5F,QAAI,OAAOA,aAAa,YAAY;AAClC,YAAM,IAAIvC,MAAM,yCAAyC;IAC1D;AACDkB,WAAOM,OAAOF,KAAKiB,QAAQ;;AAG7B,MAAIrB,OAAOT,IAAI;AACbS,WAAOT,GAAG,gBAAiBsB,aAAmB;AAC5CZ,eAASqB,KAAK,QAAQ,MAAMT,OAAO;IACrC,CAAC;EACF;AAEDZ,WAASsB,UAAU,OAAaC,SAA6B;AAC3D,UAAMpB,MAAGqB,gBAAAA,gBAAA,CAAA,GACJD,IAAI,GAAA,CAAA,GAAA;MACPE,IAAIC,eAAc;MAClBC,SAAS;KACV;AACD,UAAMvB,MAAM,MAAMJ,SAASE,UAAUC,GAAG;AACxC,WAAOC;;AAET,SAAOJ;AACT;AO7GgB,SAAA4B,cAAcC,WAAmBC,cAAoB;AACnE,MAAID,cAAc,MAAM,CAAC,gBAAgBE,KAAKF,SAAS,GAAG;AACxD,UAAM,IAAIhD,MAAK,gDAAiDgD,WAAW;EAC5E;AAED,MAAIC,eAAe,GAAG;AACpB,UAAM,IAAIjD,MAAK,4DAA6DiD,cAAc;EAC3F;AAED,SAAOE,OAAOC,UAAUC,SAASC,KAAKN,WAAWC,cAAc,GAAG;AACpE;SASgBM,UAAUC,GAAWC,IAAWC,GAAS;AACvD,QAAMC,WAAOC,0BAAWH,EAAC;AACzB,QAAMI,WAAOD,0BAAWF,CAAC;AACzB,QAAMI,WAAOC,8BAAeP,CAAC;AAC7B,QAAMQ,OAAOjB,kBAAckB,0BAAWN,IAAI,EAAE3B,SAAS,KAAK,GAAG,EAAE;AAC/D,QAAMkC,OAAOnB,kBAAckB,0BAAWJ,IAAI,EAAE7B,SAAS,KAAK,GAAG,EAAE;AAC/D,QAAMmC,WAAOC,kCAAeC,2BAAYP,IAAI,CAAC;AAC7C,aAAOQ,4BAAaN,KAAKO,OAAOL,MAAMC,IAAI,CAAC;AAC7C;AErCA,SAASK,mBAAmBC,UAAkB;AAE5C,UAAQA,SAASC,QAAM;IACrB,KAAK;AACH,YAAMxC,iCAAUC,IAAIwC,eAAc;IAEpC,KAAK;AACH,YAAMzC,iCAAUC,IAAIC,SAAS;QAAEL,SAAS;MAAkC,CAAA;IAE5E,KAAK;IACL,KAAK;AACH,YAAMG,iCAAUC,IAAIC,SAAS;QAC3BL,SAAiE;MAClE,CAAA;EAGK;AAEZ;AAEA,SAAS6C,QAAQC,UAAgB;AAC/B,SAAO,IAAIC,QAASC,aAAW;AAC7BC,eAAWD,SAASF,QAAQ;EAC9B,CAAC;AACH;AAEA,SAASI,cAAcR,UAAoBS,MAA2B;AAEpE,MAAIT,SAASC,WAAW,KAAK;AAC3B,UAAMxC,iCAAUC,IAAIC,SAAS;MAC3BL,SAAS,yBAAyB0C,SAASC;MAC3CS,MAAMD;IACP,CAAA;EACF;AAED,MAAIA,KAAKzD,OAAO;AACd,UAAMS,iCAAUC,IAAIC,SAAS;MAC3B+C,MAAMD,KAAKzD;IACZ,CAAA;EACF;AAED,SAAOyD,KAAK7C;AACd;AAEM,SAAU+C,yBAAwBC,MAAuE;AAAA,MAAtE;IAAE/D;IAAKgE;IAAWC;EAAoD,IAAAF;AAC7G,QAAMG,YAAiB,IAAIC,IAAIH,SAAS;AAIxC,QAAMI,UAAmB;IACvB9C,IAAItB,IAAIsB;IACRE,SAASxB,IAAIwB;IACb6C,QAAQrE,IAAIqE;IACZC,QAAQtE,IAAIsE;;AAId,QAAMC,eAAmCvE,IAAIwE;AAG7C,QAAMC,oBAA4BC,KAAKC,UAAUP,OAAO;AAGxD,QAAMQ,cAAc;IAClBP,QAAQ;IACRQ,SAAS;MACPC,QAAQ;MACR,gBAAgB;;IAElBlB,MAAMa;;AAIR,MAAIR,uBAAuBM,cAAc;AACvCK,gBAAYC,QAAQZ,mBAAmB,IAAIM;EAC5C;AAED,SAAO;IAAEQ,UAAUb,UAAUc;IAAMJ;;AACrC;SAEgBK,sBAAqBC,OAA2D;AAAA,MAA1D;IAAElB;IAAWC;EAA6C,IAAAiB;AAC9F,SAAOC,uBAAsB,OAAOnF,KAA4BC,KAA4BmF,UAAiC;AAC3H,UAAM;MAAEL;MAAUH;QAAgBd,yBAAyB;MACzD9D;MACAgE;MACAC;IACD,CAAA;AAGD,UAAMoB,cAAc;AACpB,UAAMC,gBAAgB;AACtB,aAASC,UAAU,GAAGA,UAAUF,aAAaE,WAAW;AACtD,UAAI;AACF,cAAMpC,WAAqB,MAAMqC,MAAMT,UAAUH,WAAW;AAE5D1B,2BAAmBC,QAAQ;AAE3B,cAAMsC,YAAmC,MAAMtC,SAASuC,KAAI;AAC5D,cAAM3E,SAAgB4C,cAAcR,UAAUsC,SAAS;AAEvDxF,YAAIc,SAASA;AACb;eACOT,KAAP;AACA,cAAMqF,SAAiBrF,IAAII,SAAQ;AACnC,cAAMkF,cAAuBC,iBAAiBC,KAAMC,YAAWJ,OAAOK,SAASD,MAAM,CAAC;AAEtF,YAAI,CAACH,aAAa;AAChB,gBAAMtF;QACP;MACF;AAED,YAAMgD,QAAQgC,aAAa;IAC5B;EACH,CAAC;AACH;wGd5IMW,gBENAzH,YACA0H,gBACAzH,qBGEO8C,gBK4DA4E,gBE4FAC,aEvIPP,kBSXOQ,kBCePC,kBAEOC,qBClBDC;;;;;;;;;;;;;;;;AzBHZ,IAAMP,iBAAN,cAAwEnG,kBAAgB;;;;;;;;;;;;;;;;;;;;MAoCtF2G,YAAY1C,MAAkF;AAAA,YAAlF;UAAE2C,SAAS,CAAA;UAASC,QAAQ,CAAA;QAAsD,IAAA5C;AAC5F,cAAK;AACL6C,wBAAA,MAAA,iBAlCiB,CAAA,CAAO;AAAAA,wBAAA,MAAA,gBAKR,CAAA,CAAO;AAAAA,wBAAA,MAAA,YAKd,KAAK;AAAAA,wBAAA,MAAA,QAKT,gBAAgB;AAAAA,wBAAA,MAAA,iBAAA,MAAA;AAAAA,wBAAA,MAAA,gBAAA,MAAA;AAAAA,wBAAA,MAAA,kBAMK,KAAKC,aAAa;AAAAD,wBAAA,MAAA,iBAEnB,KAAKE,YAAY;AAY1C,aAAKC,eAAeJ;AACpB,aAAKK,gBAAgBN;MACvB;;;;;;MAOA,IAAIA,SAAM;AACR,eAAO,KAAKO;MACd;;;;;;MAOA,IAAIN,QAAK;AACP,eAAO,KAAKO;MACd;;;;;;;;MASAC,UAAUT,QAAwD;AAAA,YAApCU,YAASC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAAK,YAAEG,aAAUH,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AAC5D,YAAIG,YAAY;AACd,eAAKP,iBAAiBG,YAAaV,SAAee,OAAOC,OAAO,KAAKT,gBAAgBP,MAAM;AAE3F,qBAAWiB,OAAO,KAAKV,gBAAgB;AACrC,gBAAI,OAAO,KAAKA,eAAeU,GAAG,MAAM,aAAa;AACnD,mBAAKA,GAAa,IAAI,KAAKV,eAAeU,GAAG;YAC9C;UACF;QACF,OAAM;AACL,qBAAWA,OAAOjB,QAAQ;AAExB,gBAAI,OAAO,KAAKO,eAAeU,GAAG,MAAM,aAAa;AACnD,mBAAKV,eAAeU,GAAG,IAAIjB,OAAOiB,GAAG;AACrC,mBAAKA,GAAa,IAAIjB,OAAOiB,GAAG;YACjC;UACF;QACF;MACH;;;;;;;MAQAC,OAAOjB,OAAoC;AAAA,YAAjBS,YAASC,UAAAC,SAAA,KAAAD,UAAA,CAAA,MAAAE,SAAAF,UAAA,CAAA,IAAG;AACpC,aAAKH,gBAAgBE,YAAS/F,gBAAA,CAAA,GAASsF,KAAW,IAAAtF,gBAAAA,gBAAU,CAAA,GAAA,KAAK6F,aAAa,GAAKP,KAAK;AACxF,aAAKzF,KAAK,SAAS,KAAKgG,aAAa;MACvC;;;;;;;;MASUW,aAAU;AAClB,aAAKX,gBAAgB,KAAKJ;AAC1B,aAAKG,iBAAiB,KAAKJ;AAC3B,aAAKM,UAAU,KAAKH,aAAa;AACjC,aAAKY,OAAO,KAAKb,YAAY;AAC7B,eAAO;MACT;IACD;AEvHD,IAAMvI,aAAaA,MAAM;AACzB,IAAM0H,iBAAiB,CAAC,eAAe,gBAAgB;AACvD,IAAMzH,sBAAuBT,UAAiB,CAACkI,eAAeF,SAAShI,IAAI;AGE9DuD,IAAAA,qBAAiBuG,0BAAAA,SAAiB;AK4DxC,IAAM3B,iBAAiB;MAC5B4B,QAAQ;MACRC,UAAU;MACVC,QAAQ;MACRC,SAAS;MACTC,QAAQ;MACRC,OAAO;MACPC,MAAM;MACNC,QAAQ;MACRC,OAAO;MACPC,UAAU;MACVC,SAAS;MACTC,OAAO;MACPC,QAAQ;MACRC,oBAAoB;;IE8ETxC,cAAcA,CAACyC,YAAoBhF,SAAwB;AACtE,YAAMiF,UAAUC,OAAOC,KAAKH,YAAY,KAAK;AAC7C,YAAMpI,cAAUqC,8BAAee,IAAI;AACnC,YAAMoF,aAASC,sBAAOH,OAAOC,KAAKvI,SAAS,KAAK,GAAGqI,OAAO;AAC1D,YAAMK,YAAYlH,cAAUmH,8BAAeH,OAAO/G,CAAC,GAAG+G,OAAO9G,GAAG8G,OAAO7G,CAAC;AACxE,aAAO+G;IACT;AE7IA,IAAMtD,mBAA6B;;MAEjC;MACA;;;MAGA;;MAEA;IAAiB;ASnBZ,IAAMQ,mBAAmB;MAC9BgD,QAAQ;MACRC,WAAW;MACXC,UAAU;;ACYZ,IAAMjD,mBAAmB,MAAM;AAExB,IAAMC,sBAAsB;MACjCiD,kBAAkB;MAClBC,OAAO;MACPC,QAAQ;MACRC,aAAatD,iBAAiBgD;MAC9BO,UAAU,CAAA;MACVC,UAAU;MACVC,eAAe,CAAA;MACfC,kBAAkB,CAAA;MAClBC,WAAW,CAAA;MACXC,sBAAsB;MACtBC,cAAc,CAAA;MACdC,YAAY,CAAA;MACZC,aAAa;MACbC,UAAU;QACRC,mBAAmB;QACnBC,OAAO;QACPvM,MAAM;QACNwM,cAAc;QACdC,aAAatE,eAAe4B;QAC5B2C,UAAU;QACVC,YAAY;MACb;;ACxCH,KAAA,SAAYnE,oBAAiB;AAC3BA,MAAAA,mBAAA,UAAA,IAAA;AACAA,MAAAA,mBAAA,WAAA,IAAA;AACAA,MAAAA,mBAAA,WAAA,IAAA;AACAA,MAAAA,mBAAA,QAAA,IAAA;AACAA,MAAAA,mBAAA,WAAA,IAAA;AACAA,MAAAA,mBAAA,WAAA,IAAA;AACAA,MAAAA,mBAAA,UAAA,IAAA;AACAA,MAAAA,mBAAA,QAAA,IAAA;AACAA,MAAAA,mBAAA,WAAA,IAAA;AACAA,MAAAA,mBAAA,YAAA,IAAA;AACAA,MAAAA,mBAAA,SAAA,IAAA;AACAA,MAAAA,mBAAA,SAAA,IAAA;IACF,GAbYA,sBAAAA,oBAaX,CAAA,EAAA;;;;;;;;;;;;AEvBD,QAAA,wBAAA;AAcA,QAAa,mBAAb,cAAyC,MAAK;MAM5C,YAAY,MAAc,SAAiB,MAAQ;AAEjD,YAAI,CAAC,OAAO,UAAU,IAAI,GAAG;AAC3B,gBAAM,IAAI,MACR,4BAA4B;;AAGhC,YAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,gBAAM,IAAI,MACR,sCAAsC;;AAI1C,cAAM,OAAO;AACb,aAAK,OAAO;AACZ,YAAI,SAAS,QAAW;AACtB,eAAK,OAAO;;MAEhB;;;;MAKA,YAAS;AACP,cAAM,aAAyC;UAC7C,MAAM,KAAK;UACX,SAAS,KAAK;;AAEhB,YAAI,KAAK,SAAS,QAAW;AAC3B,qBAAW,OAAO,KAAK;;AAEzB,YAAI,KAAK,OAAO;AACd,qBAAW,QAAQ,KAAK;;AAE1B,eAAO;MACT;;;;;MAMA,WAAQ;AACN,eAAO,sBAAA,QACL,KAAK,UAAS,GACd,mBACA,CAAC;MAEL;;AArDF,YAAA,mBAAA;AA4DA,QAAa,wBAAb,cAA8C,iBAAmB;;;;;MAM/D,YAAY,MAAc,SAAiB,MAAQ;AAEjD,YAAI,CAAC,uBAAuB,IAAI,GAAG;AACjC,gBAAM,IAAI,MACR,2DAA2D;;AAI/D,cAAM,MAAM,SAAS,IAAI;MAC3B;;AAfF,YAAA,wBAAA;AAoBA,aAAS,uBAAuB,MAAY;AAC1C,aAAO,OAAO,UAAU,IAAI,KAAK,QAAQ,OAAQ,QAAQ;IAC3D;AAEA,aAAS,kBAAkB,GAAYoE,QAAc;AACnD,UAAIA,WAAU,cAAc;AAC1B,eAAO;;AAET,aAAOA;IACT;;;;;;;;;;;;AChFa,YAAA,aAAyB;MACpC,KAAK;QACH,cAAc;QACd,kBAAkB;QAClB,qBAAqB;QACrB,qBAAqB;QACrB,oBAAoB;QACpB,eAAe;QACf,OAAO;QACP,gBAAgB;QAChB,gBAAgB;QAChB,eAAe;QACf,UAAU;;MAEZ,UAAU;QACR,qBAAqB;QACrB,cAAc;QACd,mBAAmB;QACnB,cAAc;QACd,mBAAmB;;;AAIV,YAAA,cAAc;MACzB,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,UAAU;QACR,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;MAEX,QAAQ;QACN,UAAU;QACV,SAAS;;;;;;;;;;;;;;AC7Gb,QAAA,oBAAA;AACA,QAAA,YAAA;AAEA,QAAM,sBAAsB,kBAAA,WAAW,IAAI;AAC3C,QAAM,mBAAmB;AACzB,QAAM,iBAA6C;MACjD,MAAM;MACN,SAAS,mBAAmB,mBAAmB;;AAGpC,YAAA,gCAAgC;AAQ7C,aAAgB,mBACd,MACA,kBAA0B,kBAAgB;AAE1C,UAAI,OAAO,UAAU,IAAI,GAAG;AAC1B,cAAM,aAAa,KAAK,SAAQ;AAEhC,YAAI,OAAO,kBAAA,aAAa,UAAU,GAAG;AACnC,iBAAO,kBAAA,YAAY,UAA2B,EAAE;;AAElD,YAAI,qBAAqB,IAAI,GAAG;AAC9B,iBAAO,QAAA;;;AAGX,aAAO;IACT;AAfA,YAAA,qBAAA;AAqBA,aAAgB,YAAY,MAAY;AACtC,UAAI,CAAC,OAAO,UAAU,IAAI,GAAG;AAC3B,eAAO;;AAGT,YAAM,aAAa,KAAK,SAAQ;AAChC,UAAI,kBAAA,YAAY,UAA2B,GAAG;AAC5C,eAAO;;AAGT,UAAI,qBAAqB,IAAI,GAAG;AAC9B,eAAO;;AAET,aAAO;IACT;AAdA,YAAA,cAAA;AAsBA,aAAgBC,gBACd,OACA,EACE,gBAAgB,gBAChB,qBAAqB,MAAK,IACxB,CAAA,GAAE;;AAGN,UACE,CAAC,iBACD,CAAC,OAAO,UAAU,cAAc,IAAI,KACpC,OAAO,cAAc,YAAY,UACjC;AACA,cAAM,IAAI,MACR,0EAA0E;;AAI9E,UAAI,iBAAiB,UAAA,kBAAkB;AACrC,eAAO,MAAM,UAAS;;AAGxB,YAAM,aAAkD,CAAA;AAExD,UACE,SACA,OAAO,UAAU,YACjB,CAAC,MAAM,QAAQ,KAAK,KACpB,OAAO,OAAkC,MAAM,KAC/C,YAAa,MAAqC,IAAI,GACtD;AACA,cAAM,SAAS;AACf,mBAAW,OAAO,OAAO;AAEzB,YAAI,OAAO,WAAW,OAAO,OAAO,YAAY,UAAU;AACxD,qBAAW,UAAU,OAAO;AAE5B,cAAI,OAAO,QAAQ,MAAM,GAAG;AAC1B,uBAAW,OAAO,OAAO;;eAEtB;AACL,qBAAW,UAAU,mBAClB,WAA0C,IAAI;AAGjD,qBAAW,OAAO,EAAE,eAAe,oBAAoB,KAAK,EAAC;;aAE1D;AACL,mBAAW,OAAO,cAAc;AAEhC,cAAM,WAAO,KAAI,WAAa,QAAA,OAAA,SAAA,SAAA,GAAE;AAEhC,mBAAW,UACT,WAAW,OAAO,YAAY,WAC1B,UACA,cAAc;AAEpB,mBAAW,OAAO,EAAE,eAAe,oBAAoB,KAAK,EAAC;;AAG/D,YAAM,SAAK,KAAI,WAAa,QAAA,OAAA,SAAA,SAAA,GAAE;AAE9B,UAAI,sBAAsB,SAAS,SAAS,OAAO,UAAU,UAAU;AACrE,mBAAW,QAAQ;;AAErB,aAAO;IACT;AAlEA,YAAA,iBAAAA;AAsEA,aAAS,qBAAqB,MAAY;AACxC,aAAO,QAAQ,UAAU,QAAQ;IACnC;AAEA,aAAS,oBAAoB,OAAc;AACzC,UAAI,SAAS,OAAO,UAAU,YAAY,CAAC,MAAM,QAAQ,KAAK,GAAG;AAC/D,eAAO,OAAO,OAAO,CAAA,GAAI,KAAK;;AAEhC,aAAO;IACT;AAEA,aAAS,OAAO,KAA8B,KAAW;AACvD,aAAO,OAAO,UAAU,eAAe,KAAK,KAAK,GAAG;IACtD;;;;;;;;;;;;AChJA,QAAA,YAAA;AACA,QAAA,UAAA;AACA,QAAA,oBAAA;AAea,YAAA,YAAY;MACvB,KAAK;;;;QAKH,OAAO,CAAI,QAA0B,mBACnC,kBAAA,WAAW,IAAI,OAAO,GAAG;;;;QAM3B,gBAAgB,CAAI,QAA0B,mBAC5C,kBAAA,WAAW,IAAI,gBAAgB,GAAG;;;;QAMpC,eAAe,CAAI,QAA0B,mBAC3C,kBAAA,WAAW,IAAI,eAAe,GAAG;;;;QAMnC,gBAAgB,CAAI,QAA0B,mBAC5C,kBAAA,WAAW,IAAI,gBAAgB,GAAG;;;;QAMpC,UAAU,CAAI,QAA0B,mBACtC,kBAAA,WAAW,IAAI,UAAU,GAAG;;;;;;QAQ9B,QAAQ,CAAI,SAA+B;AACzC,cAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,MAAM,QAAQ,IAAI,GAAG;AAC5D,kBAAM,IAAI,MAAM,iEAAiE;;AAEnF,gBAAM,EAAE,KAAI,IAAK;AACjB,cAAI,CAAC,OAAO,UAAU,IAAI,KAAK,OAAO,UAAU,OAAO,QAAQ;AAC7D,kBAAM,IAAI,MACR,+DAA+D;;AAGnE,iBAAO,mBAAmB,MAAM,IAAI;QACtC;;;;QAKA,cAAc,CAAI,QAA0B,mBAC1C,kBAAA,WAAW,IAAI,cAAc,GAAG;;;;QAMlC,kBAAkB,CAAI,QAA0B,mBAC9C,kBAAA,WAAW,IAAI,kBAAkB,GAAG;;;;QAMtC,qBAAqB,CAAI,QAA0B,mBACjD,kBAAA,WAAW,IAAI,qBAAqB,GAAG;;;;QAMzC,qBAAqB,CAAI,QAA0B,mBACjD,kBAAA,WAAW,IAAI,qBAAqB,GAAG;;;;QAMzC,oBAAoB,CAAI,QAA0B,mBAChD,kBAAA,WAAW,IAAI,oBAAoB,GAAG;;;;QAMxC,eAAe,CAAI,QAA0B,mBAC3C,kBAAA,WAAW,IAAI,eAAe,GAAG;;MAIrC,UAAU;;;;QAKR,qBAAqB,CAAI,QAAyB;AAChD,iBAAO,oBACL,kBAAA,WAAW,SAAS,qBAAqB,GAAG;QAEhD;;;;QAKA,cAAc,CAAI,QAAyB;AACzC,iBAAO,oBACL,kBAAA,WAAW,SAAS,cAAc,GAAG;QAEzC;;;;QAKA,mBAAmB,CAAI,QAAyB;AAC9C,iBAAO,oBACL,kBAAA,WAAW,SAAS,mBAAmB,GAAG;QAE9C;;;;QAKA,cAAc,CAAI,QAAyB;AACzC,iBAAO,oBACL,kBAAA,WAAW,SAAS,cAAc,GAAG;QAEzC;;;;QAKA,mBAAmB,CAAI,QAAyB;AAC9C,iBAAO,oBACL,kBAAA,WAAW,SAAS,mBAAmB,GAAG;QAE9C;;;;QAKA,QAAQ,CAAI,SAA2B;AACrC,cAAI,CAAC,QAAQ,OAAO,SAAS,YAAY,MAAM,QAAQ,IAAI,GAAG;AAC5D,kBAAM,IAAI,MAAM,sEAAsE;;AAGxF,gBAAM,EAAE,MAAM,SAAS,KAAI,IAAK;AAEhC,cAAI,CAAC,WAAW,OAAO,YAAY,UAAU;AAC3C,kBAAM,IAAI,MACR,qCAAqC;;AAGzC,iBAAO,IAAI,UAAA,sBAAsB,MAAM,SAAS,IAAI;QACtD;;;AAMJ,aAAS,mBAAsB,MAAc,KAAqB;AAChE,YAAM,CAAC,SAAS,IAAI,IAAI,UAAU,GAAG;AACrC,aAAO,IAAI,UAAA,iBACT,MACA,WAAW,QAAA,mBAAmB,IAAI,GAClC,IAAI;IAER;AAEA,aAAS,oBAAuB,MAAc,KAAqB;AACjE,YAAM,CAAC,SAAS,IAAI,IAAI,UAAU,GAAG;AACrC,aAAO,IAAI,UAAA,sBACT,MACA,WAAW,QAAA,mBAAmB,IAAI,GAClC,IAAI;IAER;AAEA,aAAS,UAAa,KAAqB;AACzC,UAAI,KAAK;AACP,YAAI,OAAO,QAAQ,UAAU;AAC3B,iBAAO,CAAC,GAAG;mBACF,OAAO,QAAQ,YAAY,CAAC,MAAM,QAAQ,GAAG,GAAG;AACzD,gBAAM,EAAE,SAAS,KAAI,IAAK;AAE1B,cAAI,WAAW,OAAO,YAAY,UAAU;AAC1C,kBAAM,IAAI,MAAM,8BAA8B;;AAEhD,iBAAO,CAAC,WAAW,QAAW,IAAI;;;AAGtC,aAAO,CAAA;IACT;;;;;;;;;;;;ACzNA,QAAA,YAAA;AAUE,WAAA,eAAA,SAAA,oBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAVO,UAAA;IAAgB,EAAA,CAAA;AAWvB,WAAA,eAAA,SAAA,yBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAXyB,UAAA;IAAqB,EAAA,CAAA;AAChD,QAAA,UAAA;AAWE,WAAA,eAAA,SAAA,kBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAVA,QAAA;IAAc,EAAA,CAAA;AAWd,WAAA,eAAA,SAAA,sBAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAXgB,QAAA;IAAkB,EAAA,CAAA;AAEpC,QAAA,WAAA;AAKE,WAAA,eAAA,SAAA,aAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aALO,SAAA;IAAS,EAAA,CAAA;AAClB,QAAA,oBAAA;AAGE,WAAA,eAAA,SAAA,cAAA,EAAA,YAAA,MAAA,KAAA,WAAA;AAAA,aAHO,kBAAA;IAAU,EAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6ECWGC,cCVTC,0BCLAC;;;;;;;;;;;;;;;;;;;;AFeb,IAAsBF,eACpB,SAAA,iBAAA;AAAA,gBAAAA,eAAA,eAAA;AAAA,UAAA,SAAAG,cAAAH,aAAA;AAMA,eAAuDA,cAAA,MAAA;AAAA,YAAA,YAAA;AAAA,YAAzCI,SAAM,KAANA,QAAQC,QAAK,KAALA;AAAK,wBAAA,MAAAL,aAAA;AACzB,gBAAM,OAAA,KAAA,MAAA;UAAEI;UAAQC;SAAO;AAAE,wBAAA,uBAAA,KAAA,GAAA,wBAHoC,IAAI;AAIjE,YAAI,CAACD,OAAOE;AAAa,gBAAMC,0BAA0BC,2BAA2B,4BAA4B;AAChH,YAAI,CAACJ,OAAOE,YAAYG;AAAS,gBAAMF,0BAA0BC,2BAA2B,2CAA2C;AACvI,YAAI,CAACJ,OAAOE,YAAYI;AAAW,gBAAMH,0BAA0BC,2BAA2B,6CAA6C;AAC3I,cAAKG,eAAe;UAClBF,SAAS;;AAEX,cAAKG,gBAAgB;UACnBN,aAAaF,OAAOE;UACpBO,UAAQ,gBAAA,CAAA,GAAKT,OAAOE,YAAYG,SAAUL,OAAOE,WAAW;;AAE9D,cAAA,aAAA,uBAAA,KAAA,GAAA,gBAAAN,cAAA,SAAA,IAAA,cAAA,UAAA,EAAA,KAAA,UAAA;AAAmB,eAAA;MACrB;AAAC,mBAAAA,eAAA,CAAA;QAAA,KAAA;QAAA,KAED,SAAYc,OAAA;AACV,iBAAO,KAAKC;;QACb,KAED,SAAA,IAAaC,GAAC;AACZ,gBAAM,IAAIC,MAAM,yBAAyB;QAC3C;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAA,SAASX,aAA8B;AAC5C,cAAI,CAACA,YAAYG;AAAS,kBAAMS,iCAAUC,IAAIC,cAAc,qBAAqB;AACjF,cAAI,CAACd,YAAYI;AAAW,kBAAMQ,iCAAUC,IAAIC,cAAc,qBAAqB;AACnF,eAAKC,UAAU;YACbR,UAAQS,eAAAA,eAAA,CAAA,GAAO,KAAKlB,OAAOS,QAAQ,GAAA,CAAA,GAAA,gBAAA,CAAA,GAAGP,YAAYG,SAAUH,WAAW,CAAA;UACnE,CAAA;QACR;MAAC,GAAA;QAAA,KAAA;QAAA,OAEM,SAAAiB,gBAAed,SAAe;AAAA,cAAA;AACnC,cAAMH,eAAc,wBAAA,KAAKF,OAAOS,cAAQ,QAAA,0BAAA,SAAA,SAApB,sBAAuBJ,OAAO;AAClD,cAAI,CAACH;AAAa,kBAAMY,iCAAUC,IAAIK,eAAwBf,SAAAA,OAAAA,SAA0D,kDAAA,CAAA;AACxH,iBAAOH;QACT;MAAC,GAAA;QAAA,KAAA;QAAA,OAES,SAAsB,yBAAA;AAC9B,iBAAO,KAAKS;QACd;MAAC,GAAA;QAAA,KAAA;QAAA,OAES,SAAA,0BAA0BU,qBAA6C;AAC/E,cAAI,KAAKV,sBAAsB;AAC5B,iBAAKA,qBAA6BW,UAAUD,mBAAmB;UACjE,OAAM;AACL,iBAAKV,uBAAuBY,wBAAkDF,mBAAmB;UAClG;QACH;MAAC,CAAA,CAAA;AAAA,aAAAzB;IAAA,EArDO4B,cAAoB;ACX9B,IAAa3B,2BAAwB,WAAA;AAAA,eAAAA,4BAAA;AAAA,wBAAA,MAAAA,yBAAA;AAAA,wBAAA,MAAA,wBAE4B,IAAI;MAAA;AAAA,mBAAAA,2BAAA,CAAA;QAAA,KAAA;QAAA,KAEnE,SAAYa,OAAA;AACV,iBAAO,KAAKC;;QACb,KAED,SAAA,IAAaC,GAAC;AACZ,gBAAM,IAAIC,MAAM,yBAAyB;QAC3C;MAAC,GAAA;QAAA,KAAA;QAAA,OAQD,SAAA,SAASD,GAAoB;AAC3B,gBAAM,IAAIC,MAAM,yBAAyB;QAC3C;MAAC,GAAA;QAAA,KAAA;QAAA,OAAA,WAAA;AAAA,cAAA,iBAAA,kBAAA,oBAAAY,QAAA,KAEM,SAAA,QAAoBC,SAAe;AAAA,gBAAA,mBAAA,QAAA;AAAA,mBAAA,oBAAAD,QAAA,KAAA,SAAA,SAAA,UAAA;AAAA,qBAAA,GAAA;AAAA,wBAAA,SAAA,OAAA,SAAA,MAAA;kBAAA,KAAA;AAClCE,wCAAoB,KAAKC,qBAAqBF,OAAO;AACrDG,6BAAS,IAAIC,WAAU;AAC7BD,2BAAOE,KAAKJ,iBAAiB;AACvBK,+BAAWC,mBAAmBJ,MAAM;AAC1C,yBAAKK,0BAA0BF,QAAQ;kBAAE,KAAA;kBAAA,KAAA;AAAA,2BAAA,SAAA,KAAA;gBAAA;cAAA;YAAA,GAAA,SAAA,IAAA;WAC1C,CAAA;AAAA,mBAAA,cAAA,IAAA;AAAA,mBAAA,eAAA,MAAA,MAAA,SAAA;UAAA;AAAA,iBAAA;QAAA,EAAA;MAAA,GAAA;QAAA,KAAA;QAAA,OAAA,WAAA;AAAA,cAAA,eAAA,kBAAA,oBAAAP,QAAA,KAEM,SAAA,SAAkBb,GAAsB;AAAA,mBAAA,oBAAAa,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,qBAAA,GAAA;AAAA,wBAAA,UAAA,OAAA,UAAA,MAAA;kBAAA,KAAA;AAAA,2BACtCU,UAAAA,OAAAA,UAAAA,QAAQC,QAAO,CAAE;kBAAA,KAAA;kBAAA,KAAA;AAAA,2BAAA,UAAA,KAAA;gBAAA;cAAA;YAAA,GAAA,QAAA;WACzB,CAAA;AAAA,mBAAA,YAAA,KAAA;AAAA,mBAAA,aAAA,MAAA,MAAA,SAAA;UAAA;AAAA,iBAAA;QAAA,EAAA;MAAA,GAAA;QAAA,KAAA;QAAA,OAES,SAAsB,yBAAA;AAC9B,iBAAO,KAAKzB;QACd;MAAC,GAAA;QAAA,KAAA;QAAA,OAES,SAAA,0BAA0BU,qBAA6C;AAC/E,cAAI,KAAKV,sBAAsB;AAC5B,iBAAKA,qBAA6BW,UAAUD,mBAAmB;UACjE,OAAM;AACL,iBAAKV,uBAAuBY,wBAAkDF,mBAAmB;UAClG;QACH;MAAC,GAAA;QAAA,KAAA;QAAA,OAEO,SAAA,qBAAqBK,SAAe;AAC1C,cAAMW,aAAa;YACjBC,eAAa,WAAA;AAAA,kBAAE,iBAAA,kBAAA,oBAAAb,QAAA,KAAA,SAAA,WAAA;AAAA,uBAAA,oBAAAA,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,yBAAA,GAAA;AAAA,4BAAA,UAAA,OAAA,UAAA,MAAA;sBAAA,KAAA;AAAA,+BAAA,UAAA,OAAA,UACNC,OAAO;sBAAA,KAAA;sBAAA,KAAA;AAAA,+BAAA,UAAA,KAAA;oBAAA;kBAAA;gBAAA,GAAA,QAAA;eACf,CAAA;AAAA,uBAAA,gBAAA;AAAA,uBAAA,eAAA,MAAA,MAAA,SAAA;cAAA;AAAA,qBAAA;YAAA,EAAA;;AAEH,iBAAO,KAAKa,wBAAwBF,UAAU;QAChD;MAAC,GAAA;QAAA,KAAA;QAAA,OAEO,SAAyC,wBAAA,MAAA;AAAA,cAAfC,gBAAa,KAAbA;AAAa,mBAC9BE,qBAAoB,KAAA,KAAA;AAAA,mBAAA,sBAAA,MAAA,MAAA,SAAA;UAAA;AAAA,mBAAA,wBAAA;AAAA,oCAAnC,kBAAA,oBAAAf,QAAA,KAAA,SAAA,SAAoCb,GAA0C6B,KAA0B;AAAA,qBAAA,oBAAAhB,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,uBAAA,GAAA;AAAA,0BAAA,UAAA,OAAA,UAAA,MAAA;oBAAA,KAAA;AAAA,gCAAA,OAAA;AAAA,6BACnFa,cAAa;oBAAE,KAAA;AAAlCG,0BAAIC,SAAM,UAAA;oBAAA,KAAA;oBAAA,KAAA;AAAA,6BAAA,UAAA,KAAA;kBAAA;gBAAA;cAAA,GAAA,QAAA;aACX,CAAA;AAAA,mBAAA,sBAAA,MAAA,MAAA,SAAA;UAAA;AAED,iBAAOC,yBAAyB;YAC9BC,aAAaC,sBAAsBL,oBAAoB;UACxD,CAAA;QACH;MAAC,CAAA,CAAA;AAAA,aAAA3C;IAAA,EAAA;oBA/DUA,0BAAwB,uBAAA,WAAA;AAAA,UAAA,QAAA,kBAAA,oBAAA4B,QAAA,KAYC,SAAA,SAAOqB,QAA2B;AAAA,YAAA;AAAA,eAAA,oBAAArB,QAAA,KAAA,SAAA,UAAA,WAAA;AAAA,iBAAA,GAAA;AAAA,oBAAA,UAAA,OAAA,UAAA,MAAA;cAAA,KAAA;AAC9DsB,kCAAkB,IAAIlD,yBAAwB;AAAE,0BAAA,OAAA;AAAA,uBAChDkD,gBAAgBC,cAAcF,OAAOpB,OAAO;cAAC,KAAA;AAAA,uBAAA,UAAA,OAAA,UAC5CqB,eAAe;cAAA,KAAA;cAAA,KAAA;AAAA,uBAAA,UAAA,KAAA;YAAA;UAAA;QAAA,GAAA,QAAA;OACvB,CAAA;AAAA,aAAA,SAAA,KAAA;AAAA,eAAA,MAAA,MAAA,MAAA,SAAA;MAAA;IAAA,EAAA,CAAA;ACrBUjD,IAAAA,sBAAiBmD,2BAAAA,SAAiB;;;",
  "names": ["value", "self", "obj", "i", "self", "o", "_setPrototypeOf", "p", "self", "o", "_getPrototypeOf", "value", "_typeof", "obj", "_typeof", "_regeneratorRuntime", "exports", "define", "value", "self", "i", "next", "key", "type", "_get", "e", "_construct", "Parent", "args", "Class", "_wrapNativeSuper", "Class", "encode", "decode", "base64url", "require_base64url", "safeatob", "str", "base64url", "decode", "jsonToBase64", "json", "encode", "JSON", "stringify", "randomId", "URLWithHashParams", "keccak", "randombytes", "toString", "URLSearchParams", "hash", "hashParams", "call", "URL", "base64urlLib", "keccakLib", "stringify", "i", "i", "i", "o", "n", "i", "value", "serializeError", "i", "cb", "once", "once", "noop", "eos", "once", "eos", "noop", "pump", "i", "noop", "undefined", "safeApply", "handler", "context", "args", "Reflect", "apply", "err", "setTimeout", "arrayClone", "arr", "n", "length", "copy", "Array", "i", "createStreamMiddleware", "idMap", "readNoop", "events", "SafeEventEmitter", "processResponse", "res", "id", "Error", "Object", "assign", "end", "processNotification", "emit", "processMessage", "_encoding", "cb", "isNotification", "_err", "stream", "Duplex", "objectMode", "read", "write", "middleware", "req", "next", "push", "createScaffoldMiddleware", "handlers", "method", "result", "createIdRemapMiddleware", "_end", "originalId", "newId", "randomId", "done", "createAsyncMiddleware", "asyncMiddleware", "_regeneratorRuntime", "nextPromise", "Promise", "resolve", "resolveNextPromise", "returnHandlerCallback", "nextWasCalled", "asyncNext", "runReturnHandlersCallback", "mergeMiddleware", "middlewareStack", "engine", "JRPCEngine", "forEach", "asMiddleware", "anyStreamEnd", "_cb", "once", "eos", "readable", "writable", "setupMultiplex", "mux", "ObjectMultiplex", "getStream", "streamHelper", "name", "_substreams", "createStream", "pump", "window", "console", "error", "SYN", "ACK", "BRK", "BasePostMessageStream", "SerializableError", "getRpcPromiseCallback", "Substream", "IGNORE_SUBSTREAM", "PostMessageStream", "_createSuper", "target", "targetWindow", "targetOrigin", "_init", "_haveSyn", "_name", "_target", "_targetWindow", "_targetOrigin", "_onMessage", "onMessage", "bind", "_synIntervalId", "addEventListener", "_handShake", "cork", "_write", "data", "uncork", "_break", "originConstraint", "postMessage", "event", "message", "origin", "source", "_onData", "_", "_postMessage", "removeEventListener", "type", "doError", "_events", "er", "len", "listeners", "EventEmitter", "code", "Number", "isInteger", "toString", "stringify", "stack", "reject", "unwrapResult", "response", "isArray", "_middleware", "_handleBatch", "_handle", "_promiseHandle", "_runAllMiddleware", "middlewareError", "isComplete", "returnHandlers", "_runReturnHandlers", "handlerCallback", "reqs", "all", "map", "responses", "callerReq", "jsonrpc", "_processRequest", "serializeError", "_checkForCompletion", "_runMiddleware", "reverse", "returnHandler", "_loop", "parent", "_parent", "chunk", "callback", "Symbol", "opts", "substream", "_error", "destroy", "warn", "dataObj", "dataObjData", "params", "dataObjDataParam", "_origin", "location", "fixProto", "target", "prototype", "setPrototypeOf", "Object", "__proto__", "fixStack", "fn", "constructor", "captureStackTrace", "Error", "__extends", "message", "options", "_super", "defineProperty", "_this", "value", "_newTarget", "name", "enumerable", "configurable", "CustomError", "require_lodash", "MAX_SAFE_INTEGER", "e", "n", "value", "Symbol", "Uint8Array", "Map", "length", "map", "type", "merge", "noop", "e", "i", "self", "storageKey", "location", "fetchAndTrace", "url", "init", "_url", "URL", "error", "sentry", "tracingOrigins", "includes", "origin", "tracingPaths", "pathname", "transaction", "startTransaction", "name", "span", "startChild", "op", "response", "fetch", "finish", "getApiKeyHeaders", "headers", "apiKey", "gatewayAuthHeader", "embedHost", "gatewayEmbedHostHeader", "debugLogResponse", "log", "info", "status", "statusText", "promiseTimeout", "post", "logLevel", "getLogger", "setLevel", "levels", "INFO", "ms", "promise", "timeout", "Promise", "resolve", "reject", "id", "setTimeout", "clearTimeout", "Error", "race", "data", "arguments", "length", "undefined", "options_", "customOptions", "defaultOptions", "mode", "useAPIKey", "_objectSpread", "options", "merge", "method", "isUrlEncodedData", "body", "JSON", "stringify", "then", "ok", "json", "InvalidCharacterError", "message", "this", "str", "output", "replace", "length", "decodeURIComponent", "atob", "m", "p", "code", "charCodeAt", "toString", "toUpperCase", "err", "InvalidTokenError", "token", "options", "pos", "header", "JSON", "parse", "base64_url_decode", "split", "e", "prototype", "Error", "name", "window", "bind", "input", "String", "bs", "buffer", "bc", "idx", "charAt", "fromCharCode", "indexOf", "storageAvailable", "type", "storageExists", "storageLength", "storage", "window", "length", "x", "setItem", "removeItem", "error", "_error", "code", "name", "CHAIN_NAMESPACES", "ADAPTER_NAMESPACES", "getDefaultNetworkId", "getEvmChainConfig", "getSolanaChainConfig", "getChainConfig", "Web3AuthError", "WalletInitializationError", "WalletLoginError", "MULTI_CHAIN_ADAPTERS", "SOLANA_ADAPTERS", "EVM_ADAPTERS", "WALLET_ADAPTERS", "ADAPTER_CATEGORY", "ADAPTER_STATUS", "ADAPTER_EVENTS", "BaseAdapter", "BaseNetworkSwitch", "authServer", "log", "isHexStrict", "checkIfTokenIsExpired", "signChallenge", "verifySignedChallenge", "getSavedToken", "saveToken", "clearToken", "PROVIDER_EVENTS", "EIP155", "SOLANA", "OTHER", "MULTICHAIN", "chainNamespace", "Error", "chainId", "rpcTarget", "displayName", "blockExplorer", "ticker", "tickerName", "finalChainId", "parseInt", "_createSuper", "message", "Object", "defineProperty", "value", "toString", "JSON", "stringify", "toJSON", "CustomError", "extraMessage", "messages", "fromCode", "OPENLOGIN", "WALLET_CONNECT_V1", "WALLET_CONNECT_V2", "_objectSpread", "TORUS_SOLANA", "PHANTOM", "SOLLET", "SOLLET_EXTENSION", "SOLFLARE", "SLOPE", "TORUS_EVM", "METAMASK", "COINBASE", "EXTERNAL", "IN_APP", "NOT_READY", "READY", "CONNECTING", "CONNECTED", "DISCONNECTED", "ERRORED", "ADAPTER_DATA_UPDATED", "get", "chainConfig", "customChainConfig", "status", "notReady", "defaultChainConfig", "_", "connectionError", "clientId", "data", "adapterData", "emit", "adapterName", "SafeEventEmitter", "loglevel", "getLogger", "hex", "test", "token", "decoded", "JwtDecode", "exp", "Math", "floor", "Date", "now", "_regeneratorRuntime", "payload", "t", "header", "network", "post", "res", "success", "challenge", "signedMessage", "issuer", "sessionTime", "sigData", "signature", "s", "audience", "location", "hostname", "timeout", "headers", "client_id", "wallet_provider", "idTokenRes", "userAddress", "localStorage", "getItem", "toLowerCase", "INITIALIZED", "n", "hash", "i", "nextTick", "length", "value", "i", "length", "i", "i", "n", "e", "r", "value", "seed", "type", "r", "n", "n2", "i", "map", "n", "window", "i", "r", "s", "n", "i", "a", "e", "seed", "sign", "o", "tv5", "c1", "c2", "value", "value", "length", "i", "e", "map", "i", "create", "n", "t", "e", "r", "i", "require_secp256k1", "encode", "i", "decode", "length", "stripHexPrefix", "n", "hash", "n", "i", "i", "nextTick", "length", "t", "i", "require_utils", "i", "stripHexPrefix", "value", "i", "n", "length", "i", "length", "n", "bufferToBigInt", "bigIntToBuffer", "fromSigned", "toUnsigned", "addHexPrefix", "bigIntToHex", "value", "e", "i", "TypeOutput", "ecsign", "r", "hashPersonalMessage", "i", "value", "value", "i", "length", "i", "require_util", "require_types", "o", "exports", "i", "value", "n", "i", "length", "i", "i", "i", "n", "i", "mask", "require_util", "i", "SortOrder", "levels", "i", "i", "bit", "i", "ProofType", "o", "exports", "i", "i", "length", "n", "length", "value", "i", "i", "i", "type", "value", "value", "type", "gindex", "type", "cache", "type", "value", "i", "value", "uint8Array", "bitLen", "value", "value", "type", "value", "value", "i", "value", "type", "value", "type", "cache", "value", "i", "value", "cache", "node", "type", "value", "type", "value", "type", "value", "value", "type", "value", "length", "n", "i", "type", "value", "length", "type", "cache", "value", "n", "i", "type", "cache", "value", "length", "i", "value", "cache", "value", "length", "length", "value", "i", "type", "length", "i", "type", "length", "type", "cache", "i", "type", "cache", "length", "cache", "value", "length", "value", "byteLength", "value", "i", "i", "t", "value", "type", "length", "cache", "value", "length", "cache", "value", "i", "error", "e", "self", "i", "type", "url", "i", "_a", "e", "url", "BigNumber", "alphabet", "e", "i", "n", "sign", "r", "compare", "t", "format", "value", "serializeError", "safeApply", "handler", "context", "args", "Reflect", "apply", "err", "setTimeout", "arrayClone", "arr", "n", "length", "copy", "Array", "i", "createAsyncMiddleware", "asyncMiddleware", "req", "res", "next", "end", "resolveNextPromise", "nextPromise", "Promise", "resolve", "returnHandlerCallback", "nextWasCalled", "asyncNext", "runReturnHandlersCallback", "error", "SafeEventEmitter", "IGNORE_SUBSTREAM", "EventEmitter", "emit", "type", "doError", "events", "_events", "undefined", "_len", "arguments", "_key", "er", "Error", "message", "len", "listeners", "Symbol", "createRandomId", "i", "value", "type", "log", "import_loglevel", "loglevel", "microSeconds", "value", "ObliviousSet", "e", "create", "close", "postMessage", "onMessage", "canBeUsed", "averageResponseTime", "microSeconds", "type", "localStorage", "e", "postMessage", "value", "listener", "create", "canBeUsed", "close", "onMessage", "averageResponseTime", "microSeconds", "type", "type", "i", "withNativeArrayBuffer", "type", "length", "i", "on", "i", "length", "i", "init_util", "init_util", "now", "encode", "i", "decode", "e", "i", "init_util", "close", "encode", "e", "init_util", "e", "i", "encode", "e", "i", "init_util", "decode", "e", "i", "type", "close", "protocol", "init_esm", "init_util", "init_esm", "withNativeArrayBuffer", "isView", "withNativeBlob", "i", "i", "protocol", "init_esm", "PacketType", "i", "e", "type", "Socket", "init_socket", "init_esm", "timeout", "i", "self", "init_esm", "init_socket", "self", "timeout", "e", "Socket", "socket", "i", "lookup", "init_esm", "init_socket", "Socket", "require_browser", "ec", "i", "getPublic", "decrypt", "log", "logLevel", "getLogger", "setLevel", "levels", "INFO", "i", "value", "i", "length", "value", "value", "stringify", "i", "require_browser", "ec", "i", "getPublic", "decrypt", "encParamsHexToBuf", "encParamsHex", "iv", "Buffer", "from", "ephemPublicKey", "ciphertext", "mac", "encParamsBufToHex", "encParams", "toString", "encryptData", "privKeyHex", "d", "serializedDec", "JSON", "stringify", "serializedBuf", "encrypt", "getPublic", "sData", "decryptData", "parse", "keyPair", "ec", "keyFromPrivate", "decrypt", "getPrivate", "data", "EC", "createKeccakHash", "storageKey", "KEY_PREFIX", "postMessage", "_regeneratorRuntime", "lookup", "log", "reconnect", "visibilityListener", "listener", "create", "canBeUsed", "close", "onMessage", "averageResponseTime", "import_regenerator", "import_eccrypto", "import_keccak", "microSeconds", "type", "init_esm", "create", "close", "postMessage", "onMessage", "canBeUsed", "averageResponseTime", "microSeconds", "type", "type", "o", "listenerFn", "BroadcastChannel", "postMessage", "addEventListener", "removeEventListener", "obj", "close", "log", "logLevel", "getLogger", "setLevel", "levels", "INFO", "getRawListeners", "eventEmitter", "name", "rawListeners", "listeners", "createEventEmitterProxy", "initialTarget", "opts", "finalOpts", "eventFilter", "filterNoop", "externalEventFilter", "Error", "target", "setTarget", "newTarget", "oldTarget", "eventNames", "filter", "forEach", "handler", "on", "removeAllListeners", "proxy", "Proxy", "get", "_", "set", "value", "providerFromEngine", "engine", "provider", "SafeEventEmitter", "sendAsync", "req", "res", "handle", "error", "_res$error", "_res$error2", "err", "serializeError", "fallbackError", "message", "toString", "code", "ethErrors", "rpc", "internal", "result", "send", "callback", "emit", "request", "args", "_objectSpread", "id", "createRandomId", "jsonrpc", "padWithZeroes", "hexString", "targetLength", "test", "String", "prototype", "padStart", "call", "concatSig", "v", "r", "s", "rSig", "fromSigned", "sSig", "vSig", "bufferToBigInt", "rStr", "toUnsigned", "sStr", "vStr", "stripHexPrefix", "bigIntToHex", "addHexPrefix", "concat", "checkForHttpErrors", "fetchRes", "status", "methodNotFound", "timeout", "duration", "Promise", "resolve", "setTimeout", "parseResponse", "body", "data", "createFetchConfigFromReq", "_ref", "rpcTarget", "originHttpHeaderKey", "parsedUrl", "URL", "payload", "method", "params", "originDomain", "origin", "serializedPayload", "JSON", "stringify", "fetchParams", "headers", "Accept", "fetchUrl", "href", "createFetchMiddleware", "_ref2", "createAsyncMiddleware", "_next", "maxAttempts", "retryInterval", "attempt", "fetch", "fetchBody", "json", "errMsg", "isRetriable", "RETRIABLE_ERRORS", "some", "phrase", "includes", "BaseController", "internalEvents", "LOGIN_PROVIDER", "signMessage", "ACCOUNT_CATEGORY", "DEFAULT_INTERVAL", "DEFAULT_PREFERENCES", "TransactionStatus", "constructor", "config", "state", "_defineProperty", "defaultConfig", "defaultState", "initialState", "initialConfig", "internalConfig", "internalState", "configure", "overwrite", "arguments", "length", "undefined", "fullUpdate", "Object", "assign", "key", "update", "initialize", "getCreateRandomId", "GOOGLE", "FACEBOOK", "REDDIT", "DISCORD", "TWITCH", "APPLE", "LINE", "GITHUB", "KAKAO", "LINKEDIN", "TWITTER", "WEIBO", "WECHAT", "EMAIL_PASSWORDLESS", "privateKey", "privKey", "Buffer", "from", "msgSig", "ecsign", "rawMsgSig", "bigIntToBuffer", "NORMAL", "THRESHOLD", "IMPORTED", "selectedCurrency", "theme", "locale", "accountType", "contacts", "jwtToken", "fetchedPastTx", "pastTransactions", "paymentTx", "defaultPublicAddress", "customTokens", "customNfts", "crashReport", "userInfo", "aggregateVerifier", "email", "profileImage", "typeOfLogin", "verifier", "verifierId", "value", "serializeError", "BaseProvider", "CommonPrivateKeyProvider", "createRandomId", "_createSuper", "config", "state", "chainConfig", "WalletInitializationError", "invalidProviderConfigError", "chainId", "rpcTarget", "defaultState", "defaultConfig", "networks", "get", "_providerEngineProxy", "_", "Error", "ethErrors", "rpc", "invalidParams", "configure", "_objectSpread", "getChainConfig", "invalidRequest", "providerEngineProxy", "setTarget", "createEventEmitterProxy", "BaseController", "_regeneratorRuntime", "privKey", "privKeyMiddleware", "getPrivKeyMiddleware", "engine", "JRPCEngine", "push", "provider", "providerFromEngine", "updateProviderEngineProxy", "Promise", "resolve", "middleware", "getPrivatekey", "createPrivKeyMiddleware", "getPrivatekeyHandler", "res", "result", "createScaffoldMiddleware", "private_key", "createAsyncMiddleware", "params", "providerFactory", "setupProvider", "getCreateRandomId"]
}
