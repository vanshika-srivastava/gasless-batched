{
  "version": 3,
  "sources": ["../../@web3auth/ethereum-provider/node_modules/eth-rpc-errors/src/classes.ts", "../../@web3auth/ethereum-provider/node_modules/eth-rpc-errors/src/error-constants.ts", "../../@web3auth/ethereum-provider/node_modules/eth-rpc-errors/src/utils.ts", "../../@web3auth/ethereum-provider/node_modules/eth-rpc-errors/src/errors.ts", "../../@web3auth/ethereum-provider/node_modules/eth-rpc-errors/src/index.ts", "../../@web3auth/ethereum-provider/node_modules/@noble/hashes/src/_assert.ts", "../../@web3auth/ethereum-provider/node_modules/@noble/hashes/src/_u64.ts", "../../@web3auth/ethereum-provider/node_modules/@noble/hashes/src/crypto.ts", "../../@web3auth/ethereum-provider/node_modules/@noble/hashes/src/utils.ts", "../../@web3auth/ethereum-provider/node_modules/@noble/hashes/src/sha3.ts", "../../@web3auth/ethereum-provider/node_modules/ethereum-cryptography/utils.js", "../../@web3auth/ethereum-provider/node_modules/ethereum-cryptography/keccak.js", "../../crc-32/crc32.js", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/chains/goerli.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/chains/mainnet.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/chains/rinkeby.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/chains/ropsten.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/chains/sepolia.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/1153.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/1559.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/2315.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/2537.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/2565.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/2718.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/2929.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/2930.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3074.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3198.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3529.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3540.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3541.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3554.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3607.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3651.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3670.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3675.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3855.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/3860.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/4345.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/4399.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/4844.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/4895.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/eips/5133.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/eips/index.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/enums.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/chainstart.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/homestead.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/dao.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/tangerineWhistle.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/spuriousDragon.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/byzantium.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/constantinople.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/petersburg.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/istanbul.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/muirGlacier.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/berlin.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/london.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/shanghai.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/arrowGlacier.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/grayGlacier.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/mergeForkIdTransition.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/merge.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/hardforks/sharding.json", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/hardforks/index.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/utils.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/common.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/dist/types.js", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/common/src/index.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/gindex.js", "../../@web3auth/ethereum-provider/node_modules/@noble/hashes/src/_sha2.ts", "../../@web3auth/ethereum-provider/node_modules/@noble/hashes/src/sha256.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/as-sha256/src/hashObject.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/hasher/util.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/hasher/noble.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/hasher/types.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/hasher/index.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/node.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/zeroNode.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/subtree.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/packedNode.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/single.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/tree.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/util.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/multi.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/compactMulti.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/treeOffset.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/proof/index.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/persistent-merkle-tree/lib/index.js", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/util/zeros.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/util/merkleize.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/util/named.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/arrayBasic.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/value/bitArray.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/util/byteArray.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/util/proof/treePostProcessFromProofNode.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/abstract.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/composite.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/view/abstract.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/view/bitArray.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/viewDU/abstract.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/viewDU/bitArray.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/bitArray.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/bitList.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/bitVector.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/basic.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/boolean.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/byteArray.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/byteList.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/byteVector.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/view/container.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/viewDU/container.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/util/strings.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/container.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/branchNodeStruct.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/view/containerNodeStruct.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/viewDU/containerNodeStruct.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/containerNodeStruct.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/view/arrayBasic.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/view/listBasic.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/viewDU/arrayBasic.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/viewDU/listBasic.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/array.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/listBasic.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/arrayComposite.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/view/arrayComposite.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/view/listComposite.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/viewDU/arrayComposite.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/viewDU/listComposite.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/listComposite.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/none.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/uint.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/union.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/vectorBasic.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/type/vectorComposite.ts", "../../@web3auth/ethereum-provider/node_modules/@chainsafe/ssz/src/index.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/constants.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/types.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/util.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/baseTransaction.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip1559Transaction.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip2930Transaction.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/kzg/kzg.ts", "../../@web3auth/ethereum-provider/node_modules/ethereum-cryptography/sha256.js", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/utils/blobHelpers.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/eip4844Transaction.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/legacyTransaction.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/fromRpc.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/transactionFactory.ts", "../../@web3auth/ethereum-provider/node_modules/@ethereumjs/tx/src/index.ts", "../../ethjs-util/lib/index.js", "../../@web3auth/ethereum-provider/node_modules/@metamask/eth-sig-util/src/utils.ts", "../../@web3auth/ethereum-provider/node_modules/@metamask/eth-sig-util/src/personal-sign.ts", "../../@web3auth/ethereum-provider/node_modules/@metamask/eth-sig-util/node_modules/bn.js/lib/bn.js", "../../@web3auth/ethereum-provider/node_modules/@metamask/eth-sig-util/src/ethereumjs-abi-utils.ts", "../../@web3auth/ethereum-provider/node_modules/@metamask/eth-sig-util/src/sign-typed-data.ts", "../../tweetnacl/nacl-fast.js", "../../tweetnacl-util/nacl-util.js", "../../@web3auth/ethereum-provider/node_modules/@metamask/eth-sig-util/src/encryption.ts", "../../@web3auth/ethereum-provider/node_modules/@metamask/eth-sig-util/src/index.ts", "../../@web3auth/ethereum-provider/node_modules/@toruslabs/http-helpers/src/index.ts", "../../jsonschema/lib/helpers.js", "../../jsonschema/lib/attribute.js", "../../jsonschema/lib/scan.js", "../../jsonschema/lib/validator.js", "../../jsonschema/lib/index.js", "../../@web3auth/ethereum-provider/src/rpc/walletMidddleware.ts", "../../@web3auth/ethereum-provider/src/rpc/ethRpcMiddlewares.ts", "../../@web3auth/ethereum-provider/src/rpc/jrpcClient.ts", "../../@web3auth/ethereum-provider/src/providers/injectedProviders/walletConnectUtils.ts", "../../@web3auth/ethereum-provider/src/providers/injectedProviders/WalletConnectProvider.ts", "../../@web3auth/ethereum-provider/src/providers/converter.ts", "../../@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/utils.ts", "../../@web3auth/ethereum-provider/src/providers/privateKeyProviders/ethPrivatekeyUtils.ts", "../../@web3auth/ethereum-provider/src/providers/utils.ts", "../../@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/constants.ts", "../../@web3auth/ethereum-provider/src/providers/privateKeyProviders/TransactionFormatter/index.ts", "../../@web3auth/ethereum-provider/src/providers/privateKeyProviders/EthereumPrivateKeyProvider.ts"],
  "sourcesContent": [null, null, null, null, null, "export function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`Wrong positive integer: ${n}`);\n}\n\nexport function bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`Expected boolean, not ${b}`);\n}\n\nexport function bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!(b instanceof Uint8Array)) throw new TypeError('Expected Uint8Array');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new TypeError(`Expected Uint8Array of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nexport function hash(hash: Hash) {\n  if (typeof hash !== 'function' || typeof hash.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(hash.outputLen);\n  number(hash.blockLen);\n}\n\nexport function exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nexport function output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nconst assert = {\n  number,\n  bool,\n  bytes,\n  hash,\n  exists,\n  output,\n};\n\nexport default assert;\n", "const U32_MASK64 = BigInt(2 ** 32 - 1);\nconst _32n = BigInt(32);\n\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nexport function fromBig(n: bigint, le = false) {\n  if (le) return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n  return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\n\nexport function split(lst: bigint[], le = false) {\n  let Ah = new Uint32Array(lst.length);\n  let Al = new Uint32Array(lst.length);\n  for (let i = 0; i < lst.length; i++) {\n    const { h, l } = fromBig(lst[i], le);\n    [Ah[i], Al[i]] = [h, l];\n  }\n  return [Ah, Al];\n}\n\nexport const toBig = (h: number, l: number) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h: number, l: number, s: number) => h >>> s;\nconst shrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h: number, l: number, s: number) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h: number, l: number, s: number) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h: number, l: number, s: number) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h: number, l: number, s: number) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (h: number, l: number) => l;\nconst rotr32L = (h: number, l: number) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h: number, l: number, s: number) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h: number, l: number, s: number) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h: number, l: number, s: number) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h: number, l: number, s: number) => (h << (s - 32)) | (l >>> (64 - s));\n\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\n// Removing \"export\" has 5% perf penalty -_-\nexport function add(Ah: number, Al: number, Bh: number, Bl: number) {\n  const l = (Al >>> 0) + (Bl >>> 0);\n  return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al: number, Bl: number, Cl: number) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low: number, Ah: number, Bh: number, Ch: number) =>\n  (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al: number, Bl: number, Cl: number, Dl: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number) =>\n  (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al: number, Bl: number, Cl: number, Dl: number, El: number) =>\n  (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low: number, Ah: number, Bh: number, Ch: number, Dh: number, Eh: number) =>\n  (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n\n// prettier-ignore\nconst u64 = {\n  fromBig, split, toBig,\n  shrSH, shrSL,\n  rotrSH, rotrSL, rotrBH, rotrBL,\n  rotr32H, rotr32L,\n  rotlSH, rotlSL, rotlBH, rotlBL,\n  add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n", "declare const globalThis: Record<string, any> | undefined;\nexport const crypto =\n  typeof globalThis === 'object' && 'crypto' in globalThis ? globalThis.crypto : undefined;\n", "/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use `globalThis.crypto`, but node.js versions earlier than v19 don't\n// declare it in global scope. For node.js, package.json#exports field mapping\n// rewrites import from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated, we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n\n// big-endian hardware is rare. Just in case someone still decides to run hashes:\n// early-throw an error because we don't support BE yet.\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\nif (!isLE) throw new Error('Non little-endian hardware is not supported');\n\nconst hexes = Array.from({ length: 256 }, (v, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xde, 0xad, 0xbe, 0xef])) // 'deadbeef'\n */\nexport function bytesToHex(uint8a: Uint8Array): string {\n  // pre-caching improves the speed 6x\n  if (!(uint8a instanceof Uint8Array)) throw new Error('Uint8Array expected');\n  let hex = '';\n  for (let i = 0; i < uint8a.length; i++) {\n    hex += hexes[uint8a[i]];\n  }\n  return hex;\n}\n\n/**\n * @example hexToBytes('deadbeef') // Uint8Array.from([0xde, 0xad, 0xbe, 0xef])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') {\n    throw new TypeError('hexToBytes: expected string, got ' + typeof hex);\n  }\n  if (hex.length % 2) throw new Error('hexToBytes: received invalid unpadded hex');\n  const array = new Uint8Array(hex.length / 2);\n  for (let i = 0; i < array.length; i++) {\n    const j = i * 2;\n    const hexByte = hex.slice(j, j + 2);\n    const byte = Number.parseInt(hexByte, 16);\n    if (Number.isNaN(byte) || byte < 0) throw new Error('Invalid byte sequence');\n    array[i] = byte;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\ndeclare const TextDecoder: any;\n\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') {\n    throw new TypeError(`utf8ToBytes expected string, got ${typeof str}`);\n  }\n  return new TextEncoder().encode(str);\n}\n\nexport type Input = Uint8Array | string;\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  if (!(data instanceof Uint8Array))\n    throw new TypeError(`Expected input type is Uint8Array (got ${typeof data})`);\n  return data;\n}\n\n/**\n * Concats Uint8Array-s into one; like `Buffer.concat([buf1, buf2])`\n * @example concatBytes(buf1, buf2)\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  if (!arrays.every((a) => a instanceof Uint8Array)) throw new Error('Uint8Array list expected');\n  if (arrays.length === 1) return arrays[0];\n  const length = arrays.reduce((a, arr) => a + arr.length, 0);\n  const result = new Uint8Array(length);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const arr = arrays[i];\n    result.set(arr, pad);\n    pad += arr.length;\n  }\n  return result;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\n// Check if object doens't have custom constructor (like Uint8Array/Array)\nconst isPlainObject = (obj: any) =>\n  Object.prototype.toString.call(obj) === '[object Object]' && obj.constructor === Object;\n\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && (typeof opts !== 'object' || !isPlainObject(opts)))\n    throw new TypeError('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashConstructor: () => Hash<T>) {\n  const hashC = (message: Input): Uint8Array => hashConstructor().update(toBytes(message)).digest();\n  const tmp = hashConstructor();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashConstructor();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `globalThis.crypto` or node.js crypto module.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n", "import assert from './_assert.js';\nimport u64 from './_u64.js';\nimport {\n  Hash,\n  u32,\n  Input,\n  toBytes,\n  wrapConstructor,\n  wrapConstructorWithOpts,\n  HashXOF,\n} from './utils.js';\n\n// Various per round constants calculations\nconst [SHA3_PI, SHA3_ROTL, _SHA3_IOTA]: [number[], number[], bigint[]] = [[], [], []];\nconst _0n = BigInt(0);\nconst _1n = BigInt(1);\nconst _2n = BigInt(2);\nconst _7n = BigInt(7);\nconst _256n = BigInt(256);\nconst _0x71n = BigInt(0x71);\nfor (let round = 0, R = _1n, x = 1, y = 0; round < 24; round++) {\n  // Pi\n  [x, y] = [y, (2 * x + 3 * y) % 5];\n  SHA3_PI.push(2 * (5 * y + x));\n  // Rotational\n  SHA3_ROTL.push((((round + 1) * (round + 2)) / 2) % 64);\n  // Iota\n  let t = _0n;\n  for (let j = 0; j < 7; j++) {\n    R = ((R << _1n) ^ ((R >> _7n) * _0x71n)) % _256n;\n    if (R & _2n) t ^= _1n << ((_1n << BigInt(j)) - _1n);\n  }\n  _SHA3_IOTA.push(t);\n}\nconst [SHA3_IOTA_H, SHA3_IOTA_L] = u64.split(_SHA3_IOTA, true);\n\n// Left rotation (without 0, 32, 64)\nconst rotlH = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBH(h, l, s) : u64.rotlSH(h, l, s);\nconst rotlL = (h: number, l: number, s: number) =>\n  s > 32 ? u64.rotlBL(h, l, s) : u64.rotlSL(h, l, s);\n\n// Same as keccakf1600, but allows to skip some rounds\nexport function keccakP(s: Uint32Array, rounds: number = 24) {\n  const B = new Uint32Array(5 * 2);\n  // NOTE: all indices are x2 since we store state as u32 instead of u64 (bigints to slow in js)\n  for (let round = 24 - rounds; round < 24; round++) {\n    // Theta θ\n    for (let x = 0; x < 10; x++) B[x] = s[x] ^ s[x + 10] ^ s[x + 20] ^ s[x + 30] ^ s[x + 40];\n    for (let x = 0; x < 10; x += 2) {\n      const idx1 = (x + 8) % 10;\n      const idx0 = (x + 2) % 10;\n      const B0 = B[idx0];\n      const B1 = B[idx0 + 1];\n      const Th = rotlH(B0, B1, 1) ^ B[idx1];\n      const Tl = rotlL(B0, B1, 1) ^ B[idx1 + 1];\n      for (let y = 0; y < 50; y += 10) {\n        s[x + y] ^= Th;\n        s[x + y + 1] ^= Tl;\n      }\n    }\n    // Rho (ρ) and Pi (π)\n    let curH = s[2];\n    let curL = s[3];\n    for (let t = 0; t < 24; t++) {\n      const shift = SHA3_ROTL[t];\n      const Th = rotlH(curH, curL, shift);\n      const Tl = rotlL(curH, curL, shift);\n      const PI = SHA3_PI[t];\n      curH = s[PI];\n      curL = s[PI + 1];\n      s[PI] = Th;\n      s[PI + 1] = Tl;\n    }\n    // Chi (χ)\n    for (let y = 0; y < 50; y += 10) {\n      for (let x = 0; x < 10; x++) B[x] = s[y + x];\n      for (let x = 0; x < 10; x++) s[y + x] ^= ~B[(x + 2) % 10] & B[(x + 4) % 10];\n    }\n    // Iota (ι)\n    s[0] ^= SHA3_IOTA_H[round];\n    s[1] ^= SHA3_IOTA_L[round];\n  }\n  B.fill(0);\n}\n\nexport class Keccak extends Hash<Keccak> implements HashXOF<Keccak> {\n  protected state: Uint8Array;\n  protected pos = 0;\n  protected posOut = 0;\n  protected finished = false;\n  protected state32: Uint32Array;\n  protected destroyed = false;\n  // NOTE: we accept arguments in bytes instead of bits here.\n  constructor(\n    public blockLen: number,\n    public suffix: number,\n    public outputLen: number,\n    protected enableXOF = false,\n    protected rounds: number = 24\n  ) {\n    super();\n    // Can be passed from user as dkLen\n    assert.number(outputLen);\n    // 1600 = 5x5 matrix of 64bit.  1600 bits === 200 bytes\n    if (0 >= this.blockLen || this.blockLen >= 200)\n      throw new Error('Sha3 supports only keccak-f1600 function');\n    this.state = new Uint8Array(200);\n    this.state32 = u32(this.state);\n  }\n  protected keccak() {\n    keccakP(this.state32, this.rounds);\n    this.posOut = 0;\n    this.pos = 0;\n  }\n  update(data: Input) {\n    assert.exists(this);\n    const { blockLen, state } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      for (let i = 0; i < take; i++) state[this.pos++] ^= data[pos++];\n      if (this.pos === blockLen) this.keccak();\n    }\n    return this;\n  }\n  protected finish() {\n    if (this.finished) return;\n    this.finished = true;\n    const { state, suffix, pos, blockLen } = this;\n    // Do the padding\n    state[pos] ^= suffix;\n    if ((suffix & 0x80) !== 0 && pos === blockLen - 1) this.keccak();\n    state[blockLen - 1] ^= 0x80;\n    this.keccak();\n  }\n  protected writeInto(out: Uint8Array): Uint8Array {\n    assert.exists(this, false);\n    assert.bytes(out);\n    this.finish();\n    const bufferOut = this.state;\n    const { blockLen } = this;\n    for (let pos = 0, len = out.length; pos < len; ) {\n      if (this.posOut >= blockLen) this.keccak();\n      const take = Math.min(blockLen - this.posOut, len - pos);\n      out.set(bufferOut.subarray(this.posOut, this.posOut + take), pos);\n      this.posOut += take;\n      pos += take;\n    }\n    return out;\n  }\n  xofInto(out: Uint8Array): Uint8Array {\n    // Sha3/Keccak usage with XOF is probably mistake, only SHAKE instances can do XOF\n    if (!this.enableXOF) throw new Error('XOF is not possible for this instance');\n    return this.writeInto(out);\n  }\n  xof(bytes: number): Uint8Array {\n    assert.number(bytes);\n    return this.xofInto(new Uint8Array(bytes));\n  }\n  digestInto(out: Uint8Array) {\n    assert.output(out, this);\n    if (this.finished) throw new Error('digest() was already called');\n    this.writeInto(out);\n    this.destroy();\n    return out;\n  }\n  digest() {\n    return this.digestInto(new Uint8Array(this.outputLen));\n  }\n  destroy() {\n    this.destroyed = true;\n    this.state.fill(0);\n  }\n  _cloneInto(to?: Keccak): Keccak {\n    const { blockLen, suffix, outputLen, rounds, enableXOF } = this;\n    to ||= new Keccak(blockLen, suffix, outputLen, enableXOF, rounds);\n    to.state32.set(this.state32);\n    to.pos = this.pos;\n    to.posOut = this.posOut;\n    to.finished = this.finished;\n    to.rounds = rounds;\n    // Suffix can change in cSHAKE\n    to.suffix = suffix;\n    to.outputLen = outputLen;\n    to.enableXOF = enableXOF;\n    to.destroyed = this.destroyed;\n    return to;\n  }\n}\n\nconst gen = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructor(() => new Keccak(blockLen, suffix, outputLen));\n\nexport const sha3_224 = gen(0x06, 144, 224 / 8);\n/**\n * SHA3-256 hash function\n * @param message - that would be hashed\n */\nexport const sha3_256 = gen(0x06, 136, 256 / 8);\nexport const sha3_384 = gen(0x06, 104, 384 / 8);\nexport const sha3_512 = gen(0x06, 72, 512 / 8);\nexport const keccak_224 = gen(0x01, 144, 224 / 8);\n/**\n * keccak-256 hash function. Different from SHA3-256.\n * @param message - that would be hashed\n */\nexport const keccak_256 = gen(0x01, 136, 256 / 8);\nexport const keccak_384 = gen(0x01, 104, 384 / 8);\nexport const keccak_512 = gen(0x01, 72, 512 / 8);\n\nexport type ShakeOpts = { dkLen?: number };\n\nconst genShake = (suffix: number, blockLen: number, outputLen: number) =>\n  wrapConstructorWithOpts<Keccak, ShakeOpts>(\n    (opts: ShakeOpts = {}) =>\n      new Keccak(blockLen, suffix, opts.dkLen === undefined ? outputLen : opts.dkLen, true)\n  );\n\nexport const shake128 = genShake(0x1f, 168, 128 / 8);\nexport const shake256 = genShake(0x1f, 136, 256 / 8);\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.crypto = exports.wrapHash = exports.equalsBytes = exports.hexToBytes = exports.bytesToUtf8 = exports.utf8ToBytes = exports.createView = exports.concatBytes = exports.toHex = exports.bytesToHex = exports.assertBytes = exports.assertBool = void 0;\n// buf.toString('hex') -> toHex(buf)\nconst _assert_1 = __importDefault(require(\"@noble/hashes/_assert\"));\nconst utils_1 = require(\"@noble/hashes/utils\");\nconst assertBool = _assert_1.default.bool;\nexports.assertBool = assertBool;\nconst assertBytes = _assert_1.default.bytes;\nexports.assertBytes = assertBytes;\nvar utils_2 = require(\"@noble/hashes/utils\");\nObject.defineProperty(exports, \"bytesToHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"toHex\", { enumerable: true, get: function () { return utils_2.bytesToHex; } });\nObject.defineProperty(exports, \"concatBytes\", { enumerable: true, get: function () { return utils_2.concatBytes; } });\nObject.defineProperty(exports, \"createView\", { enumerable: true, get: function () { return utils_2.createView; } });\nObject.defineProperty(exports, \"utf8ToBytes\", { enumerable: true, get: function () { return utils_2.utf8ToBytes; } });\n// buf.toString('utf8') -> bytesToUtf8(buf)\nfunction bytesToUtf8(data) {\n    if (!(data instanceof Uint8Array)) {\n        throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof data}`);\n    }\n    return new TextDecoder().decode(data);\n}\nexports.bytesToUtf8 = bytesToUtf8;\nfunction hexToBytes(data) {\n    const sliced = data.startsWith(\"0x\") ? data.substring(2) : data;\n    return (0, utils_1.hexToBytes)(sliced);\n}\nexports.hexToBytes = hexToBytes;\n// buf.equals(buf2) -> equalsBytes(buf, buf2)\nfunction equalsBytes(a, b) {\n    if (a.length !== b.length) {\n        return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}\nexports.equalsBytes = equalsBytes;\n// Internal utils\nfunction wrapHash(hash) {\n    return (msg) => {\n        _assert_1.default.bytes(msg);\n        return hash(msg);\n    };\n}\nexports.wrapHash = wrapHash;\nexports.crypto = (() => {\n    const webCrypto = typeof self === \"object\" && \"crypto\" in self ? self.crypto : undefined;\n    const nodeRequire = typeof module !== \"undefined\" &&\n        typeof module.require === \"function\" &&\n        module.require.bind(module);\n    return {\n        node: nodeRequire && !webCrypto ? nodeRequire(\"crypto\") : undefined,\n        web: webCrypto\n    };\n})();\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.keccak512 = exports.keccak384 = exports.keccak256 = exports.keccak224 = void 0;\nconst sha3_1 = require(\"@noble/hashes/sha3\");\nconst utils_1 = require(\"./utils\");\nexports.keccak224 = (0, utils_1.wrapHash)(sha3_1.keccak_224);\nexports.keccak256 = (() => {\n    const k = (0, utils_1.wrapHash)(sha3_1.keccak_256);\n    k.create = sha3_1.keccak_256.create;\n    return k;\n})();\nexports.keccak384 = (0, utils_1.wrapHash)(sha3_1.keccak_384);\nexports.keccak512 = (0, utils_1.wrapHash)(sha3_1.keccak_512);\n", "/*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* vim: set ts=2: */\n/*exported CRC32 */\nvar CRC32;\n(function (factory) {\n\t/*jshint ignore:start */\n\t/*eslint-disable */\n\tif(typeof DO_NOT_EXPORT_CRC === 'undefined') {\n\t\tif('object' === typeof exports) {\n\t\t\tfactory(exports);\n\t\t} else if ('function' === typeof define && define.amd) {\n\t\t\tdefine(function () {\n\t\t\t\tvar module = {};\n\t\t\t\tfactory(module);\n\t\t\t\treturn module;\n\t\t\t});\n\t\t} else {\n\t\t\tfactory(CRC32 = {});\n\t\t}\n\t} else {\n\t\tfactory(CRC32 = {});\n\t}\n\t/*eslint-enable */\n\t/*jshint ignore:end */\n}(function(CRC32) {\nCRC32.version = '1.2.2';\n/*global Int32Array */\nfunction signed_crc_table() {\n\tvar c = 0, table = new Array(256);\n\n\tfor(var n =0; n != 256; ++n){\n\t\tc = n;\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\tc = ((c&1) ? (-306674912 ^ (c >>> 1)) : (c >>> 1));\n\t\ttable[n] = c;\n\t}\n\n\treturn typeof Int32Array !== 'undefined' ? new Int32Array(table) : table;\n}\n\nvar T0 = signed_crc_table();\nfunction slice_by_16_tables(T) {\n\tvar c = 0, v = 0, n = 0, table = typeof Int32Array !== 'undefined' ? new Int32Array(4096) : new Array(4096) ;\n\n\tfor(n = 0; n != 256; ++n) table[n] = T[n];\n\tfor(n = 0; n != 256; ++n) {\n\t\tv = T[n];\n\t\tfor(c = 256 + n; c < 4096; c += 256) v = table[c] = (v >>> 8) ^ T[v & 0xFF];\n\t}\n\tvar out = [];\n\tfor(n = 1; n != 16; ++n) out[n - 1] = typeof Int32Array !== 'undefined' ? table.subarray(n * 256, n * 256 + 256) : table.slice(n * 256, n * 256 + 256);\n\treturn out;\n}\nvar TT = slice_by_16_tables(T0);\nvar T1 = TT[0],  T2 = TT[1],  T3 = TT[2],  T4 = TT[3],  T5 = TT[4];\nvar T6 = TT[5],  T7 = TT[6],  T8 = TT[7],  T9 = TT[8],  Ta = TT[9];\nvar Tb = TT[10], Tc = TT[11], Td = TT[12], Te = TT[13], Tf = TT[14];\nfunction crc32_bstr(bstr, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = bstr.length; i < L;) C = (C>>>8) ^ T0[(C^bstr.charCodeAt(i++))&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_buf(B, seed) {\n\tvar C = seed ^ -1, L = B.length - 15, i = 0;\n\tfor(; i < L;) C =\n\t\tTf[B[i++] ^ (C & 255)] ^\n\t\tTe[B[i++] ^ ((C >> 8) & 255)] ^\n\t\tTd[B[i++] ^ ((C >> 16) & 255)] ^\n\t\tTc[B[i++] ^ (C >>> 24)] ^\n\t\tTb[B[i++]] ^ Ta[B[i++]] ^ T9[B[i++]] ^ T8[B[i++]] ^\n\t\tT7[B[i++]] ^ T6[B[i++]] ^ T5[B[i++]] ^ T4[B[i++]] ^\n\t\tT3[B[i++]] ^ T2[B[i++]] ^ T1[B[i++]] ^ T0[B[i++]];\n\tL += 15;\n\twhile(i < L) C = (C>>>8) ^ T0[(C^B[i++])&0xFF];\n\treturn ~C;\n}\n\nfunction crc32_str(str, seed) {\n\tvar C = seed ^ -1;\n\tfor(var i = 0, L = str.length, c = 0, d = 0; i < L;) {\n\t\tc = str.charCodeAt(i++);\n\t\tif(c < 0x80) {\n\t\t\tC = (C>>>8) ^ T0[(C^c)&0xFF];\n\t\t} else if(c < 0x800) {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (192|((c>>6)&31)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t} else if(c >= 0xD800 && c < 0xE000) {\n\t\t\tc = (c&1023)+64; d = str.charCodeAt(i++)&1023;\n\t\t\tC = (C>>>8) ^ T0[(C ^ (240|((c>>8)&7)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>2)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((d>>6)&15)|((c&3)<<4)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(d&63)))&0xFF];\n\t\t} else {\n\t\t\tC = (C>>>8) ^ T0[(C ^ (224|((c>>12)&15)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|((c>>6)&63)))&0xFF];\n\t\t\tC = (C>>>8) ^ T0[(C ^ (128|(c&63)))&0xFF];\n\t\t}\n\t}\n\treturn ~C;\n}\nCRC32.table = T0;\n// $FlowIgnore\nCRC32.bstr = crc32_bstr;\n// $FlowIgnore\nCRC32.buf = crc32_buf;\n// $FlowIgnore\nCRC32.str = crc32_str;\n}));\n", "{\n    \"name\": \"goerli\",\n    \"chainId\": 5,\n    \"networkId\": 5,\n    \"defaultHardfork\": \"merge\",\n    \"consensus\": {\n        \"type\": \"poa\",\n        \"algorithm\": \"clique\",\n        \"clique\": {\n            \"period\": 15,\n            \"epoch\": 30000\n        }\n    },\n    \"comment\": \"Cross-client PoA test network\",\n    \"url\": \"https://github.com/goerli/testnet\",\n    \"genesis\": {\n        \"timestamp\": \"0x5c51a607\",\n        \"gasLimit\": 10485760,\n        \"difficulty\": 1,\n        \"nonce\": \"0x0000000000000000\",\n        \"extraData\": \"0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 0,\n            \"forkHash\": \"0xa3f5ab08\"\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 1561651,\n            \"forkHash\": \"0xc25efa5c\"\n        },\n        {\n            \"name\": \"berlin\",\n            \"block\": 4460644,\n            \"forkHash\": \"0x757a1c47\"\n        },\n        {\n            \"name\": \"london\",\n            \"block\": 5062605,\n            \"forkHash\": \"0xb8c6299d\"\n        },\n        {\n            \"//_comment\": \"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818\",\n            \"name\": \"merge\",\n            \"ttd\": \"10790000\",\n            \"block\": 7382819,\n            \"forkHash\": \"0xb8c6299d\"\n        },\n        {\n            \"name\": \"mergeForkIdTransition\",\n            \"block\": null,\n            \"forkHash\": null\n        },\n        {\n            \"name\": \"shanghai\",\n            \"block\": null,\n            \"timestamp\": \"1678832736\",\n            \"forkHash\": \"0xf9843abf\"\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"51.141.78.53\",\n            \"port\": 30303,\n            \"id\": \"011f758e6552d105183b1761c5e2dea0111bc20fd5f6422bc7f91e0fabbec9a6595caf6239b37feb773dddd3f87240d99d859431891e4a642cf2a0a9e6cbb98a\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 1\"\n        },\n        {\n            \"ip\": \"13.93.54.137\",\n            \"port\": 30303,\n            \"id\": \"176b9417f511d05b6b2cf3e34b756cf0a7096b3094572a8f6ef4cdcb9d1f9d00683bf0f83347eebdf3b81c3521c2332086d9592802230bf528eaf606a1d9677b\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 2\"\n        },\n        {\n            \"ip\": \"94.237.54.114\",\n            \"port\": 30313,\n            \"id\": \"46add44b9f13965f7b9875ac6b85f016f341012d84f975377573800a863526f4da19ae2c620ec73d11591fa9510e992ecc03ad0751f53cc02f7c7ed6d55c7291\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 3\"\n        },\n        {\n            \"ip\": \"18.218.250.66\",\n            \"port\": 30313,\n            \"id\": \"b5948a2d3e9d486c4d75bf32713221c2bd6cf86463302339299bd227dc2e276cd5a1c7ca4f43a0e9122fe9af884efed563bd2a1fd28661f3b5f5ad7bf1de5949\",\n            \"location\": \"\",\n            \"comment\": \"Upstream bootnode 4\"\n        },\n        {\n            \"ip\": \"3.11.147.67\",\n            \"port\": 30303,\n            \"id\": \"a61215641fb8714a373c80edbfa0ea8878243193f57c96eeb44d0bc019ef295abd4e044fd619bfc4c59731a73fb79afe84e9ab6da0c743ceb479cbb6d263fa91\",\n            \"location\": \"\",\n            \"comment\": \"Ethereum Foundation bootnode\"\n        },\n        {\n            \"ip\": \"51.15.116.226\",\n            \"port\": 30303,\n            \"id\": \"a869b02cec167211fb4815a82941db2e7ed2936fd90e78619c53eb17753fcf0207463e3419c264e2a1dd8786de0df7e68cf99571ab8aeb7c4e51367ef186b1dd\",\n            \"location\": \"\",\n            \"comment\": \"Goerli Initiative bootnode\"\n        },\n        {\n            \"ip\": \"51.15.119.157\",\n            \"port\": 30303,\n            \"id\": \"807b37ee4816ecf407e9112224494b74dd5933625f655962d892f2f0f02d7fbbb3e2a94cf87a96609526f30c998fd71e93e2f53015c558ffc8b03eceaf30ee33\",\n            \"location\": \"\",\n            \"comment\": \"Goerli Initiative bootnode\"\n        },\n        {\n            \"ip\": \"51.15.119.157\",\n            \"port\": 40303,\n            \"id\": \"a59e33ccd2b3e52d578f1fbd70c6f9babda2650f0760d6ff3b37742fdcdfdb3defba5d56d315b40c46b70198c7621e63ffa3f987389c7118634b0fefbbdfa7fd\",\n            \"location\": \"\",\n            \"comment\": \"Goerli Initiative bootnode\"\n        }\n    ],\n    \"dnsNetworks\": [\n        \"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net\"\n    ]\n}\n", "{\n    \"name\": \"mainnet\",\n    \"chainId\": 1,\n    \"networkId\": 1,\n    \"defaultHardfork\": \"merge\",\n    \"consensus\": {\n        \"type\": \"pow\",\n        \"algorithm\": \"ethash\",\n        \"ethash\": {}\n    },\n    \"comment\": \"The Ethereum main chain\",\n    \"url\": \"https://ethstats.net/\",\n    \"genesis\": {\n        \"gasLimit\": 5000,\n        \"difficulty\": 17179869184,\n        \"nonce\": \"0x0000000000000042\",\n        \"extraData\": \"0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"forkHash\": \"0xfc64ec04\"\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 1150000,\n            \"forkHash\": \"0x97c2c34c\"\n        },\n        {\n            \"name\": \"dao\",\n            \"block\": 1920000,\n            \"forkHash\": \"0x91d1f948\"\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 2463000,\n            \"forkHash\": \"0x7a64da13\"\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 2675000,\n            \"forkHash\": \"0x3edd5b10\"\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 4370000,\n            \"forkHash\": \"0xa00bc324\"\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 7280000,\n            \"forkHash\": \"0x668db0af\"\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 7280000,\n            \"forkHash\": \"0x668db0af\"\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 9069000,\n            \"forkHash\": \"0x879d6e30\"\n        },\n        {\n            \"name\": \"muirGlacier\",\n            \"block\": 9200000,\n            \"forkHash\": \"0xe029e991\"\n        },\n        {\n            \"name\": \"berlin\",\n            \"block\": 12244000,\n            \"forkHash\": \"0x0eb440f6\"\n        },\n        {\n            \"name\": \"london\",\n            \"block\": 12965000,\n            \"forkHash\": \"0xb715077d\"\n        },\n        {\n            \"name\": \"arrowGlacier\",\n            \"block\": 13773000,\n            \"forkHash\": \"0x20c327fc\"\n        },\n        {\n            \"name\": \"grayGlacier\",\n            \"block\": 15050000,\n            \"forkHash\": \"0xf0afd0e3\"\n        },\n        {\n            \"//_comment\": \"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393\",\n            \"name\": \"merge\",\n            \"ttd\": \"58750000000000000000000\",\n            \"block\": 15537394,\n            \"forkHash\": \"0xf0afd0e3\"\n        },\n        {\n            \"name\": \"mergeForkIdTransition\",\n            \"block\": null,\n            \"forkHash\": null\n        },\n        {\n            \"name\": \"shanghai\",\n            \"block\": null,\n            \"timestamp\": \"1681338455\",\n            \"forkHash\": \"0xdce96c2d\"\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"18.138.108.67\",\n            \"port\": 30303,\n            \"id\": \"d860a01f9722d78051619d1e2351aba3f43f943f6f00718d1b9baa4101932a1f5011f16bb2b1bb35db20d6fe28fa0bf09636d26a87d31de9ec6203eeedb1f666\",\n            \"location\": \"ap-southeast-1-001\",\n            \"comment\": \"bootnode-aws-ap-southeast-1-001\"\n        },\n        {\n            \"ip\": \"3.209.45.79\",\n            \"port\": 30303,\n            \"id\": \"22a8232c3abc76a16ae9d6c3b164f98775fe226f0917b0ca871128a74a8e9630b458460865bab457221f1d448dd9791d24c4e5d88786180ac185df813a68d4de\",\n            \"location\": \"us-east-1-001\",\n            \"comment\": \"bootnode-aws-us-east-1-001\"\n        },\n        {\n            \"ip\": \"65.108.70.101\",\n            \"port\": 30303,\n            \"id\": \"2b252ab6a1d0f971d9722cb839a42cb81db019ba44c08754628ab4a823487071b5695317c8ccd085219c3a03af063495b2f1da8d18218da2d6a82981b45e6ffc\",\n            \"location\": \"eu-west-1-001\",\n            \"comment\": \"bootnode-hetzner-hel\"\n        },\n        {\n            \"ip\": \"157.90.35.166\",\n            \"port\": 30303,\n            \"id\": \"4aeb4ab6c14b23e2c4cfdce879c04b0748a20d8e9b59e25ded2a08143e265c6c25936e74cbc8e641e3312ca288673d91f2f93f8e277de3cfa444ecdaaf982052\",\n            \"location\": \"eu-central-1-001\",\n            \"comment\": \"bootnode-hetzner-fsn\"\n        }\n    ],\n    \"dnsNetworks\": [\n        \"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net\"\n    ]\n}\n", "{\n    \"name\": \"rinkeby\",\n    \"chainId\": 4,\n    \"networkId\": 4,\n    \"defaultHardfork\": \"london\",\n    \"consensus\": {\n        \"type\": \"poa\",\n        \"algorithm\": \"clique\",\n        \"clique\": {\n            \"period\": 15,\n            \"epoch\": 30000\n        }\n    },\n    \"comment\": \"PoA test network\",\n    \"url\": \"https://www.rinkeby.io\",\n    \"genesis\": {\n        \"timestamp\": \"0x58ee40ba\",\n        \"gasLimit\": 4700000,\n        \"difficulty\": 1,\n        \"nonce\": \"0x0000000000000000\",\n        \"extraData\": \"0x52657370656374206d7920617574686f7269746168207e452e436172746d616e42eb768f2244c8811c63729a21a3569731535f067ffc57839b00206d1ad20c69a1981b489f772031b279182d99e65703f0076e4812653aab85fca0f00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"forkHash\": \"0x3b8e0691\"\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 1,\n            \"forkHash\": \"0x60949295\"\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 2,\n            \"forkHash\": \"0x8bde40dd\"\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 3,\n            \"forkHash\": \"0xcb3a64bb\"\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 1035301,\n            \"forkHash\": \"0x8d748b57\"\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 3660663,\n            \"forkHash\": \"0xe49cab14\"\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 4321234,\n            \"forkHash\": \"0xafec6b27\"\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 5435345,\n            \"forkHash\": \"0xcbdb8838\"\n        },\n        {\n            \"name\": \"berlin\",\n            \"block\": 8290928,\n            \"forkHash\": \"0x6910c8bd\"\n        },\n        {\n            \"name\": \"london\",\n            \"block\": 8897988,\n            \"forkHash\": \"0x8e29f2f3\"\n        },\n        {\n            \"name\": \"merge\",\n            \"block\": null,\n            \"forkHash\": null\n        },\n        {\n            \"name\": \"shanghai\",\n            \"block\": null,\n            \"forkHash\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"52.169.42.101\",\n            \"port\": 30303,\n            \"id\": \"a24ac7c5484ef4ed0c5eb2d36620ba4e4aa13b8c84684e1b4aab0cebea2ae45cb4d375b77eab56516d34bfbd3c1a833fc51296ff084b770b94fb9028c4d25ccf\",\n            \"location\": \"\",\n            \"comment\": \"IE\"\n        },\n        {\n            \"ip\": \"52.3.158.184\",\n            \"port\": 30303,\n            \"id\": \"343149e4feefa15d882d9fe4ac7d88f885bd05ebb735e547f12e12080a9fa07c8014ca6fd7f373123488102fe5e34111f8509cf0b7de3f5b44339c9f25e87cb8\",\n            \"location\": \"\",\n            \"comment\": \"INFURA\"\n        },\n        {\n            \"ip\": \"159.89.28.211\",\n            \"port\": 30303,\n            \"id\": \"b6b28890b006743680c52e64e0d16db57f28124885595fa03a562be1d2bf0f3a1da297d56b13da25fb992888fd556d4c1a27b1f39d531bde7de1921c90061cc6\",\n            \"location\": \"\",\n            \"comment\": \"AKASHA\"\n        }\n    ],\n    \"dnsNetworks\": [\n        \"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.rinkeby.ethdisco.net\"\n    ]\n}\n", "{\n    \"name\": \"ropsten\",\n    \"chainId\": 3,\n    \"networkId\": 3,\n    \"defaultHardfork\": \"merge\",\n    \"consensus\": {\n        \"type\": \"pow\",\n        \"algorithm\": \"ethash\",\n        \"ethash\": {}\n    },\n    \"comment\": \"PoW test network\",\n    \"url\": \"https://github.com/ethereum/ropsten\",\n    \"genesis\": {\n        \"gasLimit\": 16777216,\n        \"difficulty\": 1048576,\n        \"nonce\": \"0x0000000000000042\",\n        \"extraData\": \"0x3535353535353535353535353535353535353535353535353535353535353535\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"forkHash\": \"0x30c7ddbc\"\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"forkHash\": \"0x30c7ddbc\"\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"forkHash\": \"0x30c7ddbc\"\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 10,\n            \"forkHash\": \"0x63760190\"\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 1700000,\n            \"forkHash\": \"0x3ea159c7\"\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 4230000,\n            \"forkHash\": \"0x97b544f3\"\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 4939394,\n            \"forkHash\": \"0xd6e2149b\"\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 6485846,\n            \"forkHash\": \"0x4bc66396\"\n        },\n        {\n            \"name\": \"muirGlacier\",\n            \"block\": 7117117,\n            \"forkHash\": \"0x6727ef90\"\n        },\n        {\n            \"name\": \"berlin\",\n            \"block\": 9812189,\n            \"forkHash\": \"0xa157d377\"\n        },\n        {\n            \"name\": \"london\",\n            \"block\": 10499401,\n            \"forkHash\": \"0x7119b6b3\"\n        },\n        {\n            \"//_comment\": \"The forkHash will remain same as mergeForkIdTransition is post merge\",\n            \"name\": \"merge\",\n            \"ttd\": \"50000000000000000\",\n            \"block\": null,\n            \"forkHash\": \"0x7119b6b3\"\n        },\n        {\n            \"name\": \"mergeForkIdTransition\",\n            \"block\": null,\n            \"forkHash\": null\n        },\n        {\n            \"name\": \"shanghai\",\n            \"block\": null,\n            \"forkHash\": null\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"52.176.7.10\",\n            \"port\": 30303,\n            \"id\": \"30b7ab30a01c124a6cceca36863ece12c4f5fa68e3ba9b0b51407ccc002eeed3b3102d20a88f1c1d3c3154e2449317b8ef95090e77b312d5cc39354f86d5d606\",\n            \"location\": \"\",\n            \"comment\": \"US-Azure geth\"\n        },\n        {\n            \"ip\": \"52.176.100.77\",\n            \"port\": 30303,\n            \"id\": \"865a63255b3bb68023b6bffd5095118fcc13e79dcf014fe4e47e065c350c7cc72af2e53eff895f11ba1bbb6a2b33271c1116ee870f266618eadfc2e78aa7349c\",\n            \"location\": \"\",\n            \"comment\": \"US-Azure parity\"\n        },\n        {\n            \"ip\": \"52.232.243.152\",\n            \"port\": 30303,\n            \"id\": \"6332792c4a00e3e4ee0926ed89e0d27ef985424d97b6a45bf0f23e51f0dcb5e66b875777506458aea7af6f9e4ffb69f43f3778ee73c81ed9d34c51c4b16b0b0f\",\n            \"location\": \"\",\n            \"comment\": \"Parity\"\n        },\n        {\n            \"ip\": \"192.81.208.223\",\n            \"port\": 30303,\n            \"id\": \"94c15d1b9e2fe7ce56e458b9a3b672ef11894ddedd0c6f247e0f1d3487f52b66208fb4aeb8179fce6e3a749ea93ed147c37976d67af557508d199d9594c35f09\",\n            \"location\": \"\",\n            \"comment\": \"@gpip\"\n        }\n    ],\n    \"dnsNetworks\": [\n        \"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.ropsten.ethdisco.net\"\n    ]\n}\n", "{\n    \"name\": \"sepolia\",\n    \"chainId\": 11155111,\n    \"networkId\": 11155111,\n    \"defaultHardfork\": \"merge\",\n    \"consensus\": {\n        \"type\": \"pow\",\n        \"algorithm\": \"ethash\",\n        \"ethash\": {}\n    },\n    \"comment\": \"PoW test network to replace Ropsten\",\n    \"url\": \"https://github.com/ethereum/go-ethereum/pull/23730\",\n    \"genesis\": {\n        \"timestamp\": \"0x6159af19\",\n        \"gasLimit\": 30000000,\n        \"difficulty\": 131072,\n        \"nonce\": \"0x0000000000000000\",\n        \"extraData\": \"0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521\"\n    },\n    \"hardforks\": [\n        {\n            \"name\": \"chainstart\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"homestead\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"tangerineWhistle\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"spuriousDragon\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"byzantium\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"constantinople\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"petersburg\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"istanbul\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"muirGlacier\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"berlin\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"london\",\n            \"block\": 0,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"//_comment\": \"The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408\",\n            \"name\": \"merge\",\n            \"ttd\": \"17000000000000000\",\n            \"block\": 1450409,\n            \"forkHash\": \"0xfe3366e7\"\n        },\n        {\n            \"name\": \"mergeForkIdTransition\",\n            \"block\": 1735371,\n            \"forkHash\": \"0xb96cbd13\"\n        },\n        {\n            \"name\": \"shanghai\",\n            \"block\": null,\n            \"timestamp\": \"1677557088\",\n            \"forkHash\": \"0xf7f9bc08\"\n        }\n    ],\n    \"bootstrapNodes\": [\n        {\n            \"ip\": \"18.168.182.86\",\n            \"port\": 30303,\n            \"id\": \"9246d00bc8fd1742e5ad2428b80fc4dc45d786283e05ef6edbd9002cbc335d40998444732fbe921cb88e1d2c73d1b1de53bae6a2237996e9bfe14f871baf7066\",\n            \"location\": \"\",\n            \"comment\": \"geth\"\n        },\n        {\n            \"ip\": \"52.14.151.177\",\n            \"port\": 30303,\n            \"id\": \"ec66ddcf1a974950bd4c782789a7e04f8aa7110a72569b6e65fcd51e937e74eed303b1ea734e4d19cfaec9fbff9b6ee65bf31dcb50ba79acce9dd63a6aca61c7\",\n            \"location\": \"\",\n            \"comment\": \"besu\"\n        },\n        {\n            \"ip\": \"165.22.196.173\",\n            \"port\": 30303,\n            \"id\": \"ce970ad2e9daa9e14593de84a8b49da3d54ccfdf83cbc4fe519cb8b36b5918ed4eab087dedd4a62479b8d50756b492d5f762367c8d20329a7854ec01547568a6\",\n            \"location\": \"\",\n            \"comment\": \"EF\"\n        },\n        {\n            \"ip\": \"65.108.95.67\",\n            \"port\": 30303,\n            \"id\": \"075503b13ed736244896efcde2a992ec0b451357d46cb7a8132c0384721742597fc8f0d91bbb40bb52e7d6e66728d36a1fda09176294e4a30cfac55dcce26bc6\",\n            \"location\": \"\",\n            \"comment\": \"lodestar\"\n        }\n    ],\n    \"dnsNetworks\": [\n        \"enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net\"\n    ]\n}\n", "{\n    \"name\": \"EIP-1153\",\n    \"number\": 1153,\n    \"comment\": \"Transient Storage\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-1153\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"chainstart\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"tstore\": {\n            \"v\": 100,\n            \"d\": \"Base fee of the TSTORE opcode\"\n        },\n        \"tload\": {\n            \"v\": 100,\n            \"d\": \"Base fee of the TLOAD opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-1559\",\n    \"number\": 1559,\n    \"comment\": \"Fee market change for ETH 1.0 chain\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-1559\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"berlin\",\n    \"requiredEIPs\": [2930],\n    \"gasConfig\": {\n        \"baseFeeMaxChangeDenominator\": {\n            \"v\": 8,\n            \"d\": \"Maximum base fee change denominator\"\n        },\n        \"elasticityMultiplier\": {\n            \"v\": 2,\n            \"d\": \"Maximum block gas target elasticity\"\n        },\n        \"initialBaseFee\": {\n            \"v\": 1000000000,\n            \"d\": \"Initial base fee on first EIP1559 block\"\n        }\n    },\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-2315\",\n    \"number\": 2315,\n    \"comment\": \"Simple subroutines for the EVM\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2315\",\n    \"status\": \"Draft\",\n    \"minimumHardfork\": \"istanbul\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"beginsub\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the BEGINSUB opcode\"\n        },\n        \"returnsub\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the RETURNSUB opcode\"\n        },\n        \"jumpsub\": {\n            \"v\": 10,\n            \"d\": \"Base fee of the JUMPSUB opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-2537\",\n    \"number\": 2537,\n    \"comment\": \"BLS12-381 precompiles\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2537\",\n    \"status\": \"Draft\",\n    \"minimumHardfork\": \"chainstart\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"Bls12381G1AddGas\": {\n            \"v\": 600,\n            \"d\": \"Gas cost of a single BLS12-381 G1 addition precompile-call\"\n        },\n        \"Bls12381G1MulGas\": {\n            \"v\": 12000,\n            \"d\": \"Gas cost of a single BLS12-381 G1 multiplication precompile-call\"\n        },\n        \"Bls12381G2AddGas\": {\n            \"v\": 4500,\n            \"d\": \"Gas cost of a single BLS12-381 G2 addition precompile-call\"\n        },\n        \"Bls12381G2MulGas\": {\n            \"v\": 55000,\n            \"d\": \"Gas cost of a single BLS12-381 G2 multiplication precompile-call\"\n        },\n        \"Bls12381PairingBaseGas\": {\n            \"v\": 115000,\n            \"d\": \"Base gas cost of BLS12-381 pairing check\"\n        },\n        \"Bls12381PairingPerPairGas\": {\n            \"v\": 23000,\n            \"d\": \"Per-pair gas cost of BLS12-381 pairing check\"\n        },\n        \"Bls12381MapG1Gas\": {\n            \"v\": 5500,\n            \"d\": \"Gas cost of BLS12-381 map field element to G1\"\n        },\n        \"Bls12381MapG2Gas\": {\n            \"v\": 110000,\n            \"d\": \"Gas cost of BLS12-381 map field element to G2\"\n        },\n        \"Bls12381MultiExpGasDiscount\": {\n            \"v\": [\n                [1, 1200],\n                [2, 888],\n                [3, 764],\n                [4, 641],\n                [5, 594],\n                [6, 547],\n                [7, 500],\n                [8, 453],\n                [9, 438],\n                [10, 423],\n                [11, 408],\n                [12, 394],\n                [13, 379],\n                [14, 364],\n                [15, 349],\n                [16, 334],\n                [17, 330],\n                [18, 326],\n                [19, 322],\n                [20, 318],\n                [21, 314],\n                [22, 310],\n                [23, 306],\n                [24, 302],\n                [25, 298],\n                [26, 294],\n                [27, 289],\n                [28, 285],\n                [29, 281],\n                [30, 277],\n                [31, 273],\n                [32, 269],\n                [33, 268],\n                [34, 266],\n                [35, 265],\n                [36, 263],\n                [37, 262],\n                [38, 260],\n                [39, 259],\n                [40, 257],\n                [41, 256],\n                [42, 254],\n                [43, 253],\n                [44, 251],\n                [45, 250],\n                [46, 248],\n                [47, 247],\n                [48, 245],\n                [49, 244],\n                [50, 242],\n                [51, 241],\n                [52, 239],\n                [53, 238],\n                [54, 236],\n                [55, 235],\n                [56, 233],\n                [57, 232],\n                [58, 231],\n                [59, 229],\n                [60, 228],\n                [61, 226],\n                [62, 225],\n                [63, 223],\n                [64, 222],\n                [65, 221],\n                [66, 220],\n                [67, 219],\n                [68, 219],\n                [69, 218],\n                [70, 217],\n                [71, 216],\n                [72, 216],\n                [73, 215],\n                [74, 214],\n                [75, 213],\n                [76, 213],\n                [77, 212],\n                [78, 211],\n                [79, 211],\n                [80, 210],\n                [81, 209],\n                [82, 208],\n                [83, 208],\n                [84, 207],\n                [85, 206],\n                [86, 205],\n                [87, 205],\n                [88, 204],\n                [89, 203],\n                [90, 202],\n                [91, 202],\n                [92, 201],\n                [93, 200],\n                [94, 199],\n                [95, 199],\n                [96, 198],\n                [97, 197],\n                [98, 196],\n                [99, 196],\n                [100, 195],\n                [101, 194],\n                [102, 193],\n                [103, 193],\n                [104, 192],\n                [105, 191],\n                [106, 191],\n                [107, 190],\n                [108, 189],\n                [109, 188],\n                [110, 188],\n                [111, 187],\n                [112, 186],\n                [113, 185],\n                [114, 185],\n                [115, 184],\n                [116, 183],\n                [117, 182],\n                [118, 182],\n                [119, 181],\n                [120, 180],\n                [121, 179],\n                [122, 179],\n                [123, 178],\n                [124, 177],\n                [125, 176],\n                [126, 176],\n                [127, 175],\n                [128, 174]\n            ],\n            \"d\": \"Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-2565\",\n    \"number\": 2565,\n    \"comment\": \"ModExp gas cost\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2565\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"byzantium\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"modexpGquaddivisor\": {\n            \"v\": 3,\n            \"d\": \"Gquaddivisor from modexp precompile for gas calculation\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-2718\",\n    \"comment\": \"Typed Transaction Envelope\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2718\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"chainstart\",\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-2929\",\n    \"comment\": \"Gas cost increases for state access opcodes\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2929\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"chainstart\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"coldsload\": {\n            \"v\": 2100,\n            \"d\": \"Gas cost of the first read of storage from a given location (per transaction)\"\n        },\n        \"coldaccountaccess\": {\n            \"v\": 2600,\n            \"d\": \"Gas cost of the first read of a given address (per transaction)\"\n        },\n        \"warmstorageread\": {\n            \"v\": 100,\n            \"d\": \"Gas cost of reading storage locations which have already loaded 'cold'\"\n        },\n        \"sstoreCleanGasEIP2200\": {\n            \"v\": 2900,\n            \"d\": \"Once per SSTORE operation from clean non-zero to something else\"\n        },\n        \"sstoreNoopGasEIP2200\": {\n            \"v\": 100,\n            \"d\": \"Once per SSTORE operation if the value doesn't change\"\n        },\n        \"sstoreDirtyGasEIP2200\": {\n            \"v\": 100,\n            \"d\": \"Once per SSTORE operation if a dirty value is changed\"\n        },\n        \"sstoreInitRefundEIP2200\": {\n            \"v\": 19900,\n            \"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n        },\n        \"sstoreCleanRefundEIP2200\": {\n            \"v\": 4900,\n            \"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n        },\n        \"call\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the CALL opcode\"\n        },\n        \"callcode\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the CALLCODE opcode\"\n        },\n        \"delegatecall\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the DELEGATECALL opcode\"\n        },\n        \"staticcall\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the STATICCALL opcode\"\n        },\n        \"balance\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the BALANCE opcode\"\n        },\n        \"extcodesize\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the EXTCODESIZE opcode\"\n        },\n        \"extcodecopy\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the EXTCODECOPY opcode\"\n        },\n        \"extcodehash\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the EXTCODEHASH opcode\"\n        },\n        \"sload\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the SLOAD opcode\"\n        },\n        \"sstore\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the SSTORE opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-2930\",\n    \"comment\": \"Optional access lists\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2930\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"istanbul\",\n    \"requiredEIPs\": [2718, 2929],\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"accessListStorageKeyCost\": {\n            \"v\": 1900,\n            \"d\": \"Gas cost per storage key in an Access List transaction\"\n        },\n        \"accessListAddressCost\": {\n            \"v\": 2400,\n            \"d\": \"Gas cost per storage key in an Access List transaction\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3074\",\n    \"number\": 3074,\n    \"comment\": \"AUTH and AUTHCALL opcodes\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3074\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"london\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"auth\": {\n            \"v\": 3100,\n            \"d\": \"Gas cost of the AUTH opcode\"\n        },\n        \"authcall\": {\n            \"v\": 0,\n            \"d\": \"Gas cost of the AUTHCALL opcode\"\n        },\n        \"authcallValueTransfer\": {\n            \"v\": 6700,\n            \"d\": \"Paid for CALL when the value transfer is non-zero\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3198\",\n    \"number\": 3198,\n    \"comment\": \"BASEFEE opcode\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3198\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"london\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"basefee\": {\n            \"v\": 2,\n            \"d\": \"Gas cost of the BASEFEE opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3529\",\n    \"comment\": \"Reduction in refunds\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3529\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"berlin\",\n    \"requiredEIPs\": [2929],\n    \"gasConfig\": {\n        \"maxRefundQuotient\": {\n            \"v\": 5,\n            \"d\": \"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)\"\n        }\n    },\n    \"gasPrices\": {\n        \"selfdestructRefund\": {\n            \"v\": 0,\n            \"d\": \"Refunded following a selfdestruct operation\"\n        },\n        \"sstoreClearRefundEIP2200\": {\n            \"v\": 4800,\n            \"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3540\",\n    \"number\": 3540,\n    \"comment\": \"EVM Object Format (EOF) v1\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3540\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"london\",\n    \"requiredEIPs\": [3541],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3541\",\n    \"comment\": \"Reject new contracts starting with the 0xEF byte\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3541\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"berlin\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3554\",\n    \"comment\": \"Reduction in refunds\",\n    \"url\": \"Difficulty Bomb Delay to December 1st 2021\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"muirGlacier\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {\n        \"difficultyBombDelay\": {\n            \"v\": 9500000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}\n", "{\n    \"name\": \"EIP-3607\",\n    \"number\": 3607,\n    \"comment\": \"Reject transactions from senders with deployed code\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3607\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"chainstart\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3651\",\n    \"number\": 3198,\n    \"comment\": \"Warm COINBASE\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3651\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"london\",\n    \"requiredEIPs\": [2929],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3670\",\n    \"number\": 3670,\n    \"comment\": \"EOF - Code Validation\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3670\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"london\",\n    \"requiredEIPs\": [3540],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3675\",\n    \"number\": 3675,\n    \"comment\": \"Upgrade consensus to Proof-of-Stake\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3675\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"london\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3855\",\n    \"number\": 3855,\n    \"comment\": \"PUSH0 instruction\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3855\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"chainstart\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"push0\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the PUSH0 opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-3860\",\n    \"number\": 3860,\n    \"comment\": \"Limit and meter initcode\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3860\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"spuriousDragon\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"initCodeWordCost\": {\n            \"v\": 2,\n            \"d\": \"Gas to pay for each word (32 bytes) of initcode when creating a contract\"\n        }\n    },\n    \"vm\": {\n        \"maxInitCodeSize\": {\n            \"v\": 49152,\n            \"d\": \"Maximum length of initialization code when creating a contract\"\n        }\n    },\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-4345\",\n    \"number\": 4345,\n    \"comment\": \"Difficulty Bomb Delay to June 2022\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-4345\",\n    \"status\": \"Final\",\n    \"minimumHardfork\": \"london\",\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {\n        \"difficultyBombDelay\": {\n            \"v\": 10700000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}\n", "{\n    \"name\": \"EIP-4399\",\n    \"number\": 4399,\n    \"comment\": \"Supplant DIFFICULTY opcode with PREVRANDAO\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-4399\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"london\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-4844\",\n    \"number\": 4844,\n    \"comment\": \"Shard Blob Transactions\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-4844\",\n    \"status\": \"Draft\",\n    \"minimumHardfork\": \"merge\",\n    \"requiredEIPs\": [1559, 2718, 2930, 4895],\n    \"gasConfig\": {\n        \"dataGasPerBlob\": {\n            \"v\": 131072,\n            \"d\": \"The base fee for data gas per blob\"\n        },\n        \"targetDataGasPerBlock\": {\n            \"v\": 262144,\n            \"d\": \"The target data gas consumed per block\"\n        },\n        \"maxDataGasPerBlock\": {\n            \"v\": 524288,\n            \"d\": \"The max data gas allowable per block\"\n        },\n        \"dataGasPriceUpdateFraction\": {\n            \"v\": 2225652,\n            \"d\": \"The denominator used in the exponential when calculating a data gas price\"\n        }\n    },\n    \"gasPrices\": {\n        \"simpleGasPerBlob\": {\n            \"v\": 12000,\n            \"d\": \"The basic gas fee for each blob\"\n        },\n        \"minDataGasPrice\": {\n            \"v\": 1,\n            \"d\": \"The minimum fee per data gas\"\n        },\n        \"kzgPointEvaluationGasPrecompilePrice\": {\n            \"v\": 50000,\n            \"d\": \"The fee associated with the point evaluation precompile\"\n        },\n        \"datahash\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the DATAHASH opcode\"\n        }\n    },\n    \"sharding\": {\n        \"blobCommitmentVersionKzg\": {\n            \"v\": 1,\n            \"d\": \"The number indicated a versioned hash is a KZG commitment\"\n        },\n        \"fieldElementsPerBlob\": {\n            \"v\": 4096,\n            \"d\": \"The number of field elements allowed per blob\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-4895\",\n    \"number\": 4895,\n    \"comment\": \"Beacon chain push withdrawals as operations\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-4895\",\n    \"status\": \"Review\",\n    \"minimumHardfork\": \"merge\",\n    \"requiredEIPs\": [],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"EIP-5133\",\n    \"number\": 5133,\n    \"comment\": \"Delaying Difficulty Bomb to mid-September 2022\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-5133\",\n    \"status\": \"Draft\",\n    \"minimumHardfork\": \"grayGlacier\",\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {\n        \"difficultyBombDelay\": {\n            \"v\": 11400000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}\n", "export const EIPs: { [key: number]: any } = {\n  1153: require('./1153.json'),\n  1559: require('./1559.json'),\n  2315: require('./2315.json'),\n  2537: require('./2537.json'),\n  2565: require('./2565.json'),\n  2718: require('./2718.json'),\n  2929: require('./2929.json'),\n  2930: require('./2930.json'),\n  3074: require('./3074.json'),\n  3198: require('./3198.json'),\n  3529: require('./3529.json'),\n  3540: require('./3540.json'),\n  3541: require('./3541.json'),\n  3554: require('./3554.json'),\n  3607: require('./3607.json'),\n  3651: require('./3651.json'),\n  3670: require('./3670.json'),\n  3675: require('./3675.json'),\n  3855: require('./3855.json'),\n  3860: require('./3860.json'),\n  4345: require('./4345.json'),\n  4399: require('./4399.json'),\n  4844: require('./4844.json'),\n  4895: require('./4895.json'),\n  5133: require('./5133.json'),\n}\n", "export enum Chain {\n  Mainnet = 1,\n  Ropsten = 3,\n  Rinkeby = 4,\n  Goerli = 5,\n  Sepolia = 11155111,\n}\n\nexport enum Hardfork {\n  Chainstart = 'chainstart',\n  Homestead = 'homestead',\n  Dao = 'dao',\n  TangerineWhistle = 'tangerineWhistle',\n  SpuriousDragon = 'spuriousDragon',\n  Byzantium = 'byzantium',\n  Constantinople = 'constantinople',\n  Petersburg = 'petersburg',\n  Istanbul = 'istanbul',\n  MuirGlacier = 'muirGlacier',\n  Berlin = 'berlin',\n  London = 'london',\n  ArrowGlacier = 'arrowGlacier',\n  GrayGlacier = 'grayGlacier',\n  MergeForkIdTransition = 'mergeForkIdTransition',\n  Merge = 'merge',\n  Shanghai = 'shanghai',\n  ShardingForkDev = 'shardingFork',\n}\n\nexport enum ConsensusType {\n  ProofOfStake = 'pos',\n  ProofOfWork = 'pow',\n  ProofOfAuthority = 'poa',\n}\n\nexport enum ConsensusAlgorithm {\n  Ethash = 'ethash',\n  Clique = 'clique',\n  Casper = 'casper',\n}\n\nexport enum CustomChain {\n  /**\n   * Polygon (Matic) Mainnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMainnet = 'polygon-mainnet',\n\n  /**\n   * Polygon (Matic) Mumbai Testnet\n   *\n   * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n   */\n  PolygonMumbai = 'polygon-mumbai',\n\n  /**\n   * Arbitrum Rinkeby Testnet\n   *\n   * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n   */\n  ArbitrumRinkebyTestnet = 'arbitrum-rinkeby-testnet',\n\n  /**\n   * Arbitrum One - mainnet for Arbitrum roll-up\n   *\n   * - [Documentation](https://developer.offchainlabs.com/public-chains)\n   */\n  ArbitrumOne = 'arbitrum-one',\n\n  /**\n   * xDai EVM sidechain with a native stable token\n   *\n   * - [Documentation](https://www.xdaichain.com/)\n   */\n  xDaiChain = 'x-dai-chain',\n\n  /**\n   * Optimistic Kovan - testnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticKovan = 'optimistic-kovan',\n\n  /**\n   * Optimistic Ethereum - mainnet for Optimism roll-up\n   *\n   * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n   */\n  OptimisticEthereum = 'optimistic-ethereum',\n}\n", "{\n    \"name\": \"chainstart\",\n    \"comment\": \"Start of the Ethereum main chain\",\n    \"url\": \"\",\n    \"status\": \"\",\n    \"gasConfig\": {\n        \"minGasLimit\": {\n            \"v\": 5000,\n            \"d\": \"Minimum the gas limit may ever be\"\n        },\n        \"gasLimitBoundDivisor\": {\n            \"v\": 1024,\n            \"d\": \"The bound divisor of the gas limit, used in update calculations\"\n        },\n        \"maxRefundQuotient\": {\n            \"v\": 2,\n            \"d\": \"Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)\"\n        }\n    },\n    \"gasPrices\": {\n        \"base\": {\n            \"v\": 2,\n            \"d\": \"Gas base cost, used e.g. for ChainID opcode (Istanbul)\"\n        },\n        \"tierStep\": {\n            \"v\": [0, 2, 3, 5, 8, 10, 20],\n            \"d\": \"Once per operation, for a selection of them\"\n        },\n        \"exp\": {\n            \"v\": 10,\n            \"d\": \"Base fee of the EXP opcode\"\n        },\n        \"expByte\": {\n            \"v\": 10,\n            \"d\": \"Times ceil(log256(exponent)) for the EXP instruction\"\n        },\n        \"sha3\": {\n            \"v\": 30,\n            \"d\": \"Base fee of the SHA3 opcode\"\n        },\n        \"sha3Word\": {\n            \"v\": 6,\n            \"d\": \"Once per word of the SHA3 operation's data\"\n        },\n        \"sload\": {\n            \"v\": 50,\n            \"d\": \"Base fee of the SLOAD opcode\"\n        },\n        \"sstoreSet\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation if the zeroness changes from zero\"\n        },\n        \"sstoreReset\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation if the zeroness does not change from zero\"\n        },\n        \"sstoreRefund\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation if the zeroness changes to zero\"\n        },\n        \"jumpdest\": {\n            \"v\": 1,\n            \"d\": \"Base fee of the JUMPDEST opcode\"\n        },\n        \"log\": {\n            \"v\": 375,\n            \"d\": \"Base fee of the LOG opcode\"\n        },\n        \"logData\": {\n            \"v\": 8,\n            \"d\": \"Per byte in a LOG* operation's data\"\n        },\n        \"logTopic\": {\n            \"v\": 375,\n            \"d\": \"Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas\"\n        },\n        \"create\": {\n            \"v\": 32000,\n            \"d\": \"Base fee of the CREATE opcode\"\n        },\n        \"call\": {\n            \"v\": 40,\n            \"d\": \"Base fee of the CALL opcode\"\n        },\n        \"callStipend\": {\n            \"v\": 2300,\n            \"d\": \"Free gas given at beginning of call\"\n        },\n        \"callValueTransfer\": {\n            \"v\": 9000,\n            \"d\": \"Paid for CALL when the value transfor is non-zero\"\n        },\n        \"callNewAccount\": {\n            \"v\": 25000,\n            \"d\": \"Paid for CALL when the destination address didn't exist prior\"\n        },\n        \"selfdestructRefund\": {\n            \"v\": 24000,\n            \"d\": \"Refunded following a selfdestruct operation\"\n        },\n        \"memory\": {\n            \"v\": 3,\n            \"d\": \"Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL\"\n        },\n        \"quadCoeffDiv\": {\n            \"v\": 512,\n            \"d\": \"Divisor for the quadratic particle of the memory cost equation\"\n        },\n        \"createData\": {\n            \"v\": 200,\n            \"d\": \"\"\n        },\n        \"tx\": {\n            \"v\": 21000,\n            \"d\": \"Per transaction. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"txCreation\": {\n            \"v\": 32000,\n            \"d\": \"The cost of creating a contract via tx\"\n        },\n        \"txDataZero\": {\n            \"v\": 4,\n            \"d\": \"Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"txDataNonZero\": {\n            \"v\": 68,\n            \"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"copy\": {\n            \"v\": 3,\n            \"d\": \"Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added\"\n        },\n        \"ecRecover\": {\n            \"v\": 3000,\n            \"d\": \"\"\n        },\n        \"sha256\": {\n            \"v\": 60,\n            \"d\": \"\"\n        },\n        \"sha256Word\": {\n            \"v\": 12,\n            \"d\": \"\"\n        },\n        \"ripemd160\": {\n            \"v\": 600,\n            \"d\": \"\"\n        },\n        \"ripemd160Word\": {\n            \"v\": 120,\n            \"d\": \"\"\n        },\n        \"identity\": {\n            \"v\": 15,\n            \"d\": \"\"\n        },\n        \"identityWord\": {\n            \"v\": 3,\n            \"d\": \"\"\n        },\n        \"stop\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the STOP opcode\"\n        },\n        \"add\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the ADD opcode\"\n        },\n        \"mul\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the MUL opcode\"\n        },\n        \"sub\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SUB opcode\"\n        },\n        \"div\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the DIV opcode\"\n        },\n        \"sdiv\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the SDIV opcode\"\n        },\n        \"mod\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the MOD opcode\"\n        },\n        \"smod\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the SMOD opcode\"\n        },\n        \"addmod\": {\n            \"v\": 8,\n            \"d\": \"Base fee of the ADDMOD opcode\"\n        },\n        \"mulmod\": {\n            \"v\": 8,\n            \"d\": \"Base fee of the MULMOD opcode\"\n        },\n        \"signextend\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the SIGNEXTEND opcode\"\n        },\n        \"lt\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the LT opcode\"\n        },\n        \"gt\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the GT opcode\"\n        },\n        \"slt\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SLT opcode\"\n        },\n        \"sgt\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SGT opcode\"\n        },\n        \"eq\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the EQ opcode\"\n        },\n        \"iszero\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the ISZERO opcode\"\n        },\n        \"and\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the AND opcode\"\n        },\n        \"or\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the OR opcode\"\n        },\n        \"xor\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the XOR opcode\"\n        },\n        \"not\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the NOT opcode\"\n        },\n        \"byte\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the BYTE opcode\"\n        },\n        \"address\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the ADDRESS opcode\"\n        },\n        \"balance\": {\n            \"v\": 20,\n            \"d\": \"Base fee of the BALANCE opcode\"\n        },\n        \"origin\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the ORIGIN opcode\"\n        },\n        \"caller\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the CALLER opcode\"\n        },\n        \"callvalue\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the CALLVALUE opcode\"\n        },\n        \"calldataload\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the CALLDATALOAD opcode\"\n        },\n        \"calldatasize\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the CALLDATASIZE opcode\"\n        },\n        \"calldatacopy\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the CALLDATACOPY opcode\"\n        },\n        \"codesize\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the CODESIZE opcode\"\n        },\n        \"codecopy\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the CODECOPY opcode\"\n        },\n        \"gasprice\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the GASPRICE opcode\"\n        },\n        \"extcodesize\": {\n            \"v\": 20,\n            \"d\": \"Base fee of the EXTCODESIZE opcode\"\n        },\n        \"extcodecopy\": {\n            \"v\": 20,\n            \"d\": \"Base fee of the EXTCODECOPY opcode\"\n        },\n        \"blockhash\": {\n            \"v\": 20,\n            \"d\": \"Base fee of the BLOCKHASH opcode\"\n        },\n        \"coinbase\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the COINBASE opcode\"\n        },\n        \"timestamp\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the TIMESTAMP opcode\"\n        },\n        \"number\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the NUMBER opcode\"\n        },\n        \"difficulty\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the DIFFICULTY opcode\"\n        },\n        \"gaslimit\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the GASLIMIT opcode\"\n        },\n        \"pop\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the POP opcode\"\n        },\n        \"mload\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the MLOAD opcode\"\n        },\n        \"mstore\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the MSTORE opcode\"\n        },\n        \"mstore8\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the MSTORE8 opcode\"\n        },\n        \"sstore\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the SSTORE opcode\"\n        },\n        \"jump\": {\n            \"v\": 8,\n            \"d\": \"Base fee of the JUMP opcode\"\n        },\n        \"jumpi\": {\n            \"v\": 10,\n            \"d\": \"Base fee of the JUMPI opcode\"\n        },\n        \"pc\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the PC opcode\"\n        },\n        \"msize\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the MSIZE opcode\"\n        },\n        \"gas\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the GAS opcode\"\n        },\n        \"push\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the PUSH opcode\"\n        },\n        \"dup\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the DUP opcode\"\n        },\n        \"swap\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SWAP opcode\"\n        },\n        \"callcode\": {\n            \"v\": 40,\n            \"d\": \"Base fee of the CALLCODE opcode\"\n        },\n        \"return\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the RETURN opcode\"\n        },\n        \"invalid\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the INVALID opcode\"\n        },\n        \"selfdestruct\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the SELFDESTRUCT opcode\"\n        }\n    },\n    \"vm\": {\n        \"stackLimit\": {\n            \"v\": 1024,\n            \"d\": \"Maximum size of VM stack allowed\"\n        },\n        \"callCreateDepth\": {\n            \"v\": 1024,\n            \"d\": \"Maximum depth of call/create stack\"\n        },\n        \"maxExtraDataSize\": {\n            \"v\": 32,\n            \"d\": \"Maximum size extra data may be after Genesis\"\n        }\n    },\n    \"pow\": {\n        \"minimumDifficulty\": {\n            \"v\": 131072,\n            \"d\": \"The minimum that the difficulty may ever be\"\n        },\n        \"difficultyBoundDivisor\": {\n            \"v\": 2048,\n            \"d\": \"The bound divisor of the difficulty, used in the update calculations\"\n        },\n        \"durationLimit\": {\n            \"v\": 13,\n            \"d\": \"The decision boundary on the blocktime duration used to determine whether difficulty should go up or not\"\n        },\n        \"epochDuration\": {\n            \"v\": 30000,\n            \"d\": \"Duration between proof-of-work epochs\"\n        },\n        \"timebombPeriod\": {\n            \"v\": 100000,\n            \"d\": \"Exponential difficulty timebomb period\"\n        },\n        \"minerReward\": {\n            \"v\": \"5000000000000000000\",\n            \"d\": \"the amount a miner get rewarded for mining a block\"\n        },\n        \"difficultyBombDelay\": {\n            \"v\": 0,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}\n", "{\n    \"name\": \"homestead\",\n    \"comment\": \"Homestead hardfork with protocol and network changes\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-606\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"delegatecall\": {\n            \"v\": 40,\n            \"d\": \"Base fee of the DELEGATECALL opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"dao\",\n    \"comment\": \"DAO rescue hardfork\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-779\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"tangerineWhistle\",\n    \"comment\": \"Hardfork with gas cost changes for IO-heavy operations\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-608\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"sload\": {\n            \"v\": 200,\n            \"d\": \"Once per SLOAD operation\"\n        },\n        \"call\": {\n            \"v\": 700,\n            \"d\": \"Once per CALL operation & message call transaction\"\n        },\n        \"extcodesize\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the EXTCODESIZE opcode\"\n        },\n        \"extcodecopy\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the EXTCODECOPY opcode\"\n        },\n        \"balance\": {\n            \"v\": 400,\n            \"d\": \"Base fee of the BALANCE opcode\"\n        },\n        \"delegatecall\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the DELEGATECALL opcode\"\n        },\n        \"callcode\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the CALLCODE opcode\"\n        },\n        \"selfdestruct\": {\n            \"v\": 5000,\n            \"d\": \"Base fee of the SELFDESTRUCT opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"spuriousDragon\",\n    \"comment\": \"HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-607\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"expByte\": {\n            \"v\": 50,\n            \"d\": \"Times ceil(log256(exponent)) for the EXP instruction\"\n        }\n    },\n    \"vm\": {\n        \"maxCodeSize\": {\n            \"v\": 24576,\n            \"d\": \"Maximum length of contract code\"\n        }\n    },\n    \"pow\": {}\n}\n", "{\n    \"name\": \"byzantium\",\n    \"comment\": \"Hardfork with new precompiles, instructions and other protocol changes\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-609\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"modexpGquaddivisor\": {\n            \"v\": 20,\n            \"d\": \"Gquaddivisor from modexp precompile for gas calculation\"\n        },\n        \"ecAdd\": {\n            \"v\": 500,\n            \"d\": \"Gas costs for curve addition precompile\"\n        },\n        \"ecMul\": {\n            \"v\": 40000,\n            \"d\": \"Gas costs for curve multiplication precompile\"\n        },\n        \"ecPairing\": {\n            \"v\": 100000,\n            \"d\": \"Base gas costs for curve pairing precompile\"\n        },\n        \"ecPairingWord\": {\n            \"v\": 80000,\n            \"d\": \"Gas costs regarding curve pairing precompile input length\"\n        },\n        \"revert\": {\n            \"v\": 0,\n            \"d\": \"Base fee of the REVERT opcode\"\n        },\n        \"staticcall\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the STATICCALL opcode\"\n        },\n        \"returndatasize\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the RETURNDATASIZE opcode\"\n        },\n        \"returndatacopy\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the RETURNDATACOPY opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {\n        \"minerReward\": {\n            \"v\": \"3000000000000000000\",\n            \"d\": \"the amount a miner get rewarded for mining a block\"\n        },\n        \"difficultyBombDelay\": {\n            \"v\": 3000000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}\n", "{\n    \"name\": \"constantinople\",\n    \"comment\": \"Postponed hardfork including EIP-1283 (SSTORE gas metering changes)\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-1013\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"netSstoreNoopGas\": {\n            \"v\": 200,\n            \"d\": \"Once per SSTORE operation if the value doesn't change\"\n        },\n        \"netSstoreInitGas\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation from clean zero\"\n        },\n        \"netSstoreCleanGas\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation from clean non-zero\"\n        },\n        \"netSstoreDirtyGas\": {\n            \"v\": 200,\n            \"d\": \"Once per SSTORE operation from dirty\"\n        },\n        \"netSstoreClearRefund\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n        },\n        \"netSstoreResetRefund\": {\n            \"v\": 4800,\n            \"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n        },\n        \"netSstoreResetClearRefund\": {\n            \"v\": 19800,\n            \"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n        },\n        \"shl\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SHL opcode\"\n        },\n        \"shr\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SHR opcode\"\n        },\n        \"sar\": {\n            \"v\": 3,\n            \"d\": \"Base fee of the SAR opcode\"\n        },\n        \"extcodehash\": {\n            \"v\": 400,\n            \"d\": \"Base fee of the EXTCODEHASH opcode\"\n        },\n        \"create2\": {\n            \"v\": 32000,\n            \"d\": \"Base fee of the CREATE2 opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {\n        \"minerReward\": {\n            \"v\": \"2000000000000000000\",\n            \"d\": \"The amount a miner gets rewarded for mining a block\"\n        },\n        \"difficultyBombDelay\": {\n            \"v\": 5000000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}\n", "{\n    \"name\": \"petersburg\",\n    \"comment\": \"Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-1716\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"netSstoreNoopGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreInitGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreCleanGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreDirtyGas\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreClearRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreResetRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        },\n        \"netSstoreResetClearRefund\": {\n            \"v\": null,\n            \"d\": \"Removed along EIP-1283\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"istanbul\",\n    \"comment\": \"HF targeted for December 2019 following the Constantinople/Petersburg HF\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-1679\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {\n        \"blake2Round\": {\n            \"v\": 1,\n            \"d\": \"Gas cost per round for the Blake2 F precompile\"\n        },\n        \"ecAdd\": {\n            \"v\": 150,\n            \"d\": \"Gas costs for curve addition precompile\"\n        },\n        \"ecMul\": {\n            \"v\": 6000,\n            \"d\": \"Gas costs for curve multiplication precompile\"\n        },\n        \"ecPairing\": {\n            \"v\": 45000,\n            \"d\": \"Base gas costs for curve pairing precompile\"\n        },\n        \"ecPairingWord\": {\n            \"v\": 34000,\n            \"d\": \"Gas costs regarding curve pairing precompile input length\"\n        },\n        \"txDataNonZero\": {\n            \"v\": 16,\n            \"d\": \"Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions\"\n        },\n        \"sstoreSentryGasEIP2200\": {\n            \"v\": 2300,\n            \"d\": \"Minimum gas required to be present for an SSTORE call, not consumed\"\n        },\n        \"sstoreNoopGasEIP2200\": {\n            \"v\": 800,\n            \"d\": \"Once per SSTORE operation if the value doesn't change\"\n        },\n        \"sstoreDirtyGasEIP2200\": {\n            \"v\": 800,\n            \"d\": \"Once per SSTORE operation if a dirty value is changed\"\n        },\n        \"sstoreInitGasEIP2200\": {\n            \"v\": 20000,\n            \"d\": \"Once per SSTORE operation from clean zero to non-zero\"\n        },\n        \"sstoreInitRefundEIP2200\": {\n            \"v\": 19200,\n            \"d\": \"Once per SSTORE operation for resetting to the original zero value\"\n        },\n        \"sstoreCleanGasEIP2200\": {\n            \"v\": 5000,\n            \"d\": \"Once per SSTORE operation from clean non-zero to something else\"\n        },\n        \"sstoreCleanRefundEIP2200\": {\n            \"v\": 4200,\n            \"d\": \"Once per SSTORE operation for resetting to the original non-zero value\"\n        },\n        \"sstoreClearRefundEIP2200\": {\n            \"v\": 15000,\n            \"d\": \"Once per SSTORE operation for clearing an originally existing storage slot\"\n        },\n        \"balance\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the BALANCE opcode\"\n        },\n        \"extcodehash\": {\n            \"v\": 700,\n            \"d\": \"Base fee of the EXTCODEHASH opcode\"\n        },\n        \"chainid\": {\n            \"v\": 2,\n            \"d\": \"Base fee of the CHAINID opcode\"\n        },\n        \"selfbalance\": {\n            \"v\": 5,\n            \"d\": \"Base fee of the SELFBALANCE opcode\"\n        },\n        \"sload\": {\n            \"v\": 800,\n            \"d\": \"Base fee of the SLOAD opcode\"\n        }\n    },\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"muirGlacier\",\n    \"comment\": \"HF to delay the difficulty bomb\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2384\",\n    \"status\": \"Final\",\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {\n        \"difficultyBombDelay\": {\n            \"v\": 9000000,\n            \"d\": \"the amount of blocks to delay the difficulty bomb with\"\n        }\n    }\n}\n", "{\n    \"name\": \"berlin\",\n    \"comment\": \"HF targeted for July 2020 following the Muir Glacier HF\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-2070\",\n    \"status\": \"Final\",\n    \"eips\": [2565, 2929, 2718, 2930]\n}\n", "{\n    \"name\": \"london\",\n    \"comment\": \"HF targeted for July 2021 following the Berlin fork\",\n    \"url\": \"https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md\",\n    \"status\": \"Final\",\n    \"eips\": [1559, 3198, 3529, 3541]\n}\n", "{\n    \"name\": \"shanghai\",\n    \"comment\": \"Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode\",\n    \"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md\",\n    \"status\": \"Final\",\n    \"eips\": [3651, 3855, 3860, 4895]\n}\n", "{\n    \"name\": \"arrowGlacier\",\n    \"comment\": \"HF to delay the difficulty bomb\",\n    \"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md\",\n    \"status\": \"Final\",\n    \"eips\": [4345],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"grayGlacier\",\n    \"comment\": \"Delaying the difficulty bomb to Mid September 2022\",\n    \"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md\",\n    \"status\": \"Draft\",\n    \"eips\": [5133],\n    \"gasConfig\": {},\n    \"gasPrices\": {},\n    \"vm\": {},\n    \"pow\": {}\n}\n", "{\n    \"name\": \"mergeForkIdTransition\",\n    \"comment\": \"Pre-merge hardfork to fork off non-upgraded clients\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-3675\",\n    \"status\": \"Draft\",\n    \"eips\": []\n}\n", "{\n    \"name\": \"merge\",\n    \"comment\": \"Hardfork to upgrade the consensus mechanism to Proof-of-Stake\",\n    \"url\": \"https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md\",\n    \"status\": \"Final\",\n    \"consensus\": {\n        \"type\": \"pos\",\n        \"algorithm\": \"casper\",\n        \"casper\": {}\n    },\n    \"eips\": [3675, 4399]\n}\n", "{\n    \"name\": \"shardingFork\",\n    \"comment\": \"Internal hardfork to test proto-danksharding (do not use in production)\",\n    \"url\": \"https://eips.ethereum.org/EIPS/eip-4844\",\n    \"status\": \"Experimental\",\n    \"eips\": [4844]\n}\n", "export const hardforks = {\n  chainstart: require('./chainstart.json'),\n  homestead: require('./homestead.json'),\n  dao: require('./dao.json'),\n  tangerineWhistle: require('./tangerineWhistle.json'),\n  spuriousDragon: require('./spuriousDragon.json'),\n  byzantium: require('./byzantium.json'),\n  constantinople: require('./constantinople.json'),\n  petersburg: require('./petersburg.json'),\n  istanbul: require('./istanbul.json'),\n  muirGlacier: require('./muirGlacier.json'),\n  berlin: require('./berlin.json'),\n  london: require('./london.json'),\n  shanghai: require('./shanghai.json'),\n  arrowGlacier: require('./arrowGlacier.json'),\n  grayGlacier: require('./grayGlacier.json'),\n  mergeForkIdTransition: require('./mergeForkIdTransition.json'),\n  merge: require('./merge.json'),\n  shardingFork: require('./sharding.json'),\n}\n", "import { intToHex, isHexPrefixed, stripHexPrefix } from '@ethereumjs/util'\n\nimport { Hardfork } from './enums'\n\ntype ConfigHardfork =\n  | { name: string; block: null; timestamp: number }\n  | { name: string; block: number; timestamp?: number }\n/**\n * Transforms Geth formatted nonce (i.e. hex string) to 8 byte 0x-prefixed string used internally\n * @param nonce string parsed from the Geth genesis file\n * @returns nonce as a 0x-prefixed 8 byte string\n */\nfunction formatNonce(nonce: string): string {\n  if (!nonce || nonce === '0x0') {\n    return '0x0000000000000000'\n  }\n  if (isHexPrefixed(nonce)) {\n    return '0x' + stripHexPrefix(nonce).padStart(16, '0')\n  }\n  return '0x' + nonce.padStart(16, '0')\n}\n\n/**\n * Converts Geth genesis parameters to an EthereumJS compatible `CommonOpts` object\n * @param json object representing the Geth genesis file\n * @param optional mergeForkIdPostMerge which clarifies the placement of MergeForkIdTransition\n * hardfork, which by default is post merge as with the merged eth networks but could also come\n * before merge like in kiln genesis\n * @returns genesis parameters in a `CommonOpts` compliant object\n */\nfunction parseGethParams(json: any, mergeForkIdPostMerge: boolean = true) {\n  const {\n    name,\n    config,\n    difficulty,\n    mixHash,\n    gasLimit,\n    coinbase,\n    baseFeePerGas,\n  }: {\n    name: string\n    config: any\n    difficulty: string\n    mixHash: string\n    gasLimit: string\n    coinbase: string\n    baseFeePerGas: string\n  } = json\n  let { extraData, timestamp, nonce }: { extraData: string; timestamp: string; nonce: string } =\n    json\n  const genesisTimestamp = Number(timestamp)\n  const { chainId }: { chainId: number } = config\n\n  // geth is not strictly putting empty fields with a 0x prefix\n  if (extraData === '') {\n    extraData = '0x'\n  }\n  // geth may use number for timestamp\n  if (!isHexPrefixed(timestamp)) {\n    timestamp = intToHex(parseInt(timestamp))\n  }\n  // geth may not give us a nonce strictly formatted to an 8 byte hex string\n  if (nonce.length !== 18) {\n    nonce = formatNonce(nonce)\n  }\n\n  // EIP155 and EIP158 are both part of Spurious Dragon hardfork and must occur at the same time\n  // but have different configuration parameters in geth genesis parameters\n  if (config.eip155Block !== config.eip158Block) {\n    throw new Error(\n      'EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork'\n    )\n  }\n\n  const params = {\n    name,\n    chainId,\n    networkId: chainId,\n    genesis: {\n      timestamp,\n      gasLimit: parseInt(gasLimit), // geth gasLimit and difficulty are hex strings while ours are `number`s\n      difficulty: parseInt(difficulty),\n      nonce,\n      extraData,\n      mixHash,\n      coinbase,\n      baseFeePerGas,\n    },\n    hardfork: undefined as string | undefined,\n    hardforks: [] as ConfigHardfork[],\n    bootstrapNodes: [],\n    consensus:\n      config.clique !== undefined\n        ? {\n            type: 'poa',\n            algorithm: 'clique',\n            clique: {\n              // The recent geth genesis seems to be using blockperiodseconds\n              // and epochlength for clique specification\n              // see: https://hackmd.io/PqZgMpnkSWCWv5joJoFymQ\n              period: config.clique.period ?? config.clique.blockperiodseconds,\n              epoch: config.clique.epoch ?? config.clique.epochlength,\n            },\n          }\n        : {\n            type: 'pow',\n            algorithm: 'ethash',\n            ethash: {},\n          },\n  }\n\n  const forkMap: { [key: string]: { name: string; postMerge?: boolean; isTimestamp?: boolean } } = {\n    [Hardfork.Homestead]: { name: 'homesteadBlock' },\n    [Hardfork.Dao]: { name: 'daoForkBlock' },\n    [Hardfork.TangerineWhistle]: { name: 'eip150Block' },\n    [Hardfork.SpuriousDragon]: { name: 'eip155Block' },\n    [Hardfork.Byzantium]: { name: 'byzantiumBlock' },\n    [Hardfork.Constantinople]: { name: 'constantinopleBlock' },\n    [Hardfork.Petersburg]: { name: 'petersburgBlock' },\n    [Hardfork.Istanbul]: { name: 'istanbulBlock' },\n    [Hardfork.MuirGlacier]: { name: 'muirGlacierBlock' },\n    [Hardfork.Berlin]: { name: 'berlinBlock' },\n    [Hardfork.London]: { name: 'londonBlock' },\n    [Hardfork.MergeForkIdTransition]: { name: 'mergeForkBlock', postMerge: mergeForkIdPostMerge },\n    [Hardfork.Shanghai]: { name: 'shanghaiTime', postMerge: true, isTimestamp: true },\n    [Hardfork.ShardingForkDev]: { name: 'shardingForkTime', postMerge: true, isTimestamp: true },\n  }\n\n  // forkMapRev is the map from config field name to Hardfork\n  const forkMapRev = Object.keys(forkMap).reduce((acc, elem) => {\n    acc[forkMap[elem].name] = elem\n    return acc\n  }, {} as { [key: string]: string })\n  const configHardforkNames = Object.keys(config).filter(\n    (key) => forkMapRev[key] !== undefined && config[key] !== undefined && config[key] !== null\n  )\n\n  params.hardforks = configHardforkNames\n    .map((nameBlock) => ({\n      name: forkMapRev[nameBlock],\n      block:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true || typeof config[nameBlock] !== 'number'\n          ? null\n          : config[nameBlock],\n      timestamp:\n        forkMap[forkMapRev[nameBlock]].isTimestamp === true && typeof config[nameBlock] === 'number'\n          ? config[nameBlock]\n          : undefined,\n    }))\n    .filter((fork) => fork.block !== null || fork.timestamp !== undefined) as ConfigHardfork[]\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.block ?? Infinity) - (b.block ?? Infinity)\n  })\n\n  params.hardforks.sort(function (a: ConfigHardfork, b: ConfigHardfork) {\n    return (a.timestamp ?? genesisTimestamp) - (b.timestamp ?? genesisTimestamp)\n  })\n\n  if (config.terminalTotalDifficulty !== undefined) {\n    // Following points need to be considered for placement of merge hf\n    // - Merge hardfork can't be placed at genesis\n    // - Place merge hf before any hardforks that require CL participation for e.g. withdrawals\n    // - Merge hardfork has to be placed just after genesis if any of the genesis hardforks make CL\n    //   necessary for e.g. withdrawals\n    const mergeConfig = {\n      name: Hardfork.Merge,\n      ttd: config.terminalTotalDifficulty,\n      block: null,\n    }\n\n    // Merge hardfork has to be placed before first hardfork that is dependent on merge\n    const postMergeIndex = params.hardforks.findIndex(\n      (hf: any) => forkMap[hf.name]?.postMerge === true\n    )\n    if (postMergeIndex !== -1) {\n      params.hardforks.splice(postMergeIndex, 0, mergeConfig as unknown as ConfigHardfork)\n    } else {\n      params.hardforks.push(mergeConfig as unknown as ConfigHardfork)\n    }\n  }\n\n  const latestHardfork = params.hardforks.length > 0 ? params.hardforks.slice(-1)[0] : undefined\n  params.hardfork = latestHardfork?.name\n  params.hardforks.unshift({ name: Hardfork.Chainstart, block: 0 })\n\n  return params\n}\n\n/**\n * Parses a genesis.json exported from Geth into parameters for Common instance\n * @param json representing the Geth genesis file\n * @param name optional chain name\n * @returns parsed params\n */\nexport function parseGethGenesis(json: any, name?: string, mergeForkIdPostMerge?: boolean) {\n  try {\n    if (['config', 'difficulty', 'gasLimit', 'alloc'].some((field) => !(field in json))) {\n      throw new Error('Invalid format, expected geth genesis fields missing')\n    }\n    if (name !== undefined) {\n      json.name = name\n    }\n    return parseGethParams(json, mergeForkIdPostMerge)\n  } catch (e: any) {\n    throw new Error(`Error parsing parameters file: ${e.message}`)\n  }\n}\n", "import { TypeOutput, intToBuffer, toType } from '@ethereumjs/util'\nimport { buf as crc32Buffer } from 'crc-32'\nimport { EventEmitter } from 'events'\n\nimport * as goerli from './chains/goerli.json'\nimport * as mainnet from './chains/mainnet.json'\nimport * as rinkeby from './chains/rinkeby.json'\nimport * as ropsten from './chains/ropsten.json'\nimport * as sepolia from './chains/sepolia.json'\nimport { EIPs } from './eips'\nimport { Chain, CustomChain, Hardfork } from './enums'\nimport { hardforks as HARDFORK_SPECS } from './hardforks'\nimport { parseGethGenesis } from './utils'\n\nimport type { ConsensusAlgorithm, ConsensusType } from './enums'\nimport type {\n  BootstrapNodeConfig,\n  CasperConfig,\n  ChainConfig,\n  ChainName,\n  ChainsConfig,\n  CliqueConfig,\n  CommonOpts,\n  CustomCommonOpts,\n  EthashConfig,\n  GenesisBlockConfig,\n  GethConfigOpts,\n  HardforkConfig,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ntype HardforkSpecKeys = keyof typeof HARDFORK_SPECS\ntype HardforkSpecValues = typeof HARDFORK_SPECS[HardforkSpecKeys]\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nexport class Common extends EventEmitter {\n  readonly DEFAULT_HARDFORK: string | Hardfork\n\n  private _chainParams: ChainConfig\n  private _hardfork: string | Hardfork\n  private _eips: number[] = []\n  private _customChains: ChainConfig[]\n\n  private HARDFORK_CHANGES: [HardforkSpecKeys, HardforkSpecValues][]\n\n  /**\n   * Creates a {@link Common} object for a custom chain, based on a standard one.\n   *\n   * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n   * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n   *\n   * ```javascript\n   * Common.custom({chainId: 123})\n   * ```\n   *\n   * There are also selected supported custom chains which can be initialized by using one of the\n   * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n   *\n   * ```javascript\n   * Common.custom(CustomChains.MaticMumbai)\n   * ```\n   *\n   * Note that these supported custom chains only provide some base parameters (usually the chain and\n   * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n   * the `@ethereumjs/tx` library to a Layer-2 chain).\n   *\n   * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n   * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n   */\n  static custom(\n    chainParamsOrName: Partial<ChainConfig> | CustomChain,\n    opts: CustomCommonOpts = {}\n  ): Common {\n    const baseChain = opts.baseChain ?? 'mainnet'\n    const standardChainParams = { ...Common._getChainParams(baseChain) }\n    standardChainParams['name'] = 'custom-chain'\n\n    if (typeof chainParamsOrName !== 'string') {\n      return new Common({\n        chain: {\n          ...standardChainParams,\n          ...chainParamsOrName,\n        },\n        ...opts,\n      })\n    } else {\n      if (chainParamsOrName === CustomChain.PolygonMainnet) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMainnet,\n            chainId: 137,\n            networkId: 137,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.PolygonMumbai) {\n        return Common.custom(\n          {\n            name: CustomChain.PolygonMumbai,\n            chainId: 80001,\n            networkId: 80001,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumRinkebyTestnet,\n            chainId: 421611,\n            networkId: 421611,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.ArbitrumOne) {\n        return Common.custom(\n          {\n            name: CustomChain.ArbitrumOne,\n            chainId: 42161,\n            networkId: 42161,\n          },\n          opts\n        )\n      }\n      if (chainParamsOrName === CustomChain.xDaiChain) {\n        return Common.custom(\n          {\n            name: CustomChain.xDaiChain,\n            chainId: 100,\n            networkId: 100,\n          },\n          opts\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticKovan) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticKovan,\n            chainId: 69,\n            networkId: 69,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n\n      if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n        return Common.custom(\n          {\n            name: CustomChain.OptimisticEthereum,\n            chainId: 10,\n            networkId: 10,\n          },\n          // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n          { hardfork: Hardfork.Berlin, ...opts }\n        )\n      }\n      throw new Error(`Custom chain ${chainParamsOrName} not supported`)\n    }\n  }\n\n  /**\n   * Static method to load and set common from a geth genesis json\n   * @param genesisJson json of geth configuration\n   * @param { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge } to further configure the common instance\n   * @returns Common\n   */\n  static fromGethGenesis(\n    genesisJson: any,\n    { chain, eips, genesisHash, hardfork, mergeForkIdPostMerge }: GethConfigOpts\n  ): Common {\n    const genesisParams = parseGethGenesis(genesisJson, chain, mergeForkIdPostMerge)\n    const common = new Common({\n      chain: genesisParams.name ?? 'custom',\n      customChains: [genesisParams],\n      eips,\n      hardfork: hardfork ?? genesisParams.hardfork,\n    })\n    if (genesisHash !== undefined) {\n      common.setForkHashes(genesisHash)\n    }\n    return common\n  }\n\n  /**\n   * Static method to determine if a {@link chainId} is supported as a standard chain\n   * @param chainId bigint id (`1`) of a standard chain\n   * @returns boolean\n   */\n  static isSupportedChainId(chainId: bigint): boolean {\n    const initializedChains = this._getInitializedChains()\n    return Boolean((initializedChains['names'] as ChainName)[chainId.toString()])\n  }\n\n  private static _getChainParams(\n    chain: string | number | Chain | bigint,\n    customChains?: ChainConfig[]\n  ): ChainConfig {\n    const initializedChains = this._getInitializedChains(customChains)\n    if (typeof chain === 'number' || typeof chain === 'bigint') {\n      chain = chain.toString()\n\n      if ((initializedChains['names'] as ChainName)[chain]) {\n        const name: string = (initializedChains['names'] as ChainName)[chain]\n        return initializedChains[name] as ChainConfig\n      }\n\n      throw new Error(`Chain with ID ${chain} not supported`)\n    }\n\n    if (initializedChains[chain] !== undefined) {\n      return initializedChains[chain] as ChainConfig\n    }\n\n    throw new Error(`Chain with name ${chain} not supported`)\n  }\n\n  constructor(opts: CommonOpts) {\n    super()\n    this._customChains = opts.customChains ?? []\n    this._chainParams = this.setChain(opts.chain)\n    this.DEFAULT_HARDFORK = this._chainParams.defaultHardfork ?? Hardfork.Merge\n    // Assign hardfork changes in the sequence of the applied hardforks\n    this.HARDFORK_CHANGES = this.hardforks().map((hf) => [\n      hf.name as HardforkSpecKeys,\n      HARDFORK_SPECS[hf.name as HardforkSpecKeys],\n    ])\n    this._hardfork = this.DEFAULT_HARDFORK\n    if (opts.hardfork !== undefined) {\n      this.setHardfork(opts.hardfork)\n    }\n    if (opts.eips) {\n      this.setEIPs(opts.eips)\n    }\n  }\n\n  /**\n   * Sets the chain\n   * @param chain String ('mainnet') or Number (1) chain representation.\n   *              Or, a Dictionary of chain parameters for a private network.\n   * @returns The dictionary with parameters set as chain\n   */\n  setChain(chain: string | number | Chain | bigint | object): ChainConfig {\n    if (typeof chain === 'number' || typeof chain === 'bigint' || typeof chain === 'string') {\n      this._chainParams = Common._getChainParams(chain, this._customChains)\n    } else if (typeof chain === 'object') {\n      if (this._customChains.length > 0) {\n        throw new Error(\n          'Chain must be a string, number, or bigint when initialized with customChains passed in'\n        )\n      }\n      const required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes']\n      for (const param of required) {\n        if (!(param in chain)) {\n          throw new Error(`Missing required chain parameter: ${param}`)\n        }\n      }\n      this._chainParams = chain as ChainConfig\n    } else {\n      throw new Error('Wrong input format')\n    }\n    for (const hf of this.hardforks()) {\n      if (hf.block === undefined) {\n        throw new Error(`Hardfork cannot have undefined block number`)\n      }\n    }\n    return this._chainParams\n  }\n\n  /**\n   * Sets the hardfork to get params for\n   * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n   */\n  setHardfork(hardfork: string | Hardfork): void {\n    let existing = false\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if (hfChanges[0] === hardfork) {\n        if (this._hardfork !== hardfork) {\n          this._hardfork = hardfork\n          this.emit('hardforkChanged', hardfork)\n        }\n        existing = true\n      }\n    }\n    if (!existing) {\n      throw new Error(`Hardfork with name ${hardfork} not supported`)\n    }\n  }\n\n  /**\n   * Returns the hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td : total difficulty of the parent block (for block hf) OR of the chain latest (for chain hf)\n   * @param timestamp: timestamp in seconds at which block was/is to be minted\n   * @returns The name of the HF\n   */\n  getHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    td = toType(td, TypeOutput.BigInt)\n    timestamp = toType(timestamp, TypeOutput.Number)\n\n    // Filter out hardforks with no block number, no ttd or no timestamp (i.e. unapplied hardforks)\n    const hfs = this.hardforks().filter(\n      (hf) =>\n        hf.block !== null || (hf.ttd !== null && hf.ttd !== undefined) || hf.timestamp !== undefined\n    )\n    const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    const doubleTTDHF = hfs\n      .slice(mergeIndex + 1)\n      .findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n    if (doubleTTDHF >= 0) {\n      throw Error(`More than one merge hardforks found with ttd specified`)\n    }\n\n    // Find the first hardfork that has a block number greater than `blockNumber`\n    // (skips the merge hardfork since it cannot have a block number specified).\n    // If timestamp is not provided, it also skips timestamps hardforks to continue\n    // discovering/checking number hardforks.\n    let hfIndex = hfs.findIndex(\n      (hf) =>\n        (hf.block !== null && hf.block > blockNumber) ||\n        (timestamp !== undefined && Number(hf.timestamp) > timestamp)\n    )\n\n    if (hfIndex === -1) {\n      // all hardforks apply, set hfIndex to the last one as that's the candidate\n      hfIndex = hfs.length\n    } else if (hfIndex === 0) {\n      // cannot have a case where a block number is before all applied hardforks\n      // since the chain has to start with a hardfork\n      throw Error('Must have at least one hardfork at block 0')\n    }\n\n    // If timestamp is not provided, we need to rollback to the last hf with block or ttd\n    if (timestamp === undefined) {\n      const stepBack = hfs\n        .slice(0, hfIndex)\n        .reverse()\n        .findIndex((hf) => hf.block !== null || hf.ttd !== undefined)\n      hfIndex = hfIndex - stepBack\n    }\n    // Move hfIndex one back to arrive at candidate hardfork\n    hfIndex = hfIndex - 1\n\n    // If the timestamp was not provided, we could have skipped timestamp hardforks to look for number\n    // hardforks. so it will now be needed to rollback\n    if (hfs[hfIndex].block === null && hfs[hfIndex].timestamp === undefined) {\n      // We're on the merge hardfork.  Let's check the TTD\n      if (td === undefined || td === null || BigInt(hfs[hfIndex].ttd!) > td) {\n        // Merge ttd greater than current td so we're on hardfork before merge\n        hfIndex -= 1\n      }\n    } else {\n      if (mergeIndex >= 0 && td !== undefined && td !== null) {\n        if (hfIndex >= mergeIndex && BigInt(hfs[mergeIndex].ttd!) > td) {\n          throw Error('Maximum HF determined by total difficulty is lower than the block number HF')\n        } else if (hfIndex < mergeIndex && BigInt(hfs[mergeIndex].ttd!) <= td) {\n          throw Error('HF determined by block number is lower than the minimum total difficulty HF')\n        }\n      }\n    }\n\n    const hfStartIndex = hfIndex\n    // Move the hfIndex to the end of the hardforks that might be scheduled on the same block/timestamp\n    // This won't anyway be the case with Merge hfs\n    for (; hfIndex < hfs.length - 1; hfIndex++) {\n      // break out if hfIndex + 1 is not scheduled at hfIndex\n      if (\n        hfs[hfIndex].block !== hfs[hfIndex + 1].block ||\n        hfs[hfIndex].timestamp !== hfs[hfIndex + 1].timestamp\n      ) {\n        break\n      }\n    }\n\n    if (timestamp) {\n      const minTimeStamp = hfs\n        .slice(0, hfStartIndex)\n        .reduce((acc: number, hf: HardforkConfig) => Math.max(Number(hf.timestamp ?? '0'), acc), 0)\n      if (minTimeStamp > timestamp) {\n        throw Error(`Maximum HF determined by timestamp is lower than the block number/ttd HF`)\n      }\n\n      const maxTimeStamp = hfs\n        .slice(hfIndex + 1)\n        .reduce(\n          (acc: number, hf: HardforkConfig) => Math.min(Number(hf.timestamp ?? timestamp), acc),\n          timestamp\n        )\n      if (maxTimeStamp < timestamp) {\n        throw Error(`Maximum HF determined by block number/ttd is lower than timestamp HF`)\n      }\n    }\n    const hardfork = hfs[hfIndex]\n    return hardfork.name\n  }\n\n  /**\n   * Sets a new hardfork based on the block number or an optional\n   * total difficulty (Merge HF) provided.\n   *\n   * An optional TD takes precedence in case the corresponding HF block\n   * is set to `null` or otherwise needs to match (if not an error\n   * will be thrown).\n   *\n   * @param blockNumber\n   * @param td\n   * @param timestamp\n   * @returns The name of the HF set\n   */\n  setHardforkByBlockNumber(\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): string {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    this.setHardfork(hardfork)\n    return hardfork\n  }\n\n  /**\n   * Internal helper function, returns the params for the given hardfork for the chain set\n   * @param hardfork Hardfork name\n   * @returns Dictionary with hardfork params or null if hardfork not on chain\n   */\n  _getHardfork(hardfork: string | Hardfork): HardforkConfig | null {\n    const hfs = this.hardforks()\n    for (const hf of hfs) {\n      if (hf['name'] === hardfork) return hf\n    }\n    return null\n  }\n\n  /**\n   * Sets the active EIPs\n   * @param eips\n   */\n  setEIPs(eips: number[] = []) {\n    for (const eip of eips) {\n      if (!(eip in EIPs)) {\n        throw new Error(`${eip} not supported`)\n      }\n      const minHF = this.gteHardfork(EIPs[eip]['minimumHardfork'])\n      if (!minHF) {\n        throw new Error(\n          `${eip} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${minHF}`\n        )\n      }\n      if (EIPs[eip].requiredEIPs !== undefined) {\n        for (const elem of EIPs[eip].requiredEIPs) {\n          if (!(eips.includes(elem) || this.isActivatedEIP(elem))) {\n            throw new Error(`${eip} requires EIP ${elem}, but is not included in the EIP list`)\n          }\n        }\n      }\n    }\n    this._eips = eips\n  }\n\n  /**\n   * Returns a parameter for the current chain setup\n   *\n   * If the parameter is present in an EIP, the EIP always takes precedence.\n   * Otherwise the parameter if taken from the latest applied HF with\n   * a change on the respective parameter.\n   *\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  param(topic: string, name: string): bigint {\n    // TODO: consider the case that different active EIPs\n    // can change the same parameter\n    let value\n    for (const eip of this._eips) {\n      value = this.paramByEIP(topic, name, eip)\n      if (value !== undefined) return value\n    }\n    return this.paramByHardfork(topic, name, this._hardfork)\n  }\n\n  /**\n   * Returns the parameter corresponding to a hardfork\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param hardfork Hardfork name\n   * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByHardfork(topic: string, name: string, hardfork: string | Hardfork): bigint {\n    let value = null\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      // EIP-referencing HF file (e.g. berlin.json)\n      if ('eips' in hfChanges[1]) {\n        const hfEIPs = hfChanges[1]['eips']\n        for (const eip of hfEIPs) {\n          const valueEIP = this.paramByEIP(topic, name, eip)\n          value = typeof valueEIP === 'bigint' ? valueEIP : value\n        }\n        // Parameter-inlining HF file (e.g. istanbul.json)\n      } else {\n        if (hfChanges[1][topic] === undefined) {\n          throw new Error(`Topic ${topic} not defined`)\n        }\n        if (hfChanges[1][topic][name] !== undefined) {\n          value = hfChanges[1][topic][name].v\n        }\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return BigInt(value ?? 0)\n  }\n\n  /**\n   * Returns a parameter corresponding to an EIP\n   * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n   * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n   * @param eip Number of the EIP\n   * @returns The value requested or `undefined` if not found\n   */\n  paramByEIP(topic: string, name: string, eip: number): bigint | undefined {\n    if (!(eip in EIPs)) {\n      throw new Error(`${eip} not supported`)\n    }\n\n    const eipParams = EIPs[eip]\n    if (!(topic in eipParams)) {\n      throw new Error(`Topic ${topic} not defined`)\n    }\n    if (eipParams[topic][name] === undefined) {\n      return undefined\n    }\n    const value = eipParams[topic][name].v\n    return BigInt(value)\n  }\n\n  /**\n   * Returns a parameter for the hardfork active on block number or\n   * optional provided total difficulty (Merge HF)\n   * @param topic Parameter topic\n   * @param name Parameter name\n   * @param blockNumber Block number\n   * @param td Total difficulty\n   *    * @returns The value requested or `BigInt(0)` if not found\n   */\n  paramByBlock(\n    topic: string,\n    name: string,\n    blockNumber: BigIntLike,\n    td?: BigIntLike,\n    timestamp?: BigIntLike\n  ): bigint {\n    const hardfork = this.getHardforkByBlockNumber(blockNumber, td, timestamp)\n    return this.paramByHardfork(topic, name, hardfork)\n  }\n\n  /**\n   * Checks if an EIP is activated by either being included in the EIPs\n   * manually passed in with the {@link CommonOpts.eips} or in a\n   * hardfork currently being active\n   *\n   * Note: this method only works for EIPs being supported\n   * by the {@link CommonOpts.eips} constructor option\n   * @param eip\n   */\n  isActivatedEIP(eip: number): boolean {\n    if (this.eips().includes(eip)) {\n      return true\n    }\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n        if ((hf['eips'] as number[]).includes(eip)) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  /**\n   * Checks if set or provided hardfork is active on block number\n   * @param hardfork Hardfork name or null (for HF set)\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  hardforkIsActiveOnBlock(hardfork: string | Hardfork | null, blockNumber: BigIntLike): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const hfBlock = this.hardforkBlock(hardfork)\n    if (typeof hfBlock === 'bigint' && hfBlock !== BigInt(0) && blockNumber >= hfBlock) {\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Alias to hardforkIsActiveOnBlock when hardfork is set\n   * @param blockNumber\n   * @returns True if HF is active on block number\n   */\n  activeOnBlock(blockNumber: BigIntLike): boolean {\n    return this.hardforkIsActiveOnBlock(null, blockNumber)\n  }\n\n  /**\n   * Sequence based check if given or set HF1 is greater than or equal HF2\n   * @param hardfork1 Hardfork name or null (if set)\n   * @param hardfork2 Hardfork name\n   * @param opts Hardfork options\n   * @returns True if HF1 gte HF2\n   */\n  hardforkGteHardfork(hardfork1: string | Hardfork | null, hardfork2: string | Hardfork): boolean {\n    hardfork1 = hardfork1 ?? this._hardfork\n    const hardforks = this.hardforks()\n\n    let posHf1 = -1,\n      posHf2 = -1\n    let index = 0\n    for (const hf of hardforks) {\n      if (hf['name'] === hardfork1) posHf1 = index\n      if (hf['name'] === hardfork2) posHf2 = index\n      index += 1\n    }\n    return posHf1 >= posHf2 && posHf2 !== -1\n  }\n\n  /**\n   * Alias to hardforkGteHardfork when hardfork is set\n   * @param hardfork Hardfork name\n   * @returns True if hardfork set is greater than hardfork provided\n   */\n  gteHardfork(hardfork: string | Hardfork): boolean {\n    return this.hardforkGteHardfork(null, hardfork)\n  }\n\n  /**\n   * Returns the hardfork change block for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if unscheduled\n   */\n  hardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const block = this._getHardfork(hardfork)?.['block']\n    if (block === undefined || block === null) {\n      return null\n    }\n    return BigInt(block)\n  }\n\n  hardforkTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const timestamp = this._getHardfork(hardfork)?.['timestamp']\n    if (timestamp === undefined || timestamp === null) {\n      return null\n    }\n    return BigInt(timestamp)\n  }\n\n  /**\n   * Returns the hardfork change block for eip\n   * @param eip EIP number\n   * @returns Block number or null if unscheduled\n   */\n  eipBlock(eip: number): bigint | null {\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      const hf = hfChanges[1]\n      if ('eips' in hf) {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        if (hf['eips'].includes(eip)) {\n          return this.hardforkBlock(hfChanges[0])\n        }\n      }\n    }\n    return null\n  }\n\n  /**\n   * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Total difficulty or null if no set\n   */\n  hardforkTTD(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const ttd = this._getHardfork(hardfork)?.['ttd']\n    if (ttd === undefined || ttd === null) {\n      return null\n    }\n    return BigInt(ttd)\n  }\n\n  /**\n   * True if block number provided is the hardfork (given or set) change block\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const block = this.hardforkBlock(hardfork)\n    return typeof block === 'bigint' && block !== BigInt(0) ? block === blockNumber : false\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block timestamp, number or null if not available\n   */\n  nextHardforkBlockOrTimestamp(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    const hfs = this.hardforks()\n    let hfIndex = hfs.findIndex((hf) => hf.name === hardfork)\n    // If the current hardfork is merge, go one behind as merge hf is not part of these\n    // calcs even if the merge hf block is set\n    if (hardfork === Hardfork.Merge) {\n      hfIndex -= 1\n    }\n    // Hardfork not found\n    if (hfIndex < 0) {\n      return null\n    }\n\n    let currHfTimeOrBlock = hfs[hfIndex].timestamp ?? hfs[hfIndex].block\n    currHfTimeOrBlock =\n      currHfTimeOrBlock !== null && currHfTimeOrBlock !== undefined\n        ? Number(currHfTimeOrBlock)\n        : null\n\n    const nextHf = hfs.slice(hfIndex + 1).find((hf) => {\n      let hfTimeOrBlock = hf.timestamp ?? hf.block\n      hfTimeOrBlock =\n        hfTimeOrBlock !== null && hfTimeOrBlock !== undefined ? Number(hfTimeOrBlock) : null\n      return (\n        hf.name !== Hardfork.Merge &&\n        hfTimeOrBlock !== null &&\n        hfTimeOrBlock !== undefined &&\n        hfTimeOrBlock !== currHfTimeOrBlock\n      )\n    })\n    // If no next hf found with valid block or timestamp return null\n    if (nextHf === undefined) {\n      return null\n    }\n\n    const nextHfBlock = nextHf.timestamp ?? nextHf.block\n    if (nextHfBlock === null || nextHfBlock === undefined) {\n      return null\n    }\n\n    return BigInt(nextHfBlock)\n  }\n\n  /**\n   * Returns the change block for the next hardfork after the hardfork provided or set\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns Block number or null if not available\n   * @deprecated\n   */\n  nextHardforkBlock(hardfork?: string | Hardfork): bigint | null {\n    hardfork = hardfork ?? this._hardfork\n    let hfBlock = this.hardforkBlock(hardfork)\n    // If this is a merge hardfork with block not set, then we fallback to previous hardfork\n    // to find the nextHardforkBlock\n    if (hfBlock === null && hardfork === Hardfork.Merge) {\n      const hfs = this.hardforks()\n      const mergeIndex = hfs.findIndex((hf) => hf.ttd !== null && hf.ttd !== undefined)\n      if (mergeIndex < 0) {\n        throw Error(`Merge hardfork should have been found`)\n      }\n      hfBlock = this.hardforkBlock(hfs[mergeIndex - 1].name)\n    }\n    if (hfBlock === null) {\n      return null\n    }\n    // Next fork block number or null if none available\n    // Logic: if accumulator is still null and on the first occurrence of\n    // a block greater than the current hfBlock set the accumulator,\n    // pass on the accumulator as the final result from this time on\n    const nextHfBlock = this.hardforks().reduce((acc: bigint | null, hf: HardforkConfig) => {\n      // We need to ignore the merge block in our next hardfork calc\n      const block = BigInt(\n        hf.block === null || (hf.ttd !== undefined && hf.ttd !== null) ? 0 : hf.block\n      )\n      // Typescript can't seem to follow that the hfBlock is not null at this point\n      return block > hfBlock! && acc === null ? block : acc\n    }, null)\n    return nextHfBlock\n  }\n\n  /**\n   * True if block number provided is the hardfork change block following the hardfork given or set\n   * @param blockNumber Number of the block to check\n   * @param hardfork Hardfork name, optional if HF set\n   * @returns True if blockNumber is HF block\n   * @deprecated\n   */\n  isNextHardforkBlock(blockNumber: BigIntLike, hardfork?: string | Hardfork): boolean {\n    blockNumber = toType(blockNumber, TypeOutput.BigInt)\n    hardfork = hardfork ?? this._hardfork\n    const nextHardforkBlock = this.nextHardforkBlock(hardfork)\n\n    return nextHardforkBlock === null ? false : nextHardforkBlock === blockNumber\n  }\n\n  /**\n   * Internal helper function to calculate a fork hash\n   * @param hardfork Hardfork name\n   * @param genesisHash Genesis block hash of the chain\n   * @returns Fork hash as hex string\n   */\n  _calcForkHash(hardfork: string | Hardfork, genesisHash: Buffer) {\n    let hfBuffer = Buffer.alloc(0)\n    let prevBlockOrTime = 0\n    for (const hf of this.hardforks()) {\n      const { block, timestamp, name } = hf\n      // Timestamp to be used for timestamp based hfs even if we may bundle\n      // block number with them retrospectively\n      let blockOrTime = timestamp ?? block\n      blockOrTime = blockOrTime !== null ? Number(blockOrTime) : null\n\n      // Skip for chainstart (0), not applied HFs (null) and\n      // when already applied on same blockOrTime HFs\n      // and on the merge since forkhash doesn't change on merge hf\n      if (\n        typeof blockOrTime === 'number' &&\n        blockOrTime !== 0 &&\n        blockOrTime !== prevBlockOrTime &&\n        name !== Hardfork.Merge\n      ) {\n        const hfBlockBuffer = Buffer.from(blockOrTime.toString(16).padStart(16, '0'), 'hex')\n        hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer])\n        prevBlockOrTime = blockOrTime\n      }\n\n      if (hf.name === hardfork) break\n    }\n    const inputBuffer = Buffer.concat([genesisHash, hfBuffer])\n\n    // CRC32 delivers result as signed (negative) 32-bit integer,\n    // convert to hex string\n    const forkhash = intToBuffer(crc32Buffer(inputBuffer) >>> 0).toString('hex')\n    return `0x${forkhash}`\n  }\n\n  /**\n   * Returns an eth/64 compliant fork hash (EIP-2124)\n   * @param hardfork Hardfork name, optional if HF set\n   * @param genesisHash Genesis block hash of the chain, optional if already defined and not needed to be calculated\n   */\n  forkHash(hardfork?: string | Hardfork, genesisHash?: Buffer): string {\n    hardfork = hardfork ?? this._hardfork\n    const data = this._getHardfork(hardfork)\n    if (\n      data === null ||\n      (data?.block === null && data?.timestamp === undefined && data?.ttd === undefined)\n    ) {\n      const msg = 'No fork hash calculation possible for future hardfork'\n      throw new Error(msg)\n    }\n    if (data?.forkHash !== null && data?.forkHash !== undefined) {\n      return data.forkHash\n    }\n    if (!genesisHash) throw new Error('genesisHash required for forkHash calculation')\n    return this._calcForkHash(hardfork, genesisHash)\n  }\n\n  /**\n   *\n   * @param forkHash Fork hash as a hex string\n   * @returns Array with hardfork data (name, block, forkHash)\n   */\n  hardforkForForkHash(forkHash: string): HardforkConfig | null {\n    const resArray = this.hardforks().filter((hf: HardforkConfig) => {\n      return hf.forkHash === forkHash\n    })\n    return resArray.length >= 1 ? resArray[resArray.length - 1] : null\n  }\n\n  /**\n   * Sets any missing forkHashes on the passed-in {@link Common} instance\n   * @param common The {@link Common} to set the forkHashes for\n   * @param genesisHash The genesis block hash\n   */\n  setForkHashes(genesisHash: Buffer) {\n    for (const hf of this.hardforks()) {\n      const blockOrTime = hf.timestamp ?? hf.block\n      if (\n        (hf.forkHash === null || hf.forkHash === undefined) &&\n        ((blockOrTime !== null && blockOrTime !== undefined) || typeof hf.ttd !== 'undefined')\n      ) {\n        hf.forkHash = this.forkHash(hf.name, genesisHash)\n      }\n    }\n  }\n\n  /**\n   * Returns the Genesis parameters of the current chain\n   * @returns Genesis dictionary\n   */\n  genesis(): GenesisBlockConfig {\n    return this._chainParams.genesis\n  }\n\n  /**\n   * Returns the hardforks for current chain\n   * @returns {Array} Array with arrays of hardforks\n   */\n  hardforks(): HardforkConfig[] {\n    return this._chainParams.hardforks\n  }\n\n  /**\n   * Returns bootstrap nodes for the current chain\n   * @returns {Dictionary} Dict with bootstrap nodes\n   */\n  bootstrapNodes(): BootstrapNodeConfig[] {\n    return this._chainParams.bootstrapNodes\n  }\n\n  /**\n   * Returns DNS networks for the current chain\n   * @returns {String[]} Array of DNS ENR urls\n   */\n  dnsNetworks(): string[] {\n    return this._chainParams.dnsNetworks!\n  }\n\n  /**\n   * Returns the hardfork set\n   * @returns Hardfork name\n   */\n  hardfork(): string | Hardfork {\n    return this._hardfork\n  }\n\n  /**\n   * Returns the Id of current chain\n   * @returns chain Id\n   */\n  chainId(): bigint {\n    return BigInt(this._chainParams.chainId)\n  }\n\n  /**\n   * Returns the name of current chain\n   * @returns chain name (lower case)\n   */\n  chainName(): string {\n    return this._chainParams.name\n  }\n\n  /**\n   * Returns the Id of current network\n   * @returns network Id\n   */\n  networkId(): bigint {\n    return BigInt(this._chainParams.networkId)\n  }\n\n  /**\n   * Returns the active EIPs\n   * @returns List of EIPs\n   */\n  eips(): number[] {\n    return this._eips\n  }\n\n  /**\n   * Returns the consensus type of the network\n   * Possible values: \"pow\"|\"poa\"|\"pos\"\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusType(): string | ConsensusType {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['type']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? this._chainParams['consensus']['type']\n  }\n\n  /**\n   * Returns the concrete consensus implementation\n   * algorithm or protocol for the network\n   * e.g. \"ethash\" for \"pow\" consensus type,\n   * \"clique\" for \"poa\" consensus type or\n   * \"casper\" for \"pos\" consensus type.\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusAlgorithm(): string | ConsensusAlgorithm {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        value = hfChanges[1]['consensus']['algorithm']\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return value ?? (this._chainParams['consensus']['algorithm'] as ConsensusAlgorithm)\n  }\n\n  /**\n   * Returns a dictionary with consensus configuration\n   * parameters based on the consensus algorithm\n   *\n   * Expected returns (parameters must be present in\n   * the respective chain json files):\n   *\n   * ethash: empty object\n   * clique: period, epoch\n   * casper: empty object\n   *\n   * Note: This value can update along a Hardfork.\n   */\n  consensusConfig(): { [key: string]: CliqueConfig | EthashConfig | CasperConfig } {\n    const hardfork = this.hardfork()\n\n    let value\n    for (const hfChanges of this.HARDFORK_CHANGES) {\n      if ('consensus' in hfChanges[1]) {\n        // The config parameter is named after the respective consensus algorithm\n        value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']]\n      }\n      if (hfChanges[0] === hardfork) break\n    }\n    return (\n      value ?? this._chainParams['consensus'][this.consensusAlgorithm() as ConsensusAlgorithm] ?? {}\n    )\n  }\n\n  /**\n   * Returns a deep copy of this {@link Common} instance.\n   */\n  copy(): Common {\n    const copy = Object.assign(Object.create(Object.getPrototypeOf(this)), this)\n    copy.removeAllListeners()\n    return copy\n  }\n\n  static _getInitializedChains(customChains?: ChainConfig[]): ChainsConfig {\n    const names: ChainName = {}\n    for (const [name, id] of Object.entries(Chain)) {\n      names[id] = name.toLowerCase()\n    }\n    const chains = { mainnet, ropsten, rinkeby, goerli, sepolia } as ChainsConfig\n    if (customChains) {\n      for (const chain of customChains) {\n        const { name } = chain\n        names[chain.chainId.toString()] = name\n        chains[name] = chain\n      }\n    }\n    chains.names = names\n    return chains\n  }\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "export * from './common'\nexport * from './enums'\nexport * from './types'\nexport * from './utils'\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.gindexChild = exports.gindexParent = exports.gindexSibling = exports.concatGindices = exports.getGindexBits = exports.gindexIterator = exports.getGindicesAtDepth = exports.iterateAtDepth = exports.countToDepth = exports.convertGindexToBitstring = exports.toGindexBitstring = exports.toGindex = exports.bitIndexBigInt = void 0;\nfunction bitIndexBigInt(v) {\n    return v.toString(2).length - 1;\n}\nexports.bitIndexBigInt = bitIndexBigInt;\nfunction toGindex(depth, index) {\n    const anchor = BigInt(1) << BigInt(depth);\n    if (index >= anchor) {\n        throw new Error(`index ${index} too large for depth ${depth}`);\n    }\n    return anchor | index;\n}\nexports.toGindex = toGindex;\nfunction toGindexBitstring(depth, index) {\n    const str = index ? Number(index).toString(2) : \"\";\n    if (str.length > depth) {\n        throw new Error(\"index too large for depth\");\n    }\n    else {\n        return \"1\" + str.padStart(depth, \"0\");\n    }\n}\nexports.toGindexBitstring = toGindexBitstring;\nfunction convertGindexToBitstring(gindex) {\n    if (typeof gindex === \"string\") {\n        if (gindex.length === 0) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        return gindex;\n    }\n    else {\n        if (gindex < 1) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        return gindex.toString(2);\n    }\n}\nexports.convertGindexToBitstring = convertGindexToBitstring;\n// Get the depth (root starting at 0) necessary to cover a subtree of `count` elements.\n// (in out): (0 0), (1 0), (2 1), (3 2), (4 2), (5 3), (6 3), (7 3), (8 3), (9 4)\nfunction countToDepth(count) {\n    if (count <= 1) {\n        return 0;\n    }\n    return (count - BigInt(1)).toString(2).length;\n}\nexports.countToDepth = countToDepth;\n/**\n * Iterate through Gindexes at a certain depth\n */\nfunction iterateAtDepth(depth, startIndex, count) {\n    const anchor = BigInt(1) << BigInt(depth);\n    if (startIndex + count > anchor) {\n        throw new Error(\"Too large for depth\");\n    }\n    let i = toGindex(depth, startIndex);\n    const last = i + count;\n    return {\n        [Symbol.iterator]() {\n            return {\n                next() {\n                    if (i < last) {\n                        const value = i;\n                        i++;\n                        return { done: false, value };\n                    }\n                    else {\n                        return { done: true, value: undefined };\n                    }\n                },\n            };\n        },\n    };\n}\nexports.iterateAtDepth = iterateAtDepth;\n/**\n * Return Gindexes at a certain depth\n */\nfunction getGindicesAtDepth(depth, startIndex, count) {\n    const anchor = BigInt(1) << BigInt(depth);\n    if (startIndex + count > anchor) {\n        throw new Error(\"Too large for depth\");\n    }\n    let gindex = toGindex(depth, BigInt(startIndex));\n    const gindices = [];\n    for (let i = 0; i < count; i++) {\n        gindices.push(gindex++);\n    }\n    return gindices;\n}\nexports.getGindicesAtDepth = getGindicesAtDepth;\nconst ERR_INVALID_GINDEX = \"Invalid gindex\";\nfunction gindexIterator(gindex) {\n    let bitstring;\n    if (typeof gindex === \"string\") {\n        if (!gindex.length) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex;\n    }\n    else {\n        if (gindex < 1) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex.toString(2);\n    }\n    let i = 1;\n    const next = () => {\n        if (i === bitstring.length) {\n            return { done: true, value: undefined };\n        }\n        const bit = Number(bitstring[i]);\n        i++;\n        return { done: false, value: bit };\n    };\n    return {\n        [Symbol.iterator]() {\n            return { next };\n        },\n        remainingBitLength() {\n            return bitstring.length - i;\n        },\n    };\n}\nexports.gindexIterator = gindexIterator;\nfunction getGindexBits(gindex) {\n    let bitstring;\n    if (typeof gindex === \"string\") {\n        if (!gindex.length) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex;\n    }\n    else {\n        if (gindex < 1) {\n            throw new Error(ERR_INVALID_GINDEX);\n        }\n        bitstring = gindex.toString(2);\n    }\n    const bits = [];\n    for (let i = 1; i < bitstring.length; i++) {\n        bits.push(Number(bitstring[i]));\n    }\n    return bits;\n}\nexports.getGindexBits = getGindexBits;\n/**\n * Concatenate Generalized Indices\n * Given generalized indices i1 for A -> B, i2 for B -> C .... i_n for Y -> Z, returns\n * the generalized index for A -> Z.\n */\nfunction concatGindices(gindices) {\n    return BigInt(gindices.reduce((acc, gindex) => acc + gindex.toString(2).slice(1), \"0b1\"));\n}\nexports.concatGindices = concatGindices;\nfunction gindexSibling(gindex) {\n    return gindex ^ BigInt(1);\n}\nexports.gindexSibling = gindexSibling;\nfunction gindexParent(gindex) {\n    return gindex / BigInt(2);\n}\nexports.gindexParent = gindexParent;\nfunction gindexChild(gindex, rightChild) {\n    return gindex * BigInt(2) + BigInt(rightChild);\n}\nexports.gindexChild = gindexChild;\n", "import assert from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n// Polyfill for Safari 14\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n// Base SHA2 class (RFC 6234)\nexport abstract class SHA2<T extends SHA2<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    assert.exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    assert.exists(this);\n    assert.output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n", "import { SHA2 } from './_sha2.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// Choice: a ? b : c\nconst Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nconst Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n// prettier-ignore\nconst IV = new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = new Uint32Array(64);\nclass SHA256 extends SHA2<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = IV[0] | 0;\n  B = IV[1] | 0;\n  C = IV[2] | 0;\n  D = IV[3] | 0;\n  E = IV[4] | 0;\n  F = IV[5] | 0;\n  G = IV[6] | 0;\n  H = IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = wrapConstructor(() => new SHA256());\nexport const sha224 = wrapConstructor(() => new SHA224());\n", null, "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.uint8ArrayToHashObject = exports.hashObjectToUint8Array = void 0;\nconst hashObject_1 = require(\"@chainsafe/as-sha256/lib/hashObject\");\nfunction hashObjectToUint8Array(obj) {\n    const byteArr = new Uint8Array(32);\n    hashObject_1.hashObjectToByteArray(obj, byteArr, 0);\n    return byteArr;\n}\nexports.hashObjectToUint8Array = hashObjectToUint8Array;\nfunction uint8ArrayToHashObject(byteArr) {\n    return hashObject_1.byteArrayToHashObject(byteArr);\n}\nexports.uint8ArrayToHashObject = uint8ArrayToHashObject;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hasher = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst util_1 = require(\"./util\");\nconst digest64 = (a, b) => sha256_1.sha256.create().update(a).update(b).digest();\nexports.hasher = {\n    digest64,\n    digest64HashObjects: (a, b) => util_1.uint8ArrayToHashObject(digest64(util_1.hashObjectToUint8Array(a), util_1.hashObjectToUint8Array(b))),\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setHasher = exports.hasher = void 0;\nconst noble_1 = require(\"./noble\");\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./util\"), exports);\n/**\n * Hasher used across the SSZ codebase\n */\nexports.hasher = noble_1.hasher;\n/**\n * Set the hasher to be used across the SSZ codebase\n *\n * WARNING: This function is intended for power users and must be executed before any other SSZ code is imported\n */\nfunction setHasher(newHasher) {\n    exports.hasher = newHasher;\n}\nexports.setHasher = setHasher;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.bitwiseOrNodeH = exports.setNodeH = exports.getNodeH = exports.compose = exports.identity = exports.LeafNode = exports.BranchNode = exports.Node = void 0;\nconst hasher_1 = require(\"./hasher\");\nconst TWO_POWER_32 = 2 ** 32;\n/**\n * An immutable binary merkle tree node\n */\nclass Node {\n    constructor(h0, h1, h2, h3, h4, h5, h6, h7) {\n        this.h0 = h0;\n        this.h1 = h1;\n        this.h2 = h2;\n        this.h3 = h3;\n        this.h4 = h4;\n        this.h5 = h5;\n        this.h6 = h6;\n        this.h7 = h7;\n    }\n    applyHash(root) {\n        this.h0 = root.h0;\n        this.h1 = root.h1;\n        this.h2 = root.h2;\n        this.h3 = root.h3;\n        this.h4 = root.h4;\n        this.h5 = root.h5;\n        this.h6 = root.h6;\n        this.h7 = root.h7;\n    }\n}\nexports.Node = Node;\n/**\n * An immutable binary merkle tree node that has a `left` and `right` child\n */\nclass BranchNode extends Node {\n    constructor(_left, _right) {\n        // First null value is to save an extra variable to check if a node has a root or not\n        super(null, 0, 0, 0, 0, 0, 0, 0);\n        this._left = _left;\n        this._right = _right;\n        if (!_left) {\n            throw new Error(\"Left node is undefined\");\n        }\n        if (!_right) {\n            throw new Error(\"Right node is undefined\");\n        }\n    }\n    get rootHashObject() {\n        if (this.h0 === null) {\n            super.applyHash(hasher_1.hasher.digest64HashObjects(this.left.rootHashObject, this.right.rootHashObject));\n        }\n        return this;\n    }\n    get root() {\n        return hasher_1.hashObjectToUint8Array(this.rootHashObject);\n    }\n    isLeaf() {\n        return false;\n    }\n    get left() {\n        return this._left;\n    }\n    get right() {\n        return this._right;\n    }\n}\nexports.BranchNode = BranchNode;\n/**\n * An immutable binary merkle tree node that has no children\n */\nclass LeafNode extends Node {\n    static fromRoot(root) {\n        return this.fromHashObject(hasher_1.uint8ArrayToHashObject(root));\n    }\n    /**\n     * New LeafNode from existing HashObject.\n     */\n    static fromHashObject(ho) {\n        return new LeafNode(ho.h0, ho.h1, ho.h2, ho.h3, ho.h4, ho.h5, ho.h6, ho.h7);\n    }\n    /**\n     * New LeafNode with its internal value set to zero. Consider using `zeroNode(0)` if you don't need to mutate.\n     */\n    static fromZero() {\n        return new LeafNode(0, 0, 0, 0, 0, 0, 0, 0);\n    }\n    /**\n     * LeafNode with HashObject `(uint32, 0, 0, 0, 0, 0, 0, 0)`.\n     */\n    static fromUint32(uint32) {\n        return new LeafNode(uint32, 0, 0, 0, 0, 0, 0, 0);\n    }\n    /**\n     * Create a new LeafNode with the same internal values. The returned instance is safe to mutate\n     */\n    clone() {\n        return LeafNode.fromHashObject(this);\n    }\n    get rootHashObject() {\n        return this;\n    }\n    get root() {\n        return hasher_1.hashObjectToUint8Array(this);\n    }\n    isLeaf() {\n        return true;\n    }\n    get left() {\n        throw Error(\"LeafNode has no left node\");\n    }\n    get right() {\n        throw Error(\"LeafNode has no right node\");\n    }\n    writeToBytes(data, start, size) {\n        // TODO: Optimize\n        data.set(this.root.slice(0, size), start);\n    }\n    getUint(uintBytes, offsetBytes, clipInfinity) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            const h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                return 0xff & (h >> bitIndex);\n            }\n            else {\n                return 0xffff & (h >> bitIndex);\n            }\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            return getNodeH(this, hIndex) >>> 0;\n        }\n        // number spans 2 h values\n        else if (uintBytes === 8) {\n            const low = getNodeH(this, hIndex);\n            const high = getNodeH(this, hIndex + 1);\n            if (high === 0) {\n                return low >>> 0;\n            }\n            else if (high === -1 && low === -1 && clipInfinity) {\n                // Limit uint returns\n                return Infinity;\n            }\n            else {\n                return (low >>> 0) + (high >>> 0) * TWO_POWER_32;\n            }\n        }\n        // Bigger uint can't be represented\n        else {\n            throw Error(\"uintBytes > 8\");\n        }\n    }\n    getUintBigint(uintBytes, offsetBytes) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            const h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                return BigInt(0xff & (h >> bitIndex));\n            }\n            else {\n                return BigInt(0xffff & (h >> bitIndex));\n            }\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            return BigInt(getNodeH(this, hIndex) >>> 0);\n        }\n        // number spans multiple h values\n        else {\n            const hRange = Math.ceil(uintBytes / 4);\n            let v = BigInt(0);\n            for (let i = 0; i < hRange; i++) {\n                v += BigInt(getNodeH(this, hIndex + i) >>> 0) << BigInt(32 * i);\n            }\n            return v;\n        }\n    }\n    setUint(uintBytes, offsetBytes, value, clipInfinity) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            let h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                h &= ~(0xff << bitIndex);\n                h |= (0xff && value) << bitIndex;\n            }\n            else {\n                h &= ~(0xffff << bitIndex);\n                h |= (0xffff && value) << bitIndex;\n            }\n            setNodeH(this, hIndex, h);\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            setNodeH(this, hIndex, value);\n        }\n        // number spans 2 h values\n        else if (uintBytes === 8) {\n            if (value === Infinity && clipInfinity) {\n                setNodeH(this, hIndex, -1);\n                setNodeH(this, hIndex + 1, -1);\n            }\n            else {\n                setNodeH(this, hIndex, value & 0xffffffff);\n                setNodeH(this, hIndex + 1, (value / TWO_POWER_32) & 0xffffffff);\n            }\n        }\n        // Bigger uint can't be represented\n        else {\n            throw Error(\"uintBytes > 8\");\n        }\n    }\n    setUintBigint(uintBytes, offsetBytes, valueBN) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const value = Number(valueBN);\n            const bitIndex = (offsetBytes % 4) * 8;\n            let h = getNodeH(this, hIndex);\n            if (uintBytes === 1) {\n                h &= ~(0xff << bitIndex);\n                h |= (0xff && value) << bitIndex;\n            }\n            else {\n                h &= ~(0xffff << bitIndex);\n                h |= (0xffff && value) << bitIndex;\n            }\n            setNodeH(this, hIndex, h);\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            setNodeH(this, hIndex, Number(valueBN));\n        }\n        // number spans multiple h values\n        else {\n            const hEnd = hIndex + Math.ceil(uintBytes / 4);\n            for (let i = hIndex; i < hEnd; i++) {\n                setNodeH(this, i, Number(valueBN & BigInt(0xffffffff)));\n                valueBN = valueBN >> BigInt(32);\n            }\n        }\n    }\n    bitwiseOrUint(uintBytes, offsetBytes, value) {\n        const hIndex = Math.floor(offsetBytes / 4);\n        // number has to be masked from an h value\n        if (uintBytes < 4) {\n            const bitIndex = (offsetBytes % 4) * 8;\n            bitwiseOrNodeH(this, hIndex, value << bitIndex);\n        }\n        // number equals the h value\n        else if (uintBytes === 4) {\n            bitwiseOrNodeH(this, hIndex, value);\n        }\n        // number spans multiple h values\n        else {\n            const hEnd = hIndex + Math.ceil(uintBytes / 4);\n            for (let i = hIndex; i < hEnd; i++) {\n                bitwiseOrNodeH(this, i, value & 0xffffffff);\n                value >>= 32;\n            }\n        }\n    }\n}\nexports.LeafNode = LeafNode;\nfunction identity(n) {\n    return n;\n}\nexports.identity = identity;\nfunction compose(inner, outer) {\n    return function (n) {\n        return outer(inner(n));\n    };\n}\nexports.compose = compose;\nfunction getNodeH(node, hIndex) {\n    if (hIndex === 0)\n        return node.h0;\n    else if (hIndex === 1)\n        return node.h1;\n    else if (hIndex === 2)\n        return node.h2;\n    else if (hIndex === 3)\n        return node.h3;\n    else if (hIndex === 4)\n        return node.h4;\n    else if (hIndex === 5)\n        return node.h5;\n    else if (hIndex === 6)\n        return node.h6;\n    else if (hIndex === 7)\n        return node.h7;\n    else\n        throw Error(\"hIndex > 7\");\n}\nexports.getNodeH = getNodeH;\nfunction setNodeH(node, hIndex, value) {\n    if (hIndex === 0)\n        node.h0 = value;\n    else if (hIndex === 1)\n        node.h1 = value;\n    else if (hIndex === 2)\n        node.h2 = value;\n    else if (hIndex === 3)\n        node.h3 = value;\n    else if (hIndex === 4)\n        node.h4 = value;\n    else if (hIndex === 5)\n        node.h5 = value;\n    else if (hIndex === 6)\n        node.h6 = value;\n    else if (hIndex === 7)\n        node.h7 = value;\n    else\n        throw Error(\"hIndex > 7\");\n}\nexports.setNodeH = setNodeH;\nfunction bitwiseOrNodeH(node, hIndex, value) {\n    if (hIndex === 0)\n        node.h0 |= value;\n    else if (hIndex === 1)\n        node.h1 |= value;\n    else if (hIndex === 2)\n        node.h2 |= value;\n    else if (hIndex === 3)\n        node.h3 |= value;\n    else if (hIndex === 4)\n        node.h4 |= value;\n    else if (hIndex === 5)\n        node.h5 |= value;\n    else if (hIndex === 6)\n        node.h6 |= value;\n    else if (hIndex === 7)\n        node.h7 |= value;\n    else\n        throw Error(\"hIndex > 7\");\n}\nexports.bitwiseOrNodeH = bitwiseOrNodeH;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.zeroNode = void 0;\nconst node_1 = require(\"./node\");\nconst zeroes = [node_1.LeafNode.fromZero()];\n/**\n * Return the `Node` at a specified height from the merkle tree made of \"zero data\"\n * ```\n *           ...\n *          /\n *         x           <- height 2\n *      /     \\\n *     x       x       <- height 1\n *   /  \\      /  \\\n * 0x0  0x0  0x0  0x0  <- height 0\n * ```\n */\nfunction zeroNode(height) {\n    if (height >= zeroes.length) {\n        for (let i = zeroes.length; i <= height; i++) {\n            zeroes[i] = new node_1.BranchNode(zeroes[i - 1], zeroes[i - 1]);\n        }\n    }\n    return zeroes[height];\n}\nexports.zeroNode = zeroNode;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.subtreeFillToContents = exports.subtreeFillToLength = exports.subtreeFillToDepth = void 0;\nconst node_1 = require(\"./node\");\nconst zeroNode_1 = require(\"./zeroNode\");\nfunction subtreeFillToDepth(bottom, depth) {\n    let node = bottom;\n    while (depth > 0) {\n        node = new node_1.BranchNode(node, node);\n        depth--;\n    }\n    return node;\n}\nexports.subtreeFillToDepth = subtreeFillToDepth;\nfunction subtreeFillToLength(bottom, depth, length) {\n    const maxLength = 1 << depth;\n    if (length > maxLength)\n        throw new Error(\"ERR_TOO_MANY_NODES\");\n    if (length === maxLength)\n        return subtreeFillToDepth(bottom, depth);\n    if (depth === 0) {\n        if (length === 1)\n            return bottom;\n        else\n            throw new Error(\"ERR_NAVIGATION\");\n    }\n    if (depth === 1) {\n        return new node_1.BranchNode(bottom, length > 1 ? bottom : zeroNode_1.zeroNode(0));\n    }\n    const pivot = maxLength >> 1;\n    if (length <= pivot) {\n        return new node_1.BranchNode(subtreeFillToLength(bottom, depth - 1, length), zeroNode_1.zeroNode(depth - 1));\n    }\n    else {\n        return new node_1.BranchNode(subtreeFillToDepth(bottom, depth - 1), subtreeFillToLength(bottom, depth - 1, length - pivot));\n    }\n}\nexports.subtreeFillToLength = subtreeFillToLength;\n/**\n * WARNING: Mutates the provided nodes array.\n * TODO: Don't mutate the nodes array.\n */\nfunction subtreeFillToContents(nodes, depth) {\n    const maxLength = 2 ** depth;\n    if (nodes.length > maxLength) {\n        throw new Error(`nodes.length ${nodes.length} over maxIndex at depth ${depth}`);\n    }\n    if (nodes.length === 0) {\n        return zeroNode_1.zeroNode(depth);\n    }\n    if (depth === 0) {\n        return nodes[0];\n    }\n    if (depth === 1) {\n        return nodes.length > 1\n            ? // All nodes at depth 1 available\n                new node_1.BranchNode(nodes[0], nodes[1])\n            : // Pad with zero node\n                new node_1.BranchNode(nodes[0], zeroNode_1.zeroNode(0));\n    }\n    let count = nodes.length;\n    for (let d = depth; d > 0; d--) {\n        const countRemainder = count % 2;\n        const countEven = count - countRemainder;\n        // For each depth level compute the new BranchNodes and overwrite the nodes array\n        for (let i = 0; i < countEven; i += 2) {\n            nodes[i / 2] = new node_1.BranchNode(nodes[i], nodes[i + 1]);\n        }\n        if (countRemainder > 0) {\n            nodes[countEven / 2] = new node_1.BranchNode(nodes[countEven], zeroNode_1.zeroNode(depth - d));\n        }\n        // If there was remainer, 2 nodes are added to the count\n        count = countEven / 2 + countRemainder;\n    }\n    return nodes[0];\n}\nexports.subtreeFillToContents = subtreeFillToContents;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.packedNodeRootsToBytes = exports.packedRootsBytesToLeafNodes = exports.packedRootsBytesToNode = void 0;\nconst subtree_1 = require(\"./subtree\");\nconst node_1 = require(\"./node\");\nfunction packedRootsBytesToNode(depth, dataView, start, end) {\n    const leafNodes = packedRootsBytesToLeafNodes(dataView, start, end);\n    return subtree_1.subtreeFillToContents(leafNodes, depth);\n}\nexports.packedRootsBytesToNode = packedRootsBytesToNode;\n/**\n * Optimized deserialization of linear bytes to consecutive leaf nodes\n */\nfunction packedRootsBytesToLeafNodes(dataView, start, end) {\n    const size = end - start;\n    // If the offset in data is not a multiple of 4, Uint32Array can't be used\n    // > start offset of Uint32Array should be a multiple of 4\n    // NOTE: Performance tests show that using a DataView is as fast as Uint32Array\n    const fullNodeCount = Math.floor(size / 32);\n    const leafNodes = new Array(Math.ceil(size / 32));\n    // Efficiently construct the tree writing to hashObjects directly\n    // TODO: Optimize, with this approach each h property is written twice\n    for (let i = 0; i < fullNodeCount; i++) {\n        const offset = start + i * 32;\n        leafNodes[i] = new node_1.LeafNode(dataView.getInt32(offset + 0, true), dataView.getInt32(offset + 4, true), dataView.getInt32(offset + 8, true), dataView.getInt32(offset + 12, true), dataView.getInt32(offset + 16, true), dataView.getInt32(offset + 20, true), dataView.getInt32(offset + 24, true), dataView.getInt32(offset + 28, true));\n    }\n    // Consider that the last node may only include partial data\n    const remainderBytes = size % 32;\n    // Last node\n    if (remainderBytes > 0) {\n        const node = new node_1.LeafNode(0, 0, 0, 0, 0, 0, 0, 0);\n        leafNodes[fullNodeCount] = node;\n        // Loop to dynamically copy the full h values\n        const fullHCount = Math.floor(remainderBytes / 4);\n        for (let h = 0; h < fullHCount; h++) {\n            node_1.setNodeH(node, h, dataView.getInt32(start + fullNodeCount * 32 + h * 4, true));\n        }\n        const remainderUint32 = size % 4;\n        if (remainderUint32 > 0) {\n            let h = 0;\n            for (let i = 0; i < remainderUint32; i++) {\n                h |= dataView.getUint8(start + size - remainderUint32 + i) << (i * 8);\n            }\n            node_1.setNodeH(node, fullHCount, h);\n        }\n    }\n    return leafNodes;\n}\nexports.packedRootsBytesToLeafNodes = packedRootsBytesToLeafNodes;\n/**\n * Optimized serialization of consecutive leave nodes to linear bytes\n */\nfunction packedNodeRootsToBytes(dataView, start, size, nodes) {\n    // If the offset in data is not a multiple of 4, Uint32Array can't be used\n    // > start offset of Uint32Array should be a multiple of 4\n    // NOTE: Performance tests show that using a DataView is as fast as Uint32Array\n    // Consider that the last node may only include partial data\n    const remainderBytes = size % 32;\n    // Full nodes\n    // Efficiently get hashObjects data into data\n    const fullNodeCount = Math.floor(size / 32);\n    for (let i = 0; i < fullNodeCount; i++) {\n        const node = nodes[i];\n        const offset = start + i * 32;\n        dataView.setInt32(offset + 0, node.h0, true);\n        dataView.setInt32(offset + 4, node.h1, true);\n        dataView.setInt32(offset + 8, node.h2, true);\n        dataView.setInt32(offset + 12, node.h3, true);\n        dataView.setInt32(offset + 16, node.h4, true);\n        dataView.setInt32(offset + 20, node.h5, true);\n        dataView.setInt32(offset + 24, node.h6, true);\n        dataView.setInt32(offset + 28, node.h7, true);\n    }\n    // Last node\n    if (remainderBytes > 0) {\n        const node = nodes[fullNodeCount];\n        // Loop to dynamically copy the full h values\n        const fullHCount = Math.floor(remainderBytes / 4);\n        for (let h = 0; h < fullHCount; h++) {\n            dataView.setInt32(start + fullNodeCount * 32 + h * 4, node_1.getNodeH(node, h), true);\n        }\n        const remainderUint32 = size % 4;\n        if (remainderUint32 > 0) {\n            const h = node_1.getNodeH(node, fullHCount);\n            for (let i = 0; i < remainderUint32; i++) {\n                dataView.setUint8(start + size - remainderUint32 + i, (h >> (i * 8)) & 0xff);\n            }\n        }\n    }\n}\nexports.packedNodeRootsToBytes = packedNodeRootsToBytes;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeFromSingleProof = exports.createSingleProof = exports.ERR_INVALID_NAV = void 0;\nconst node_1 = require(\"../node\");\nconst gindex_1 = require(\"../gindex\");\nexports.ERR_INVALID_NAV = \"Invalid tree navigation\";\nfunction createSingleProof(rootNode, index) {\n    const witnesses = [];\n    let node = rootNode;\n    for (const i of gindex_1.gindexIterator(index)) {\n        if (i) {\n            if (node.isLeaf())\n                throw new Error(exports.ERR_INVALID_NAV);\n            witnesses.push(node.left.root);\n            node = node.right;\n        }\n        else {\n            if (node.isLeaf())\n                throw new Error(exports.ERR_INVALID_NAV);\n            witnesses.push(node.right.root);\n            node = node.left;\n        }\n    }\n    return [node.root, witnesses.reverse()];\n}\nexports.createSingleProof = createSingleProof;\nfunction createNodeFromSingleProof(gindex, leaf, witnesses) {\n    let node = node_1.LeafNode.fromRoot(leaf);\n    const w = witnesses.slice().reverse();\n    while (gindex > 1) {\n        const sibling = node_1.LeafNode.fromRoot(w.pop());\n        if (gindex % BigInt(2) === BigInt(0)) {\n            node = new node_1.BranchNode(node, sibling);\n        }\n        else {\n            node = new node_1.BranchNode(sibling, node);\n        }\n        gindex = gindex / BigInt(2);\n    }\n    return node;\n}\nexports.createNodeFromSingleProof = createNodeFromSingleProof;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.treeZeroAfterIndex = exports.iterateNodesAtDepth = exports.getNodesAtDepth = exports.setNodesAtDepth = exports.setNodeAtDepth = exports.getNodeAtDepth = exports.setNodeWithFn = exports.setNode = exports.getNode = exports.Tree = void 0;\nconst zeroNode_1 = require(\"./zeroNode\");\nconst gindex_1 = require(\"./gindex\");\nconst node_1 = require(\"./node\");\nconst proof_1 = require(\"./proof\");\nconst single_1 = require(\"./proof/single\");\n/**\n * Binary merkle tree\n *\n * Wrapper around immutable `Node` to support mutability.\n *\n * Mutability between a parent tree and subtree is achieved by maintaining a `hook` callback, which updates the parent when the subtree is updated.\n */\nclass Tree {\n    constructor(node, hook) {\n        this._rootNode = node;\n        if (hook) {\n            if (typeof WeakRef === \"undefined\") {\n                this.hook = hook;\n            }\n            else {\n                this.hook = new WeakRef(hook);\n            }\n        }\n    }\n    /**\n     * Create a `Tree` from a `Proof` object\n     */\n    static createFromProof(proof) {\n        return new Tree(proof_1.createNodeFromProof(proof));\n    }\n    /**\n     * The root node of the tree\n     */\n    get rootNode() {\n        return this._rootNode;\n    }\n    /**\n     *\n     * Setting the root node will trigger a call to the tree's `hook` if it exists.\n     */\n    set rootNode(newRootNode) {\n        this._rootNode = newRootNode;\n        if (this.hook) {\n            // WeakRef should not change status during a program's execution\n            // So, use WeakRef feature detection to assume the type of this.hook\n            // to minimize the memory footprint of Tree\n            if (typeof WeakRef === \"undefined\") {\n                this.hook(newRootNode);\n            }\n            else {\n                const hookVar = this.hook.deref();\n                if (hookVar) {\n                    hookVar(newRootNode);\n                }\n                else {\n                    // Hook has been garbage collected, no need to keep the hookRef\n                    this.hook = undefined;\n                }\n            }\n        }\n    }\n    /**\n     * The root hash of the tree\n     */\n    get root() {\n        return this.rootNode.root;\n    }\n    /**\n     * Return a copy of the tree\n     */\n    clone() {\n        return new Tree(this.rootNode);\n    }\n    /**\n     * Return the subtree at the specified gindex.\n     *\n     * Note: The returned subtree will have a `hook` attached to the parent tree.\n     * Updates to the subtree will result in updates to the parent.\n     */\n    getSubtree(index) {\n        return new Tree(this.getNode(index), (node) => this.setNode(index, node));\n    }\n    /**\n     * Return the node at the specified gindex.\n     */\n    getNode(gindex) {\n        return getNode(this.rootNode, gindex);\n    }\n    /**\n     * Return the node at the specified depth and index.\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    getNodeAtDepth(depth, index) {\n        return getNodeAtDepth(this.rootNode, depth, index);\n    }\n    /**\n     * Return the hash at the specified gindex.\n     */\n    getRoot(index) {\n        return this.getNode(index).root;\n    }\n    /**\n     * Set the node at at the specified gindex.\n     */\n    setNode(gindex, n) {\n        this.rootNode = setNode(this.rootNode, gindex, n);\n    }\n    /**\n     * Traverse to the node at the specified gindex,\n     * then apply the function to get a new node and set the node at the specified gindex with the result.\n     *\n     * This is a convenient method to avoid traversing the tree 2 times to\n     * get and set.\n     */\n    setNodeWithFn(gindex, getNewNode) {\n        this.rootNode = setNodeWithFn(this.rootNode, gindex, getNewNode);\n    }\n    /**\n     * Set the node at the specified depth and index.\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    setNodeAtDepth(depth, index, node) {\n        this.rootNode = setNodeAtDepth(this.rootNode, depth, index, node);\n    }\n    /**\n     * Set the hash at the specified gindex.\n     *\n     * Note: This will set a new `LeafNode` at the specified gindex.\n     */\n    setRoot(index, root) {\n        this.setNode(index, node_1.LeafNode.fromRoot(root));\n    }\n    /**\n     * Fast read-only iteration\n     * In-order traversal of nodes at `depth`\n     * starting from the `startIndex`-indexed node\n     * iterating through `count` nodes\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    getNodesAtDepth(depth, startIndex, count) {\n        return getNodesAtDepth(this.rootNode, depth, startIndex, count);\n    }\n    /**\n     * Fast read-only iteration\n     * In-order traversal of nodes at `depth`\n     * starting from the `startIndex`-indexed node\n     * iterating through `count` nodes\n     *\n     * Supports index up to `Number.MAX_SAFE_INTEGER`.\n     */\n    iterateNodesAtDepth(depth, startIndex, count) {\n        return iterateNodesAtDepth(this.rootNode, depth, startIndex, count);\n    }\n    /**\n     * Return a merkle proof for the node at the specified gindex.\n     */\n    getSingleProof(index) {\n        return single_1.createSingleProof(this.rootNode, index)[1];\n    }\n    /**\n     * Return a merkle proof for the proof input.\n     *\n     * This method can be used to create multiproofs.\n     */\n    getProof(input) {\n        return proof_1.createProof(this.rootNode, input);\n    }\n}\nexports.Tree = Tree;\n/**\n * Return the node at the specified gindex.\n */\nfunction getNode(rootNode, gindex) {\n    const gindexBitstring = gindex_1.convertGindexToBitstring(gindex);\n    let node = rootNode;\n    for (let i = 1; i < gindexBitstring.length; i++) {\n        if (node.isLeaf()) {\n            throw new Error(`Invalid tree - found leaf at depth ${i}`);\n        }\n        // If bit is set, means navigate right\n        node = gindexBitstring[i] === \"1\" ? node.right : node.left;\n    }\n    return node;\n}\nexports.getNode = getNode;\n/**\n * Set the node at at the specified gindex.\n * Returns the new root node.\n */\nfunction setNode(rootNode, gindex, n) {\n    // Pre-compute entire bitstring instead of using an iterator (25% faster)\n    const gindexBitstring = gindex_1.convertGindexToBitstring(gindex);\n    const parentNodes = getParentNodes(rootNode, gindexBitstring);\n    return rebindNodeToRoot(gindexBitstring, parentNodes, n);\n}\nexports.setNode = setNode;\n/**\n * Traverse to the node at the specified gindex,\n * then apply the function to get a new node and set the node at the specified gindex with the result.\n *\n * This is a convenient method to avoid traversing the tree 2 times to\n * get and set.\n *\n * Returns the new root node.\n */\nfunction setNodeWithFn(rootNode, gindex, getNewNode) {\n    // Pre-compute entire bitstring instead of using an iterator (25% faster)\n    const gindexBitstring = gindex_1.convertGindexToBitstring(gindex);\n    const parentNodes = getParentNodes(rootNode, gindexBitstring);\n    const lastParentNode = parentNodes[parentNodes.length - 1];\n    const lastBit = gindexBitstring[gindexBitstring.length - 1];\n    const oldNode = lastBit === \"1\" ? lastParentNode.right : lastParentNode.left;\n    const newNode = getNewNode(oldNode);\n    return rebindNodeToRoot(gindexBitstring, parentNodes, newNode);\n}\nexports.setNodeWithFn = setNodeWithFn;\n/**\n * Traverse the tree from root node, ignore the last bit to get all parent nodes\n * of the specified bitstring.\n */\nfunction getParentNodes(rootNode, bitstring) {\n    let node = rootNode;\n    // Keep a list of all parent nodes of node at gindex `index`. Then walk the list\n    // backwards to rebind them \"recursively\" with the new nodes without using functions\n    const parentNodes = [rootNode];\n    // Ignore the first bit, left right directions are at bits [1,..]\n    // Ignore the last bit, no need to push the target node to the parentNodes array\n    for (let i = 1; i < bitstring.length - 1; i++) {\n        // Compare to string directly to prevent unnecessary type conversions\n        if (bitstring[i] === \"1\") {\n            node = node.right;\n        }\n        else {\n            node = node.left;\n        }\n        parentNodes.push(node);\n    }\n    return parentNodes;\n}\n/**\n * Build a new tree structure from bitstring, parentNodes and a new node.\n * Returns the new root node.\n */\nfunction rebindNodeToRoot(bitstring, parentNodes, newNode) {\n    let node = newNode;\n    // Ignore the first bit, left right directions are at bits [1,..]\n    // Iterate the list backwards including the last bit, but offset the parentNodes array\n    // by one since the first bit in bitstring was ignored in the previous loop\n    for (let i = bitstring.length - 1; i >= 1; i--) {\n        if (bitstring[i] === \"1\") {\n            node = new node_1.BranchNode(parentNodes[i - 1].left, node);\n        }\n        else {\n            node = new node_1.BranchNode(node, parentNodes[i - 1].right);\n        }\n    }\n    return node;\n}\n/**\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n */\nfunction getNodeAtDepth(rootNode, depth, index) {\n    if (depth === 0) {\n        return rootNode;\n    }\n    if (depth === 1) {\n        return index === 0 ? rootNode.left : rootNode.right;\n    }\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = depth - 1;\n    const depthiParent = 0;\n    let node = rootNode;\n    for (let d = depthiRoot; d >= depthiParent; d--) {\n        node = isLeftNode(d, index) ? node.left : node.right;\n    }\n    return node;\n}\nexports.getNodeAtDepth = getNodeAtDepth;\n/**\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n */\nfunction setNodeAtDepth(rootNode, nodesDepth, index, nodeChanged) {\n    // TODO: OPTIMIZE (if necessary)\n    return setNodesAtDepth(rootNode, nodesDepth, [index], [nodeChanged]);\n}\nexports.setNodeAtDepth = setNodeAtDepth;\n/**\n * Set multiple nodes in batch, editing and traversing nodes strictly once.\n *\n * - gindexes MUST be sorted in ascending order beforehand.\n * - All gindexes must be at the exact same depth.\n * - Depth must be > 0, if 0 just replace the root node.\n *\n * Strategy: for each gindex in `gindexes` navigate to the depth of its parent,\n * and create a new parent. Then calculate the closest common depth with the next\n * gindex and navigate upwards creating or caching nodes as necessary. Loop and repeat.\n *\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n */\nfunction setNodesAtDepth(rootNode, nodesDepth, indexes, nodes) {\n    // depth depthi   gindexes   indexes\n    // 0     1           1          0\n    // 1     0         2   3      0   1\n    // 2     -        4 5 6 7    0 1 2 3\n    // '10' means, at depth 1, node is at the left\n    //\n    // For index N check if the bit at position depthi is set to navigate right at depthi\n    // ```\n    // mask = 1 << depthi\n    // goRight = (N & mask) == mask\n    // ```\n    // If depth is 0 there's only one node max and the optimization below will cause a navigation error.\n    // For this case, check if there's a new root node and return it, otherwise the current rootNode.\n    if (nodesDepth === 0) {\n        return nodes.length > 0 ? nodes[0] : rootNode;\n    }\n    /**\n     * Contiguous filled stack of parent nodes. It get filled in the first descent\n     * Indexed by depthi\n     */\n    const parentNodeStack = new Array(nodesDepth);\n    /**\n     * Temp stack of left parent nodes, index by depthi.\n     * Node leftParentNodeStack[depthi] is a node at d = depthi - 1, such that:\n     * ```\n     * parentNodeStack[depthi].left = leftParentNodeStack[depthi]\n     * ```\n     */\n    const leftParentNodeStack = new Array(nodesDepth);\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = nodesDepth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    // TODO: Iterate to depth 32 to allow using bit ops\n    // for (; depthi >= 32; depthi--) {\n    //   node = node.left;\n    // }\n    for (let i = 0; i < indexes.length; i++) {\n        const index = indexes[i];\n        // Navigate down until parent depth, and store the chain of nodes\n        //\n        // Starts from latest common depth, so node is the parent node at `depthi`\n        // When persisting the next node, store at the `d - 1` since its the child of node at `depthi`\n        //\n        // Stops at the level above depthiParent. For the re-binding routing below node must be at depthiParent\n        for (let d = depthi; d > depthiParent; d--) {\n            node = isLeftNode(d, index) ? node.left : node.right;\n            parentNodeStack[d - 1] = node;\n        }\n        depthi = depthiParent;\n        // If this is the left node, check first it the next node is on the right\n        //\n        //   -    If both nodes exist, create new\n        //  / \\\n        // x   x\n        //\n        //   -    If only the left node exists, rebind left\n        //  / \\\n        // x   -\n        //\n        //   -    If this is the right node, only the right node exists, rebind right\n        //  / \\\n        // -   x\n        // d = 0, mask = 1 << d = 1\n        const isLeftLeafNode = (index & 1) !== 1;\n        if (isLeftLeafNode) {\n            // Next node is the very next to the right of current node\n            if (index + 1 === indexes[i + 1]) {\n                node = new node_1.BranchNode(nodes[i], nodes[i + 1]);\n                // Move pointer one extra forward since node has consumed two nodes\n                i++;\n            }\n            else {\n                node = new node_1.BranchNode(nodes[i], node.right);\n            }\n        }\n        else {\n            node = new node_1.BranchNode(node.left, nodes[i]);\n        }\n        // Here `node` is the new BranchNode at depthi `depthiParent`\n        // Now climb upwards until finding the common node with the next index\n        // For the last iteration, climb to the root at `depthiRoot`\n        const isLastIndex = i >= indexes.length - 1;\n        const diffDepthi = isLastIndex ? depthiRoot : findDiffDepthi(index, indexes[i + 1]);\n        // When climbing up from a left node there are two possible paths\n        // 1. Go to the right of the parent: Store left node to rebind latter\n        // 2. Go another level up: Will never visit the left node again, so must rebind now\n        // 🡼 \\     Rebind left only, will never visit this node again\n        // 🡽 /\\\n        //\n        //    / 🡽  Rebind left only (same as above)\n        // 🡽 /\\\n        //\n        // 🡽 /\\ 🡾  Store left node to rebind the entire node when returning\n        //\n        // 🡼 \\     Rebind right with left if exists, will never visit this node again\n        //   /\\ 🡼\n        //\n        //    / 🡽  Rebind right with left if exists (same as above)\n        //   /\\ 🡼\n        for (let d = depthiParent + 1; d <= diffDepthi; d++) {\n            // If node is on the left, store for latter\n            // If node is on the right merge with stored left node\n            if (isLeftNode(d, index)) {\n                if (isLastIndex || d !== diffDepthi) {\n                    // If it's last index, bind with parent since it won't navigate to the right anymore\n                    // Also, if still has to move upwards, rebind since the node won't be visited anymore\n                    node = new node_1.BranchNode(node, parentNodeStack[d].right);\n                }\n                else {\n                    // Only store the left node if it's at d = diffDepth\n                    leftParentNodeStack[d] = node;\n                    node = parentNodeStack[d];\n                }\n            }\n            else {\n                const leftNode = leftParentNodeStack[d];\n                if (leftNode !== undefined) {\n                    node = new node_1.BranchNode(leftNode, node);\n                    leftParentNodeStack[d] = undefined;\n                }\n                else {\n                    node = new node_1.BranchNode(parentNodeStack[d].left, node);\n                }\n            }\n        }\n        // Prepare next loop\n        // Go to the parent of the depth with diff, to switch branches to the right\n        depthi = diffDepthi;\n    }\n    // Done, return new root node\n    return node;\n}\nexports.setNodesAtDepth = setNodesAtDepth;\n/**\n * Fast read-only iteration\n * In-order traversal of nodes at `depth`\n * starting from the `startIndex`-indexed node\n * iterating through `count` nodes\n *\n * **Strategy**\n * 1. Navigate down to parentDepth storing a stack of parents\n * 2. At target level push current node\n * 3. Go up to the first level that navigated left\n * 4. Repeat (1) for next index\n */\nfunction getNodesAtDepth(rootNode, depth, startIndex, count) {\n    // Optimized paths for short trees (x20 times faster)\n    if (depth === 0) {\n        return startIndex === 0 && count > 0 ? [rootNode] : [];\n    }\n    else if (depth === 1) {\n        if (count === 0) {\n            return [];\n        }\n        else if (count === 1) {\n            return startIndex === 0 ? [rootNode.left] : [rootNode.right];\n        }\n        else {\n            return [rootNode.left, rootNode.right];\n        }\n    }\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = depth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Contiguous filled stack of parent nodes. It get filled in the first descent\n    // Indexed by depthi\n    const parentNodeStack = new Array(depth);\n    const isLeftStack = new Array(depth);\n    const nodes = new Array(count);\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    for (let i = 0; i < count; i++) {\n        for (let d = depthi; d >= depthiParent; d--) {\n            if (d !== depthi) {\n                parentNodeStack[d] = node;\n            }\n            const isLeft = isLeftNode(d, startIndex + i);\n            isLeftStack[d] = isLeft;\n            node = isLeft ? node.left : node.right;\n        }\n        nodes[i] = node;\n        // Find the first depth where navigation when left.\n        // Store that height and go right from there\n        for (let d = depthiParent; d <= depthiRoot; d++) {\n            if (isLeftStack[d] === true) {\n                depthi = d;\n                break;\n            }\n        }\n        node = parentNodeStack[depthi];\n    }\n    return nodes;\n}\nexports.getNodesAtDepth = getNodesAtDepth;\n/**\n * @see getNodesAtDepth but instead of pushing to an array, it yields\n */\nfunction* iterateNodesAtDepth(rootNode, depth, startIndex, count) {\n    const endIndex = startIndex + count;\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = depth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Contiguous filled stack of parent nodes. It get filled in the first descent\n    // Indexed by depthi\n    const parentNodeStack = new Array(depth);\n    const isLeftStack = new Array(depth);\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    for (let index = startIndex; index < endIndex; index++) {\n        for (let d = depthi; d >= depthiParent; d--) {\n            if (d !== depthi) {\n                parentNodeStack[d] = node;\n            }\n            const isLeft = isLeftNode(d, index);\n            isLeftStack[d] = isLeft;\n            node = isLeft ? node.left : node.right;\n        }\n        yield node;\n        // Find the first depth where navigation when left.\n        // Store that height and go right from there\n        for (let d = depthiParent; d <= depthiRoot; d++) {\n            if (isLeftStack[d] === true) {\n                depthi = d;\n                break;\n            }\n        }\n        node = parentNodeStack[depthi];\n    }\n}\nexports.iterateNodesAtDepth = iterateNodesAtDepth;\n/**\n * Zero's all nodes right of index with constant depth of `nodesDepth`.\n *\n * For example, zero-ing this tree at depth 2 after index 0\n * ```\n *    X              X\n *  X   X    ->    X   0\n * X X X X        X 0 0 0\n * ```\n *\n * Or, zero-ing this tree at depth 3 after index 2\n * ```\n *        X                     X\n *    X       X             X       0\n *  X   X   X   X    ->   X   X   0   0\n * X X X X X X X X       X X X 0 0 0 0 0\n * ```\n *\n * The strategy is to first navigate down to `nodesDepth` and `index` and keep a stack of parents.\n * Then navigate up re-binding:\n * - If navigated to the left rebind with zeroNode()\n * - If navigated to the right rebind with parent.left from the stack\n */\nfunction treeZeroAfterIndex(rootNode, nodesDepth, index) {\n    // depth depthi   gindexes   indexes\n    // 0     1           1          0\n    // 1     0         2   3      0   1\n    // 2     -        4 5 6 7    0 1 2 3\n    // '10' means, at depth 1, node is at the left\n    //\n    // For index N check if the bit at position depthi is set to navigate right at depthi\n    // ```\n    // mask = 1 << depthi\n    // goRight = (N & mask) == mask\n    // ```\n    // Degenerate case where tree is zero after a negative index (-1).\n    // All positive indexes are zero, so the entire tree is zero. Return cached zero node as root.\n    if (index < 0) {\n        return zeroNode_1.zeroNode(nodesDepth);\n    }\n    /**\n     * Contiguous filled stack of parent nodes. It get filled in the first descent\n     * Indexed by depthi\n     */\n    const parentNodeStack = new Array(nodesDepth);\n    // Ignore first bit \"1\", then substract 1 to get to the parent\n    const depthiRoot = nodesDepth - 1;\n    const depthiParent = 0;\n    let depthi = depthiRoot;\n    let node = rootNode;\n    // Insert root node to make the loop below general\n    parentNodeStack[depthiRoot] = rootNode;\n    // Navigate down until parent depth, and store the chain of nodes\n    //\n    // Stops at the depthiParent level. To rebind below down to `nodesDepth`\n    for (let d = depthi; d >= depthiParent; d--) {\n        node = isLeftNode(d, index) ? node.left : node.right;\n        parentNodeStack[d - 1] = node;\n    }\n    depthi = depthiParent;\n    // Now climb up re-binding with either zero of existing tree.\n    for (let d = depthiParent; d <= depthiRoot; d++) {\n        if (isLeftNode(d, index)) {\n            // If navigated to the left, then all the child nodes of the right node are NOT part of the new tree.\n            // So re-bind new `node` with a zeroNode at the current depth.\n            node = new node_1.BranchNode(node, zeroNode_1.zeroNode(d));\n        }\n        else {\n            // If navigated to the right, then all the child nodes of the left node are part of the new tree.\n            // So re-bind new `node` with the existing left node of the parent.\n            node = new node_1.BranchNode(parentNodeStack[d].left, node);\n        }\n    }\n    // Done, return new root node\n    return node;\n}\nexports.treeZeroAfterIndex = treeZeroAfterIndex;\n/**\n * Returns true if the `index` at `depth` is a left node, false if it is a right node.\n *\n * Supports index up to `Number.MAX_SAFE_INTEGER`.\n * In Eth2 case the biggest tree's index is 2**40 (VALIDATOR_REGISTRY_LIMIT)\n */\nfunction isLeftNode(depthi, index) {\n    if (depthi > 31) {\n        // Javascript can only do bitwise ops with 32 bit numbers.\n        // Shifting left 1 by 32 wraps around and becomes 1.\n        // Get the high part of `index` and adjust depthi\n        const indexHi = (index / 2 ** 32) >>> 0;\n        const mask = 1 << (depthi - 32);\n        return (indexHi & mask) !== mask;\n    }\n    const mask = 1 << depthi;\n    return (index & mask) !== mask;\n}\n/**\n * depth depthi   gindexes   indexes\n * 0     1           1          0\n * 1     0         2   3      0   1\n * 2     -        4 5 6 7    0 1 2 3\n *\n * **Conditions**:\n * - `from` and `to` must not be equal\n *\n * @param from Index\n * @param to Index\n */\nfunction findDiffDepthi(from, to) {\n    return (\n    // (0,0) -> 0 | (0,1) -> 1 | (0,2) -> 2\n    Math.ceil(Math.log2(-~(from ^ to))) -\n        // Must offset by one to match the depthi scale\n        1);\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.computeMultiProofBitstrings = exports.SortOrder = exports.filterParentBitstrings = exports.sortDecreasingBitstrings = exports.sortInOrderBitstrings = exports.computeProofBitstrings = exports.computeProofGindices = void 0;\nconst gindex_1 = require(\"../gindex\");\n// Not currently in use, but simpler implementation useful for testing\n/**\n * Compute both the path and branch indices\n *\n * Path indices are parent indices upwards toward the root\n * Branch indices are witnesses required for a merkle proof\n */\nfunction computeProofGindices(gindex) {\n    const path = new Set();\n    const branch = new Set();\n    let g = gindex;\n    while (g > 1) {\n        path.add(g);\n        branch.add(gindex_1.gindexSibling(g));\n        g = gindex_1.gindexParent(g);\n    }\n    return { path, branch };\n}\nexports.computeProofGindices = computeProofGindices;\n/**\n * Compute both the path and branch indices\n *\n * Path indices are parent indices upwards toward the root\n * Branch indices are witnesses required for a merkle proof\n */\nfunction computeProofBitstrings(gindex) {\n    const path = new Set();\n    const branch = new Set();\n    let g = gindex;\n    while (g.length > 1) {\n        path.add(g);\n        const lastBit = g[g.length - 1];\n        const parent = g.substring(0, g.length - 1);\n        branch.add(parent + (Number(lastBit) ^ 1));\n        g = parent;\n    }\n    return { path, branch };\n}\nexports.computeProofBitstrings = computeProofBitstrings;\n/**\n * Sort generalized indices in-order\n * @param bitLength maximum bit length of generalized indices to sort\n */\nfunction sortInOrderBitstrings(gindices, bitLength) {\n    if (!gindices.length) {\n        return [];\n    }\n    return gindices\n        .map((g) => g.padEnd(bitLength))\n        .sort()\n        .map((g) => g.trim());\n}\nexports.sortInOrderBitstrings = sortInOrderBitstrings;\n/**\n * Sort generalized indices in decreasing order\n */\nfunction sortDecreasingBitstrings(gindices) {\n    if (!gindices.length) {\n        return [];\n    }\n    return gindices.sort((a, b) => {\n        if (a.length < b.length) {\n            return 1;\n        }\n        else if (b.length < a.length) {\n            return -1;\n        }\n        let aPos0 = a.indexOf(\"0\");\n        let bPos0 = b.indexOf(\"0\");\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            if (aPos0 === -1) {\n                return -1;\n            }\n            else if (bPos0 === -1) {\n                return 1;\n            }\n            if (aPos0 < bPos0) {\n                return 1;\n            }\n            else if (bPos0 < aPos0) {\n                return -1;\n            }\n            aPos0 = a.indexOf(\"0\", aPos0 + 1);\n            bPos0 = b.indexOf(\"0\", bPos0 + 1);\n        }\n    });\n}\nexports.sortDecreasingBitstrings = sortDecreasingBitstrings;\n/**\n * Filter out parent generalized indices\n */\nfunction filterParentBitstrings(gindices) {\n    const sortedBitstrings = gindices.slice().sort((a, b) => a.length - b.length);\n    const filtered = [];\n    outer: for (let i = 0; i < sortedBitstrings.length; i++) {\n        const bsA = sortedBitstrings[i];\n        for (let j = i + 1; j < sortedBitstrings.length; j++) {\n            const bsB = sortedBitstrings[j];\n            if (bsB.startsWith(bsA)) {\n                continue outer;\n            }\n        }\n        filtered.push(bsA);\n    }\n    return filtered;\n}\nexports.filterParentBitstrings = filterParentBitstrings;\nvar SortOrder;\n(function (SortOrder) {\n    SortOrder[SortOrder[\"InOrder\"] = 0] = \"InOrder\";\n    SortOrder[SortOrder[\"Decreasing\"] = 1] = \"Decreasing\";\n    SortOrder[SortOrder[\"Unsorted\"] = 2] = \"Unsorted\";\n})(SortOrder = exports.SortOrder || (exports.SortOrder = {}));\n/**\n * Return the set of generalized indices required for a multiproof\n * This may include all leaves and any necessary witnesses\n * @param gindices leaves to include in proof\n * @returns all generalized indices required for a multiproof (leaves and witnesses), deduplicated and sorted\n */\nfunction computeMultiProofBitstrings(gindices, includeLeaves = true, sortOrder = SortOrder.InOrder) {\n    const leaves = filterParentBitstrings(gindices);\n    // Maybe initialize the proof indices with the leaves\n    const proof = new Set(includeLeaves ? leaves : []);\n    const paths = new Set();\n    const branches = new Set();\n    // Collect all path indices and all branch indices\n    let maxBitLength = 1;\n    for (const gindex of leaves) {\n        if (gindex.length > maxBitLength)\n            maxBitLength = gindex.length;\n        const { path, branch } = computeProofBitstrings(gindex);\n        path.forEach((g) => paths.add(g));\n        branch.forEach((g) => branches.add(g));\n    }\n    // Remove all branches that are included in the paths\n    paths.forEach((g) => branches.delete(g));\n    // Add all remaining branches to the leaves\n    branches.forEach((g) => proof.add(g));\n    switch (sortOrder) {\n        case SortOrder.InOrder:\n            return sortInOrderBitstrings(Array.from(proof), maxBitLength);\n        case SortOrder.Decreasing:\n            return sortDecreasingBitstrings(Array.from(proof));\n        case SortOrder.Unsorted:\n            return Array.from(proof);\n    }\n}\nexports.computeMultiProofBitstrings = computeMultiProofBitstrings;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeFromMultiProof = exports.createMultiProof = void 0;\nconst node_1 = require(\"../node\");\nconst tree_1 = require(\"../tree\");\nconst util_1 = require(\"./util\");\n/**\n * Create an multiproof\n *\n * See https://github.com/ethereum/consensus-specs/blob/dev/ssz/merkle-proofs.md#merkle-multiproofs\n *\n * @param rootNode the root node of the tree\n * @param gindices generalized indices of leaves to include in the proof\n */\nfunction createMultiProof(rootNode, gindices) {\n    const tree = new tree_1.Tree(rootNode);\n    const witnessGindices = util_1.computeMultiProofBitstrings(gindices.map((gindex) => gindex.toString(2)), false, util_1.SortOrder.Decreasing);\n    const leafGindices = gindices.slice().sort((a, b) => (a < b ? 1 : -1));\n    const leaves = leafGindices.map((gindex) => tree.getRoot(gindex));\n    const witnesses = witnessGindices.map((gindex) => tree.getRoot(gindex));\n    return [leaves, witnesses, leafGindices];\n}\nexports.createMultiProof = createMultiProof;\n/**\n * Recreate a `Node` given a multiproof\n *\n * See https://github.com/ethereum/consensus-specs/blob/dev/ssz/merkle-proofs.md#merkle-multiproofs\n *\n * @param leaves leaves of a EF multiproof\n * @param witnesses witnesses of a EF multiproof\n * @param gindices generalized indices of the leaves\n */\nfunction createNodeFromMultiProof(leaves, witnesses, gindices) {\n    if (leaves.length !== gindices.length) {\n        throw new Error(\"Leaves length should equal gindices length\");\n    }\n    const leafBitstrings = gindices.map((gindex) => gindex.toString(2));\n    const witnessBitstrings = util_1.computeMultiProofBitstrings(leafBitstrings, false, util_1.SortOrder.Decreasing);\n    if (witnessBitstrings.length !== witnesses.length) {\n        throw new Error(\"Witnesses length should equal witnesses gindices length\");\n    }\n    // Algorithm:\n    // create an object which tracks key-values for each level\n    // pre-load leaves and witnesses into the level object\n    // level by level, starting from the bottom,\n    // find the sibling, create the parent, store it in the next level up\n    // the root is in level 1\n    const maxLevel = Math.max(leafBitstrings[0]?.length ?? 0, witnessBitstrings[0]?.length ?? 0);\n    const levels = Object.fromEntries(Array.from({ length: maxLevel }, (_, i) => [i + 1, {}]));\n    // preload leaves and witnesses\n    for (let i = 0; i < leafBitstrings.length; i++) {\n        const leafBitstring = leafBitstrings[i];\n        const leaf = leaves[i];\n        levels[leafBitstring.length][leafBitstring] = node_1.LeafNode.fromRoot(leaf);\n    }\n    for (let i = 0; i < witnessBitstrings.length; i++) {\n        const witnessBitstring = witnessBitstrings[i];\n        const witness = witnesses[i];\n        levels[witnessBitstring.length][witnessBitstring] = node_1.LeafNode.fromRoot(witness);\n    }\n    for (let i = maxLevel; i > 1; i--) {\n        const level = levels[i];\n        const parentLevel = levels[i - 1];\n        for (const bitstring of Object.keys(level)) {\n            const node = level[bitstring];\n            // if the node doesn't exist, we've already processed its sibling\n            if (!node) {\n                continue;\n            }\n            const isLeft = bitstring[bitstring.length - 1] === \"0\";\n            const parentBitstring = bitstring.substring(0, bitstring.length - 1);\n            const siblingBitstring = parentBitstring + (isLeft ? \"1\" : \"0\");\n            const siblingNode = level[siblingBitstring];\n            if (!siblingNode) {\n                throw new Error(`Sibling not found: ${siblingBitstring}`);\n            }\n            // store the parent node\n            const parentNode = isLeft ? new node_1.BranchNode(node, siblingNode) : new node_1.BranchNode(siblingNode, node);\n            parentLevel[parentBitstring] = parentNode;\n            // delete the used nodes\n            delete level[bitstring];\n            delete level[siblingBitstring];\n        }\n    }\n    const root = levels[1][\"1\"];\n    if (!root) {\n        throw new Error(\"Internal consistency error: no root found\");\n    }\n    return root;\n}\nexports.createNodeFromMultiProof = createNodeFromMultiProof;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createNodeFromCompactMultiProof = exports.createCompactMultiProof = exports.compactMultiProofToNode = exports.nodeToCompactMultiProof = exports.descriptorToBitlist = exports.computeDescriptor = void 0;\nconst gindex_1 = require(\"../gindex\");\nconst node_1 = require(\"../node\");\nconst util_1 = require(\"./util\");\nfunction computeDescriptor(indices) {\n    // include all helper indices\n    const proofBitstrings = new Set();\n    const pathBitstrings = new Set();\n    for (const leafIndex of indices) {\n        const leafBitstring = gindex_1.convertGindexToBitstring(leafIndex);\n        proofBitstrings.add(leafBitstring);\n        const { branch, path } = util_1.computeProofBitstrings(leafBitstring);\n        path.delete(leafBitstring);\n        for (const pathIndex of path) {\n            pathBitstrings.add(pathIndex);\n        }\n        for (const branchIndex of branch) {\n            proofBitstrings.add(branchIndex);\n        }\n    }\n    for (const pathIndex of pathBitstrings) {\n        proofBitstrings.delete(pathIndex);\n    }\n    // sort gindex bitstrings in-order\n    const allBitstringsSorted = Array.from(proofBitstrings).sort((a, b) => a.localeCompare(b));\n    // convert gindex bitstrings into descriptor bitstring\n    let descriptorBitstring = \"\";\n    for (const gindexBitstring of allBitstringsSorted) {\n        for (let i = 0; i < gindexBitstring.length; i++) {\n            if (gindexBitstring[gindexBitstring.length - 1 - i] === \"1\") {\n                descriptorBitstring += \"1\".padStart(i + 1, \"0\");\n                break;\n            }\n        }\n    }\n    // append zero bits to byte-alignt\n    if (descriptorBitstring.length % 8 != 0) {\n        descriptorBitstring = descriptorBitstring.padEnd(8 - (descriptorBitstring.length % 8) + descriptorBitstring.length, \"0\");\n    }\n    // convert descriptor bitstring to bytes\n    const descriptor = new Uint8Array(descriptorBitstring.length / 8);\n    for (let i = 0; i < descriptor.length; i++) {\n        descriptor[i] = Number(\"0b\" + descriptorBitstring.substring(i * 8, (i + 1) * 8));\n    }\n    return descriptor;\n}\nexports.computeDescriptor = computeDescriptor;\nfunction getBit(bitlist, bitIndex) {\n    const bit = bitIndex % 8;\n    const byteIdx = Math.floor(bitIndex / 8);\n    const byte = bitlist[byteIdx];\n    switch (bit) {\n        case 0:\n            return (byte & 0b1000_0000) !== 0;\n        case 1:\n            return (byte & 0b0100_0000) !== 0;\n        case 2:\n            return (byte & 0b0010_0000) !== 0;\n        case 3:\n            return (byte & 0b0001_0000) !== 0;\n        case 4:\n            return (byte & 0b0000_1000) !== 0;\n        case 5:\n            return (byte & 0b0000_0100) !== 0;\n        case 6:\n            return (byte & 0b0000_0010) !== 0;\n        case 7:\n            return (byte & 0b0000_0001) !== 0;\n        default:\n            throw new Error(\"unreachable\");\n    }\n}\nfunction descriptorToBitlist(descriptor) {\n    const bools = [];\n    const maxBitLength = descriptor.length * 8;\n    let count0 = 0;\n    let count1 = 0;\n    for (let i = 0; i < maxBitLength; i++) {\n        const bit = getBit(descriptor, i);\n        bools.push(bit);\n        if (bit) {\n            count1++;\n        }\n        else {\n            count0++;\n        }\n        if (count1 > count0) {\n            i++;\n            if (i + 7 < maxBitLength) {\n                throw new Error(\"Invalid descriptor: too many bytes\");\n            }\n            for (; i < maxBitLength; i++) {\n                const bit = getBit(descriptor, i);\n                if (bit) {\n                    throw new Error(\"Invalid descriptor: too many 1 bits\");\n                }\n            }\n            return bools;\n        }\n    }\n    throw new Error(\"Invalid descriptor: not enough 1 bits\");\n}\nexports.descriptorToBitlist = descriptorToBitlist;\nfunction nodeToCompactMultiProof(node, bitlist, bitIndex) {\n    if (bitlist[bitIndex]) {\n        return [node.root];\n    }\n    else {\n        const left = nodeToCompactMultiProof(node.left, bitlist, bitIndex + 1);\n        const right = nodeToCompactMultiProof(node.right, bitlist, bitIndex + left.length * 2);\n        return [...left, ...right];\n    }\n}\nexports.nodeToCompactMultiProof = nodeToCompactMultiProof;\n/**\n * Create a Node given a validated bitlist, leaves, and a pointer into the bitlist and leaves\n *\n * Recursive definition\n */\nfunction compactMultiProofToNode(bitlist, leaves, pointer) {\n    if (bitlist[pointer.bitIndex++]) {\n        return node_1.LeafNode.fromRoot(leaves[pointer.leafIndex++]);\n    }\n    else {\n        return new node_1.BranchNode(compactMultiProofToNode(bitlist, leaves, pointer), compactMultiProofToNode(bitlist, leaves, pointer));\n    }\n}\nexports.compactMultiProofToNode = compactMultiProofToNode;\nfunction createCompactMultiProof(rootNode, descriptor) {\n    return nodeToCompactMultiProof(rootNode, descriptorToBitlist(descriptor), 0);\n}\nexports.createCompactMultiProof = createCompactMultiProof;\nfunction createNodeFromCompactMultiProof(leaves, descriptor) {\n    const bools = descriptorToBitlist(descriptor);\n    if (bools.length !== leaves.length * 2 - 1) {\n        throw new Error(\"Invalid multiproof: invalid number of leaves\");\n    }\n    return compactMultiProofToNode(bools, leaves, { bitIndex: 0, leafIndex: 0 });\n}\nexports.createNodeFromCompactMultiProof = createNodeFromCompactMultiProof;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeTreeOffsetProof = exports.serializeTreeOffsetProof = exports.computeTreeOffsetProofSerializedLength = exports.createNodeFromTreeOffsetProof = exports.createTreeOffsetProof = exports.treeOffsetProofToNode = exports.nodeToTreeOffsetProof = void 0;\nconst node_1 = require(\"../node\");\nconst util_1 = require(\"./util\");\n/**\n * Compute offsets and leaves of a tree-offset proof\n *\n * Recursive function\n *\n * See https://github.com/protolambda/eth-merkle-trees/blob/master/tree_offsets.md\n * @param node current node in the tree\n * @param gindex current generalized index in the tree\n * @param proofGindices generalized indices to left include in the proof - must be sorted in-order according to the tree\n */\nfunction nodeToTreeOffsetProof(node, gindex, proofGindices) {\n    if (!proofGindices.length || !proofGindices[0].startsWith(gindex)) {\n        // there are no proof indices left OR the current subtree contains no remaining proof indices\n        return [[], []];\n    }\n    else if (gindex === proofGindices[0]) {\n        // the current node is at the next proof index\n        proofGindices.shift();\n        return [[], [node.root]];\n    }\n    else {\n        // recursively compute offsets, leaves for the left and right subtree\n        const [leftOffsets, leftLeaves] = nodeToTreeOffsetProof(node.left, gindex + \"0\", proofGindices);\n        const [rightOffsets, rightLeaves] = nodeToTreeOffsetProof(node.right, gindex + \"1\", proofGindices);\n        // the offset prepended to the list is # of leaves in the left subtree\n        const pivot = leftLeaves.length;\n        return [[pivot].concat(leftOffsets, rightOffsets), leftLeaves.concat(rightLeaves)];\n    }\n}\nexports.nodeToTreeOffsetProof = nodeToTreeOffsetProof;\n/**\n * Recreate a `Node` given offsets and leaves of a tree-offset proof\n *\n * Recursive definition\n *\n * See https://github.com/protolambda/eth-merkle-trees/blob/master/tree_offsets.md\n */\nfunction treeOffsetProofToNode(offsets, leaves) {\n    if (!leaves.length) {\n        throw new Error(\"Proof must contain gt 0 leaves\");\n    }\n    else if (leaves.length === 1) {\n        return node_1.LeafNode.fromRoot(leaves[0]);\n    }\n    else {\n        // the offset popped from the list is the # of leaves in the left subtree\n        const pivot = offsets[0];\n        return new node_1.BranchNode(treeOffsetProofToNode(offsets.slice(1, pivot), leaves.slice(0, pivot)), treeOffsetProofToNode(offsets.slice(pivot), leaves.slice(pivot)));\n    }\n}\nexports.treeOffsetProofToNode = treeOffsetProofToNode;\n/**\n * Create a tree-offset proof\n *\n * @param rootNode the root node of the tree\n * @param gindices generalized indices to include in the proof\n */\nfunction createTreeOffsetProof(rootNode, gindices) {\n    return nodeToTreeOffsetProof(rootNode, \"1\", util_1.computeMultiProofBitstrings(gindices.map((g) => g.toString(2))));\n}\nexports.createTreeOffsetProof = createTreeOffsetProof;\n/**\n * Recreate a `Node` given a tree-offset proof\n *\n * @param offsets offsets of a tree-offset proof\n * @param leaves leaves of a tree-offset proof\n */\nfunction createNodeFromTreeOffsetProof(offsets, leaves) {\n    // TODO validation\n    return treeOffsetProofToNode(offsets, leaves);\n}\nexports.createNodeFromTreeOffsetProof = createNodeFromTreeOffsetProof;\nfunction computeTreeOffsetProofSerializedLength(offsets, leaves) {\n    // add 1 for # of leaves\n    return (offsets.length + 1) * 2 + leaves.length * 32;\n}\nexports.computeTreeOffsetProofSerializedLength = computeTreeOffsetProofSerializedLength;\n// Serialized tree offset proof structure:\n// # of leaves - 2 bytes\n// offsets - 2 bytes each\n// leaves - 32 bytes each\nfunction serializeTreeOffsetProof(output, byteOffset, offsets, leaves) {\n    const writer = new DataView(output.buffer, output.byteOffset, output.byteLength);\n    // set # of leaves\n    writer.setUint16(byteOffset, leaves.length, true);\n    // set offsets\n    const offsetsStartIndex = byteOffset + 2;\n    for (let i = 0; i < offsets.length; i++) {\n        writer.setUint16(i * 2 + offsetsStartIndex, offsets[i], true);\n    }\n    // set leaves\n    const leavesStartIndex = offsetsStartIndex + offsets.length * 2;\n    for (let i = 0; i < leaves.length; i++) {\n        output.set(leaves[i], i * 32 + leavesStartIndex);\n    }\n}\nexports.serializeTreeOffsetProof = serializeTreeOffsetProof;\nfunction deserializeTreeOffsetProof(data, byteOffset) {\n    const reader = new DataView(data.buffer, data.byteOffset, data.byteLength);\n    // get # of leaves\n    const leafCount = reader.getUint16(byteOffset, true);\n    if (data.length < (leafCount - 1) * 2 + leafCount * 32) {\n        throw new Error(\"Unable to deserialize tree offset proof: not enough bytes\");\n    }\n    // get offsets\n    const offsetsStartIndex = byteOffset + 2;\n    const offsets = Array.from({ length: leafCount - 1 }, (_, i) => reader.getUint16(i * 2 + offsetsStartIndex, true));\n    // get leaves\n    const leavesStartIndex = offsetsStartIndex + offsets.length * 2;\n    const leaves = Array.from({ length: leafCount }, (_, i) => data.subarray(i * 32 + leavesStartIndex, (i + 1) * 32 + leavesStartIndex));\n    return [offsets, leaves];\n}\nexports.deserializeTreeOffsetProof = deserializeTreeOffsetProof;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeProof = exports.serializeProof = exports.createNodeFromProof = exports.createProof = exports.ProofTypeSerialized = exports.ProofType = exports.descriptorToBitlist = exports.computeDescriptor = void 0;\nconst multi_1 = require(\"./multi\");\nconst compactMulti_1 = require(\"./compactMulti\");\nconst single_1 = require(\"./single\");\nconst treeOffset_1 = require(\"./treeOffset\");\nvar compactMulti_2 = require(\"./compactMulti\");\nObject.defineProperty(exports, \"computeDescriptor\", { enumerable: true, get: function () { return compactMulti_2.computeDescriptor; } });\nObject.defineProperty(exports, \"descriptorToBitlist\", { enumerable: true, get: function () { return compactMulti_2.descriptorToBitlist; } });\nvar ProofType;\n(function (ProofType) {\n    ProofType[\"single\"] = \"single\";\n    ProofType[\"treeOffset\"] = \"treeOffset\";\n    ProofType[\"multi\"] = \"multi\";\n    ProofType[\"compactMulti\"] = \"compactMulti\";\n})(ProofType = exports.ProofType || (exports.ProofType = {}));\n/**\n * Serialized proofs are prepended with a single byte, denoting their type\n */\nexports.ProofTypeSerialized = [\n    ProofType.single,\n    ProofType.treeOffset,\n    ProofType.multi,\n    ProofType.compactMulti, // 3\n];\nfunction createProof(rootNode, input) {\n    switch (input.type) {\n        case ProofType.single: {\n            const [leaf, witnesses] = single_1.createSingleProof(rootNode, input.gindex);\n            return {\n                type: ProofType.single,\n                gindex: input.gindex,\n                leaf,\n                witnesses,\n            };\n        }\n        case ProofType.treeOffset: {\n            const [offsets, leaves] = treeOffset_1.createTreeOffsetProof(rootNode, input.gindices);\n            return {\n                type: ProofType.treeOffset,\n                offsets,\n                leaves,\n            };\n        }\n        case ProofType.multi: {\n            const [leaves, witnesses, gindices] = multi_1.createMultiProof(rootNode, input.gindices);\n            return {\n                type: ProofType.multi,\n                leaves,\n                witnesses,\n                gindices,\n            };\n        }\n        case ProofType.compactMulti: {\n            const leaves = compactMulti_1.createCompactMultiProof(rootNode, input.descriptor);\n            return {\n                type: ProofType.compactMulti,\n                leaves,\n                descriptor: input.descriptor,\n            };\n        }\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.createProof = createProof;\nfunction createNodeFromProof(proof) {\n    switch (proof.type) {\n        case ProofType.single:\n            return single_1.createNodeFromSingleProof(proof.gindex, proof.leaf, proof.witnesses);\n        case ProofType.treeOffset:\n            return treeOffset_1.createNodeFromTreeOffsetProof(proof.offsets, proof.leaves);\n        case ProofType.multi:\n            return multi_1.createNodeFromMultiProof(proof.leaves, proof.witnesses, proof.gindices);\n        case ProofType.compactMulti:\n            return compactMulti_1.createNodeFromCompactMultiProof(proof.leaves, proof.descriptor);\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.createNodeFromProof = createNodeFromProof;\nfunction serializeProof(proof) {\n    switch (proof.type) {\n        case ProofType.single:\n        case ProofType.multi:\n            throw new Error(\"Not implemented\");\n        case ProofType.treeOffset: {\n            const output = new Uint8Array(1 + treeOffset_1.computeTreeOffsetProofSerializedLength(proof.offsets, proof.leaves));\n            output[0] = exports.ProofTypeSerialized.indexOf(ProofType.treeOffset);\n            treeOffset_1.serializeTreeOffsetProof(output, 1, proof.offsets, proof.leaves);\n            return output;\n        }\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.serializeProof = serializeProof;\nfunction deserializeProof(data) {\n    const proofType = exports.ProofTypeSerialized[data[0]];\n    if (!proofType) {\n        throw new Error(\"Invalid proof type\");\n    }\n    switch (proofType) {\n        case ProofType.single:\n        case ProofType.multi:\n            throw new Error(\"Not implemented\");\n        case ProofType.treeOffset: {\n            const [offsets, leaves] = treeOffset_1.deserializeTreeOffsetProof(data, 1);\n            return {\n                type: ProofType.treeOffset,\n                offsets,\n                leaves,\n            };\n        }\n        default:\n            throw new Error(\"Invalid proof type\");\n    }\n}\nexports.deserializeProof = deserializeProof;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./gindex\"), exports);\n__exportStar(require(\"./hasher\"), exports);\n__exportStar(require(\"./node\"), exports);\n__exportStar(require(\"./packedNode\"), exports);\n__exportStar(require(\"./proof\"), exports);\n__exportStar(require(\"./subtree\"), exports);\n__exportStar(require(\"./tree\"), exports);\n__exportStar(require(\"./zeroNode\"), exports);\n", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "/** EIP4844 constants */\n\nexport const MAX_CALLDATA_SIZE = 16777216 // 2 ** 24\nexport const MAX_ACCESS_LIST_SIZE = 16777216 // 2 ** 24\nexport const MAX_VERSIONED_HASHES_LIST_SIZE = 16777216 // 2 ** 24\nexport const LIMIT_BLOBS_PER_TX = 16777216 // 2 ** 24\nexport const MAX_TX_WRAP_KZG_COMMITMENTS = 16777216 // 2 ** 24\nexport const FIELD_ELEMENTS_PER_BLOB = 4096 // This is also in the Common 4844 parameters but needed here since types can't access Common params\nexport const BYTES_PER_FIELD_ELEMENT = 32\n", "import {\n  BooleanType,\n  ByteListType,\n  ByteVectorType,\n  ContainerType,\n  ListCompositeType,\n  NoneType,\n  UintBigintType,\n  UnionType,\n} from '@chainsafe/ssz'\n\nimport {\n  BYTES_PER_FIELD_ELEMENT,\n  FIELD_ELEMENTS_PER_BLOB,\n  LIMIT_BLOBS_PER_TX,\n  MAX_ACCESS_LIST_SIZE,\n  MAX_CALLDATA_SIZE,\n  MAX_TX_WRAP_KZG_COMMITMENTS,\n  MAX_VERSIONED_HASHES_LIST_SIZE,\n} from './constants'\n\nimport type { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nimport type { AccessListEIP2930Transaction } from './eip2930Transaction'\nimport type { BlobEIP4844Transaction } from './eip4844Transaction'\nimport type { Transaction } from './legacyTransaction'\nimport type { Common } from '@ethereumjs/common'\nimport type { AddressLike, BigIntLike, BufferLike, PrefixedHexString } from '@ethereumjs/util'\n\nconst Bytes20 = new ByteVectorType(20)\nconst Bytes32 = new ByteVectorType(32)\nconst Bytes48 = new ByteVectorType(48)\n\nconst Uint64 = new UintBigintType(8)\nconst Uint256 = new UintBigintType(32)\n\n/**\n * Can be used in conjunction with {@link Transaction.supports}\n * to query on tx capabilities\n */\nexport enum Capability {\n  /**\n   * Tx supports EIP-155 replay protection\n   * See: [155](https://eips.ethereum.org/EIPS/eip-155) Replay Attack Protection EIP\n   */\n  EIP155ReplayProtection = 155,\n\n  /**\n   * Tx supports EIP-1559 gas fee market mechanism\n   * See: [1559](https://eips.ethereum.org/EIPS/eip-1559) Fee Market EIP\n   */\n  EIP1559FeeMarket = 1559,\n\n  /**\n   * Tx is a typed transaction as defined in EIP-2718\n   * See: [2718](https://eips.ethereum.org/EIPS/eip-2718) Transaction Type EIP\n   */\n  EIP2718TypedTransaction = 2718,\n\n  /**\n   * Tx supports access list generation as defined in EIP-2930\n   * See: [2930](https://eips.ethereum.org/EIPS/eip-2930) Access Lists EIP\n   */\n  EIP2930AccessLists = 2930,\n}\n\n/**\n * The options for initializing a {@link Transaction}.\n */\nexport interface TxOptions {\n  /**\n   * A {@link Common} object defining the chain and hardfork for the transaction.\n   *\n   * Object will be internally copied so that tx behavior don't incidentally\n   * change on future HF changes.\n   *\n   * Default: {@link Common} object set to `mainnet` and the default hardfork as defined in the {@link Common} class.\n   *\n   * Current default hardfork: `istanbul`\n   */\n  common?: Common\n  /**\n   * A transaction object by default gets frozen along initialization. This gives you\n   * strong additional security guarantees on the consistency of the tx parameters.\n   * It also enables tx hash caching when the `hash()` method is called multiple times.\n   *\n   * If you need to deactivate the tx freeze - e.g. because you want to subclass tx and\n   * add additional properties - it is strongly encouraged that you do the freeze yourself\n   * within your code instead.\n   *\n   * Default: true\n   */\n  freeze?: boolean\n\n  /**\n   * Allows unlimited contract code-size init while debugging. This (partially) disables EIP-3860.\n   * Gas cost for initcode size analysis will still be charged. Use with caution.\n   */\n  allowUnlimitedInitCodeSize?: boolean\n}\n\n/*\n * Access List types\n */\n\nexport type AccessListItem = {\n  address: PrefixedHexString\n  storageKeys: PrefixedHexString[]\n}\n\n/*\n * An Access List as a tuple of [address: Buffer, storageKeys: Buffer[]]\n */\nexport type AccessListBufferItem = [Buffer, Buffer[]]\nexport type AccessListBuffer = AccessListBufferItem[]\nexport type AccessList = AccessListItem[]\n\nexport function isAccessListBuffer(\n  input: AccessListBuffer | AccessList\n): input is AccessListBuffer {\n  if (input.length === 0) {\n    return true\n  }\n  const firstItem = input[0]\n  if (Array.isArray(firstItem)) {\n    return true\n  }\n  return false\n}\n\nexport function isAccessList(input: AccessListBuffer | AccessList): input is AccessList {\n  return !isAccessListBuffer(input) // This is exactly the same method, except the output is negated.\n}\n\n/**\n * Encompassing type for all transaction types.\n *\n * Note that this also includes legacy txs which are\n * referenced as {@link Transaction} for compatibility reasons.\n */\nexport type TypedTransaction =\n  | Transaction\n  | AccessListEIP2930Transaction\n  | FeeMarketEIP1559Transaction\n  | BlobEIP4844Transaction\n\n/**\n * Legacy {@link Transaction} Data\n */\nexport type TxData = {\n  /**\n   * The transaction's nonce.\n   */\n  nonce?: BigIntLike\n\n  /**\n   * The transaction's gas price.\n   */\n  gasPrice?: BigIntLike | null\n\n  /**\n   * The transaction's gas limit.\n   */\n  gasLimit?: BigIntLike\n\n  /**\n   * The transaction's the address is sent to.\n   */\n  to?: AddressLike\n\n  /**\n   * The amount of Ether sent.\n   */\n  value?: BigIntLike\n\n  /**\n   * This will contain the data of the message or the init of a contract.\n   */\n  data?: BufferLike\n\n  /**\n   * EC recovery ID.\n   */\n  v?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  r?: BigIntLike\n\n  /**\n   * EC signature parameter.\n   */\n  s?: BigIntLike\n\n  /**\n   * The transaction type\n   */\n\n  type?: BigIntLike\n}\n\n/**\n * {@link AccessListEIP2930Transaction} data.\n */\nexport interface AccessListEIP2930TxData extends TxData {\n  /**\n   * The transaction's chain ID\n   */\n  chainId?: BigIntLike\n\n  /**\n   * The access list which contains the addresses/storage slots which the transaction wishes to access\n   */\n  accessList?: AccessListBuffer | AccessList | null\n}\n\n/**\n * {@link FeeMarketEIP1559Transaction} data.\n */\nexport interface FeeMarketEIP1559TxData extends AccessListEIP2930TxData {\n  /**\n   * The transaction's gas price, inherited from {@link Transaction}.  This property is not used for EIP1559\n   * transactions and should always be undefined for this specific transaction type.\n   */\n  gasPrice?: never | null\n  /**\n   * The maximum inclusion fee per gas (this fee is given to the miner)\n   */\n  maxPriorityFeePerGas?: BigIntLike\n  /**\n   * The maximum total fee\n   */\n  maxFeePerGas?: BigIntLike\n}\n\n/**\n * {@link BlobEIP4844Transaction} data.\n */\nexport interface BlobEIP4844TxData extends FeeMarketEIP1559TxData {\n  /**\n   * The versioned hashes used to validate the blobs attached to a transaction\n   */\n  versionedHashes?: BufferLike[]\n  /**\n   * The maximum fee per data gas paid for the transaction\n   */\n  maxFeePerDataGas?: BigIntLike\n  /**\n   * The blobs associated with a transaction\n   */\n  blobs?: BufferLike[]\n  /**\n   * The KZG commitments corresponding to the versioned hashes for each blob\n   */\n  kzgCommitments?: BufferLike[]\n  /**\n   * The aggregate KZG proof associated with the transaction\n   */\n  kzgProof?: BufferLike\n}\n\n/**\n * Buffer values array for a legacy {@link Transaction}\n */\nexport type TxValuesArray = Buffer[]\n\n/**\n * Buffer values array for an {@link AccessListEIP2930Transaction}\n */\nexport type AccessListEIP2930ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\n/**\n * Buffer values array for a {@link FeeMarketEIP1559Transaction}\n */\nexport type FeeMarketEIP1559ValuesArray = [\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  Buffer,\n  AccessListBuffer,\n  Buffer?,\n  Buffer?,\n  Buffer?\n]\n\ntype JsonAccessListItem = { address: string; storageKeys: string[] }\n\n/**\n * Generic interface for all tx types with a\n * JSON representation of a transaction.\n *\n * Note that all values are marked as optional\n * and not all the values are present on all tx types\n * (an EIP1559 tx e.g. lacks a `gasPrice`).\n */\nexport interface JsonTx {\n  nonce?: string\n  gasPrice?: string\n  gasLimit?: string\n  to?: string\n  data?: string\n  v?: string\n  r?: string\n  s?: string\n  value?: string\n  chainId?: string\n  accessList?: JsonAccessListItem[]\n  type?: string\n  maxPriorityFeePerGas?: string\n  maxFeePerGas?: string\n  maxFeePerDataGas?: string\n  versionedHashes?: string[]\n}\n\n/*\n * Based on https://ethereum.org/en/developers/docs/apis/json-rpc/\n */\nexport interface JsonRpcTx {\n  blockHash: string | null // DATA, 32 Bytes - hash of the block where this transaction was in. null when it's pending.\n  blockNumber: string | null // QUANTITY - block number where this transaction was in. null when it's pending.\n  from: string // DATA, 20 Bytes - address of the sender.\n  gas: string // QUANTITY - gas provided by the sender.\n  gasPrice: string // QUANTITY - gas price provided by the sender in wei. If EIP-1559 tx, defaults to maxFeePerGas.\n  maxFeePerGas?: string // QUANTITY - max total fee per gas provided by the sender in wei.\n  maxPriorityFeePerGas?: string // QUANTITY - max priority fee per gas provided by the sender in wei.\n  type: string // QUANTITY - EIP-2718 Typed Transaction type\n  accessList?: JsonTx['accessList'] // EIP-2930 access list\n  chainId?: string // Chain ID that this transaction is valid on.\n  hash: string // DATA, 32 Bytes - hash of the transaction.\n  input: string // DATA - the data send along with the transaction.\n  nonce: string // QUANTITY - the number of transactions made by the sender prior to this one.\n  to: string | null /// DATA, 20 Bytes - address of the receiver. null when it's a contract creation transaction.\n  transactionIndex: string | null // QUANTITY - integer of the transactions index position in the block. null when it's pending.\n  value: string // QUANTITY - value transferred in Wei.\n  v: string // QUANTITY - ECDSA recovery id\n  r: string // DATA, 32 Bytes - ECDSA signature r\n  s: string // DATA, 32 Bytes - ECDSA signature s\n  maxFeePerDataGas?: string // QUANTITY - max data fee for blob transactions\n  versionedHashes?: string[] // DATA - array of 32 byte versioned hashes for blob transactions\n}\n\n/** EIP4844 types */\nexport const AddressType = Bytes20 // SSZ encoded address\n\n// SSZ encoded container for address and storage keys\nexport const AccessTupleType = new ContainerType({\n  address: AddressType,\n  storageKeys: new ListCompositeType(Bytes32, MAX_VERSIONED_HASHES_LIST_SIZE),\n})\n\n// SSZ encoded blob transaction\nexport const BlobTransactionType = new ContainerType({\n  chainId: Uint256,\n  nonce: Uint64,\n  maxPriorityFeePerGas: Uint256,\n  maxFeePerGas: Uint256,\n  gas: Uint64,\n  to: new UnionType([new NoneType(), AddressType]),\n  value: Uint256,\n  data: new ByteListType(MAX_CALLDATA_SIZE),\n  accessList: new ListCompositeType(AccessTupleType, MAX_ACCESS_LIST_SIZE),\n  maxFeePerDataGas: Uint256,\n  blobVersionedHashes: new ListCompositeType(Bytes32, MAX_VERSIONED_HASHES_LIST_SIZE),\n})\n\n// SSZ encoded ECDSA Signature\nexport const ECDSASignatureType = new ContainerType({\n  yParity: new BooleanType(),\n  r: Uint256,\n  s: Uint256,\n})\n\n// SSZ encoded signed blob transaction\nexport const SignedBlobTransactionType = new ContainerType({\n  message: BlobTransactionType,\n  signature: ECDSASignatureType,\n})\n\n// SSZ encoded KZG Commitment/Proof (48 bytes)\nexport const KZGCommitmentType = Bytes48\nexport const KZGProofType = KZGCommitmentType\n\n// SSZ encoded blob network transaction wrapper\nexport const BlobNetworkTransactionWrapper = new ContainerType({\n  tx: SignedBlobTransactionType,\n  blobKzgs: new ListCompositeType(KZGCommitmentType, MAX_TX_WRAP_KZG_COMMITMENTS),\n  blobs: new ListCompositeType(\n    new ByteVectorType(FIELD_ELEMENTS_PER_BLOB * BYTES_PER_FIELD_ELEMENT),\n    LIMIT_BLOBS_PER_TX\n  ),\n  kzgAggregatedProof: KZGProofType,\n})\n", "import { bufferToHex, setLengthLeft, toBuffer } from '@ethereumjs/util'\n\nimport { isAccessList } from './types'\n\nimport type { BlobEIP4844Transaction } from './eip4844Transaction'\nimport type { AccessList, AccessListBuffer, AccessListItem } from './types'\nimport type { Common } from '@ethereumjs/common'\n\nexport function checkMaxInitCodeSize(common: Common, length: number) {\n  const maxInitCodeSize = common.param('vm', 'maxInitCodeSize')\n  if (maxInitCodeSize && BigInt(length) > maxInitCodeSize) {\n    throw new Error(\n      `the initcode size of this transaction is too large: it is ${length} while the max is ${common.param(\n        'vm',\n        'maxInitCodeSize'\n      )}`\n    )\n  }\n}\n\nexport class AccessLists {\n  public static getAccessListData(accessList: AccessListBuffer | AccessList) {\n    let AccessListJSON\n    let bufferAccessList\n    if (isAccessList(accessList)) {\n      AccessListJSON = accessList\n      const newAccessList: AccessListBuffer = []\n\n      for (let i = 0; i < accessList.length; i++) {\n        const item: AccessListItem = accessList[i]\n        const addressBuffer = toBuffer(item.address)\n        const storageItems: Buffer[] = []\n        for (let index = 0; index < item.storageKeys.length; index++) {\n          storageItems.push(toBuffer(item.storageKeys[index]))\n        }\n        newAccessList.push([addressBuffer, storageItems])\n      }\n      bufferAccessList = newAccessList\n    } else {\n      bufferAccessList = accessList ?? []\n      // build the JSON\n      const json: AccessList = []\n      for (let i = 0; i < bufferAccessList.length; i++) {\n        const data = bufferAccessList[i]\n        const address = bufferToHex(data[0])\n        const storageKeys: string[] = []\n        for (let item = 0; item < data[1].length; item++) {\n          storageKeys.push(bufferToHex(data[1][item]))\n        }\n        const jsonItem: AccessListItem = {\n          address,\n          storageKeys,\n        }\n        json.push(jsonItem)\n      }\n      AccessListJSON = json\n    }\n\n    return {\n      AccessListJSON,\n      accessList: bufferAccessList,\n    }\n  }\n\n  public static verifyAccessList(accessList: AccessListBuffer) {\n    for (let key = 0; key < accessList.length; key++) {\n      const accessListItem = accessList[key]\n      const address = <Buffer>accessListItem[0]\n      const storageSlots = <Buffer[]>accessListItem[1]\n      if ((<any>accessListItem)[2] !== undefined) {\n        throw new Error(\n          'Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.'\n        )\n      }\n      if (address.length !== 20) {\n        throw new Error('Invalid EIP-2930 transaction: address length should be 20 bytes')\n      }\n      for (let storageSlot = 0; storageSlot < storageSlots.length; storageSlot++) {\n        if (storageSlots[storageSlot].length !== 32) {\n          throw new Error('Invalid EIP-2930 transaction: storage slot length should be 32 bytes')\n        }\n      }\n    }\n  }\n\n  public static getAccessListJSON(accessList: AccessListBuffer) {\n    const accessListJSON = []\n    for (let index = 0; index < accessList.length; index++) {\n      const item: any = accessList[index]\n      const JSONItem: any = {\n        address: '0x' + setLengthLeft(<Buffer>item[0], 20).toString('hex'),\n        storageKeys: [],\n      }\n      const storageSlots: Buffer[] = item[1]\n      for (let slot = 0; slot < storageSlots.length; slot++) {\n        const storageSlot = storageSlots[slot]\n        JSONItem.storageKeys.push('0x' + setLengthLeft(storageSlot, 32).toString('hex'))\n      }\n      accessListJSON.push(JSONItem)\n    }\n    return accessListJSON\n  }\n\n  public static getDataFeeEIP2930(accessList: AccessListBuffer, common: Common): number {\n    const accessListStorageKeyCost = common.param('gasPrices', 'accessListStorageKeyCost')\n    const accessListAddressCost = common.param('gasPrices', 'accessListAddressCost')\n\n    let slots = 0\n    for (let index = 0; index < accessList.length; index++) {\n      const item = accessList[index]\n      const storageSlots = item[1]\n      slots += storageSlots.length\n    }\n\n    const addresses = accessList.length\n    return addresses * Number(accessListAddressCost) + slots * Number(accessListStorageKeyCost)\n  }\n}\n\nexport const blobTxToNetworkWrapperDataFormat = (tx: BlobEIP4844Transaction) => {\n  const to = {\n    selector: tx.to !== undefined ? 1 : 0,\n    value: tx.to?.toBuffer() ?? null,\n  }\n  return {\n    message: {\n      chainId: tx.common.chainId(),\n      nonce: tx.nonce,\n      maxPriorityFeePerGas: tx.maxPriorityFeePerGas,\n      maxFeePerGas: tx.maxFeePerGas,\n      gas: tx.gasLimit,\n      to,\n      value: tx.value,\n      data: tx.data,\n      accessList: tx.accessList.map((listItem) => {\n        return { address: listItem[0], storageKeys: listItem[1] }\n      }),\n      blobVersionedHashes: tx.versionedHashes,\n      maxFeePerDataGas: tx.maxFeePerDataGas,\n    },\n    // If transaction is unsigned, signature fields will be initialized to zeroes\n    signature: {\n      r: tx.r ?? BigInt(0),\n      s: tx.s ?? BigInt(0),\n      yParity: tx.v === BigInt(1) ? true : false,\n    },\n  }\n}\n", "import { Chain, Common, Hardfork } from '@ethereumjs/common'\nimport {\n  Address,\n  MAX_INTEGER,\n  MAX_UINT64,\n  SECP256K1_ORDER_DIV_2,\n  bufferToBigInt,\n  bufferToHex,\n  ecsign,\n  publicToAddress,\n  toBuffer,\n  unpadBuffer,\n} from '@ethereumjs/util'\n\nimport { Capability } from './types'\nimport { checkMaxInitCodeSize } from './util'\n\nimport type {\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  TxData,\n  TxOptions,\n  TxValuesArray,\n} from './types'\nimport type { BigIntLike } from '@ethereumjs/util'\n\ninterface TransactionCache {\n  hash: Buffer | undefined\n  dataFee?: {\n    value: bigint\n    hardfork: string | Hardfork\n  }\n}\n\n/**\n * This base class will likely be subject to further\n * refactoring along the introduction of additional tx types\n * on the Ethereum network.\n *\n * It is therefore not recommended to use directly.\n */\nexport abstract class BaseTransaction<TransactionObject> {\n  private readonly _type: number\n\n  public readonly nonce: bigint\n  public readonly gasLimit: bigint\n  public readonly to?: Address\n  public readonly value: bigint\n  public readonly data: Buffer\n\n  public readonly v?: bigint\n  public readonly r?: bigint\n  public readonly s?: bigint\n\n  public readonly common!: Common\n\n  protected cache: TransactionCache = {\n    hash: undefined,\n    dataFee: undefined,\n  }\n\n  protected readonly txOptions: TxOptions\n\n  /**\n   * List of tx type defining EIPs,\n   * e.g. 1559 (fee market) and 2930 (access lists)\n   * for FeeMarketEIP1559Transaction objects\n   */\n  protected activeCapabilities: number[] = []\n\n  /**\n   * The default chain the tx falls back to if no Common\n   * is provided and if the chain can't be derived from\n   * a passed in chainId (only EIP-2718 typed txs) or\n   * EIP-155 signature (legacy txs).\n   *\n   * @hidden\n   */\n  protected DEFAULT_CHAIN = Chain.Mainnet\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK: string | Hardfork = Hardfork.Merge\n\n  constructor(txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData, opts: TxOptions) {\n    const { nonce, gasLimit, to, value, data, v, r, s, type } = txData\n    this._type = Number(bufferToBigInt(toBuffer(type)))\n\n    this.txOptions = opts\n\n    const toB = toBuffer(to === '' ? '0x' : to)\n    const vB = toBuffer(v === '' ? '0x' : v)\n    const rB = toBuffer(r === '' ? '0x' : r)\n    const sB = toBuffer(s === '' ? '0x' : s)\n\n    this.nonce = bufferToBigInt(toBuffer(nonce === '' ? '0x' : nonce))\n    this.gasLimit = bufferToBigInt(toBuffer(gasLimit === '' ? '0x' : gasLimit))\n    this.to = toB.length > 0 ? new Address(toB) : undefined\n    this.value = bufferToBigInt(toBuffer(value === '' ? '0x' : value))\n    this.data = toBuffer(data === '' ? '0x' : data)\n\n    this.v = vB.length > 0 ? bufferToBigInt(vB) : undefined\n    this.r = rB.length > 0 ? bufferToBigInt(rB) : undefined\n    this.s = sB.length > 0 ? bufferToBigInt(sB) : undefined\n\n    this._validateCannotExceedMaxInteger({ value: this.value, r: this.r, s: this.s })\n\n    // geth limits gasLimit to 2^64-1\n    this._validateCannotExceedMaxInteger({ gasLimit: this.gasLimit }, 64)\n\n    // EIP-2681 limits nonce to 2^64-1 (cannot equal 2^64-1)\n    this._validateCannotExceedMaxInteger({ nonce: this.nonce }, 64, true)\n\n    const createContract = this.to === undefined || this.to === null\n    const allowUnlimitedInitCodeSize = opts.allowUnlimitedInitCodeSize ?? false\n    const common = opts.common ?? this._getCommon()\n    if (createContract && common.isActivatedEIP(3860) && allowUnlimitedInitCodeSize === false) {\n      checkMaxInitCodeSize(common, this.data.length)\n    }\n  }\n\n  /**\n   * Returns the transaction type.\n   *\n   * Note: legacy txs will return tx type `0`.\n   */\n  get type() {\n    return this._type\n  }\n\n  /**\n   * Checks if a tx type defining capability is active\n   * on a tx, for example the EIP-1559 fee market mechanism\n   * or the EIP-2930 access list feature.\n   *\n   * Note that this is different from the tx type itself,\n   * so EIP-2930 access lists can very well be active\n   * on an EIP-1559 tx for example.\n   *\n   * This method can be useful for feature checks if the\n   * tx type is unknown (e.g. when instantiated with\n   * the tx factory).\n   *\n   * See `Capabilites` in the `types` module for a reference\n   * on all supported capabilities.\n   */\n  supports(capability: Capability) {\n    return this.activeCapabilities.includes(capability)\n  }\n\n  /**\n   * Checks if the transaction has the minimum amount of gas required\n   * (DataFee + TxFee + Creation Fee).\n   */\n  validate(): boolean\n  validate(stringError: false): boolean\n  validate(stringError: true): string[]\n  validate(stringError: boolean = false): boolean | string[] {\n    const errors = []\n\n    if (this.getBaseFee() > this.gasLimit) {\n      errors.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`)\n    }\n\n    if (this.isSigned() && !this.verifySignature()) {\n      errors.push('Invalid Signature')\n    }\n\n    return stringError ? errors : errors.length === 0\n  }\n\n  protected _validateYParity() {\n    const { v } = this\n    if (v !== undefined && v !== BigInt(0) && v !== BigInt(1)) {\n      const msg = this._errorMsg('The y-parity of the transaction should either be 0 or 1')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2are considered invalid.\n   * Reasoning: https://ethereum.stackexchange.com/a/55728\n   */\n  protected _validateHighS() {\n    const { s } = this\n    if (this.common.gteHardfork('homestead') && s !== undefined && s > SECP256K1_ORDER_DIV_2) {\n      const msg = this._errorMsg(\n        'Invalid Signature: s-values greater than secp256k1n/2 are considered invalid'\n      )\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * The minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n   */\n  getBaseFee(): bigint {\n    const txFee = this.common.param('gasPrices', 'tx')\n    let fee = this.getDataFee()\n    if (txFee) fee += txFee\n    if (this.common.gteHardfork('homestead') && this.toCreationAddress()) {\n      const txCreationFee = this.common.param('gasPrices', 'txCreation')\n      if (txCreationFee) fee += txCreationFee\n    }\n    return fee\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    const txDataZero = this.common.param('gasPrices', 'txDataZero')\n    const txDataNonZero = this.common.param('gasPrices', 'txDataNonZero')\n\n    let cost = BigInt(0)\n    for (let i = 0; i < this.data.length; i++) {\n      this.data[i] === 0 ? (cost += txDataZero) : (cost += txDataNonZero)\n    }\n\n    if ((this.to === undefined || this.to === null) && this.common.isActivatedEIP(3860)) {\n      const dataLength = BigInt(Math.ceil(this.data.length / 32))\n      const initCodeCost = this.common.param('gasPrices', 'initCodeWordCost') * dataLength\n      cost += initCodeCost\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  abstract getUpfrontCost(): bigint\n\n  /**\n   * If the tx's `to` is to the creation address\n   */\n  toCreationAddress(): boolean {\n    return this.to === undefined || this.to.buf.length === 0\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of this transaction, in order.\n   *\n   * Use {@link BaseTransaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link BaseTransaction.getMessageToSign}.\n   */\n  abstract raw(): TxValuesArray | AccessListEIP2930ValuesArray | FeeMarketEIP1559ValuesArray\n\n  /**\n   * Returns the encoding of the transaction.\n   */\n  abstract serialize(): Buffer\n\n  // Returns the unsigned tx (hashed or raw), which is used to sign the transaction.\n  //\n  // Note: do not use code docs here since VS Studio is then not able to detect the\n  // comments from the inherited methods\n  abstract getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  abstract getMessageToSign(hashMessage?: true): Buffer\n\n  abstract hash(): Buffer\n\n  abstract getMessageToVerifySignature(): Buffer\n\n  public isSigned(): boolean {\n    const { v, r, s } = this\n    if (v === undefined || r === undefined || s === undefined) {\n      return false\n    } else {\n      return true\n    }\n  }\n\n  /**\n   * Determines if the signature is valid\n   */\n  verifySignature(): boolean {\n    try {\n      // Main signature verification is done in `getSenderPublicKey()`\n      const publicKey = this.getSenderPublicKey()\n      return unpadBuffer(publicKey).length !== 0\n    } catch (e: any) {\n      return false\n    }\n  }\n\n  /**\n   * Returns the sender's address\n   */\n  getSenderAddress(): Address {\n    return new Address(publicToAddress(this.getSenderPublicKey()))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  abstract getSenderPublicKey(): Buffer\n\n  /**\n   * Signs a transaction.\n   *\n   * Note that the signed tx is returned as a new object,\n   * use as follows:\n   * ```javascript\n   * const signedTx = tx.sign(privateKey)\n   * ```\n   */\n  sign(privateKey: Buffer): TransactionObject {\n    if (privateKey.length !== 32) {\n      const msg = this._errorMsg('Private key must be 32 bytes in length.')\n      throw new Error(msg)\n    }\n\n    // Hack for the constellation that we have got a legacy tx after spuriousDragon with a non-EIP155 conforming signature\n    // and want to recreate a signature (where EIP155 should be applied)\n    // Leaving this hack lets the legacy.spec.ts -> sign(), verifySignature() test fail\n    // 2021-06-23\n    let hackApplied = false\n    if (\n      this.type === 0 &&\n      this.common.gteHardfork('spuriousDragon') &&\n      !this.supports(Capability.EIP155ReplayProtection)\n    ) {\n      this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      hackApplied = true\n    }\n\n    const msgHash = this.getMessageToSign(true)\n    const { v, r, s } = ecsign(msgHash, privateKey)\n    const tx = this._processSignature(v, r, s)\n\n    // Hack part 2\n    if (hackApplied) {\n      const index = this.activeCapabilities.indexOf(Capability.EIP155ReplayProtection)\n      if (index > -1) {\n        this.activeCapabilities.splice(index, 1)\n      }\n    }\n\n    return tx\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  abstract toJSON(): JsonTx\n\n  // Accept the v,r,s values from the `sign` method, and convert this into a TransactionObject\n  protected abstract _processSignature(v: bigint, r: Buffer, s: Buffer): TransactionObject\n\n  /**\n   * Does chain ID checks on common and returns a common\n   * to be used on instantiation\n   * @hidden\n   *\n   * @param common - {@link Common} instance from tx options\n   * @param chainId - Chain ID from tx options (typed txs) or signature (legacy tx)\n   */\n  protected _getCommon(common?: Common, chainId?: BigIntLike) {\n    // Chain ID provided\n    if (chainId !== undefined) {\n      const chainIdBigInt = bufferToBigInt(toBuffer(chainId))\n      if (common) {\n        if (common.chainId() !== chainIdBigInt) {\n          const msg = this._errorMsg('The chain ID does not match the chain ID of Common')\n          throw new Error(msg)\n        }\n        // Common provided, chain ID does match\n        // -> Return provided Common\n        return common.copy()\n      } else {\n        if (Common.isSupportedChainId(chainIdBigInt)) {\n          // No Common, chain ID supported by Common\n          // -> Instantiate Common with chain ID\n          return new Common({ chain: chainIdBigInt, hardfork: this.DEFAULT_HARDFORK })\n        } else {\n          // No Common, chain ID not supported by Common\n          // -> Instantiate custom Common derived from DEFAULT_CHAIN\n          return Common.custom(\n            {\n              name: 'custom-chain',\n              networkId: chainIdBigInt,\n              chainId: chainIdBigInt,\n            },\n            { baseChain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK }\n          )\n        }\n      }\n    } else {\n      // No chain ID provided\n      // -> return Common provided or create new default Common\n      return (\n        common?.copy() ?? new Common({ chain: this.DEFAULT_CHAIN, hardfork: this.DEFAULT_HARDFORK })\n      )\n    }\n  }\n\n  /**\n   * Validates that an object with BigInt values cannot exceed the specified bit limit.\n   * @param values Object containing string keys and BigInt values\n   * @param bits Number of bits to check (64 or 256)\n   * @param cannotEqual Pass true if the number also cannot equal one less the maximum value\n   */\n  protected _validateCannotExceedMaxInteger(\n    values: { [key: string]: bigint | undefined },\n    bits = 256,\n    cannotEqual = false\n  ) {\n    for (const [key, value] of Object.entries(values)) {\n      switch (bits) {\n        case 64:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_UINT64) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_UINT64 (2^64-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_UINT64) {\n              const msg = this._errorMsg(`${key} cannot exceed MAX_UINT64 (2^64-1), given ${value}`)\n              throw new Error(msg)\n            }\n          }\n          break\n        case 256:\n          if (cannotEqual) {\n            if (value !== undefined && value >= MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot equal or exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          } else {\n            if (value !== undefined && value > MAX_INTEGER) {\n              const msg = this._errorMsg(\n                `${key} cannot exceed MAX_INTEGER (2^256-1), given ${value}`\n              )\n              throw new Error(msg)\n            }\n          }\n          break\n        default: {\n          const msg = this._errorMsg('unimplemented bits value')\n          throw new Error(msg)\n        }\n      }\n    }\n  }\n\n  protected static _validateNotArray(values: { [key: string]: any }) {\n    const txDataKeys = [\n      'nonce',\n      'gasPrice',\n      'gasLimit',\n      'to',\n      'value',\n      'data',\n      'v',\n      'r',\n      's',\n      'type',\n      'baseFee',\n      'maxFeePerGas',\n      'chainId',\n    ]\n    for (const [key, value] of Object.entries(values)) {\n      if (txDataKeys.includes(key)) {\n        if (Array.isArray(value)) {\n          throw new Error(`${key} cannot be an array`)\n        }\n      }\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public abstract errorStr(): string\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected abstract _errorMsg(msg: string): string\n\n  /**\n   * Returns the shared error postfix part for _error() method\n   * tx type implementations.\n   */\n  protected _getSharedErrorPostfix() {\n    let hash = ''\n    try {\n      hash = this.isSigned() ? bufferToHex(this.hash()) : 'not available (unsigned)'\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let isSigned = ''\n    try {\n      isSigned = this.isSigned().toString()\n    } catch (e: any) {\n      hash = 'error'\n    }\n    let hf = ''\n    try {\n      hf = this.common.hardfork()\n    } catch (e: any) {\n      hf = 'error'\n    }\n\n    let postfix = `tx type=${this.type} hash=${hash} nonce=${this.nonce} value=${this.value} `\n    postfix += `signed=${isSigned} hf=${hf}`\n\n    return postfix\n  }\n}\n", "import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { AccessLists } from './util'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  FeeMarketEIP1559TxData,\n  FeeMarketEIP1559ValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 2\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with a new gas fee market mechanism\n *\n * - TransactionType: 2\n * - EIP: [EIP-1559](https://eips.ethereum.org/EIPS/eip-1559)\n */\nexport class FeeMarketEIP1559Transaction extends BaseTransaction<FeeMarketEIP1559Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'london'\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    return new FeeMarketEIP1559Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = arrToBufArr(RLP.decode(serialized.slice(1)))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return FeeMarketEIP1559Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   */\n  public static fromValuesArray(values: FeeMarketEIP1559ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 9 && values.length !== 12) {\n      throw new Error(\n        'Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).'\n      )\n    }\n\n    const [\n      chainId,\n      nonce,\n      maxPriorityFeePerGas,\n      maxFeePerGas,\n      gasLimit,\n      to,\n      value,\n      data,\n      accessList,\n      v,\n      r,\n      s,\n    ] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, value, v, r, s })\n\n    return new FeeMarketEIP1559Transaction(\n      {\n        chainId: bufferToBigInt(chainId),\n        nonce,\n        maxPriorityFeePerGas,\n        maxFeePerGas,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? [],\n        v: v !== undefined ? bufferToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: FeeMarketEIP1559TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bufferToBigInt(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bufferToBigInt(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    this._validateYParity()\n    this._validateHighS()\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    let cost = super.getDataFee()\n    cost += BigInt(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BigInt(0)): bigint {\n    const prio = this.maxPriorityFeePerGas\n    const maxBase = this.maxFeePerGas - baseFee\n    const inclusionFeePerGas = prio < maxBase ? prio : maxBase\n    const gasPrice = inclusionFeePerGas + baseFee\n    return this.gasLimit * gasPrice + this.value\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-1559 transaction, in order.\n   *\n   * Format: `[chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS]`\n   *\n   * Use {@link FeeMarketEIP1559Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link FeeMarketEIP1559Transaction.getMessageToSign}.\n   */\n  raw(): FeeMarketEIP1559ValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.chainId),\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.maxPriorityFeePerGas),\n      bigIntToUnpaddedBuffer(this.maxFeePerGas),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-1559 transaction.\n   *\n   * Format: `0x02 || rlp([chainId, nonce, maxPriorityFeePerGas, maxFeePerGas, gasLimit, to, value, data,\n   * accessList, signatureYParity, signatureR, signatureS])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 9)\n    const message = Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n    if (hashMessage) {\n      return Buffer.from(keccak256(message))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link FeeMarketEIP1559Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(this.serialize()))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return FeeMarketEIP1559Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n", "import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { AccessLists } from './util'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  AccessListEIP2930TxData,\n  AccessListEIP2930ValuesArray,\n  JsonTx,\n  TxOptions,\n} from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 1\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\n/**\n * Typed transaction with optional access lists\n *\n * - TransactionType: 1\n * - EIP: [EIP-2930](https://eips.ethereum.org/EIPS/eip-2930)\n */\nexport class AccessListEIP2930Transaction extends BaseTransaction<AccessListEIP2930Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * The default HF if the tx type is active on that HF\n   * or the first greater HF where the tx is active.\n   *\n   * @hidden\n   */\n  protected DEFAULT_HARDFORK = 'berlin'\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * v, r, s }\n   *\n   * Notes:\n   * - `chainId` will be set automatically if not provided\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    return new AccessListEIP2930Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    if (!serialized.slice(0, 1).equals(TRANSACTION_TYPE_BUFFER)) {\n      throw new Error(\n        `Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${TRANSACTION_TYPE}, received: ${serialized\n          .slice(0, 1)\n          .toString('hex')}`\n      )\n    }\n\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized.slice(1))))\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input: must be array')\n    }\n\n    return AccessListEIP2930Transaction.fromValuesArray(values as any, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   */\n  public static fromValuesArray(values: AccessListEIP2930ValuesArray, opts: TxOptions = {}) {\n    if (values.length !== 8 && values.length !== 11) {\n      throw new Error(\n        'Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).'\n      )\n    }\n\n    const [chainId, nonce, gasPrice, gasLimit, to, value, data, accessList, v, r, s] = values\n\n    this._validateNotArray({ chainId, v })\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    const emptyAccessList: AccessList = []\n\n    return new AccessListEIP2930Transaction(\n      {\n        chainId: bufferToBigInt(chainId),\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        accessList: accessList ?? emptyAccessList,\n        v: v !== undefined ? bufferToBigInt(v) : undefined, // EIP2930 supports v's with value 0 (empty Buffer)\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: AccessListEIP2930TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, gasPrice } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    // EIP-2718 check is done in Common\n    if (!this.common.isActivatedEIP(2930)) {\n      throw new Error('EIP-2930 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.gasPrice = bufferToBigInt(toBuffer(gasPrice === '' ? '0x' : gasPrice))\n\n    this._validateCannotExceedMaxInteger({\n      gasPrice: this.gasPrice,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * gasPrice cannot exceed MAX_INTEGER')\n      throw new Error(msg)\n    }\n\n    this._validateYParity()\n    this._validateHighS()\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    let cost = super.getDataFee()\n    cost += BigInt(AccessLists.getDataFeeEIP2930(this.accessList, this.common))\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: cost,\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return cost\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the EIP-2930 transaction, in order.\n   *\n   * Format: `[chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)]`\n   *\n   * Use {@link AccessListEIP2930Transaction.serialize} to add a transaction to a block\n   * with {@link Block.fromValuesArray}.\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link AccessListEIP2930Transaction.getMessageToSign}.\n   */\n  raw(): AccessListEIP2930ValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.chainId),\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.accessList,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the EIP-2930 transaction.\n   *\n   * Format: `0x01 || rlp([chainId, nonce, gasPrice, gasLimit, to, value, data, accessList,\n   * signatureYParity (v), signatureR (r), signatureS (s)])`\n   *\n   * Note that in contrast to the legacy tx serialization format this is not\n   * valid RLP any more due to the raw tx type preceding and concatenated to\n   * the RLP encoding of the values.\n   */\n  serialize(): Buffer {\n    const base = this.raw()\n    return Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n  }\n\n  /**\n   * Returns the serialized unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: in contrast to the legacy tx the raw message format is already\n   * serialized and doesn't need to be RLP encoded any more.\n   *\n   * ```javascript\n   * const serializedMessage = tx.getMessageToSign(false) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage = true): Buffer {\n    const base = this.raw().slice(0, 8)\n    const message = Buffer.concat([\n      TRANSACTION_TYPE_BUFFER,\n      Buffer.from(RLP.encode(bufArrToArr(base as Buffer[]))),\n    ])\n    if (hashMessage) {\n      return Buffer.from(keccak256(message))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link AccessListEIP2930Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  public hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(this.serialize()))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  public getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return AccessListEIP2930Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction\n   */\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      gasPrice: bigIntToHex(this.gasPrice),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    // Keep ? for this.accessList since this otherwise causes Hardhat E2E tests to fail\n    errorStr += ` gasPrice=${this.gasPrice} accessListCount=${this.accessList?.length ?? 0}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n", "import type { Kzg } from '../depInterfaces'\n\nfunction kzgNotLoaded(): never {\n  throw Error('kzg library not loaded')\n}\n\n// eslint-disable-next-line import/no-mutable-exports\nexport let kzg: Kzg = {\n  freeTrustedSetup: kzgNotLoaded,\n  loadTrustedSetup: kzgNotLoaded,\n  blobToKzgCommitment: kzgNotLoaded,\n  computeAggregateKzgProof: kzgNotLoaded,\n  verifyKzgProof: kzgNotLoaded,\n  verifyAggregateKzgProof: kzgNotLoaded,\n}\n\n/**\n * @param kzgLib a KZG implementation (defaults to c-kzg)\n * @param trustedSetupPath the full path (e.g. \"/home/linux/devnet4.txt\") to a kzg trusted setup text file\n */\nexport function initKZG(kzgLib: Kzg, trustedSetupPath: string) {\n  kzg = kzgLib\n  kzg.loadTrustedSetup(trustedSetupPath)\n}\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sha256 = void 0;\nconst sha256_1 = require(\"@noble/hashes/sha256\");\nconst utils_1 = require(\"./utils\");\nexports.sha256 = (0, utils_1.wrapHash)(sha256_1.sha256);\n", "import { sha256 } from 'ethereum-cryptography/sha256'\n\nimport { kzg } from '../kzg/kzg'\n\n/**\n * These utilities for constructing blobs are borrowed from https://github.com/Inphi/eip4844-interop.git\n */\nconst BYTES_PER_FIELD_ELEMENT = 32\nconst FIELD_ELEMENTS_PER_BLOB = 4096\nconst USEFUL_BYTES_PER_BLOB = 32 * FIELD_ELEMENTS_PER_BLOB\nconst MAX_BLOBS_PER_TX = 2\nconst MAX_USEFUL_BYTES_PER_TX = USEFUL_BYTES_PER_BLOB * MAX_BLOBS_PER_TX - 1\nconst BLOB_SIZE = BYTES_PER_FIELD_ELEMENT * FIELD_ELEMENTS_PER_BLOB\n\nfunction get_padded(data: Buffer, blobs_len: number) {\n  const pdata = Buffer.alloc(blobs_len * USEFUL_BYTES_PER_BLOB)\n  const datalen = Buffer.byteLength(data)\n  pdata.fill(data, 0, datalen)\n  pdata[datalen] = 0x80\n  return pdata\n}\n\nfunction get_blob(data: Buffer) {\n  const blob = Buffer.alloc(BLOB_SIZE, 'binary')\n  for (let i = 0; i < FIELD_ELEMENTS_PER_BLOB; i++) {\n    const chunk = Buffer.alloc(32, 'binary')\n    chunk.fill(data.subarray(i * 31, (i + 1) * 31), 0, 31)\n    blob.fill(chunk, i * 32, (i + 1) * 32)\n  }\n\n  return blob\n}\n\nexport const getBlobs = (input: string) => {\n  const data = Buffer.from(input, 'binary')\n  const len = Buffer.byteLength(data)\n  if (len === 0) {\n    throw Error('invalid blob data')\n  }\n  if (len > MAX_USEFUL_BYTES_PER_TX) {\n    throw Error('blob data is too large')\n  }\n\n  const blobs_len = Math.ceil(len / USEFUL_BYTES_PER_BLOB)\n\n  const pdata = get_padded(data, blobs_len)\n\n  const blobs = []\n  for (let i = 0; i < blobs_len; i++) {\n    const chunk = pdata.subarray(i * USEFUL_BYTES_PER_BLOB, (i + 1) * USEFUL_BYTES_PER_BLOB)\n    const blob = get_blob(chunk)\n    blobs.push(blob)\n  }\n\n  return blobs\n}\n\nexport const blobsToCommitments = (blobs: Buffer[]) => {\n  const commitments = []\n  for (const blob of blobs) {\n    commitments.push(Buffer.from(kzg.blobToKzgCommitment(blob)))\n  }\n  return commitments\n}\n\n/**\n * Converts a vector commitment for a given data blob to its versioned hash.  For 4844, this version\n * number will be 0x01 for KZG vector commitments but could be different if future vector commitment\n * types are introduced\n * @param commitment a vector commitment to a blob\n * @param blobCommitmentVersion the version number corresponding to the type of vector commitment\n * @returns a versioned hash corresponding to a given blob vector commitment\n */\nexport const computeVersionedHash = (commitment: Uint8Array, blobCommitmentVersion: number) => {\n  const computedVersionedHash = new Uint8Array(32)\n  computedVersionedHash.set([blobCommitmentVersion], 0)\n  computedVersionedHash.set(sha256(commitment).slice(1), 1)\n  return computedVersionedHash\n}\n\n/**\n * Generate an array of versioned hashes from corresponding kzg commitments\n * @param commitments array of kzg commitments\n * @returns array of versioned hashes\n * Note: assumes KZG commitments (version 1 version hashes)\n */\nexport const commitmentsToVersionedHashes = (commitments: Buffer[]) => {\n  const hashes = []\n  for (const commitment of commitments) {\n    hashes.push(Buffer.from(computeVersionedHash(commitment, 0x01)))\n  }\n  return hashes\n}\n", "import { byteArrayEquals } from '@chainsafe/ssz'\nimport {\n  Address,\n  MAX_INTEGER,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufferToBigInt,\n  bufferToHex,\n  ecrecover,\n  toBuffer,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { LIMIT_BLOBS_PER_TX } from './constants'\nimport { kzg } from './kzg/kzg'\nimport {\n  BlobNetworkTransactionWrapper,\n  BlobTransactionType,\n  SignedBlobTransactionType,\n} from './types'\nimport { AccessLists, blobTxToNetworkWrapperDataFormat } from './util'\nimport { computeVersionedHash } from './utils/blobHelpers'\n\nimport type {\n  AccessList,\n  AccessListBuffer,\n  AccessListBufferItem,\n  BlobEIP4844TxData,\n  JsonTx,\n  TxOptions,\n  TxValuesArray,\n} from './types'\nimport type { ValueOf } from '@chainsafe/ssz'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 0x05\nconst TRANSACTION_TYPE_BUFFER = Buffer.from(TRANSACTION_TYPE.toString(16).padStart(2, '0'), 'hex')\n\nconst validateBlobTransactionNetworkWrapper = (\n  versionedHashes: Uint8Array[],\n  blobs: Uint8Array[],\n  commitments: Uint8Array[],\n  kzgProof: Uint8Array,\n  version: number\n) => {\n  if (!(versionedHashes.length === blobs.length && blobs.length === commitments.length)) {\n    throw new Error('Number of versionedHashes, blobs, and commitments not all equal')\n  }\n  try {\n    kzg.verifyAggregateKzgProof(blobs, commitments, kzgProof)\n  } catch (e) {\n    throw new Error('KZG proof cannot be verified from blobs/commitments')\n  }\n\n  for (let x = 0; x < versionedHashes.length; x++) {\n    const computedVersionedHash = computeVersionedHash(commitments[x], version)\n    if (!byteArrayEquals(computedVersionedHash, versionedHashes[x])) {\n      throw new Error(`commitment for blob at index ${x} does not match versionedHash`)\n    }\n  }\n}\n\n/**\n * Typed transaction with a new gas fee market mechanism for transactions that include \"blobs\" of data\n *\n * - TransactionType: 5\n * - EIP: [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844)\n */\nexport class BlobEIP4844Transaction extends BaseTransaction<BlobEIP4844Transaction> {\n  public readonly chainId: bigint\n  public readonly accessList: AccessListBuffer\n  public readonly AccessListJSON: AccessList\n  public readonly maxPriorityFeePerGas: bigint\n  public readonly maxFeePerGas: bigint\n  public readonly maxFeePerDataGas: bigint\n\n  public readonly common: Common\n  public versionedHashes: Buffer[]\n  blobs?: Buffer[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n  kzgCommitments?: Buffer[] // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n  aggregateKzgProof?: Buffer // This property should only be populated when the transaction is in the \"Network Wrapper\" format\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static constructors or factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  constructor(txData: BlobEIP4844TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n    const { chainId, accessList, maxFeePerGas, maxPriorityFeePerGas, maxFeePerDataGas } = txData\n\n    this.common = this._getCommon(opts.common, chainId)\n    this.chainId = this.common.chainId()\n\n    if (this.common.isActivatedEIP(1559) === false) {\n      throw new Error('EIP-1559 not enabled on Common')\n    }\n\n    if (this.common.isActivatedEIP(4844) === false) {\n      throw new Error('EIP-4844 not enabled on Common')\n    }\n    this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930])\n\n    // Populate the access list fields\n    const accessListData = AccessLists.getAccessListData(accessList ?? [])\n    this.accessList = accessListData.accessList\n    this.AccessListJSON = accessListData.AccessListJSON\n    // Verify the access list format.\n    AccessLists.verifyAccessList(this.accessList)\n\n    this.maxFeePerGas = bufferToBigInt(toBuffer(maxFeePerGas === '' ? '0x' : maxFeePerGas))\n    this.maxPriorityFeePerGas = bufferToBigInt(\n      toBuffer(maxPriorityFeePerGas === '' ? '0x' : maxPriorityFeePerGas)\n    )\n\n    this._validateCannotExceedMaxInteger({\n      maxFeePerGas: this.maxFeePerGas,\n      maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n    })\n\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.gasLimit * this.maxFeePerGas > MAX_INTEGER) {\n      const msg = this._errorMsg('gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n\n    if (this.maxFeePerGas < this.maxPriorityFeePerGas) {\n      const msg = this._errorMsg(\n        'maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)'\n      )\n      throw new Error(msg)\n    }\n\n    this.maxFeePerDataGas = bufferToBigInt(\n      toBuffer((maxFeePerDataGas ?? '') === '' ? '0x' : maxFeePerDataGas)\n    )\n\n    this.versionedHashes = (txData.versionedHashes ?? []).map((vh) => toBuffer(vh))\n    this._validateYParity()\n    this._validateHighS()\n\n    for (const hash of this.versionedHashes) {\n      if (hash.length !== 32) {\n        const msg = this._errorMsg('versioned hash is invalid length')\n        throw new Error(msg)\n      }\n      if (\n        BigInt(hash[0]) !== this.common.paramByEIP('sharding', 'blobCommitmentVersionKzg', 4844)\n      ) {\n        const msg = this._errorMsg('versioned hash does not start with KZG commitment version')\n        throw new Error(msg)\n      }\n    }\n    if (this.versionedHashes.length > LIMIT_BLOBS_PER_TX) {\n      const msg = this._errorMsg(`tx can contain at most ${LIMIT_BLOBS_PER_TX} blobs`)\n      throw new Error(msg)\n    }\n\n    this.blobs = txData.blobs?.map((blob) => toBuffer(blob))\n    this.kzgCommitments = txData.kzgCommitments?.map((commitment) => toBuffer(commitment))\n    this.aggregateKzgProof = toBuffer(txData.kzgProof)\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  public static fromTxData(txData: BlobEIP4844TxData, opts?: TxOptions) {\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * Creates the minimal representation of a blob transaction from the network wrapper version.\n   * The minimal representation is used when adding transactions to an execution payload/block\n   * @param txData a {@link BlobEIP4844Transaction} containing optional blobs/kzg commitments\n   * @param opts - dictionary of {@link TxOptions}\n   * @returns the \"minimal\" representation of a BlobEIP4844Transaction (i.e. transaction object minus blobs and kzg commitments)\n   */\n  public static minimalFromNetworkWrapper(txData: BlobEIP4844Transaction, opts?: TxOptions) {\n    const tx = BlobEIP4844Transaction.fromTxData(\n      {\n        ...txData,\n        ...{ blobs: undefined, kzgCommitments: undefined, kzgProof: undefined },\n      },\n      opts\n    )\n    return tx\n  }\n\n  /**\n   * Creates a transaction from the network encoding of a blob transaction (with blobs/commitments/proof)\n   * @param serialized a buffer representing a serialized BlobTransactionNetworkWrapper\n   * @param opts any TxOptions defined\n   * @returns a BlobEIP4844Transaction\n   * @throws if no KZG library is loaded -- using the `initKzg` helper method -- or if `opts.common` not provided\n   */\n  public static fromSerializedBlobTxNetworkWrapper(\n    serialized: Buffer,\n    opts?: TxOptions\n  ): BlobEIP4844Transaction {\n    if (!opts || !opts.common) {\n      throw new Error('common instance required to validate versioned hashes')\n    }\n    // Validate network wrapper\n    const wrapper = BlobNetworkTransactionWrapper.deserialize(serialized.slice(1))\n    const decodedTx = wrapper.tx.message\n    const version = Number(opts.common.paramByEIP('sharding', 'blobCommitmentVersionKzg', 4844))\n    validateBlobTransactionNetworkWrapper(\n      decodedTx.blobVersionedHashes,\n      wrapper.blobs,\n      wrapper.blobKzgs,\n      wrapper.kzgAggregatedProof,\n      version\n    )\n\n    const accessList: AccessListBuffer = []\n    for (const listItem of decodedTx.accessList) {\n      const address = Buffer.from(listItem.address)\n      const storageKeys = listItem.storageKeys.map((key) => Buffer.from(key))\n      const accessListItem: AccessListBufferItem = [address, storageKeys]\n      accessList.push(accessListItem)\n    }\n\n    const to =\n      decodedTx.to.value === null\n        ? undefined\n        : Address.fromString(bufferToHex(Buffer.from(decodedTx.to.value)))\n\n    const versionedHashes = decodedTx.blobVersionedHashes.map((el) => Buffer.from(el))\n    const commitments = wrapper.blobKzgs.map((el) => Buffer.from(el))\n    const blobs = wrapper.blobs.map((el) => Buffer.from(el))\n    const txData = {\n      ...decodedTx,\n      ...{\n        versionedHashes,\n        accessList,\n        to,\n        blobs,\n        kzgCommitments: commitments,\n        kzgProof: Buffer.from(wrapper.kzgAggregatedProof),\n        r: wrapper.tx.signature.r,\n        s: wrapper.tx.signature.s,\n        v: BigInt(wrapper.tx.signature.yParity),\n        gasLimit: decodedTx.gas,\n        maxFeePerGas: decodedTx.maxFeePerGas,\n        maxPriorityFeePerGas: decodedTx.maxPriorityFeePerGas,\n      },\n    } as BlobEIP4844TxData\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * Creates a transaction from the \"minimal\" encoding of a blob transaction (without blobs/commitments/kzg proof)\n   * @param serialized a buffer representing a serialized signed blob transaction\n   * @param opts any TxOptions defined\n   * @returns a BlobEIP4844Transaction\n   */\n  public static fromSerializedTx(serialized: Buffer, opts?: TxOptions) {\n    const decoded = SignedBlobTransactionType.deserialize(serialized.slice(1))\n    const tx = decoded.message\n    const accessList: AccessListBuffer = []\n    for (const listItem of tx.accessList) {\n      const address = Buffer.from(listItem.address)\n      const storageKeys = listItem.storageKeys.map((key) => Buffer.from(key))\n      const accessListItem: AccessListBufferItem = [address, storageKeys]\n      accessList.push(accessListItem)\n    }\n    const to =\n      tx.to.value === null ? undefined : Address.fromString(bufferToHex(Buffer.from(tx.to.value)))\n    const versionedHashes = tx.blobVersionedHashes.map((el) => Buffer.from(el))\n    const txData = {\n      ...tx,\n      ...{\n        versionedHashes,\n        to,\n        accessList,\n        r: decoded.signature.r,\n        s: decoded.signature.s,\n        v: BigInt(decoded.signature.yParity),\n        gasLimit: decoded.message.gas,\n      },\n    } as BlobEIP4844TxData\n    return new BlobEIP4844Transaction(txData, opts)\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   * @param baseFee The base fee of the block (will be set to 0 if not provided)\n   */\n  getUpfrontCost(baseFee: bigint = BigInt(0)): bigint {\n    const prio = this.maxPriorityFeePerGas\n    const maxBase = this.maxFeePerGas - baseFee\n    const inclusionFeePerGas = prio < maxBase ? prio : maxBase\n    const gasPrice = inclusionFeePerGas + baseFee\n    return this.gasLimit * gasPrice + this.value\n  }\n\n  /**\n   * This method is not implemented for blob transactions as the `raw` method is used exclusively with\n   * rlp encoding and these transactions use SSZ for serialization.\n   */\n  raw(): TxValuesArray {\n    throw new Error('Method not implemented.')\n  }\n\n  toValue(): ValueOf<typeof SignedBlobTransactionType> {\n    const to = {\n      selector: this.to !== undefined ? 1 : 0,\n      value: this.to?.toBuffer() ?? null,\n    }\n    return {\n      message: {\n        chainId: this.common.chainId(),\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gas: this.gasLimit,\n        to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList.map((listItem) => {\n          return { address: listItem[0], storageKeys: listItem[1] }\n        }),\n        blobVersionedHashes: this.versionedHashes,\n        maxFeePerDataGas: this.maxFeePerDataGas,\n      },\n      // TODO: Decide how to serialize an unsigned transaction\n      signature: {\n        r: this.r ?? BigInt(0),\n        s: this.s ?? BigInt(0),\n        yParity: this.v === BigInt(1) ? true : false,\n      },\n    }\n  }\n\n  /**\n   * Serialize a blob transaction to the execution payload variant\n   * @returns the minimum (execution payload) serialization of a signed transaction\n   */\n  serialize(): Buffer {\n    const sszEncodedTx = SignedBlobTransactionType.serialize(this.toValue())\n    return Buffer.concat([TRANSACTION_TYPE_BUFFER, sszEncodedTx])\n  }\n\n  /**\n   * @returns the serialized form of a blob transaction in the network wrapper format (used for gossipping mempool transactions over devp2p)\n   */\n  serializeNetworkWrapper(): Buffer {\n    if (\n      this.blobs === undefined ||\n      this.kzgCommitments === undefined ||\n      this.aggregateKzgProof === undefined\n    ) {\n      throw new Error(\n        'cannot serialize network wrapper without blobs, KZG commitments and aggregate KZG proof provided'\n      )\n    }\n    const to = {\n      selector: this.to !== undefined ? 1 : 0,\n      value: this.to?.toBuffer() ?? null,\n    }\n\n    const blobArrays = this.blobs?.map((blob) => Uint8Array.from(blob)) ?? []\n    const serializedTxWrapper = BlobNetworkTransactionWrapper.serialize({\n      blobs: blobArrays,\n      blobKzgs: this.kzgCommitments?.map((commitment) => Uint8Array.from(commitment)) ?? [],\n      tx: { ...blobTxToNetworkWrapperDataFormat(this), ...to },\n      kzgAggregatedProof: Uint8Array.from(this.aggregateKzgProof ?? []),\n    })\n    return Buffer.concat([Buffer.from([0x05]), serializedTxWrapper])\n  }\n\n  getMessageToSign(hashMessage: false): Buffer | Buffer[]\n  getMessageToSign(hashMessage?: true | undefined): Buffer\n  getMessageToSign(_hashMessage?: unknown): Buffer | Buffer[] {\n    return this.unsignedHash()\n  }\n\n  /**\n   * Returns the hash of a blob transaction\n   */\n  unsignedHash(): Buffer {\n    const serializedTx = BlobTransactionType.serialize(this.toValue().message)\n    return Buffer.from(keccak256(Buffer.concat([TRANSACTION_TYPE_BUFFER, serializedTx])))\n  }\n\n  hash(): Buffer {\n    return Buffer.from(keccak256(this.serialize()))\n  }\n\n  getMessageToVerifySignature(): Buffer {\n    return this.getMessageToSign()\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  public getSenderPublicKey(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call this method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    const msgHash = this.getMessageToVerifySignature()\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v! + BigInt(27), // Recover the 27 which was stripped from ecsign\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!)\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  toJSON(): JsonTx {\n    const accessListJSON = AccessLists.getAccessListJSON(this.accessList)\n    return {\n      chainId: bigIntToHex(this.chainId),\n      nonce: bigIntToHex(this.nonce),\n      maxPriorityFeePerGas: bigIntToHex(this.maxPriorityFeePerGas),\n      maxFeePerGas: bigIntToHex(this.maxFeePerGas),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      accessList: accessListJSON,\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n      maxFeePerDataGas: bigIntToHex(this.maxFeePerDataGas),\n      versionedHashes: this.versionedHashes.map((hash) => bufferToHex(hash)),\n    }\n  }\n\n  _processSignature(v: bigint, r: Buffer, s: Buffer): BlobEIP4844Transaction {\n    const opts = { ...this.txOptions, common: this.common }\n\n    return BlobEIP4844Transaction.fromTxData(\n      {\n        chainId: this.chainId,\n        nonce: this.nonce,\n        maxPriorityFeePerGas: this.maxPriorityFeePerGas,\n        maxFeePerGas: this.maxFeePerGas,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        accessList: this.accessList,\n        v: v - BigInt(27), // This looks extremely hacky: @ethereumjs/util actually adds 27 to the value, the recovery bit is either 0 or 1.\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n        maxFeePerDataGas: this.maxFeePerDataGas,\n        versionedHashes: this.versionedHashes,\n        blobs: this.blobs,\n        kzgCommitments: this.kzgCommitments,\n        kzgProof: this.aggregateKzgProof,\n      },\n      opts\n    )\n  }\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n\n  /**\n   * @returns the number of blobs included with this transaction\n   */\n  public numBlobs() {\n    return this.versionedHashes.length\n  }\n}\n", "import { RLP } from '@ethereumjs/rlp'\nimport {\n  MAX_INTEGER,\n  arrToBufArr,\n  bigIntToHex,\n  bigIntToUnpaddedBuffer,\n  bufArrToArr,\n  bufferToBigInt,\n  ecrecover,\n  toBuffer,\n  unpadBuffer,\n  validateNoLeadingZeroes,\n} from '@ethereumjs/util'\nimport { keccak256 } from 'ethereum-cryptography/keccak'\n\nimport { BaseTransaction } from './baseTransaction'\nimport { Capability } from './types'\n\nimport type { JsonTx, TxData, TxOptions, TxValuesArray } from './types'\nimport type { Common } from '@ethereumjs/common'\n\nconst TRANSACTION_TYPE = 0\n\nfunction meetsEIP155(_v: bigint, chainId: bigint) {\n  const v = Number(_v)\n  const chainIdDoubled = Number(chainId) * 2\n  return v === chainIdDoubled + 35 || v === chainIdDoubled + 36\n}\n\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nexport class Transaction extends BaseTransaction<Transaction> {\n  public readonly gasPrice: bigint\n\n  public readonly common: Common\n\n  /**\n   * Instantiate a transaction from a data dictionary.\n   *\n   * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n   *\n   * Notes:\n   * - All parameters are optional and have some basic default values\n   */\n  public static fromTxData(txData: TxData, opts: TxOptions = {}) {\n    return new Transaction(txData, opts)\n  }\n\n  /**\n   * Instantiate a transaction from the serialized tx.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   */\n  public static fromSerializedTx(serialized: Buffer, opts: TxOptions = {}) {\n    const values = arrToBufArr(RLP.decode(Uint8Array.from(serialized))) as Buffer[]\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized tx input. Must be array')\n    }\n\n    return this.fromValuesArray(values, opts)\n  }\n\n  /**\n   * Create a transaction from a values array.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   */\n  public static fromValuesArray(values: TxValuesArray, opts: TxOptions = {}) {\n    // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n    // This happens if you get the RLP data from `raw()`\n    if (values.length !== 6 && values.length !== 9) {\n      throw new Error(\n        'Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).'\n      )\n    }\n\n    const [nonce, gasPrice, gasLimit, to, value, data, v, r, s] = values\n\n    validateNoLeadingZeroes({ nonce, gasPrice, gasLimit, value, v, r, s })\n\n    return new Transaction(\n      {\n        nonce,\n        gasPrice,\n        gasLimit,\n        to,\n        value,\n        data,\n        v,\n        r,\n        s,\n      },\n      opts\n    )\n  }\n\n  /**\n   * This constructor takes the values, validates them, assigns them and freezes the object.\n   *\n   * It is not recommended to use this constructor directly. Instead use\n   * the static factory methods to assist in creating a Transaction object from\n   * varying data types.\n   */\n  public constructor(txData: TxData, opts: TxOptions = {}) {\n    super({ ...txData, type: TRANSACTION_TYPE }, opts)\n\n    this.common = this._validateTxV(this.v, opts.common)\n\n    this.gasPrice = bufferToBigInt(toBuffer(txData.gasPrice === '' ? '0x' : txData.gasPrice))\n\n    if (this.gasPrice * this.gasLimit > MAX_INTEGER) {\n      const msg = this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)')\n      throw new Error(msg)\n    }\n    this._validateCannotExceedMaxInteger({ gasPrice: this.gasPrice })\n    BaseTransaction._validateNotArray(txData)\n\n    if (this.common.gteHardfork('spuriousDragon')) {\n      if (!this.isSigned()) {\n        this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n      } else {\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n        // then when computing the hash of a transaction for purposes of signing or recovering\n        // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n        // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        // v and chain ID meet EIP-155 conditions\n        if (meetsEIP155(this.v!, this.common.chainId())) {\n          this.activeCapabilities.push(Capability.EIP155ReplayProtection)\n        }\n      }\n    }\n\n    const freeze = opts?.freeze ?? true\n    if (freeze) {\n      Object.freeze(this)\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n   *\n   * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n   *\n   * For legacy txs this is also the correct format to add transactions\n   * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n   * for typed txs).\n   *\n   * For an unsigned tx this method returns the empty Buffer values\n   * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n   * representation have a look at {@link Transaction.getMessageToSign}.\n   */\n  raw(): TxValuesArray {\n    return [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n      this.v !== undefined ? bigIntToUnpaddedBuffer(this.v) : Buffer.from([]),\n      this.r !== undefined ? bigIntToUnpaddedBuffer(this.r) : Buffer.from([]),\n      this.s !== undefined ? bigIntToUnpaddedBuffer(this.s) : Buffer.from([]),\n    ]\n  }\n\n  /**\n   * Returns the serialized encoding of the legacy transaction.\n   *\n   * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n   *\n   * For an unsigned tx this method uses the empty Buffer values for the\n   * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n   * representation for external signing use {@link Transaction.getMessageToSign}.\n   */\n  serialize(): Buffer {\n    return Buffer.from(RLP.encode(bufArrToArr(this.raw())))\n  }\n\n  private _getMessageToSign() {\n    const values = [\n      bigIntToUnpaddedBuffer(this.nonce),\n      bigIntToUnpaddedBuffer(this.gasPrice),\n      bigIntToUnpaddedBuffer(this.gasLimit),\n      this.to !== undefined ? this.to.buf : Buffer.from([]),\n      bigIntToUnpaddedBuffer(this.value),\n      this.data,\n    ]\n\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      values.push(toBuffer(this.common.chainId()))\n      values.push(unpadBuffer(toBuffer(0)))\n      values.push(unpadBuffer(toBuffer(0)))\n    }\n\n    return values\n  }\n\n  /**\n   * Returns the unsigned tx (hashed or raw), which can be used\n   * to sign the transaction (e.g. for sending to a hardware wallet).\n   *\n   * Note: the raw message message format for the legacy tx is not RLP encoded\n   * and you might need to do yourself with:\n   *\n   * ```javascript\n   * import { bufArrToArr } from '@ethereumjs/util'\n   * import { RLP } from '@ethereumjs/rlp'\n   * const message = tx.getMessageToSign(false)\n   * const serializedMessage = Buffer.from(RLP.encode(bufArrToArr(message))) // use this for the HW wallet input\n   * ```\n   *\n   * @param hashMessage - Return hashed message if set to true (default: true)\n   */\n  getMessageToSign(hashMessage: false): Buffer[]\n  getMessageToSign(hashMessage?: true): Buffer\n  getMessageToSign(hashMessage = true) {\n    const message = this._getMessageToSign()\n    if (hashMessage) {\n      return Buffer.from(keccak256(RLP.encode(bufArrToArr(message))))\n    } else {\n      return message\n    }\n  }\n\n  /**\n   * The amount of gas paid for the data in this tx\n   */\n  getDataFee(): bigint {\n    if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n      return this.cache.dataFee.value\n    }\n\n    if (Object.isFrozen(this)) {\n      this.cache.dataFee = {\n        value: super.getDataFee(),\n        hardfork: this.common.hardfork(),\n      }\n    }\n\n    return super.getDataFee()\n  }\n\n  /**\n   * The up front amount that an account must have for this transaction to be valid\n   */\n  getUpfrontCost(): bigint {\n    return this.gasLimit * this.gasPrice + this.value\n  }\n\n  /**\n   * Computes a sha3-256 hash of the serialized tx.\n   *\n   * This method can only be used for signed txs (it throws otherwise).\n   * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n   */\n  hash(): Buffer {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n      throw new Error(msg)\n    }\n\n    if (Object.isFrozen(this)) {\n      if (!this.cache.hash) {\n        this.cache.hash = Buffer.from(keccak256(RLP.encode(bufArrToArr(this.raw()))))\n      }\n      return this.cache.hash\n    }\n\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr(this.raw()))))\n  }\n\n  /**\n   * Computes a sha3-256 hash which can be used to verify the signature\n   */\n  getMessageToVerifySignature() {\n    if (!this.isSigned()) {\n      const msg = this._errorMsg('This transaction is not signed')\n      throw new Error(msg)\n    }\n    const message = this._getMessageToSign()\n    return Buffer.from(keccak256(RLP.encode(bufArrToArr(message))))\n  }\n\n  /**\n   * Returns the public key of the sender\n   */\n  getSenderPublicKey(): Buffer {\n    const msgHash = this.getMessageToVerifySignature()\n\n    const { v, r, s } = this\n\n    this._validateHighS()\n\n    try {\n      return ecrecover(\n        msgHash,\n        v!,\n        bigIntToUnpaddedBuffer(r!),\n        bigIntToUnpaddedBuffer(s!),\n        this.supports(Capability.EIP155ReplayProtection) ? this.common.chainId() : undefined\n      )\n    } catch (e: any) {\n      const msg = this._errorMsg('Invalid Signature')\n      throw new Error(msg)\n    }\n  }\n\n  /**\n   * Process the v, r, s values from the `sign` method of the base transaction.\n   */\n  protected _processSignature(v: bigint, r: Buffer, s: Buffer) {\n    if (this.supports(Capability.EIP155ReplayProtection)) {\n      v += this.common.chainId() * BigInt(2) + BigInt(8)\n    }\n\n    const opts = { ...this.txOptions, common: this.common }\n\n    return Transaction.fromTxData(\n      {\n        nonce: this.nonce,\n        gasPrice: this.gasPrice,\n        gasLimit: this.gasLimit,\n        to: this.to,\n        value: this.value,\n        data: this.data,\n        v,\n        r: bufferToBigInt(r),\n        s: bufferToBigInt(s),\n      },\n      opts\n    )\n  }\n\n  /**\n   * Returns an object with the JSON representation of the transaction.\n   */\n  toJSON(): JsonTx {\n    return {\n      nonce: bigIntToHex(this.nonce),\n      gasPrice: bigIntToHex(this.gasPrice),\n      gasLimit: bigIntToHex(this.gasLimit),\n      to: this.to !== undefined ? this.to.toString() : undefined,\n      value: bigIntToHex(this.value),\n      data: '0x' + this.data.toString('hex'),\n      v: this.v !== undefined ? bigIntToHex(this.v) : undefined,\n      r: this.r !== undefined ? bigIntToHex(this.r) : undefined,\n      s: this.s !== undefined ? bigIntToHex(this.s) : undefined,\n    }\n  }\n\n  /**\n   * Validates tx's `v` value\n   */\n  private _validateTxV(_v?: bigint, common?: Common): Common {\n    let chainIdBigInt\n    const v = _v !== undefined ? Number(_v) : undefined\n    // Check for valid v values in the scope of a signed legacy tx\n    if (v !== undefined) {\n      // v is 1. not matching the EIP-155 chainId included case and...\n      // v is 2. not matching the classic v=27 or v=28 case\n      if (v < 37 && v !== 27 && v !== 28) {\n        throw new Error(\n          `Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${v}`\n        )\n      }\n    }\n\n    // No unsigned tx and EIP-155 activated and chain ID included\n    if (\n      v !== undefined &&\n      v !== 0 &&\n      (!common || common.gteHardfork('spuriousDragon')) &&\n      v !== 27 &&\n      v !== 28\n    ) {\n      if (common) {\n        if (!meetsEIP155(BigInt(v), common.chainId())) {\n          throw new Error(\n            `Incompatible EIP155-based V ${v} and chain id ${common.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`\n          )\n        }\n      } else {\n        // Derive the original chain ID\n        let numSub\n        if ((v - 35) % 2 === 0) {\n          numSub = 35\n        } else {\n          numSub = 36\n        }\n        // Use derived chain ID to create a proper Common\n        chainIdBigInt = BigInt(v - numSub) / BigInt(2)\n      }\n    }\n    return this._getCommon(common, chainIdBigInt)\n  }\n\n  /**\n   * Return a compact error string representation of the object\n   */\n  public errorStr() {\n    let errorStr = this._getSharedErrorPostfix()\n    errorStr += ` gasPrice=${this.gasPrice}`\n    return errorStr\n  }\n\n  /**\n   * Internal helper function to create an annotated error message\n   *\n   * @param msg Base error message\n   * @hidden\n   */\n  protected _errorMsg(msg: string) {\n    return `${msg} (${this.errorStr()})`\n  }\n}\n", "import { TypeOutput, setLengthLeft, toBuffer, toType } from '@ethereumjs/util'\n\nimport type { TxData } from './types'\n\nexport const normalizeTxParams = (_txParams: any): TxData => {\n  const txParams = Object.assign({}, _txParams)\n\n  txParams.gasLimit = toType(txParams.gasLimit ?? txParams.gas, TypeOutput.BigInt)\n  txParams.data = txParams.data === undefined ? txParams.input : txParams.data\n\n  // check and convert gasPrice and value params\n  txParams.gasPrice = txParams.gasPrice !== undefined ? BigInt(txParams.gasPrice) : undefined\n  txParams.value = txParams.value !== undefined ? BigInt(txParams.value) : undefined\n\n  // strict byte length checking\n  txParams.to =\n    txParams.to !== null && txParams.to !== undefined\n      ? setLengthLeft(toBuffer(txParams.to), 20)\n      : null\n\n  // Normalize the v/r/s values. If RPC returns '0x0', ensure v/r/s are set to `undefined` in the tx.\n  // If this is not done, then the transaction creation will throw, because `v` is `0`.\n  // Note: this still means that `isSigned` will return `false`.\n  // v/r/s values are `0x0` on networks like Optimism, where the tx is a system tx.\n  // For instance: https://optimistic.etherscan.io/tx/0xf4304cb09b3f58a8e5d20fec5f393c96ccffe0269aaf632cb2be7a8a0f0c91cc\n\n  txParams.v = txParams.v === '0x0' ? '0x' : txParams.v\n  txParams.r = txParams.r === '0x0' ? '0x' : txParams.r\n  txParams.s = txParams.s === '0x0' ? '0x' : txParams.s\n\n  if (txParams.v !== '0x') {\n    txParams.v = toType(txParams.v, TypeOutput.BigInt)\n  }\n\n  return txParams\n}\n", "import { bufferToBigInt, fetchFromProvider, getProvider, toBuffer } from '@ethereumjs/util'\n\nimport { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nimport { AccessListEIP2930Transaction } from './eip2930Transaction'\nimport { BlobEIP4844Transaction } from './eip4844Transaction'\nimport { normalizeTxParams } from './fromRpc'\nimport { Transaction } from './legacyTransaction'\n\nimport type {\n  AccessListEIP2930TxData,\n  BlobEIP4844TxData,\n  FeeMarketEIP1559TxData,\n  TxData,\n  TxOptions,\n  TypedTransaction,\n} from './types'\n\nexport class TransactionFactory {\n  // It is not possible to instantiate a TransactionFactory object.\n  private constructor() {}\n\n  /**\n   * Create a transaction from a `txData` object\n   *\n   * @param txData - The transaction data. The `type` field will determine which transaction type is returned (if undefined, creates a legacy transaction)\n   * @param txOptions - Options to pass on to the constructor of the transaction\n   */\n  public static fromTxData(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData | BlobEIP4844TxData,\n    txOptions: TxOptions = {}\n  ): TypedTransaction {\n    if (!('type' in txData) || txData.type === undefined) {\n      // Assume legacy transaction\n      return Transaction.fromTxData(<TxData>txData, txOptions)\n    } else {\n      const txType = Number(bufferToBigInt(toBuffer(txData.type)))\n      if (txType === 0) {\n        return Transaction.fromTxData(<TxData>txData, txOptions)\n      } else if (txType === 1) {\n        return AccessListEIP2930Transaction.fromTxData(<AccessListEIP2930TxData>txData, txOptions)\n      } else if (txType === 2) {\n        return FeeMarketEIP1559Transaction.fromTxData(<FeeMarketEIP1559TxData>txData, txOptions)\n      } else if (txType === 5) {\n        return BlobEIP4844Transaction.fromTxData(<BlobEIP4844TxData>txData, txOptions)\n      } else {\n        throw new Error(`Tx instantiation with type ${txType} not supported`)\n      }\n    }\n  }\n\n  /**\n   * This method tries to decode serialized data.\n   *\n   * @param data - The data Buffer\n   * @param txOptions - The transaction options\n   */\n  public static fromSerializedData(data: Buffer, txOptions: TxOptions = {}): TypedTransaction {\n    if (data[0] <= 0x7f) {\n      // Determine the type.\n      switch (data[0]) {\n        case 1:\n          return AccessListEIP2930Transaction.fromSerializedTx(data, txOptions)\n        case 2:\n          return FeeMarketEIP1559Transaction.fromSerializedTx(data, txOptions)\n        case 5:\n          return BlobEIP4844Transaction.fromSerializedTx(data, txOptions)\n        default:\n          throw new Error(`TypedTransaction with ID ${data[0]} unknown`)\n      }\n    } else {\n      return Transaction.fromSerializedTx(data, txOptions)\n    }\n  }\n\n  /**\n   * When decoding a BlockBody, in the transactions field, a field is either:\n   * A Buffer (a TypedTransaction - encoded as TransactionType || rlp(TransactionPayload))\n   * A Buffer[] (Legacy Transaction)\n   * This method returns the right transaction.\n   *\n   * @param data - A Buffer or Buffer[]\n   * @param txOptions - The transaction options\n   */\n  public static fromBlockBodyData(data: Buffer | Buffer[], txOptions: TxOptions = {}) {\n    if (Buffer.isBuffer(data)) {\n      return this.fromSerializedData(data, txOptions)\n    } else if (Array.isArray(data)) {\n      // It is a legacy transaction\n      return Transaction.fromValuesArray(data, txOptions)\n    } else {\n      throw new Error('Cannot decode transaction: unknown type input')\n    }\n  }\n\n  /**\n   *  Method to retrieve a transaction from the provider\n   * @param provider - An Ethers JsonRPCProvider\n   * @param txHash - Transaction hash\n   * @param txOptions - The transaction options\n   * @returns the transaction specified by `txHash`\n   */\n  public static async fromEthersProvider(\n    provider: string | any,\n    txHash: string,\n    txOptions?: TxOptions\n  ) {\n    const prov = getProvider(provider)\n    const txData = await fetchFromProvider(prov, {\n      method: 'eth_getTransactionByHash',\n      params: [txHash],\n    })\n    if (txData === null) {\n      throw new Error('No data returned from provider')\n    }\n    return TransactionFactory.fromRPCTx(txData, txOptions)\n  }\n\n  /**\n   * Method to decode data retrieved from RPC, such as `eth_getTransactionByHash`\n   * Note that this normalizes some of the parameters\n   * @param txData The RPC-encoded data\n   * @param txOptions The transaction options\n   * @returns\n   */\n  public static async fromRPCTx(\n    txData: TxData | AccessListEIP2930TxData | FeeMarketEIP1559TxData | BlobEIP4844TxData,\n    txOptions: TxOptions = {}\n  ) {\n    return TransactionFactory.fromTxData(normalizeTxParams(txData), txOptions)\n  }\n}\n", "export { FeeMarketEIP1559Transaction } from './eip1559Transaction'\nexport { AccessListEIP2930Transaction } from './eip2930Transaction'\nexport { BlobEIP4844Transaction } from './eip4844Transaction'\nexport { initKZG, kzg } from './kzg/kzg'\nexport { Transaction } from './legacyTransaction'\nexport { TransactionFactory } from './transactionFactory'\nexport * from './types'\nexport { computeVersionedHash } from './utils/blobHelpers'\n", "'use strict';\n\nvar isHexPrefixed = require('is-hex-prefixed');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Pads a `String` to have an even length\n * @param {String} value\n * @return {String} output\n */\nfunction padToEven(value) {\n  var a = value; // eslint-disable-line\n\n  if (typeof a !== 'string') {\n    throw new Error('[ethjs-util] while padding to even, value must be string, is currently ' + typeof a + ', while padToEven.');\n  }\n\n  if (a.length % 2) {\n    a = '0' + a;\n  }\n\n  return a;\n}\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nfunction intToHex(i) {\n  var hex = i.toString(16); // eslint-disable-line\n\n  return '0x' + hex;\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nfunction intToBuffer(i) {\n  var hex = intToHex(i);\n\n  return new Buffer(padToEven(hex.slice(2)), 'hex');\n}\n\n/**\n * Get the binary size of a string\n * @param {String} str\n * @return {Number}\n */\nfunction getBinarySize(str) {\n  if (typeof str !== 'string') {\n    throw new Error('[ethjs-util] while getting binary size, method getBinarySize requires input \\'str\\' to be type String, got \\'' + typeof str + '\\'.');\n  }\n\n  return Buffer.byteLength(str, 'utf8');\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param {array} superset\n * @param {array} subset\n *\n * @returns {boolean}\n */\nfunction arrayContainsArray(superset, subset, some) {\n  if (Array.isArray(superset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'superset\\' to be an array got type \\'' + typeof superset + '\\'');\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error('[ethjs-util] method arrayContainsArray requires input \\'subset\\' to be an array got type \\'' + typeof subset + '\\'');\n  }\n\n  return subset[Boolean(some) && 'some' || 'every'](function (value) {\n    return superset.indexOf(value) >= 0;\n  });\n}\n\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method toUtf8\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toUtf8(hex) {\n  var bufferValue = new Buffer(padToEven(stripHexPrefix(hex).replace(/^0+|0+$/g, '')), 'hex');\n\n  return bufferValue.toString('utf8');\n}\n\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method toAscii\n * @param {String} string in hex\n * @returns {String} ascii string representation of hex value\n */\nfunction toAscii(hex) {\n  var str = ''; // eslint-disable-line\n  var i = 0,\n      l = hex.length; // eslint-disable-line\n\n  if (hex.substring(0, 2) === '0x') {\n    i = 2;\n  }\n\n  for (; i < l; i += 2) {\n    var code = parseInt(hex.substr(i, 2), 16);\n    str += String.fromCharCode(code);\n  }\n\n  return str;\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method fromUtf8\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromUtf8(stringValue) {\n  var str = new Buffer(stringValue, 'utf8');\n\n  return '0x' + padToEven(str.toString('hex')).replace(/^0+|0+$/g, '');\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method fromAscii\n * @param {String} string\n * @param {Number} optional padding\n * @returns {String} hex representation of input string\n */\nfunction fromAscii(stringValue) {\n  var hex = ''; // eslint-disable-line\n  for (var i = 0; i < stringValue.length; i++) {\n    // eslint-disable-line\n    var code = stringValue.charCodeAt(i);\n    var n = code.toString(16);\n    hex += n.length < 2 ? '0' + n : n;\n  }\n\n  return '0x' + hex;\n}\n\n/**\n * getKeys([{a: 1, b: 2}, {a: 3, b: 4}], 'a') => [1, 3]\n *\n * @method getKeys get specific key from inner object array of objects\n * @param {String} params\n * @param {String} key\n * @param {Boolean} allowEmpty\n * @returns {Array} output just a simple array of output keys\n */\nfunction getKeys(params, key, allowEmpty) {\n  if (!Array.isArray(params)) {\n    throw new Error('[ethjs-util] method getKeys expecting type Array as \\'params\\' input, got \\'' + typeof params + '\\'');\n  }\n  if (typeof key !== 'string') {\n    throw new Error('[ethjs-util] method getKeys expecting type String for input \\'key\\' got \\'' + typeof key + '\\'.');\n  }\n\n  var result = []; // eslint-disable-line\n\n  for (var i = 0; i < params.length; i++) {\n    // eslint-disable-line\n    var value = params[i][key]; // eslint-disable-line\n    if (allowEmpty && !value) {\n      value = '';\n    } else if (typeof value !== 'string') {\n      throw new Error('invalid abi');\n    }\n    result.push(value);\n  }\n\n  return result;\n}\n\n/**\n * Is the string a hex string.\n *\n * @method check if string is hex string of specific length\n * @param {String} value\n * @param {Number} length\n * @returns {Boolean} output the string is a hex string\n */\nfunction isHexString(value, length) {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n    return false;\n  }\n\n  if (length && value.length !== 2 + 2 * length) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  arrayContainsArray: arrayContainsArray,\n  intToBuffer: intToBuffer,\n  getBinarySize: getBinarySize,\n  isHexPrefixed: isHexPrefixed,\n  stripHexPrefix: stripHexPrefix,\n  padToEven: padToEven,\n  intToHex: intToHex,\n  fromAscii: fromAscii,\n  fromUtf8: fromUtf8,\n  toAscii: toAscii,\n  toUtf8: toUtf8,\n  getKeys: getKeys,\n  isHexString: isHexString\n};", "import {\n  addHexPrefix,\n  bufferToHex,\n  bufferToInt,\n  ecrecover,\n  fromRpcSig,\n  fromSigned,\n  toBuffer,\n  ToBufferInputTypes,\n  toUnsigned,\n} from '@ethereumjs/util';\nimport { intToHex, isHexString, stripHexPrefix } from 'ethjs-util';\n\n/**\n * Pads the front of the given hex string with zeroes until it reaches the\n * target length. If the input string is already longer than or equal to the\n * target length, it is returned unmodified.\n *\n * If the input string is \"0x\"-prefixed or not a hex string, an error will be\n * thrown.\n *\n * @param hexString - The hexadecimal string to pad with zeroes.\n * @param targetLength - The target length of the hexadecimal string.\n * @returns The input string front-padded with zeroes, or the original string\n * if it was already greater than or equal to to the target length.\n */\nexport function padWithZeroes(hexString: string, targetLength: number): string {\n  if (hexString !== '' && !/^[a-f0-9]+$/iu.test(hexString)) {\n    throw new Error(\n      `Expected an unprefixed hex string. Received: ${hexString}`,\n    );\n  }\n\n  if (targetLength < 0) {\n    throw new Error(\n      `Expected a non-negative integer target length. Received: ${targetLength}`,\n    );\n  }\n\n  return String.prototype.padStart.call(hexString, targetLength, '0');\n}\n\n/**\n * Returns `true` if the given value is nullish.\n *\n * @param value - The value being checked.\n * @returns Whether the value is nullish.\n */\nexport function isNullish(value) {\n  return value === null || value === undefined;\n}\n\n/**\n * Convert a value to a Buffer. This function should be equivalent to the `toBuffer` function in\n * `ethereumjs-util@5.2.1`.\n *\n * @param value - The value to convert to a Buffer.\n * @returns The given value as a Buffer.\n */\nexport function legacyToBuffer(value: ToBufferInputTypes) {\n  return typeof value === 'string' && !isHexString(value)\n    ? Buffer.from(value)\n    : toBuffer(value);\n}\n\n/**\n * Concatenate an extended ECDSA signature into a single '0x'-prefixed hex string.\n *\n * @param v - The 'v' portion of the signature.\n * @param r - The 'r' portion of the signature.\n * @param s - The 's' portion of the signature.\n * @returns The concatenated ECDSA signature as a '0x'-prefixed string.\n */\nexport function concatSig(v: Buffer, r: Buffer, s: Buffer): string {\n  const rSig = fromSigned(r);\n  const sSig = fromSigned(s);\n  const vSig = bufferToInt(v);\n  const rStr = padWithZeroes(toUnsigned(rSig).toString('hex'), 64);\n  const sStr = padWithZeroes(toUnsigned(sSig).toString('hex'), 64);\n  const vStr = stripHexPrefix(intToHex(vSig));\n  return addHexPrefix(rStr.concat(sStr, vStr));\n}\n\n/**\n * Recover the public key from the given signature and message hash.\n *\n * @param messageHash - The hash of the signed message.\n * @param signature - The signature.\n * @returns The public key of the signer.\n */\nexport function recoverPublicKey(\n  messageHash: Buffer,\n  signature: string,\n): Buffer {\n  const sigParams = fromRpcSig(signature);\n  return ecrecover(messageHash, sigParams.v, sigParams.r, sigParams.s);\n}\n\n/**\n * Normalize the input to a lower-cased '0x'-prefixed hex string.\n *\n * @param input - The value to normalize.\n * @returns The normalized value.\n */\nexport function normalize(input: number | string): string {\n  if (!input) {\n    return undefined;\n  }\n\n  if (typeof input === 'number') {\n    if (input < 0) {\n      return '0x';\n    }\n    const buffer = toBuffer(input);\n    input = bufferToHex(buffer);\n  }\n\n  if (typeof input !== 'string') {\n    let msg = 'eth-sig-util.normalize() requires hex string or integer input.';\n    msg += ` received ${typeof input}: ${input}`;\n    throw new Error(msg);\n  }\n\n  return addHexPrefix(input.toLowerCase());\n}\n\n/**\n * Node's Buffer.from() method does not seem to buffer numbers correctly out of the box.\n * This helper method formats the number correct for Buffer.from to return correct buffer.\n *\n * @param num - The number to convert to buffer.\n * @returns The number in buffer form.\n */\nexport function numberToBuffer(num: number) {\n  const hexVal = num.toString(16);\n  const prepend = hexVal.length % 2 ? '0' : '';\n  return Buffer.from(prepend + hexVal, 'hex');\n}\n", "import {\n  bufferToHex,\n  ecsign,\n  hashPersonalMessage,\n  publicToAddress,\n  toBuffer,\n  ToBufferInputTypes,\n} from '@ethereumjs/util';\n\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n} from './utils';\n\n/**\n * Create an Ethereum-specific signature for a message.\n *\n * This function is equivalent to the `eth_sign` Ethereum JSON-RPC method as specified in EIP-1417,\n * as well as the MetaMask's `personal_sign` method.\n *\n * @param options - The personal sign options.\n * @param options.privateKey - The key to sign with.\n * @param options.data - The hex data to sign.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function personalSign({\n  privateKey,\n  data,\n}: {\n  privateKey: Buffer;\n  data: ToBufferInputTypes;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const message = legacyToBuffer(data);\n  const msgHash = hashPersonalMessage(message);\n  const sig = ecsign(msgHash, privateKey);\n  const serialized = concatSig(toBuffer(sig.v), sig.r, sig.s);\n  return serialized;\n}\n\n/**\n * Recover the address of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The signature recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded address of the message signer.\n */\nexport function recoverPersonalSignature({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  const sender = publicToAddress(publicKey);\n  const senderHex = bufferToHex(sender);\n  return senderHex;\n}\n\n/**\n * Recover the public key of the account used to create the given Ethereum signature. The message\n * must have been signed using the `personalSign` function, or an equivalent function.\n *\n * @param options - The public key recovery options.\n * @param options.data - The hex data that was signed.\n * @param options.signature - The '0x'-prefixed hex encoded message signature.\n * @returns The '0x'-prefixed hex encoded public key of the message signer.\n */\nexport function extractPublicKey({\n  data,\n  signature,\n}: {\n  data: ToBufferInputTypes;\n  signature: string;\n}): string {\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const publicKey = getPublicKeyFor(data, signature);\n  return `0x${publicKey.toString('hex')}`;\n}\n\n/**\n * Get the public key for the given signature and message.\n *\n * @param message - The message that was signed.\n * @param signature - The '0x'-prefixed hex encoded message signature.\n * @returns The public key of the signer.\n */\nfunction getPublicKeyFor(\n  message: ToBufferInputTypes,\n  signature: string,\n): Buffer {\n  const messageHash = hashPersonalMessage(legacyToBuffer(message));\n  return recoverPublicKey(messageHash, signature);\n}\n", "(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n", "/* eslint jsdoc/require-description: 0 */\n/* eslint jsdoc/require-returns: 0 */\n/* eslint jsdoc/match-description: 0 */\n/* eslint jsdoc/require-param-description: 0 */\n\nimport {\n  toBuffer,\n  setLengthRight,\n  setLengthLeft,\n  isHexPrefixed,\n  zeros,\n} from '@ethereumjs/util';\nimport { stripHexPrefix } from 'ethjs-util';\nimport BN from 'bn.js';\nimport { normalize } from './utils';\n\n//\n// Methods borrowed and somewhat adapted from ethereumjs-abi@0.6.8:\n// https://npmfs.com/package/ethereumjs-abi/0.6.8/lib/index.js\n//\n\n/**\n * Packs non-standard encoded values packed according to their respective type in types in a buffer.\n *\n * @param types - Array of types of each value to encode.\n * @param values - Array of values to encode.\n * @returns A buffer containing the packed values.\n */\nexport function solidityPack(types: string[], values: any[]) {\n  if (types.length !== values.length) {\n    throw new Error('Number of types are not matching the values');\n  }\n\n  const ret = [];\n\n  for (let i = 0; i < types.length; i++) {\n    const type = elementaryName(types[i]);\n    const value = values[i];\n    ret.push(solidityHexValue(type, value, null));\n  }\n\n  return Buffer.concat(ret);\n}\n\n/**\n * Checks if a value is an array (represented as a string).\n *\n * @param type - The value to check whether it is an array.\n * @returns A boolean indicating whether the passed value is an array.\n */\nfunction isArray(type) {\n  return type.lastIndexOf(']') === type.length - 1;\n}\n\n/**\n * Parse array type for packing solidity values.\n *\n * @param type - A string that may be an array to parse.\n * @returns A parsed value from the array.\n */\nfunction parseTypeArray(type) {\n  const tmp = type.match(/(.*)\\[(.*?)\\]$/u);\n  if (tmp) {\n    return tmp[2] === '' ? 'dynamic' : parseInt(tmp[2], 10);\n  }\n  return null;\n}\n\n/**\n * Parse N from type<N>.\n *\n * @param type - Value to parse.\n * @returns Parsed value.\n */\nfunction parseTypeN(type) {\n  return parseInt(/^\\D+(\\d+)$/u.exec(type)[1], 10);\n}\n\n/**\n * Parse a number for determining a solidity hexvalue.\n *\n * @param arg - Number to parse.\n * @returns Parsed value.\n */\nexport function parseNumber(arg) {\n  const type = typeof arg;\n  if (type === 'string') {\n    if (isHexPrefixed(arg)) {\n      return new BN(stripHexPrefix(arg), 16);\n    }\n    return new BN(arg, 10);\n  } else if (type === 'number') {\n    return new BN(arg);\n  } else if (arg.toArray) {\n    // assume this is a BN for the moment, replace with BN.isBN soon\n    return arg;\n  }\n  throw new Error('Argument is not a number');\n}\n\n/**\n * Get solidity hex value from type, value and bitsize inputs for packing these values in a buffer.\n *\n * @param type - The type of the value to encode.\n * @param value - The value to encode.\n * @param bitsize - The bitsize of the value to encode.\n * @returns The encoded soldity hex value.\n */\nfunction solidityHexValue(type, value, bitsize) {\n  // pass in bitsize = null if use default bitsize\n  let size, num;\n  if (isArray(type)) {\n    const subType = type.replace(/\\[.*?\\]/u, '');\n    if (!isArray(subType)) {\n      const arraySize = parseTypeArray(type);\n      if (\n        arraySize !== 'dynamic' &&\n        arraySize !== 0 &&\n        value.length > arraySize\n      ) {\n        throw new Error(`Elements exceed array size: ${arraySize}`);\n      }\n    }\n    const arrayValues = value.map(function (v) {\n      return solidityHexValue(subType, v, 256);\n    });\n    return Buffer.concat(arrayValues);\n  } else if (type === 'bytes') {\n    return value;\n  } else if (type === 'string') {\n    return Buffer.from(value, 'utf8');\n  } else if (type === 'bool') {\n    bitsize = bitsize || 8;\n    const padding = Array(bitsize / 4).join('0');\n    return Buffer.from(value ? `${padding}1` : `${padding}0`, 'hex');\n  } else if (type === 'address') {\n    let bytesize = 20;\n    if (bitsize) {\n      bytesize = bitsize / 8;\n    }\n    return setLengthLeft(toBuffer(value), bytesize);\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error(`Invalid bytes<N> width: ${size}`);\n    }\n\n    if (typeof value === 'number') {\n      value = normalize(value);\n    }\n    return setLengthRight(toBuffer(value), size);\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid uint<N> width: ${size}`);\n    }\n\n    num = parseNumber(value);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied uint exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    bitsize = bitsize || size;\n    return num.toArrayLike(Buffer, 'be', bitsize / 8);\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid int<N> width: ${size}`);\n    }\n\n    num = parseNumber(value);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied int exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    bitsize = bitsize || size;\n    return num.toTwos(size).toArrayLike(Buffer, 'be', bitsize / 8);\n  }\n  // FIXME: support all other types\n  throw new Error(`Unsupported or invalid type: ${type}`);\n}\n\n/**\n * Gets the correct solidity type name.\n *\n * @param name - The type name for which we want the corresponding solidity type name.\n * @returns The solidity type name for the input value.\n */\nfunction elementaryName(name) {\n  if (name.startsWith('int[')) {\n    return `int256${name.slice(3)}`;\n  } else if (name === 'int') {\n    return 'int256';\n  } else if (name.startsWith('uint[')) {\n    return `uint256${name.slice(4)}`;\n  } else if (name === 'uint') {\n    return 'uint256';\n  } else if (name.startsWith('fixed[')) {\n    return `fixed128x128${name.slice(5)}`;\n  } else if (name === 'fixed') {\n    return 'fixed128x128';\n  } else if (name.startsWith('ufixed[')) {\n    return `ufixed128x128${name.slice(6)}`;\n  } else if (name === 'ufixed') {\n    return 'ufixed128x128';\n  }\n  return name;\n}\n\n/**\n * @param types\n * @param values\n */\nexport function rawEncode(types, values) {\n  const output = [];\n  const data = [];\n\n  let headLength = 0;\n\n  types.forEach(function (type) {\n    if (isArray(type)) {\n      const size: number | 'dynamic' = parseTypeArray(type);\n      // eslint-disable-next-line no-negated-condition\n      if (size !== 'dynamic') {\n        headLength += 32 * size;\n      } else {\n        headLength += 32;\n      }\n    } else {\n      headLength += 32;\n    }\n  });\n\n  for (let i = 0; i < types.length; i++) {\n    const type = elementaryName(types[i]);\n    const value = values[i];\n    const cur = encodeSingle(type, value);\n\n    // Use the head/tail method for storing dynamic data\n    if (isDynamic(type)) {\n      output.push(encodeSingle('uint256', headLength));\n      data.push(cur);\n      headLength += cur.length;\n    } else {\n      output.push(cur);\n    }\n  }\n\n  return Buffer.concat(output.concat(data));\n}\n\n// Encodes a single item (can be dynamic array)\n// @returns: Buffer\n/**\n * @param type\n * @param arg\n */\nfunction encodeSingle(type, arg) {\n  let size, num, ret, i;\n\n  if (type === 'address') {\n    return encodeSingle('uint160', parseNumber(arg));\n  } else if (type === 'bool') {\n    return encodeSingle('uint8', arg ? 1 : 0);\n  } else if (type === 'string') {\n    return encodeSingle('bytes', Buffer.from(arg, 'utf8'));\n  } else if (isArray(type)) {\n    // this part handles fixed-length ([2]) and variable length ([]) arrays\n    // NOTE: we catch here all calls to arrays, that simplifies the rest\n    if (typeof arg.length === 'undefined') {\n      throw new Error('Not an array?');\n    }\n    size = parseTypeArray(type);\n    if (size !== 'dynamic' && size !== 0 && arg.length > size) {\n      throw new Error(`Elements exceed array size: ${size}`);\n    }\n    ret = [];\n    type = type.slice(0, type.lastIndexOf('['));\n    if (typeof arg === 'string') {\n      arg = JSON.parse(arg);\n    }\n\n    for (i in arg) {\n      if (Object.prototype.hasOwnProperty.call(arg, i)) {\n        ret.push(encodeSingle(type, arg[i]));\n      }\n    }\n\n    if (size === 'dynamic') {\n      const length = encodeSingle('uint256', arg.length);\n      ret.unshift(length);\n    }\n    return Buffer.concat(ret);\n  } else if (type === 'bytes') {\n    arg = Buffer.from(arg);\n\n    ret = Buffer.concat([encodeSingle('uint256', arg.length), arg]);\n\n    if (arg.length % 32 !== 0) {\n      ret = Buffer.concat([ret, zeros(32 - (arg.length % 32))]);\n    }\n\n    return ret;\n  } else if (type.startsWith('bytes')) {\n    size = parseTypeN(type);\n    if (size < 1 || size > 32) {\n      throw new Error(`Invalid bytes<N> width: ${size}`);\n    }\n\n    if (typeof arg === 'number') {\n      arg = normalize(arg);\n    }\n    return setLengthRight(toBuffer(arg), 32);\n  } else if (type.startsWith('uint')) {\n    size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid uint<N> width: ${size}`);\n    }\n\n    num = parseNumber(arg);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied uint exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    if (num < 0) {\n      throw new Error('Supplied uint is negative');\n    }\n\n    return num.toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('int')) {\n    size = parseTypeN(type);\n    if (size % 8 || size < 8 || size > 256) {\n      throw new Error(`Invalid int<N> width: ${size}`);\n    }\n\n    num = parseNumber(arg);\n    if (num.bitLength() > size) {\n      throw new Error(\n        `Supplied int exceeds width: ${size} vs ${num.bitLength()}`,\n      );\n    }\n\n    return num.toTwos(256).toArrayLike(Buffer, 'be', 32);\n  } else if (type.startsWith('ufixed')) {\n    size = parseTypeNxM(type);\n\n    num = parseNumber(arg);\n\n    if (num < 0) {\n      throw new Error('Supplied ufixed is negative');\n    }\n\n    return encodeSingle('uint256', num.mul(new BN(2).pow(new BN(size[1]))));\n  } else if (type.startsWith('fixed')) {\n    size = parseTypeNxM(type);\n\n    return encodeSingle(\n      'int256',\n      parseNumber(arg).mul(new BN(2).pow(new BN(size[1]))),\n    );\n  }\n\n  throw new Error(`Unsupported or invalid type: ${type}`);\n}\n\n// Is a type dynamic?\n/**\n * @param type\n */\nfunction isDynamic(type) {\n  // FIXME: handle all types? I don't think anything is missing now\n  return (\n    type === 'string' || type === 'bytes' || parseTypeArray(type) === 'dynamic'\n  );\n}\n\n// Parse N,M from type<N>x<M>\n/**\n * @param type\n */\nfunction parseTypeNxM(type) {\n  const tmp = /^\\D+(\\d+)x(\\d+)$/u.exec(type);\n  return [parseInt(tmp[1], 10), parseInt(tmp[2], 10)];\n}\n", "import { isHexString } from 'ethjs-util';\nimport {\n  arrToBufArr,\n  bufferToHex,\n  ecsign,\n  publicToAddress,\n  toBuffer,\n} from '@ethereumjs/util';\nimport { keccak256 } from 'ethereum-cryptography/keccak';\nimport { rawEncode, solidityPack } from './ethereumjs-abi-utils';\nimport {\n  concatSig,\n  isNullish,\n  legacyToBuffer,\n  recoverPublicKey,\n  numberToBuffer,\n} from './utils';\n\n/**\n * This is the message format used for `V1` of `signTypedData`.\n */\nexport type TypedDataV1 = TypedDataV1Field[];\n\n/**\n * This represents a single field in a `V1` `signTypedData` message.\n *\n * @property name - The name of the field.\n * @property type - The type of a field (must be a supported Solidity type).\n * @property value - The value of the field.\n */\nexport interface TypedDataV1Field {\n  name: string;\n  type: string;\n  value: any;\n}\n\n/**\n * Represents the version of `signTypedData` being used.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on EIP-712, except that arrays and recursive data structures are not supported.\n *\n * V4 is based on EIP-712, and includes full support of arrays and recursive data structures.\n */\nexport enum SignTypedDataVersion {\n  V1 = 'V1',\n  V3 = 'V3',\n  V4 = 'V4',\n}\n\nexport interface MessageTypeProperty {\n  name: string;\n  type: string;\n}\n\nexport interface MessageTypes {\n  EIP712Domain: MessageTypeProperty[];\n  [additionalProperties: string]: MessageTypeProperty[];\n}\n\n/**\n * This is the message format used for `signTypeData`, for all versions\n * except `V1`.\n *\n * @template T - The custom types used by this message.\n * @property types - The custom types used by this message.\n * @property primaryType - The type of the message.\n * @property domain - Signing domain metadata. The signing domain is the intended context for the\n * signature (e.g. the dapp, protocol, etc. that it's intended for). This data is used to\n * construct the domain seperator of the message.\n * @property domain.name - The name of the signing domain.\n * @property domain.version - The current major version of the signing domain.\n * @property domain.chainId - The chain ID of the signing domain.\n * @property domain.verifyingContract - The address of the contract that can verify the signature.\n * @property domain.salt - A disambiguating salt for the protocol.\n * @property message - The message to be signed.\n */\nexport interface TypedMessage<T extends MessageTypes> {\n  types: T;\n  primaryType: keyof T;\n  domain: {\n    name?: string;\n    version?: string;\n    chainId?: number;\n    verifyingContract?: string;\n    salt?: ArrayBuffer;\n  };\n  message: Record<string, unknown>;\n}\n\nexport const TYPED_MESSAGE_SCHEMA = {\n  type: 'object',\n  properties: {\n    types: {\n      type: 'object',\n      additionalProperties: {\n        type: 'array',\n        items: {\n          type: 'object',\n          properties: {\n            name: { type: 'string' },\n            type: { type: 'string' },\n          },\n          required: ['name', 'type'],\n        },\n      },\n    },\n    primaryType: { type: 'string' },\n    domain: { type: 'object' },\n    message: { type: 'object' },\n  },\n  required: ['types', 'primaryType', 'domain', 'message'],\n};\n\n/**\n * Validate that the given value is a valid version string.\n *\n * @param version - The version value to validate.\n * @param allowedVersions - A list of allowed versions. If omitted, all versions are assumed to be\n * allowed.\n */\nfunction validateVersion(\n  version: SignTypedDataVersion,\n  allowedVersions?: SignTypedDataVersion[],\n) {\n  if (!Object.keys(SignTypedDataVersion).includes(version)) {\n    throw new Error(`Invalid version: '${version}'`);\n  } else if (allowedVersions && !allowedVersions.includes(version)) {\n    throw new Error(\n      `SignTypedDataVersion not allowed: '${version}'. Allowed versions are: ${allowedVersions.join(\n        ', ',\n      )}`,\n    );\n  }\n}\n\n/**\n * Encode a single field.\n *\n * @param types - All type definitions.\n * @param name - The name of the field to encode.\n * @param type - The type of the field being encoded.\n * @param value - The value to encode.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns Encoded representation of the field.\n */\nfunction encodeField(\n  types: Record<string, MessageTypeProperty[]>,\n  name: string,\n  type: string,\n  value: any,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): [type: string, value: any] {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  if (types[type] !== undefined) {\n    return [\n      'bytes32',\n      version === SignTypedDataVersion.V4 && value == null // eslint-disable-line no-eq-null\n        ? '0x0000000000000000000000000000000000000000000000000000000000000000'\n        : arrToBufArr(keccak256(encodeData(type, value, types, version))),\n    ];\n  }\n\n  if (value === undefined) {\n    throw new Error(`missing value for field ${name} of type ${type}`);\n  }\n\n  if (type === 'bytes') {\n    if (typeof value === 'number') {\n      value = numberToBuffer(value);\n    } else if (isHexString(value)) {\n      const prepend = value.length % 2 ? '0' : '';\n      value = Buffer.from(prepend + value.slice(2), 'hex');\n    } else {\n      value = Buffer.from(value, 'utf8');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type === 'string') {\n    if (typeof value === 'number') {\n      value = numberToBuffer(value);\n    } else {\n      value = Buffer.from(value ?? '', 'utf8');\n    }\n    return ['bytes32', arrToBufArr(keccak256(value))];\n  }\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    if (version === SignTypedDataVersion.V3) {\n      throw new Error(\n        'Arrays are unimplemented in encodeData; use V4 extension',\n      );\n    }\n    const parsedType = type.slice(0, type.lastIndexOf('['));\n    const typeValuePairs = value.map((item) =>\n      encodeField(types, name, parsedType, item, version),\n    );\n    return [\n      'bytes32',\n      arrToBufArr(\n        keccak256(\n          rawEncode(\n            typeValuePairs.map(([t]) => t),\n            typeValuePairs.map(([, v]) => v),\n          ),\n        ),\n      ),\n    ];\n  }\n\n  return [type, value];\n}\n\n/**\n * Encodes an object by encoding and concatenating each of its members.\n *\n * @param primaryType - The root type.\n * @param data - The object to encode.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns An encoded representation of an object.\n */\nfunction encodeData(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encodedTypes = ['bytes32'];\n  const encodedValues: unknown[] = [hashType(primaryType, types)];\n\n  for (const field of types[primaryType]) {\n    if (version === SignTypedDataVersion.V3 && data[field.name] === undefined) {\n      continue;\n    }\n    const [type, value] = encodeField(\n      types,\n      field.name,\n      field.type,\n      data[field.name],\n      version,\n    );\n    encodedTypes.push(type);\n    encodedValues.push(value);\n  }\n\n  return rawEncode(encodedTypes, encodedValues);\n}\n\n/**\n * Encodes the type of an object by encoding a comma delimited list of its members.\n *\n * @param primaryType - The root type to encode.\n * @param types - Type definitions for all types included in the message.\n * @returns An encoded representation of the primary type.\n */\nfunction encodeType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): string {\n  let result = '';\n  const unsortedDeps = findTypeDependencies(primaryType, types);\n  unsortedDeps.delete(primaryType);\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()];\n  for (const type of deps) {\n    const children = types[type];\n    if (!children) {\n      throw new Error(`No type definition specified: ${type}`);\n    }\n\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`;\n  }\n\n  return result;\n}\n\n/**\n * Finds all types within a type definition object.\n *\n * @param primaryType - The root type.\n * @param types - Type definitions for all types included in the message.\n * @param results - The current set of accumulated types.\n * @returns The set of all types found in the type definition.\n */\nfunction findTypeDependencies(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n  results: Set<string> = new Set(),\n): Set<string> {\n  [primaryType] = primaryType.match(/^\\w*/u);\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results;\n  }\n\n  results.add(primaryType);\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies(field.type, types, results);\n  }\n  return results;\n}\n\n/**\n * Hashes an object.\n *\n * @param primaryType - The root type.\n * @param data - The object to hash.\n * @param types - Type definitions for all types included in the message.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the object.\n */\nfunction hashStruct(\n  primaryType: string,\n  data: Record<string, unknown>,\n  types: Record<string, MessageTypeProperty[]>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const encoded = encodeData(primaryType, data, types, version);\n  const hashed = keccak256(encoded);\n  const buf = arrToBufArr(hashed);\n  return buf;\n}\n\n/**\n * Hashes the type of an object.\n *\n * @param primaryType - The root type to hash.\n * @param types - Type definitions for all types included in the message.\n * @returns The hash of the object type.\n */\nfunction hashType(\n  primaryType: string,\n  types: Record<string, MessageTypeProperty[]>,\n): Buffer {\n  const encodedHashType = Buffer.from(encodeType(primaryType, types), 'utf-8');\n  return arrToBufArr(keccak256(encodedHashType));\n}\n\n/**\n * Removes properties from a message object that are not defined per EIP-712.\n *\n * @param data - The typed message object.\n * @returns The typed message object with only allowed fields.\n */\nfunction sanitizeData<T extends MessageTypes>(\n  data: TypedMessage<T>,\n): TypedMessage<T> {\n  const sanitizedData: Partial<TypedMessage<T>> = {};\n  for (const key in TYPED_MESSAGE_SCHEMA.properties) {\n    if (data[key]) {\n      sanitizedData[key] = data[key];\n    }\n  }\n\n  if ('types' in sanitizedData) {\n    sanitizedData.types = { EIP712Domain: [], ...sanitizedData.types };\n  }\n  return sanitizedData as Required<TypedMessage<T>>;\n}\n\n/**\n * Create a EIP-712 Domain Hash.\n * This hash is used at the top of the EIP-712 encoding.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the domain object.\n */\nfunction eip712DomainHash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const { domain } = sanitizedData;\n  const domainType = { EIP712Domain: sanitizedData.types.EIP712Domain };\n  return hashStruct('EIP712Domain', domain, domainType, version);\n}\n\n/**\n * Hash a typed message according to EIP-712. The returned message starts with the EIP-712 prefix,\n * which is \"1901\", followed by the hash of the domain separator, then the data (if any).\n * The result is hashed again and returned.\n *\n * This function does not sign the message. The resulting hash must still be signed to create an\n * EIP-712 signature.\n *\n * @param typedData - The typed message to hash.\n * @param version - The EIP-712 version the encoding should comply with.\n * @returns The hash of the typed message.\n */\nfunction eip712Hash<T extends MessageTypes>(\n  typedData: TypedMessage<T>,\n  version: SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n): Buffer {\n  validateVersion(version, [SignTypedDataVersion.V3, SignTypedDataVersion.V4]);\n\n  const sanitizedData = sanitizeData(typedData);\n  const parts = [Buffer.from('1901', 'hex')];\n  parts.push(eip712DomainHash(typedData, version));\n\n  if (sanitizedData.primaryType !== 'EIP712Domain') {\n    parts.push(\n      hashStruct(\n        // TODO: Validate that this is a string, so this type cast can be removed.\n        sanitizedData.primaryType as string,\n        sanitizedData.message,\n        sanitizedData.types,\n        version,\n      ),\n    );\n  }\n  return arrToBufArr(keccak256(Buffer.concat(parts)));\n}\n\n/**\n * A collection of utility functions used for signing typed data.\n */\nexport const TypedDataUtils = {\n  encodeData,\n  encodeType,\n  findTypeDependencies,\n  hashStruct,\n  hashType,\n  sanitizeData,\n  eip712Hash,\n  eip712DomainHash,\n};\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The '0x'-prefixed hex encoded hash representing the type of the provided message.\n */\nexport function typedSignatureHash(typedData: TypedDataV1Field[]): string {\n  const hashBuffer = _typedSignatureHash(typedData);\n  return bufferToHex(hashBuffer);\n}\n\n/**\n * Generate the \"V1\" hash for the provided typed message.\n *\n * The hash will be generated in accordance with an earlier version of the EIP-712\n * specification. This hash is used in `signTypedData_v1`.\n *\n * @param typedData - The typed message.\n * @returns The hash representing the type of the provided message.\n */\nfunction _typedSignatureHash(typedData: TypedDataV1): Buffer {\n  const error = new Error('Expect argument to be non-empty array');\n  if (\n    typeof typedData !== 'object' ||\n    !('length' in typedData) ||\n    !typedData.length\n  ) {\n    throw error;\n  }\n\n  const data = typedData.map(function (e) {\n    if (e.type !== 'bytes') {\n      return e.value;\n    }\n\n    return legacyToBuffer(e.value);\n  });\n  const types = typedData.map(function (e) {\n    return e.type;\n  });\n  const schema = typedData.map(function (e) {\n    if (!e.name) {\n      throw error;\n    }\n    return `${e.type} ${e.name}`;\n  });\n\n  return arrToBufArr(\n    keccak256(\n      solidityPack(\n        ['bytes32', 'bytes32'],\n        [\n          keccak256(\n            solidityPack(new Array(typedData.length).fill('string'), schema),\n          ),\n          keccak256(solidityPack(types, data)),\n        ],\n      ),\n    ),\n  );\n}\n\n/**\n * Sign typed data according to EIP-712. The signing differs based upon the `version`.\n *\n * V1 is based upon [an early version of EIP-712](https://github.com/ethereum/EIPs/pull/712/commits/21abe254fe0452d8583d5b132b1d7be87c0439ca)\n * that lacked some later security improvements, and should generally be neglected in favor of\n * later versions.\n *\n * V3 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), except that arrays and\n * recursive data structures are not supported.\n *\n * V4 is based on [EIP-712](https://eips.ethereum.org/EIPS/eip-712), and includes full support of\n * arrays and recursive data structures.\n *\n * @param options - The signing options.\n * @param options.privateKey - The private key to sign with.\n * @param options.data - The typed data to sign.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex encoded signature.\n */\nexport function signTypedData<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  privateKey,\n  data,\n  version,\n}: {\n  privateKey: Buffer;\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing private key parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const sig = ecsign(messageHash, privateKey);\n  return concatSig(toBuffer(sig.v), sig.r, sig.s);\n}\n\n/**\n * Recover the address of the account that created the given EIP-712\n * signature. The version provided must match the version used to\n * create the signature.\n *\n * @param options - The signature recovery options.\n * @param options.data - The typed data that was signed.\n * @param options.signature - The '0x-prefixed hex encoded message signature.\n * @param options.version - The signing version to use.\n * @returns The '0x'-prefixed hex address of the signer.\n */\nexport function recoverTypedSignature<\n  V extends SignTypedDataVersion,\n  T extends MessageTypes,\n>({\n  data,\n  signature,\n  version,\n}: {\n  data: V extends 'V1' ? TypedDataV1 : TypedMessage<T>;\n  signature: string;\n  version: V;\n}): string {\n  validateVersion(version);\n  if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(signature)) {\n    throw new Error('Missing signature parameter');\n  }\n\n  const messageHash =\n    version === SignTypedDataVersion.V1\n      ? _typedSignatureHash(data as TypedDataV1)\n      : TypedDataUtils.eip712Hash(\n          data as TypedMessage<T>,\n          version as SignTypedDataVersion.V3 | SignTypedDataVersion.V4,\n        );\n  const publicKey = recoverPublicKey(messageHash, signature);\n  const sender = publicToAddress(publicKey);\n  return bufferToHex(sender);\n}\n", "(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n", "// Written in 2014-2016 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n(function(root, f) {\n  'use strict';\n  if (typeof module !== 'undefined' && module.exports) module.exports = f();\n  else if (root.nacl) root.nacl.util = f();\n  else {\n    root.nacl = {};\n    root.nacl.util = f();\n  }\n}(this, function() {\n  'use strict';\n\n  var util = {};\n\n  function validateBase64(s) {\n    if (!(/^(?:[A-Za-z0-9+\\/]{2}[A-Za-z0-9+\\/]{2})*(?:[A-Za-z0-9+\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?$/.test(s))) {\n      throw new TypeError('invalid encoding');\n    }\n  }\n\n  util.decodeUTF8 = function(s) {\n    if (typeof s !== 'string') throw new TypeError('expected string');\n    var i, d = unescape(encodeURIComponent(s)), b = new Uint8Array(d.length);\n    for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n    return b;\n  };\n\n  util.encodeUTF8 = function(arr) {\n    var i, s = [];\n    for (i = 0; i < arr.length; i++) s.push(String.fromCharCode(arr[i]));\n    return decodeURIComponent(escape(s.join('')));\n  };\n\n  if (typeof atob === 'undefined') {\n    // Node.js\n\n    if (typeof Buffer.from !== 'undefined') {\n       // Node v6 and later\n      util.encodeBase64 = function (arr) { // v6 and later\n          return Buffer.from(arr).toString('base64');\n      };\n\n      util.decodeBase64 = function (s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(Buffer.from(s, 'base64'), 0));\n      };\n\n    } else {\n      // Node earlier than v6\n      util.encodeBase64 = function (arr) { // v6 and later\n        return (new Buffer(arr)).toString('base64');\n      };\n\n      util.decodeBase64 = function(s) {\n        validateBase64(s);\n        return new Uint8Array(Array.prototype.slice.call(new Buffer(s, 'base64'), 0));\n      };\n    }\n\n  } else {\n    // Browsers\n\n    util.encodeBase64 = function(arr) {\n      var i, s = [], len = arr.length;\n      for (i = 0; i < len; i++) s.push(String.fromCharCode(arr[i]));\n      return btoa(s.join(''));\n    };\n\n    util.decodeBase64 = function(s) {\n      validateBase64(s);\n      var i, d = atob(s), b = new Uint8Array(d.length);\n      for (i = 0; i < d.length; i++) b[i] = d.charCodeAt(i);\n      return b;\n    };\n\n  }\n\n  return util;\n\n}));\n", "import * as nacl from 'tweetnacl';\nimport * as naclUtil from 'tweetnacl-util';\n\nimport { isNullish } from './utils';\n\nexport interface EthEncryptedData {\n  version: string;\n  nonce: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n}\n\n/**\n * Encrypt a message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encrypt({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  switch (version) {\n    case 'x25519-xsalsa20-poly1305': {\n      if (typeof data !== 'string') {\n        throw new Error('Message data must be given as a string');\n      }\n      // generate ephemeral keypair\n      const ephemeralKeyPair = nacl.box.keyPair();\n\n      // assemble encryption parameters - from string to UInt8\n      let pubKeyUInt8Array;\n      try {\n        pubKeyUInt8Array = naclUtil.decodeBase64(publicKey);\n      } catch (err) {\n        throw new Error('Bad public key');\n      }\n\n      const msgParamsUInt8Array = naclUtil.decodeUTF8(data);\n      const nonce = nacl.randomBytes(nacl.box.nonceLength);\n\n      // encrypt\n      const encryptedMessage = nacl.box(\n        msgParamsUInt8Array,\n        nonce,\n        pubKeyUInt8Array,\n        ephemeralKeyPair.secretKey,\n      );\n\n      // handle encrypted data\n      const output = {\n        version: 'x25519-xsalsa20-poly1305',\n        nonce: naclUtil.encodeBase64(nonce),\n        ephemPublicKey: naclUtil.encodeBase64(ephemeralKeyPair.publicKey),\n        ciphertext: naclUtil.encodeBase64(encryptedMessage),\n      };\n      // return encrypted msg data\n      return output;\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported');\n  }\n}\n\n/**\n * Encrypt a message in a way that obscures the message length.\n *\n * The message is padded to a multiple of 2048 before being encrypted so that the length of the\n * resulting encrypted message can't be used to guess the exact length of the original message.\n *\n * @param options - The encryption options.\n * @param options.publicKey - The public key of the message recipient.\n * @param options.data - The message data.\n * @param options.version - The type of encryption to use.\n * @returns The encrypted data.\n */\nexport function encryptSafely({\n  publicKey,\n  data,\n  version,\n}: {\n  publicKey: string;\n  data: unknown;\n  version: string;\n}): EthEncryptedData {\n  if (isNullish(publicKey)) {\n    throw new Error('Missing publicKey parameter');\n  } else if (isNullish(data)) {\n    throw new Error('Missing data parameter');\n  } else if (isNullish(version)) {\n    throw new Error('Missing version parameter');\n  }\n\n  const DEFAULT_PADDING_LENGTH = 2 ** 11;\n  const NACL_EXTRA_BYTES = 16;\n\n  if (typeof data === 'object' && 'toJSON' in data) {\n    // remove toJSON attack vector\n    // TODO, check all possible children\n    throw new Error(\n      'Cannot encrypt with toJSON property.  Please remove toJSON property',\n    );\n  }\n\n  // add padding\n  const dataWithPadding = {\n    data,\n    padding: '',\n  };\n\n  // calculate padding\n  const dataLength = Buffer.byteLength(\n    JSON.stringify(dataWithPadding),\n    'utf-8',\n  );\n  const modVal = dataLength % DEFAULT_PADDING_LENGTH;\n  let padLength = 0;\n  // Only pad if necessary\n  if (modVal > 0) {\n    padLength = DEFAULT_PADDING_LENGTH - modVal - NACL_EXTRA_BYTES; // nacl extra bytes\n  }\n  dataWithPadding.padding = '0'.repeat(padLength);\n\n  const paddedMessage = JSON.stringify(dataWithPadding);\n  return encrypt({ publicKey, data: paddedMessage, version });\n}\n\n/**\n * Decrypt a message.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decrypt({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  switch (encryptedData.version) {\n    case 'x25519-xsalsa20-poly1305': {\n      // string to buffer to UInt8Array\n      const recieverPrivateKeyUint8Array = nacl_decodeHex(privateKey);\n      const recieverEncryptionPrivateKey = nacl.box.keyPair.fromSecretKey(\n        recieverPrivateKeyUint8Array,\n      ).secretKey;\n\n      // assemble decryption parameters\n      const nonce = naclUtil.decodeBase64(encryptedData.nonce);\n      const ciphertext = naclUtil.decodeBase64(encryptedData.ciphertext);\n      const ephemPublicKey = naclUtil.decodeBase64(\n        encryptedData.ephemPublicKey,\n      );\n\n      // decrypt\n      const decryptedMessage = nacl.box.open(\n        ciphertext,\n        nonce,\n        ephemPublicKey,\n        recieverEncryptionPrivateKey,\n      );\n\n      // return decrypted msg data\n      let output;\n      try {\n        output = naclUtil.encodeUTF8(decryptedMessage);\n      } catch (err) {\n        throw new Error('Decryption failed.');\n      }\n\n      if (output) {\n        return output;\n      }\n      throw new Error('Decryption failed.');\n    }\n\n    default:\n      throw new Error('Encryption type/version not supported.');\n  }\n}\n\n/**\n * Decrypt a message that has been encrypted using `encryptSafely`.\n *\n * @param options - The decryption options.\n * @param options.encryptedData - The encrypted data.\n * @param options.privateKey - The private key to decrypt with.\n * @returns The decrypted message.\n */\nexport function decryptSafely({\n  encryptedData,\n  privateKey,\n}: {\n  encryptedData: EthEncryptedData;\n  privateKey: string;\n}): string {\n  if (isNullish(encryptedData)) {\n    throw new Error('Missing encryptedData parameter');\n  } else if (isNullish(privateKey)) {\n    throw new Error('Missing privateKey parameter');\n  }\n\n  const dataWithPadding = JSON.parse(decrypt({ encryptedData, privateKey }));\n  return dataWithPadding.data;\n}\n\n/**\n * Get the encryption public key for the given key.\n *\n * @param privateKey - The private key to generate the encryption public key with.\n * @returns The encryption public key.\n */\nexport function getEncryptionPublicKey(privateKey: string): string {\n  const privateKeyUint8Array = nacl_decodeHex(privateKey);\n  const encryptionPublicKey =\n    nacl.box.keyPair.fromSecretKey(privateKeyUint8Array).publicKey;\n  return naclUtil.encodeBase64(encryptionPublicKey);\n}\n\n/**\n * Convert a hex string to the UInt8Array format used by nacl.\n *\n * @param msgHex - The string to convert.\n * @returns The converted string.\n */\nfunction nacl_decodeHex(msgHex: string): Uint8Array {\n  const msgBase64 = Buffer.from(msgHex, 'hex').toString('base64');\n  return naclUtil.decodeBase64(msgBase64);\n}\n", "export * from './personal-sign';\nexport * from './sign-typed-data';\nexport * from './encryption';\nexport { concatSig, normalize } from './utils';\n", null, "'use strict';\n\nvar uri = require('url');\n\nvar ValidationError = exports.ValidationError = function ValidationError (message, instance, schema, path, name, argument) {\n  if(Array.isArray(path)){\n    this.path = path;\n    this.property = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else if(path !== undefined){\n    this.property = path;\n  }\n  if (message) {\n    this.message = message;\n  }\n  if (schema) {\n    var id = schema.$id || schema.id;\n    this.schema = id || schema;\n  }\n  if (instance !== undefined) {\n    this.instance = instance;\n  }\n  this.name = name;\n  this.argument = argument;\n  this.stack = this.toString();\n};\n\nValidationError.prototype.toString = function toString() {\n  return this.property + ' ' + this.message;\n};\n\nvar ValidatorResult = exports.ValidatorResult = function ValidatorResult(instance, schema, options, ctx) {\n  this.instance = instance;\n  this.schema = schema;\n  this.options = options;\n  this.path = ctx.path;\n  this.propertyPath = ctx.propertyPath;\n  this.errors = [];\n  this.throwError = options && options.throwError;\n  this.throwFirst = options && options.throwFirst;\n  this.throwAll = options && options.throwAll;\n  this.disableFormat = options && options.disableFormat === true;\n};\n\nValidatorResult.prototype.addError = function addError(detail) {\n  var err;\n  if (typeof detail == 'string') {\n    err = new ValidationError(detail, this.instance, this.schema, this.path);\n  } else {\n    if (!detail) throw new Error('Missing error detail');\n    if (!detail.message) throw new Error('Missing error message');\n    if (!detail.name) throw new Error('Missing validator type');\n    err = new ValidationError(detail.message, this.instance, this.schema, this.path, detail.name, detail.argument);\n  }\n\n  this.errors.push(err);\n  if (this.throwFirst) {\n    throw new ValidatorResultError(this);\n  }else if(this.throwError){\n    throw err;\n  }\n  return err;\n};\n\nValidatorResult.prototype.importErrors = function importErrors(res) {\n  if (typeof res == 'string' || (res && res.validatorType)) {\n    this.addError(res);\n  } else if (res && res.errors) {\n    this.errors = this.errors.concat(res.errors);\n  }\n};\n\nfunction stringizer (v,i){\n  return i+': '+v.toString()+'\\n';\n}\nValidatorResult.prototype.toString = function toString(res) {\n  return this.errors.map(stringizer).join('');\n};\n\nObject.defineProperty(ValidatorResult.prototype, \"valid\", { get: function() {\n  return !this.errors.length;\n} });\n\nmodule.exports.ValidatorResultError = ValidatorResultError;\nfunction ValidatorResultError(result) {\n  if(Error.captureStackTrace){\n    Error.captureStackTrace(this, ValidatorResultError);\n  }\n  this.instance = result.instance;\n  this.schema = result.schema;\n  this.options = result.options;\n  this.errors = result.errors;\n}\nValidatorResultError.prototype = new Error();\nValidatorResultError.prototype.constructor = ValidatorResultError;\nValidatorResultError.prototype.name = \"Validation Error\";\n\n/**\n * Describes a problem with a Schema which prevents validation of an instance\n * @name SchemaError\n * @constructor\n */\nvar SchemaError = exports.SchemaError = function SchemaError (msg, schema) {\n  this.message = msg;\n  this.schema = schema;\n  Error.call(this, msg);\n  Error.captureStackTrace(this, SchemaError);\n};\nSchemaError.prototype = Object.create(Error.prototype,\n  {\n    constructor: {value: SchemaError, enumerable: false},\n    name: {value: 'SchemaError', enumerable: false},\n  });\n\nvar SchemaContext = exports.SchemaContext = function SchemaContext (schema, options, path, base, schemas) {\n  this.schema = schema;\n  this.options = options;\n  if(Array.isArray(path)){\n    this.path = path;\n    this.propertyPath = path.reduce(function(sum, item){\n      return sum + makeSuffix(item);\n    }, 'instance');\n  }else{\n    this.propertyPath = path;\n  }\n  this.base = base;\n  this.schemas = schemas;\n};\n\nSchemaContext.prototype.resolve = function resolve (target) {\n  return uri.resolve(this.base, target);\n};\n\nSchemaContext.prototype.makeChild = function makeChild(schema, propertyName){\n  var path = (propertyName===undefined) ? this.path : this.path.concat([propertyName]);\n  var id = schema.$id || schema.id;\n  var base = uri.resolve(this.base, id||'');\n  var ctx = new SchemaContext(schema, this.options, path, base, Object.create(this.schemas));\n  if(id && !ctx.schemas[base]){\n    ctx.schemas[base] = schema;\n  }\n  return ctx;\n};\n\nvar FORMAT_REGEXPS = exports.FORMAT_REGEXPS = {\n  // 7.3.1. Dates, Times, and Duration\n  'date-time': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])[tT ](2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])(\\.\\d+)?([zZ]|[+-]([0-5][0-9]):(60|[0-5][0-9]))$/,\n  'date': /^\\d{4}-(?:0[0-9]{1}|1[0-2]{1})-(3[01]|0[1-9]|[12][0-9])$/,\n  'time': /^(2[0-4]|[01][0-9]):([0-5][0-9]):(60|[0-5][0-9])$/,\n  'duration': /P(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S)|\\d+(D|M(\\d+D)?|Y(\\d+M(\\d+D)?)?)(T\\d+(H(\\d+M(\\d+S)?)?|M(\\d+S)?|S))?|\\d+W)/i,\n\n  // 7.3.2. Email Addresses\n  // TODO: fix the email production\n  'email': /^(?:[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+\\.)*[\\w\\!\\#\\$\\%\\&\\'\\*\\+\\-\\/\\=\\?\\^\\`\\{\\|\\}\\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!\\.)){0,61}[a-zA-Z0-9]?\\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\\[(?:(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d{1,2}|2[0-4]\\d|25[0-5])\\]))$/,\n  'idn-email': /^(\"(?:[!#-\\[\\]-\\u{10FFFF}]|\\\\[\\t -\\u{10FFFF}])*\"|[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*)@([!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}](?:\\.?[!#-'*+\\-/-9=?A-Z\\^-\\u{10FFFF}])*|\\[[!-Z\\^-\\u{10FFFF}]*\\])$/u,\n\n  // 7.3.3. Hostnames\n\n  // 7.3.4. IP Addresses\n  'ip-address': /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,\n  // FIXME whitespace is invalid\n  'ipv6': /^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))(%.+)?\\s*$/,\n\n  // 7.3.5. Resource Identifiers\n  // TODO: A more accurate regular expression for \"uri\" goes:\n  // [A-Za-z][+\\-.0-9A-Za-z]*:((/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?)?#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])|/?%[0-9A-Fa-f]{2}|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*(#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|/(/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?)?\n  'uri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'uri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/,\n  'iri': /^[a-zA-Z][a-zA-Z0-9+.-]*:[^\\s]*$/,\n  'iri-reference': /^(((([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:?)?)|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?)?))#(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|(([A-Za-z][+\\-.0-9A-Za-z]*)?%[0-9A-Fa-f]{2}|[!$&-.0-9;=@_~-\\u{10FFFF}]|[A-Za-z][+\\-.0-9A-Za-z]*[!$&-*,;=@_~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-.0-9;=@-Z_a-z~-\\u{10FFFF}])*((([/?](%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?#|[/?])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*)?|([A-Za-z][+\\-.0-9A-Za-z]*(:%[0-9A-Fa-f]{2}|:[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}]|[/?])|\\?)(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|([A-Za-z][+\\-.0-9A-Za-z]*:)?\\/((%[0-9A-Fa-f]{2}|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)(:\\d*)?[/?]|[!$&-.0-;=?-Z_a-z~-\\u{10FFFF}])(%[0-9A-Fa-f]{2}|[!$&-;=?-Z_a-z~-\\u{10FFFF}])*|\\/((%[0-9A-Fa-f]{2}|[!$&-.0-9;=A-Z_a-z~-\\u{10FFFF}])+(:\\d*)?|(\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?:\\d*|\\[(([Vv][0-9A-Fa-f]+\\.[!$&-.0-;=A-Z_a-z~-\\u{10FFFF}]+)?|[.0-:A-Fa-f]+)\\])?)?|[A-Za-z][+\\-.0-9A-Za-z]*:?)?$/u,\n  'uuid': /^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i,\n\n  // 7.3.6. uri-template\n  'uri-template': /(%[0-9a-f]{2}|[!#$&(-;=?@\\[\\]_a-z~]|\\{[!#&+,./;=?@|]?(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?(,(%[0-9a-f]{2}|[0-9_a-z])(\\.?(%[0-9a-f]{2}|[0-9_a-z]))*(:[1-9]\\d{0,3}|\\*)?)*\\})*/iu,\n\n  // 7.3.7. JSON Pointers\n  'json-pointer': /^(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*$/iu,\n  'relative-json-pointer': /^\\d+(#|(\\/([\\x00-\\x2e0-@\\[-}\\x7f]|~[01])*)*)$/iu,\n\n  // hostname regex from: http://stackoverflow.com/a/1420225/5628\n  'hostname': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n  'host-name': /^(?=.{1,255}$)[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?(?:\\.[0-9A-Za-z](?:(?:[0-9A-Za-z]|-){0,61}[0-9A-Za-z])?)*\\.?$/,\n\n  'utc-millisec': function (input) {\n    return (typeof input === 'string') && parseFloat(input) === parseInt(input, 10) && !isNaN(input);\n  },\n\n  // 7.3.8. regex\n  'regex': function (input) {\n    var result = true;\n    try {\n      new RegExp(input);\n    } catch (e) {\n      result = false;\n    }\n    return result;\n  },\n\n  // Other definitions\n  // \"style\" was removed from JSON Schema in draft-4 and is deprecated\n  'style': /[\\r\\n\\t ]*[^\\r\\n\\t ][^:]*:[\\r\\n\\t ]*[^\\r\\n\\t ;]*[\\r\\n\\t ]*;?/,\n  // \"color\" was removed from JSON Schema in draft-4 and is deprecated\n  'color': /^(#?([0-9A-Fa-f]{3}){1,2}\\b|aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow|(rgb\\(\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*,\\s*\\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\b\\s*\\))|(rgb\\(\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*,\\s*(\\d?\\d%|100%)+\\s*\\)))$/,\n  'phone': /^\\+(?:[0-9] ?){6,14}[0-9]$/,\n  'alpha': /^[a-zA-Z]+$/,\n  'alphanumeric': /^[a-zA-Z0-9]+$/,\n};\n\nFORMAT_REGEXPS.regexp = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.pattern = FORMAT_REGEXPS.regex;\nFORMAT_REGEXPS.ipv4 = FORMAT_REGEXPS['ip-address'];\n\nexports.isFormat = function isFormat (input, format, validator) {\n  if (typeof input === 'string' && FORMAT_REGEXPS[format] !== undefined) {\n    if (FORMAT_REGEXPS[format] instanceof RegExp) {\n      return FORMAT_REGEXPS[format].test(input);\n    }\n    if (typeof FORMAT_REGEXPS[format] === 'function') {\n      return FORMAT_REGEXPS[format](input);\n    }\n  } else if (validator && validator.customFormats &&\n      typeof validator.customFormats[format] === 'function') {\n    return validator.customFormats[format](input);\n  }\n  return true;\n};\n\nvar makeSuffix = exports.makeSuffix = function makeSuffix (key) {\n  key = key.toString();\n  // This function could be capable of outputting valid a ECMAScript string, but the\n  // resulting code for testing which form to use would be tens of thousands of characters long\n  // That means this will use the name form for some illegal forms\n  if (!key.match(/[.\\s\\[\\]]/) && !key.match(/^[\\d]/)) {\n    return '.' + key;\n  }\n  if (key.match(/^\\d+$/)) {\n    return '[' + key + ']';\n  }\n  return '[' + JSON.stringify(key) + ']';\n};\n\nexports.deepCompareStrict = function deepCompareStrict (a, b) {\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (Array.isArray(a)) {\n    if (!Array.isArray(b)) {\n      return false;\n    }\n    if (a.length !== b.length) {\n      return false;\n    }\n    return a.every(function (v, i) {\n      return deepCompareStrict(a[i], b[i]);\n    });\n  }\n  if (typeof a === 'object') {\n    if (!a || !b) {\n      return a === b;\n    }\n    var aKeys = Object.keys(a);\n    var bKeys = Object.keys(b);\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n    return aKeys.every(function (v) {\n      return deepCompareStrict(a[v], b[v]);\n    });\n  }\n  return a === b;\n};\n\nfunction deepMerger (target, dst, e, i) {\n  if (typeof e === 'object') {\n    dst[i] = deepMerge(target[i], e);\n  } else {\n    if (target.indexOf(e) === -1) {\n      dst.push(e);\n    }\n  }\n}\n\nfunction copyist (src, dst, key) {\n  dst[key] = src[key];\n}\n\nfunction copyistWithDeepMerge (target, src, dst, key) {\n  if (typeof src[key] !== 'object' || !src[key]) {\n    dst[key] = src[key];\n  }\n  else {\n    if (!target[key]) {\n      dst[key] = src[key];\n    } else {\n      dst[key] = deepMerge(target[key], src[key]);\n    }\n  }\n}\n\nfunction deepMerge (target, src) {\n  var array = Array.isArray(src);\n  var dst = array && [] || {};\n\n  if (array) {\n    target = target || [];\n    dst = dst.concat(target);\n    src.forEach(deepMerger.bind(null, target, dst));\n  } else {\n    if (target && typeof target === 'object') {\n      Object.keys(target).forEach(copyist.bind(null, target, dst));\n    }\n    Object.keys(src).forEach(copyistWithDeepMerge.bind(null, target, src, dst));\n  }\n\n  return dst;\n}\n\nmodule.exports.deepMerge = deepMerge;\n\n/**\n * Validates instance against the provided schema\n * Implements URI+JSON Pointer encoding, e.g. \"%7e\"=\"~0\"=>\"~\", \"~1\"=\"%2f\"=>\"/\"\n * @param o\n * @param s The path to walk o along\n * @return any\n */\nexports.objectGetPath = function objectGetPath(o, s) {\n  var parts = s.split('/').slice(1);\n  var k;\n  while (typeof (k=parts.shift()) == 'string') {\n    var n = decodeURIComponent(k.replace(/~0/,'~').replace(/~1/g,'/'));\n    if (!(n in o)) return;\n    o = o[n];\n  }\n  return o;\n};\n\nfunction pathEncoder (v) {\n  return '/'+encodeURIComponent(v).replace(/~/g,'%7E');\n}\n/**\n * Accept an Array of property names and return a JSON Pointer URI fragment\n * @param Array a\n * @return {String}\n */\nexports.encodePath = function encodePointer(a){\n  // ~ must be encoded explicitly because hacks\n  // the slash is encoded by encodeURIComponent\n  return a.map(pathEncoder).join('');\n};\n\n\n/**\n * Calculate the number of decimal places a number uses\n * We need this to get correct results out of multipleOf and divisibleBy\n * when either figure is has decimal places, due to IEEE-754 float issues.\n * @param number\n * @returns {number}\n */\nexports.getDecimalPlaces = function getDecimalPlaces(number) {\n\n  var decimalPlaces = 0;\n  if (isNaN(number)) return decimalPlaces;\n\n  if (typeof number !== 'number') {\n    number = Number(number);\n  }\n\n  var parts = number.toString().split('e');\n  if (parts.length === 2) {\n    if (parts[1][0] !== '-') {\n      return decimalPlaces;\n    } else {\n      decimalPlaces = Number(parts[1].slice(1));\n    }\n  }\n\n  var decimalParts = parts[0].split('.');\n  if (decimalParts.length === 2) {\n    decimalPlaces += decimalParts[1].length;\n  }\n\n  return decimalPlaces;\n};\n\nexports.isSchema = function isSchema(val){\n  return (typeof val === 'object' && val) || (typeof val === 'boolean');\n};\n\n", "'use strict';\n\nvar helpers = require('./helpers');\n\n/** @type ValidatorResult */\nvar ValidatorResult = helpers.ValidatorResult;\n/** @type SchemaError */\nvar SchemaError = helpers.SchemaError;\n\nvar attribute = {};\n\nattribute.ignoreProperties = {\n  // informative properties\n  'id': true,\n  'default': true,\n  'description': true,\n  'title': true,\n  // arguments to other properties\n  'additionalItems': true,\n  'then': true,\n  'else': true,\n  // special-handled properties\n  '$schema': true,\n  '$ref': true,\n  'extends': true,\n};\n\n/**\n * @name validators\n */\nvar validators = attribute.validators = {};\n\n/**\n * Validates whether the instance if of a certain type\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.type = function validateType (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var types = Array.isArray(schema.type) ? schema.type : [schema.type];\n  if (!types.some(this.testType.bind(this, instance, schema, options, ctx))) {\n    var list = types.map(function (v) {\n      if(!v) return;\n      var id = v.$id || v.id;\n      return id ? ('<' + id + '>') : (v+'');\n    });\n    result.addError({\n      name: 'type',\n      argument: list,\n      message: \"is not of a type(s) \" + list,\n    });\n  }\n  return result;\n};\n\nfunction testSchemaNoThrow(instance, options, ctx, callback, schema){\n  var throwError = options.throwError;\n  var throwAll = options.throwAll;\n  options.throwError = false;\n  options.throwAll = false;\n  var res = this.validateSchema(instance, schema, options, ctx);\n  options.throwError = throwError;\n  options.throwAll = throwAll;\n\n  if (!res.valid && callback instanceof Function) {\n    callback(res);\n  }\n  return res.valid;\n}\n\n/**\n * Validates whether the instance matches some of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {ValidatorResult|null}\n */\nvalidators.anyOf = function validateAnyOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  if (!Array.isArray(schema.anyOf)){\n    throw new SchemaError(\"anyOf must be an array\");\n  }\n  if (!schema.anyOf.some(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res){inner.importErrors(res);}\n    ))) {\n    var list = schema.anyOf.map(function (v, i) {\n      var id = v.$id || v.id;\n      if(id) return '<' + id + '>';\n      return(v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n    });\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'anyOf',\n      argument: list,\n      message: \"is not any of \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance matches every given schema\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.allOf = function validateAllOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.allOf)){\n    throw new SchemaError(\"allOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var self = this;\n  schema.allOf.forEach(function(v, i){\n    var valid = self.validateSchema(instance, v, options, ctx);\n    if(!valid.valid){\n      var id = v.$id || v.id;\n      var msg = id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n      result.addError({\n        name: 'allOf',\n        argument: { id: msg, length: valid.errors.length, valid: valid },\n        message: 'does not match allOf schema ' + msg + ' with ' + valid.errors.length + ' error[s]:',\n      });\n      result.importErrors(valid);\n    }\n  });\n  return result;\n};\n\n/**\n * Validates whether the instance matches exactly one of the given schemas\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.oneOf = function validateOneOf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema.oneOf)){\n    throw new SchemaError(\"oneOf must be an array\");\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var inner = new ValidatorResult(instance, schema, options, ctx);\n  var count = schema.oneOf.filter(\n    testSchemaNoThrow.bind(\n      this, instance, options, ctx, function(res) {inner.importErrors(res);}\n    ) ).length;\n  var list = schema.oneOf.map(function (v, i) {\n    var id = v.$id || v.id;\n    return id || (v.title && JSON.stringify(v.title)) || (v['$ref'] && ('<' + v['$ref'] + '>')) || '[subschema '+i+']';\n  });\n  if (count!==1) {\n    if (options.nestedErrors) {\n      result.importErrors(inner);\n    }\n    result.addError({\n      name: 'oneOf',\n      argument: list,\n      message: \"is not exactly one from \" + list.join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates \"then\" or \"else\" depending on the result of validating \"if\"\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null}\n */\nvalidators.if = function validateIf (instance, schema, options, ctx) {\n  // Ignore undefined instances\n  if (instance === undefined) return null;\n  if (!helpers.isSchema(schema.if)) throw new Error('Expected \"if\" keyword to be a schema');\n  var ifValid = testSchemaNoThrow.call(this, instance, options, ctx, null, schema.if);\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var res;\n  if(ifValid){\n    if (schema.then === undefined) return;\n    if (!helpers.isSchema(schema.then)) throw new Error('Expected \"then\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.then, options, ctx.makeChild(schema.then));\n    result.importErrors(res);\n  }else{\n    if (schema.else === undefined) return;\n    if (!helpers.isSchema(schema.else)) throw new Error('Expected \"else\" keyword to be a schema');\n    res = this.validateSchema(instance, schema.else, options, ctx.makeChild(schema.else));\n    result.importErrors(res);\n  }\n  return result;\n};\n\nfunction getEnumerableProperty(object, key){\n  // Determine if `key` shows up in `for(var key in object)`\n  // First test Object.hasOwnProperty.call as an optimization: that guarantees it does\n  if(Object.hasOwnProperty.call(object, key)) return object[key];\n  // Test `key in object` as an optimization; false means it won't\n  if(!(key in object)) return;\n  while( (object = Object.getPrototypeOf(object)) ){\n    if(Object.propertyIsEnumerable.call(object, key)) return object[key];\n  }\n}\n\n/**\n * Validates propertyNames\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.propertyNames = function validatePropertyNames (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var subschema = schema.propertyNames!==undefined ? schema.propertyNames : {};\n  if(!helpers.isSchema(subschema)) throw new SchemaError('Expected \"propertyNames\" to be a schema (object or boolean)');\n\n  for (var property in instance) {\n    if(getEnumerableProperty(instance, property) !== undefined){\n      var res = this.validateSchema(property, subschema, options, ctx.makeChild(subschema));\n      result.importErrors(res);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates properties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.properties = function validateProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var properties = schema.properties || {};\n  for (var property in properties) {\n    var subschema = properties[property];\n    if(subschema===undefined){\n      continue;\n    }else if(subschema===null){\n      throw new SchemaError('Unexpected null, expected schema in \"properties\"');\n    }\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, subschema, options, ctx);\n    }\n    var prop = getEnumerableProperty(instance, property);\n    var res = this.validateSchema(prop, subschema, options, ctx.makeChild(subschema, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n  return result;\n};\n\n/**\n * Test a specific property within in instance against the additionalProperties schema attribute\n * This ignores properties with definitions in the properties schema attribute, but no other attributes.\n * If too many more types of property-existence tests pop up they may need their own class of tests (like `type` has)\n * @private\n * @return {boolean}\n */\nfunction testAdditionalProperty (instance, schema, options, ctx, property, result) {\n  if(!this.types.object(instance)) return;\n  if (schema.properties && schema.properties[property] !== undefined) {\n    return;\n  }\n  if (schema.additionalProperties === false) {\n    result.addError({\n      name: 'additionalProperties',\n      argument: property,\n      message: \"is not allowed to have the additional property \" + JSON.stringify(property),\n    });\n  } else {\n    var additionalProperties = schema.additionalProperties || {};\n\n    if (typeof options.preValidateProperty == 'function') {\n      options.preValidateProperty(instance, property, additionalProperties, options, ctx);\n    }\n\n    var res = this.validateSchema(instance[property], additionalProperties, options, ctx.makeChild(additionalProperties, property));\n    if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n    result.importErrors(res);\n  }\n}\n\n/**\n * Validates patternProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.patternProperties = function validatePatternProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var patternProperties = schema.patternProperties || {};\n\n  for (var property in instance) {\n    var test = true;\n    for (var pattern in patternProperties) {\n      var subschema = patternProperties[pattern];\n      if(subschema===undefined){\n        continue;\n      }else if(subschema===null){\n        throw new SchemaError('Unexpected null, expected schema in \"patternProperties\"');\n      }\n      try {\n        var regexp = new RegExp(pattern, 'u');\n      } catch(_e) {\n        // In the event the stricter handling causes an error, fall back on the forgiving handling\n        // DEPRECATED\n        regexp = new RegExp(pattern);\n      }\n      if (!regexp.test(property)) {\n        continue;\n      }\n      test = false;\n\n      if (typeof options.preValidateProperty == 'function') {\n        options.preValidateProperty(instance, property, subschema, options, ctx);\n      }\n\n      var res = this.validateSchema(instance[property], subschema, options, ctx.makeChild(subschema, property));\n      if(res.instance !== result.instance[property]) result.instance[property] = res.instance;\n      result.importErrors(res);\n    }\n    if (test) {\n      testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Validates additionalProperties\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.additionalProperties = function validateAdditionalProperties (instance, schema, options, ctx) {\n  if(!this.types.object(instance)) return;\n  // if patternProperties is defined then we'll test when that one is called instead\n  if (schema.patternProperties) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in instance) {\n    testAdditionalProperty.call(this, instance, schema, options, ctx, property, result);\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minProperties = function validateMinProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length >= schema.minProperties)) {\n    result.addError({\n      name: 'minProperties',\n      argument: schema.minProperties,\n      message: \"does not meet minimum property length of \" + schema.minProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxProperties = function validateMaxProperties (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var keys = Object.keys(instance);\n  if (!(keys.length <= schema.maxProperties)) {\n    result.addError({\n      name: 'maxProperties',\n      argument: schema.maxProperties,\n      message: \"does not meet maximum property length of \" + schema.maxProperties,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates items when instance is an array\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.items = function validateItems (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.items===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  instance.every(function (value, i) {\n    if(Array.isArray(schema.items)){\n      var items =  schema.items[i]===undefined ? schema.additionalItems : schema.items[i];\n    }else{\n      var items = schema.items;\n    }\n    if (items === undefined) {\n      return true;\n    }\n    if (items === false) {\n      result.addError({\n        name: 'items',\n        message: \"additionalItems not permitted\",\n      });\n      return false;\n    }\n    var res = self.validateSchema(value, items, options, ctx.makeChild(items, i));\n    if(res.instance !== result.instance[i]) result.instance[i] = res.instance;\n    result.importErrors(res);\n    return true;\n  });\n  return result;\n};\n\n/**\n * Validates the \"contains\" keyword\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {String|null|ValidatorResult}\n */\nvalidators.contains = function validateContains (instance, schema, options, ctx) {\n  var self = this;\n  if (!this.types.array(instance)) return;\n  if (schema.contains===undefined) return;\n  if (!helpers.isSchema(schema.contains)) throw new Error('Expected \"contains\" keyword to be a schema');\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var count = instance.some(function (value, i) {\n    var res = self.validateSchema(value, schema.contains, options, ctx.makeChild(schema.contains, i));\n    return res.errors.length===0;\n  });\n  if(count===false){\n    result.addError({\n      name: 'contains',\n      argument: schema.contains,\n      message: \"must contain an item matching given schema\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates minimum and exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minimum = function validateMinimum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMinimum && schema.exclusiveMinimum === true) {\n    if(!(instance > schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than \" + schema.minimum,\n      });\n    }\n  } else {\n    if(!(instance >= schema.minimum)){\n      result.addError({\n        name: 'minimum',\n        argument: schema.minimum,\n        message: \"must be greater than or equal to \" + schema.minimum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates maximum and exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maximum = function validateMaximum (instance, schema, options, ctx) {\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (schema.exclusiveMaximum && schema.exclusiveMaximum === true) {\n    if(!(instance < schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than \" + schema.maximum,\n      });\n    }\n  } else {\n    if(!(instance <= schema.maximum)){\n      result.addError({\n        name: 'maximum',\n        argument: schema.maximum,\n        message: \"must be less than or equal to \" + schema.maximum,\n      });\n    }\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMinimum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMinimum = function validateExclusiveMinimum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMinimum, which is handled by the \"minimum\" keyword.\n  if(typeof schema.exclusiveMinimum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance > schema.exclusiveMinimum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMinimum',\n      argument: schema.exclusiveMinimum,\n      message: \"must be strictly greater than \" + schema.exclusiveMinimum,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates the number form of exclusiveMaximum when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.exclusiveMaximum = function validateExclusiveMaximum (instance, schema, options, ctx) {\n  // Support the boolean form of exclusiveMaximum, which is handled by the \"maximum\" keyword.\n  if(typeof schema.exclusiveMaximum === 'boolean') return;\n  if (!this.types.number(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var valid = instance < schema.exclusiveMaximum;\n  if (!valid) {\n    result.addError({\n      name: 'exclusiveMaximum',\n      argument: schema.exclusiveMaximum,\n      message: \"must be strictly less than \" + schema.exclusiveMaximum,\n    });\n  }\n  return result;\n};\n\n/**\n * Perform validation for multipleOf and divisibleBy, which are essentially the same.\n * @param instance\n * @param schema\n * @param validationType\n * @param errorMessage\n * @returns {String|null}\n */\nvar validateMultipleOfOrDivisbleBy = function validateMultipleOfOrDivisbleBy (instance, schema, options, ctx, validationType, errorMessage) {\n  if (!this.types.number(instance)) return;\n\n  var validationArgument = schema[validationType];\n  if (validationArgument == 0) {\n    throw new SchemaError(validationType + \" cannot be zero\");\n  }\n\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  var instanceDecimals = helpers.getDecimalPlaces(instance);\n  var divisorDecimals = helpers.getDecimalPlaces(validationArgument);\n\n  var maxDecimals = Math.max(instanceDecimals , divisorDecimals);\n  var multiplier = Math.pow(10, maxDecimals);\n\n  if (Math.round(instance * multiplier) % Math.round(validationArgument * multiplier) !== 0) {\n    result.addError({\n      name: validationType,\n      argument:  validationArgument,\n      message: errorMessage + JSON.stringify(validationArgument),\n    });\n  }\n\n  return result;\n};\n\n/**\n * Validates divisibleBy when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.multipleOf = function validateMultipleOf (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"multipleOf\", \"is not a multiple of (divisible by) \");\n};\n\n/**\n * Validates multipleOf when the type of the instance value is a number.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.divisibleBy = function validateDivisibleBy (instance, schema, options, ctx) {\n  return validateMultipleOfOrDivisbleBy.call(this, instance, schema, options, ctx, \"divisibleBy\", \"is not divisible by (multiple of) \");\n};\n\n/**\n * Validates whether the instance value is present.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.required = function validateRequired (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (instance === undefined && schema.required === true) {\n    // A boolean form is implemented for reverse-compatibility with schemas written against older drafts\n    result.addError({\n      name: 'required',\n      message: \"is required\",\n    });\n  } else if (this.types.object(instance) && Array.isArray(schema.required)) {\n    schema.required.forEach(function(n){\n      if(getEnumerableProperty(instance, n)===undefined){\n        result.addError({\n          name: 'required',\n          argument: n,\n          message: \"requires property \" + JSON.stringify(n),\n        });\n      }\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value matches the regular expression, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.pattern = function validatePattern (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var pattern = schema.pattern;\n  try {\n    var regexp = new RegExp(pattern, 'u');\n  } catch(_e) {\n    // In the event the stricter handling causes an error, fall back on the forgiving handling\n    // DEPRECATED\n    regexp = new RegExp(pattern);\n  }\n  if (!instance.match(regexp)) {\n    result.addError({\n      name: 'pattern',\n      argument: schema.pattern,\n      message: \"does not match pattern \" + JSON.stringify(schema.pattern.toString()),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is of a certain defined format or a custom\n * format.\n * The following formats are supported for string types:\n *   - date-time\n *   - date\n *   - time\n *   - ip-address\n *   - ipv6\n *   - uri\n *   - color\n *   - host-name\n *   - alpha\n *   - alpha-numeric\n *   - utc-millisec\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {String|null}\n */\nvalidators.format = function validateFormat (instance, schema, options, ctx) {\n  if (instance===undefined) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!result.disableFormat && !helpers.isFormat(instance, schema.format, this)) {\n    result.addError({\n      name: 'format',\n      argument: schema.format,\n      message: \"does not conform to the \" + JSON.stringify(schema.format) + \" format\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at least of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minLength = function validateMinLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length >= schema.minLength)) {\n    result.addError({\n      name: 'minLength',\n      argument: schema.minLength,\n      message: \"does not meet minimum length of \" + schema.minLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is at most of a certain length, when the instance value is a string.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxLength = function validateMaxLength (instance, schema, options, ctx) {\n  if (!this.types.string(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  // TODO if this was already computed in \"minLength\", use that value instead of re-computing\n  var hsp = instance.match(/[\\uDC00-\\uDFFF]/g);\n  var length = instance.length - (hsp ? hsp.length : 0);\n  if (!(length <= schema.maxLength)) {\n    result.addError({\n      name: 'maxLength',\n      argument: schema.maxLength,\n      message: \"does not meet maximum length of \" + schema.maxLength,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains at least a minimum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.minItems = function validateMinItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length >= schema.minItems)) {\n    result.addError({\n      name: 'minItems',\n      argument: schema.minItems,\n      message: \"does not meet minimum length of \" + schema.minItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether instance contains no more than a maximum number of items, when the instance is an Array.\n * @param instance\n * @param schema\n * @return {String|null}\n */\nvalidators.maxItems = function validateMaxItems (instance, schema, options, ctx) {\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!(instance.length <= schema.maxItems)) {\n    result.addError({\n      name: 'maxItems',\n      argument: schema.maxItems,\n      message: \"does not meet maximum length of \" + schema.maxItems,\n    });\n  }\n  return result;\n};\n\n/**\n * Deep compares arrays for duplicates\n * @param v\n * @param i\n * @param a\n * @private\n * @return {boolean}\n */\nfunction testArrays (v, i, a) {\n  var j, len = a.length;\n  for (j = i + 1, len; j < len; j++) {\n    if (helpers.deepCompareStrict(v, a[j])) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Validates whether there are no duplicates, when the instance is an Array.\n * @param instance\n * @return {String|null}\n */\nvalidators.uniqueItems = function validateUniqueItems (instance, schema, options, ctx) {\n  if (schema.uniqueItems!==true) return;\n  if (!this.types.array(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!instance.every(testArrays)) {\n    result.addError({\n      name: 'uniqueItems',\n      message: \"contains duplicate item\",\n    });\n  }\n  return result;\n};\n\n/**\n * Validate for the presence of dependency properties, if the instance is an object.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.dependencies = function validateDependencies (instance, schema, options, ctx) {\n  if (!this.types.object(instance)) return;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  for (var property in schema.dependencies) {\n    if (instance[property] === undefined) {\n      continue;\n    }\n    var dep = schema.dependencies[property];\n    var childContext = ctx.makeChild(dep, property);\n    if (typeof dep == 'string') {\n      dep = [dep];\n    }\n    if (Array.isArray(dep)) {\n      dep.forEach(function (prop) {\n        if (instance[prop] === undefined) {\n          result.addError({\n            // FIXME there's two different \"dependencies\" errors here with slightly different outputs\n            // Can we make these the same? Or should we create different error types?\n            name: 'dependencies',\n            argument: childContext.propertyPath,\n            message: \"property \" + prop + \" not found, required by \" + childContext.propertyPath,\n          });\n        }\n      });\n    } else {\n      var res = this.validateSchema(instance, dep, options, childContext);\n      if(result.instance !== res.instance) result.instance = res.instance;\n      if (res && res.errors.length) {\n        result.addError({\n          name: 'dependencies',\n          argument: childContext.propertyPath,\n          message: \"does not meet dependency required by \" + childContext.propertyPath,\n        });\n        result.importErrors(res);\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance value is one of the enumerated values.\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['enum'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  if (!Array.isArray(schema['enum'])) {\n    throw new SchemaError(\"enum expects an array\", schema);\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!schema['enum'].some(helpers.deepCompareStrict.bind(null, instance))) {\n    result.addError({\n      name: 'enum',\n      argument: schema['enum'],\n      message: \"is not one of enum values: \" + schema['enum'].map(String).join(','),\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance exactly matches a given value\n *\n * @param instance\n * @param schema\n * @return {ValidatorResult|null}\n */\nvalidators['const'] = function validateEnum (instance, schema, options, ctx) {\n  if (instance === undefined) {\n    return null;\n  }\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  if (!helpers.deepCompareStrict(schema['const'], instance)) {\n    result.addError({\n      name: 'const',\n      argument: schema['const'],\n      message: \"does not exactly match expected constant: \" + schema['const'],\n    });\n  }\n  return result;\n};\n\n/**\n * Validates whether the instance if of a prohibited type.\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @return {null|ValidatorResult}\n */\nvalidators.not = validators.disallow = function validateNot (instance, schema, options, ctx) {\n  var self = this;\n  if(instance===undefined) return null;\n  var result = new ValidatorResult(instance, schema, options, ctx);\n  var notTypes = schema.not || schema.disallow;\n  if(!notTypes) return null;\n  if(!Array.isArray(notTypes)) notTypes=[notTypes];\n  notTypes.forEach(function (type) {\n    if (self.testType(instance, schema, options, ctx, type)) {\n      var id = type && (type.$id || type.id);\n      var schemaId = id || type;\n      result.addError({\n        name: 'not',\n        argument: schemaId,\n        message: \"is of prohibited type \" + schemaId,\n      });\n    }\n  });\n  return result;\n};\n\nmodule.exports = attribute;\n", "\"use strict\";\n\nvar urilib = require('url');\nvar helpers = require('./helpers');\n\nmodule.exports.SchemaScanResult = SchemaScanResult;\nfunction SchemaScanResult(found, ref){\n  this.id = found;\n  this.ref = ref;\n}\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param string uri\n * @param object schema\n * @return {Object}\n */\nmodule.exports.scan = function scan(base, schema){\n  function scanSchema(baseuri, schema){\n    if(!schema || typeof schema!='object') return;\n    // Mark all referenced schemas so we can tell later which schemas are referred to, but never defined\n    if(schema.$ref){\n      var resolvedUri = urilib.resolve(baseuri, schema.$ref);\n      ref[resolvedUri] = ref[resolvedUri] ? ref[resolvedUri]+1 : 0;\n      return;\n    }\n    var id = schema.$id || schema.id;\n    var ourBase = id ? urilib.resolve(baseuri, id) : baseuri;\n    if (ourBase) {\n      // If there's no fragment, append an empty one\n      if(ourBase.indexOf('#')<0) ourBase += '#';\n      if(found[ourBase]){\n        if(!helpers.deepCompareStrict(found[ourBase], schema)){\n          throw new Error('Schema <'+ourBase+'> already exists with different definition');\n        }\n        return found[ourBase];\n      }\n      found[ourBase] = schema;\n      // strip trailing fragment\n      if(ourBase[ourBase.length-1]=='#'){\n        found[ourBase.substring(0, ourBase.length-1)] = schema;\n      }\n    }\n    scanArray(ourBase+'/items', (Array.isArray(schema.items)?schema.items:[schema.items]));\n    scanArray(ourBase+'/extends', (Array.isArray(schema.extends)?schema.extends:[schema.extends]));\n    scanSchema(ourBase+'/additionalItems', schema.additionalItems);\n    scanObject(ourBase+'/properties', schema.properties);\n    scanSchema(ourBase+'/additionalProperties', schema.additionalProperties);\n    scanObject(ourBase+'/definitions', schema.definitions);\n    scanObject(ourBase+'/patternProperties', schema.patternProperties);\n    scanObject(ourBase+'/dependencies', schema.dependencies);\n    scanArray(ourBase+'/disallow', schema.disallow);\n    scanArray(ourBase+'/allOf', schema.allOf);\n    scanArray(ourBase+'/anyOf', schema.anyOf);\n    scanArray(ourBase+'/oneOf', schema.oneOf);\n    scanSchema(ourBase+'/not', schema.not);\n  }\n  function scanArray(baseuri, schemas){\n    if(!Array.isArray(schemas)) return;\n    for(var i=0; i<schemas.length; i++){\n      scanSchema(baseuri+'/'+i, schemas[i]);\n    }\n  }\n  function scanObject(baseuri, schemas){\n    if(!schemas || typeof schemas!='object') return;\n    for(var p in schemas){\n      scanSchema(baseuri+'/'+p, schemas[p]);\n    }\n  }\n\n  var found = {};\n  var ref = {};\n  scanSchema(base, schema);\n  return new SchemaScanResult(found, ref);\n};\n", "'use strict';\n\nvar urilib = require('url');\n\nvar attribute = require('./attribute');\nvar helpers = require('./helpers');\nvar scanSchema = require('./scan').scan;\nvar ValidatorResult = helpers.ValidatorResult;\nvar ValidatorResultError = helpers.ValidatorResultError;\nvar SchemaError = helpers.SchemaError;\nvar SchemaContext = helpers.SchemaContext;\n//var anonymousBase = 'vnd.jsonschema:///';\nvar anonymousBase = '/';\n\n/**\n * Creates a new Validator object\n * @name Validator\n * @constructor\n */\nvar Validator = function Validator () {\n  // Allow a validator instance to override global custom formats or to have their\n  // own custom formats.\n  this.customFormats = Object.create(Validator.prototype.customFormats);\n  this.schemas = {};\n  this.unresolvedRefs = [];\n\n  // Use Object.create to make this extensible without Validator instances stepping on each other's toes.\n  this.types = Object.create(types);\n  this.attributes = Object.create(attribute.validators);\n};\n\n// Allow formats to be registered globally.\nValidator.prototype.customFormats = {};\n\n// Hint at the presence of a property\nValidator.prototype.schemas = null;\nValidator.prototype.types = null;\nValidator.prototype.attributes = null;\nValidator.prototype.unresolvedRefs = null;\n\n/**\n * Adds a schema with a certain urn to the Validator instance.\n * @param schema\n * @param urn\n * @return {Object}\n */\nValidator.prototype.addSchema = function addSchema (schema, base) {\n  var self = this;\n  if (!schema) {\n    return null;\n  }\n  var scan = scanSchema(base||anonymousBase, schema);\n  var ourUri = base || schema.$id || schema.id;\n  for(var uri in scan.id){\n    this.schemas[uri] = scan.id[uri];\n  }\n  for(var uri in scan.ref){\n    // If this schema is already defined, it will be filtered out by the next step\n    this.unresolvedRefs.push(uri);\n  }\n  // Remove newly defined schemas from unresolvedRefs\n  this.unresolvedRefs = this.unresolvedRefs.filter(function(uri){\n    return typeof self.schemas[uri]==='undefined';\n  });\n  return this.schemas[ourUri];\n};\n\nValidator.prototype.addSubSchemaArray = function addSubSchemaArray(baseuri, schemas) {\n  if(!Array.isArray(schemas)) return;\n  for(var i=0; i<schemas.length; i++){\n    this.addSubSchema(baseuri, schemas[i]);\n  }\n};\n\nValidator.prototype.addSubSchemaObject = function addSubSchemaArray(baseuri, schemas) {\n  if(!schemas || typeof schemas!='object') return;\n  for(var p in schemas){\n    this.addSubSchema(baseuri, schemas[p]);\n  }\n};\n\n\n\n/**\n * Sets all the schemas of the Validator instance.\n * @param schemas\n */\nValidator.prototype.setSchemas = function setSchemas (schemas) {\n  this.schemas = schemas;\n};\n\n/**\n * Returns the schema of a certain urn\n * @param urn\n */\nValidator.prototype.getSchema = function getSchema (urn) {\n  return this.schemas[urn];\n};\n\n/**\n * Validates instance against the provided schema\n * @param instance\n * @param schema\n * @param [options]\n * @param [ctx]\n * @return {Array}\n */\nValidator.prototype.validate = function validate (instance, schema, options, ctx) {\n  if((typeof schema !== 'boolean' && typeof schema !== 'object') || schema === null){\n    throw new SchemaError('Expected `schema` to be an object or boolean');\n  }\n  if (!options) {\n    options = {};\n  }\n  // This section indexes subschemas in the provided schema, so they don't need to be added with Validator#addSchema\n  // This will work so long as the function at uri.resolve() will resolve a relative URI to a relative URI\n  var id = schema.$id || schema.id;\n  var base = urilib.resolve(options.base||anonymousBase, id||'');\n  if(!ctx){\n    ctx = new SchemaContext(schema, options, [], base, Object.create(this.schemas));\n    if (!ctx.schemas[base]) {\n      ctx.schemas[base] = schema;\n    }\n    var found = scanSchema(base, schema);\n    for(var n in found.id){\n      var sch = found.id[n];\n      ctx.schemas[n] = sch;\n    }\n  }\n  if(options.required && instance===undefined){\n    var result = new ValidatorResult(instance, schema, options, ctx);\n    result.addError('is required, but is undefined');\n    return result;\n  }\n  var result = this.validateSchema(instance, schema, options, ctx);\n  if (!result) {\n    throw new Error('Result undefined');\n  }else if(options.throwAll && result.errors.length){\n    throw new ValidatorResultError(result);\n  }\n  return result;\n};\n\n/**\n* @param Object schema\n* @return mixed schema uri or false\n*/\nfunction shouldResolve(schema) {\n  var ref = (typeof schema === 'string') ? schema : schema.$ref;\n  if (typeof ref=='string') return ref;\n  return false;\n}\n\n/**\n * Validates an instance against the schema (the actual work horse)\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @private\n * @return {ValidatorResult}\n */\nValidator.prototype.validateSchema = function validateSchema (instance, schema, options, ctx) {\n  var result = new ValidatorResult(instance, schema, options, ctx);\n\n  // Support for the true/false schemas\n  if(typeof schema==='boolean') {\n    if(schema===true){\n      // `true` is always valid\n      schema = {};\n    }else if(schema===false){\n      // `false` is always invalid\n      schema = {type: []};\n    }\n  }else if(!schema){\n    // This might be a string\n    throw new Error(\"schema is undefined\");\n  }\n\n  if (schema['extends']) {\n    if (Array.isArray(schema['extends'])) {\n      var schemaobj = {schema: schema, ctx: ctx};\n      schema['extends'].forEach(this.schemaTraverser.bind(this, schemaobj));\n      schema = schemaobj.schema;\n      schemaobj.schema = null;\n      schemaobj.ctx = null;\n      schemaobj = null;\n    } else {\n      schema = helpers.deepMerge(schema, this.superResolve(schema['extends'], ctx));\n    }\n  }\n\n  // If passed a string argument, load that schema URI\n  var switchSchema = shouldResolve(schema);\n  if (switchSchema) {\n    var resolved = this.resolve(schema, switchSchema, ctx);\n    var subctx = new SchemaContext(resolved.subschema, options, ctx.path, resolved.switchSchema, ctx.schemas);\n    return this.validateSchema(instance, resolved.subschema, options, subctx);\n  }\n\n  var skipAttributes = options && options.skipAttributes || [];\n  // Validate each schema attribute against the instance\n  for (var key in schema) {\n    if (!attribute.ignoreProperties[key] && skipAttributes.indexOf(key) < 0) {\n      var validatorErr = null;\n      var validator = this.attributes[key];\n      if (validator) {\n        validatorErr = validator.call(this, instance, schema, options, ctx);\n      } else if (options.allowUnknownAttributes === false) {\n        // This represents an error with the schema itself, not an invalid instance\n        throw new SchemaError(\"Unsupported attribute: \" + key, schema);\n      }\n      if (validatorErr) {\n        result.importErrors(validatorErr);\n      }\n    }\n  }\n\n  if (typeof options.rewrite == 'function') {\n    var value = options.rewrite.call(this, instance, schema, options, ctx);\n    result.instance = value;\n  }\n  return result;\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.schemaTraverser = function schemaTraverser (schemaobj, s) {\n  schemaobj.schema = helpers.deepMerge(schemaobj.schema, this.superResolve(s, schemaobj.ctx));\n};\n\n/**\n* @private\n* @param Object schema\n* @param SchemaContext ctx\n* @returns Object schema or resolved schema\n*/\nValidator.prototype.superResolve = function superResolve (schema, ctx) {\n  var ref = shouldResolve(schema);\n  if(ref) {\n    return this.resolve(schema, ref, ctx).subschema;\n  }\n  return schema;\n};\n\n/**\n* @private\n* @param Object schema\n* @param Object switchSchema\n* @param SchemaContext ctx\n* @return Object resolved schemas {subschema:String, switchSchema: String}\n* @throws SchemaError\n*/\nValidator.prototype.resolve = function resolve (schema, switchSchema, ctx) {\n  switchSchema = ctx.resolve(switchSchema);\n  // First see if the schema exists under the provided URI\n  if (ctx.schemas[switchSchema]) {\n    return {subschema: ctx.schemas[switchSchema], switchSchema: switchSchema};\n  }\n  // Else try walking the property pointer\n  var parsed = urilib.parse(switchSchema);\n  var fragment = parsed && parsed.hash;\n  var document = fragment && fragment.length && switchSchema.substr(0, switchSchema.length - fragment.length);\n  if (!document || !ctx.schemas[document]) {\n    throw new SchemaError(\"no such schema <\" + switchSchema + \">\", schema);\n  }\n  var subschema = helpers.objectGetPath(ctx.schemas[document], fragment.substr(1));\n  if(subschema===undefined){\n    throw new SchemaError(\"no such schema \" + fragment + \" located in <\" + document + \">\", schema);\n  }\n  return {subschema: subschema, switchSchema: switchSchema};\n};\n\n/**\n * Tests whether the instance if of a certain type.\n * @private\n * @param instance\n * @param schema\n * @param options\n * @param ctx\n * @param type\n * @return {boolean}\n */\nValidator.prototype.testType = function validateType (instance, schema, options, ctx, type) {\n  if(type===undefined){\n    return;\n  }else if(type===null){\n    throw new SchemaError('Unexpected null in \"type\" keyword');\n  }\n  if (typeof this.types[type] == 'function') {\n    return this.types[type].call(this, instance);\n  }\n  if (type && typeof type == 'object') {\n    var res = this.validateSchema(instance, type, options, ctx);\n    return res === undefined || !(res && res.errors.length);\n  }\n  // Undefined or properties not on the list are acceptable, same as not being defined\n  return true;\n};\n\nvar types = Validator.prototype.types = {};\ntypes.string = function testString (instance) {\n  return typeof instance == 'string';\n};\ntypes.number = function testNumber (instance) {\n  // isFinite returns false for NaN, Infinity, and -Infinity\n  return typeof instance == 'number' && isFinite(instance);\n};\ntypes.integer = function testInteger (instance) {\n  return (typeof instance == 'number') && instance % 1 === 0;\n};\ntypes.boolean = function testBoolean (instance) {\n  return typeof instance == 'boolean';\n};\ntypes.array = function testArray (instance) {\n  return Array.isArray(instance);\n};\ntypes['null'] = function testNull (instance) {\n  return instance === null;\n};\ntypes.date = function testDate (instance) {\n  return instance instanceof Date;\n};\ntypes.any = function testAny (instance) {\n  return true;\n};\ntypes.object = function testObject (instance) {\n  // TODO: fix this - see #15\n  return instance && (typeof instance === 'object') && !(Array.isArray(instance)) && !(instance instanceof Date);\n};\n\nmodule.exports = Validator;\n", "'use strict';\n\nvar Validator = module.exports.Validator = require('./validator');\n\nmodule.exports.ValidatorResult = require('./helpers').ValidatorResult;\nmodule.exports.ValidatorResultError = require('./helpers').ValidatorResultError;\nmodule.exports.ValidationError = require('./helpers').ValidationError;\nmodule.exports.SchemaError = require('./helpers').SchemaError;\nmodule.exports.SchemaScanResult = require('./scan').SchemaScanResult;\nmodule.exports.scan = require('./scan').scan;\n\nmodule.exports.validate = function (instance, schema, options) {\n  var v = new Validator();\n  return v.validate(instance, schema, options);\n};\n", null, null, null, null, null, null, null, null, null, null, null, null],
  "mappings": "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R,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,IAAI,GAAG;AAAA,YACR,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YACT,CAAC,KAAK,GAAG;AAAA,YAC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AAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AAClC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,cAAO,MAAM,KAAK,KAAK,KAAK,GAAG,IAAK;AACpC,aAAM,KAAK,KAAK,KAAK,KAAK,GAAG,IAAK;AA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ACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,CAAC;AACP,cAAM,IAAI;AACV,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,EAAE;AACR,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,EAAE;AACR,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,EAAE;AACR,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,YAAI,EAAE,EAAE;AACR,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,IAAI;AACX,eAAO,I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",
  "names": ["hash", "assert", "hex", "require_utils", "module", "CRC32", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "require__", "Chain", "Hardfork", "ConsensusType", "ConsensusAlgorithm", "CustomChain", "Common", "require_types", "exports", "mask", "require_util", "SortOrder", "levels", "bit", "ProofType", "exports", "hex", "gindex", "uint8Array", "bitLen", "node", "Capability", "require_sha256", "TransactionFactory", "require_lib", "stripHexPrefix", "hex", "personalSign", "require_bn", "module", "exports", "assert", "BN", "self", "comb10MulTo", "prime", "SignTypedDataVersion", "typedSignatureHash", "signTypedData", "decrypt", "getEncryptionPublicKey", "fetchAndTrace", "url", "init", "_url", "URL", "error", "sentry", "tracingOrigins", "includes", "origin", "tracingPaths", "pathname", "transaction", "startTransaction", "name", "span", "startChild", "op", "response", "fetch", "finish", "getApiKeyHeaders", "headers", "apiKey", "gatewayAuthHeader", "embedHost", "gatewayEmbedHostHeader", "debugLogResponse", "log", "info", "status", "statusText", "get", "logLevel", "getLogger", "setLevel", "levels", "INFO", "options_", "arguments", "length", "undefined", "customOptions", "defaultOptions", "mode", "useAPIKey", "_objectSpread", "options", "merge", "method", "ok", "json", "ValidationError", "ValidatorResult", "SchemaError", "SchemaContext", "makeSuffix", "self", "validateMultipleOfOrDivisbleBy", "schema", "Validator", "self", "uri", "require_lib", "resemblesAddress", "str", "length", "createWalletMiddleware", "getAccounts", "getPrivateKey", "processDecryptMessage", "processEncryptionPublicKey", "processEthSignMessage", "processPersonalMessage", "processTransaction", "processSignTransaction", "processTypedMessage", "processTypedMessageV3", "processTypedMessageV4", "Error", "validateAndNormalizeKeyholder", "_regeneratorRuntime", "address", "req", "accounts", "normalizedAccounts", "map", "_address", "toLowerCase", "normalizedAddress", "includes", "ethErrors", "rpc", "invalidParams", "message", "lookupAccounts", "res", "result", "lookupDefaultAccount", "sendTransaction", "methodNotSupported", "txParams", "params", "from", "signTransaction", "ethSign", "extraParams", "msgParams", "data", "signTypedData", "version", "signTypedDataV3", "signTypedDataV4", "personalSign", "firstParam", "secondParam", "warning", "encryptionPublicKey", "decryptMessage", "ciphertext", "fetchPrivateKey", "createScaffoldMiddleware", "eth_accounts", "createAsyncMiddleware", "eth_private_key", "eth_coinbase", "eth_sendTransaction", "eth_signTransaction", "eth_sign", "eth_signTypedData", "eth_signTypedData_v3", "eth_signTypedData_v4", "personal_sign", "eth_getEncryptionPublicKey", "eth_decrypt", "createEthMiddleware", "providerHandlers", "ethMiddleware", "mergeMiddleware", "eth_syncing", "createChainSwitchMiddleware", "addChain", "switchChain", "addNewChain", "chainParams", "undefined", "chainId", "rpcUrls", "nativeCurrency", "updateChain", "wallet_addEthereumChain", "wallet_switchEthereumChain", "createAccountMiddleware", "updatePrivatekey", "updateAccount", "accountParams", "privateKey", "wallet_updateAccount", "createChainIdMiddleware", "next", "end", "method", "createProviderConfigMiddleware", "providerConfig", "createJsonRpcClient", "rpcTarget", "fetchMiddleware", "createFetchMiddleware", "networkMiddleware", "getProviderHandlers", "connector", "_", "signMessage", "signPersonalMessage", "decGWEIToHexWEI", "decGWEI", "conversionUtil", "fromNumericBase", "toNumericBase", "fromDenomination", "toDenomination", "hexWEIToDecGWEI", "normalizeGWEIDecimalNumbers", "n", "numberAsWEIHex", "numberAsGWEI", "fetchEip1159GasEstimates", "url", "get", "estimates", "normalizedEstimates", "estimatedBaseFee", "low", "_objectSpread", "suggestedMaxPriorityFeePerGas", "suggestedMaxFeePerGas", "medium", "high", "fetchLegacyGasPriceEstimates", "referrer", "referrerPolicy", "mode", "SafeGasPrice", "ProposeGasPrice", "FastGasPrice", "signTx", "privKey", "txFormatter", "formatTransaction", "finalTxParams", "getCommonConfiguration", "common", "unsignedEthTx", "TransactionFactory", "fromTxData", "signedTx", "sign", "Buffer", "serialize", "getProviderEngineProxy", "privateToAddress", "toString", "providerEngineProxy", "provider", "custom", "code", "request", "concat", "txHash", "rawMessageSig", "privKeyBuffer", "sig", "log", "debug", "finalChainId", "Number", "parseInt", "isHexStrict", "SignTypedDataVersion", "V1", "validateTypedMessageParams", "JSON", "parse", "V3", "V4", "info", "getEncryptionPublicKey", "stripped", "stripHexPrefix", "buff", "decrypted", "decrypt", "encryptedData", "bnLessThan", "a", "b", "BigNumber", "lt", "bnToHex", "inputBn", "addHexPrefix", "hexToBn", "inputHex", "BN", "isBN", "BnMultiplyByFraction", "targetBN", "numerator", "denominator", "numberBN", "denomBN", "mul", "div", "WalletConnectProvider", "BIG_NUMBER_WEI_MULTIPLIER", "BIG_NUMBER_GWEI_MULTIPLIER", "BIG_NUMBER_ETH_MULTIPLIER", "toBigNumber", "toNormalizedDenomination", "toSpecifiedDenomination", "baseChange", "converter", "LegacyGasAPIEndpoint", "EIP1559APIEndpoint", "TRANSACTION_ENVELOPE_TYPES", "TRANSACTION_TYPES", "GAS_ESTIMATE_TYPES", "TransactionFormatter", "EthereumPrivateKeyProvider", "_createSuper", "config", "state", "chainConfig", "chainNamespace", "CHAIN_NAMESPACES", "EIP155", "skipLookupNetwork", "setupProvider", "_providerEngineProxy", "onConnectorStateUpdate", "setupEngine", "lookup", "currentChainConfig", "getChainConfig", "update", "displayName", "sendCustomRequest", "chainName", "error", "configure", "lookupNetwork", "WalletInitializationError", "notReady", "connected", "WalletLoginError", "notConnectedError", "connectedHexChainId", "rpcConnectionError", "emit", "engine", "JRPCEngine", "push", "providerFromEngine", "updateProviderEngineProxy", "on", "payload", "connectedChainId", "rpcUrl", "maybeConfig", "BaseProvider", "providerFactory", "hex", "dec", "WEI", "bigNumber", "GWEI", "ETH", "times", "dp", "ROUND_HALF_UP", "value", "numberOfDecimals", "convertedValue", "ROUND_HALF_DOWN", "parameters", "activeChainId", "assert", "ok", "isValidAddress", "doesNotThrow", "Array", "isArray", "typedSignatureHash", "primaryType", "types", "validation", "jsonschema", "validate", "TYPED_MESSAGE_SCHEMA", "properties", "strictEqual", "errors", "domain", "isNaN", "fail", "invalidInput", "LEGACY", "ACCESS_LIST", "FEE_MARKET", "SENT_ETHER", "CONTRACT_INTERACTION", "DEPLOY_CONTRACT", "STANDARD_TRANSACTION", "ETH_GASPRICE", "NONE", "providerProxy", "getEIP1559Compatibility", "isEIP1559Compatible", "name", "hardfork", "Hardfork", "London", "Berlin", "customChainParams", "networkId", "defaultHardfork", "Common", "clonedTxParams", "nonce", "gasPrice", "maxFeePerGas", "maxPriorityFeePerGas", "gas", "getDefaultGasLimit", "defaultGasLimit", "gasLimit", "getDefaultGasFees", "defaultGasPrice", "defaultMaxFeePerGas", "defaultMaxPriorityFeePerGas", "type", "latestBlock", "supportsEIP1559", "baseFeePerGas", "isLegacyGasAPICompatible", "replace", "gasData", "gasFeeEstimates", "gasEstimateType", "fetchEthGasPriceEstimate", "fetchGasFeeEstimateData", "txMeta", "block", "blockGasLimitBN", "saferGasLimitBN", "estimatedGasHex", "estimateTxGas", "warn", "blockGasLimit", "initialGasLimitHex", "blockGasLimitHex", "multiplier", "initialGasLimitBn", "blockGasLimitBn", "upperGasLimitBn", "muln", "bufferedGasLimitBn", "gt", "txParameters", "to", "txCategory", "codeIsEmpty", "transactionCategory", "determineTransactionCategory", "TWENTY_ONE_THOUSAND", "analyzeGasUsage", "addGasBuffer", "bind", "chainSwitchMiddleware", "getChainSwitchMiddleware", "getAccountMiddleware", "init", "existingKey", "network", "chainDisconnected", "chainSwitchHandlers", "blockExplorerUrls", "ticker", "symbol", "tickerName", "blockExplorer", "accountHandlers"]
}
